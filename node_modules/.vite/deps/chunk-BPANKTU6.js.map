{
  "version": 3,
  "sources": ["../../src/global_variables_utils.ts", "../../src/helpers.ts", "../../src/localization/english.ts", "../../src/surveyStrings.ts", "../../src/jsonobject.ts", "../../src/conditionProcessValue.ts", "../../src/console-warnings.ts", "../../src/functionsfactory.ts", "../../src/expressions/expressions.ts", "../../src/expressions/expressionParser.ts", "../../src/conditionsParser.ts", "../../src/conditions.ts", "../../src/base.ts", "../../node_modules/tslib/tslib.es6.js", "../../src/utils/responsivity-manager.ts", "../../src/utils/cssClassBuilder.ts", "../../src/utils/taskmanager.ts", "../../src/actions/container.ts", "../../src/element-helper.ts", "../../src/utils/devices.ts", "../../src/list.ts", "../../src/popup.ts", "../../src/actions/action.ts", "../../src/actions/adaptive-container.ts", "../../src/utils/animation.ts", "../../src/survey-element.ts", "../../src/localizablestring.ts", "../../src/utils/utils.ts", "../../src/settings.ts", "../../src/survey-error.ts", "../../src/error.ts", "../../src/validator.ts", "../../src/questionCustomWidgets.ts", "../../src/rendererFactory.ts", "../../src/utils/text-area.ts", "../../src/question.ts", "../../src/itemvalue.ts", "../../src/calculatedValue.ts", "../../src/expressionItems.ts", "../../src/choicesRestful.ts", "../../src/martixBase.ts", "../../src/textPreProcessor.ts", "../../src/question_custom.ts", "../../src/questionfactory.ts", "../../src/question_expression.ts", "../../src/question_matrixdropdowncolumn.ts", "../../src/question_matrixdropdownrendered.ts", "../../src/question_matrixdropdownbase.ts", "../../src/question_matrixdropdown.ts", "../../src/dragdrop/dom-adapter.ts", "../../src/dragdrop/core.ts", "../../src/dragdrop/matrix-rows.ts", "../../src/utils/dragOrClickHelper.ts", "../../src/questionSingleInputSummary.ts", "../../src/question_matrixdynamic.ts", "../../src/defaultCss/defaultCss.ts", "../../src/surveytimer.ts", "../../src/surveyTimerModel.ts", "../../src/notifier.ts", "../../src/header.ts", "../../src/surveyTaskManager.ts", "../../src/panel-layout-column.ts", "../../src/panel.ts", "../../src/page.ts", "../../src/progress-buttons.ts", "../../src/surveyToc.ts", "../../src/survey.ts", "../../src/question_baseselect.ts", "../../src/dropdownListModel.ts", "../../src/question_dropdown.ts", "../../src/question_matrix.ts", "../../src/question_textbase.ts", "../../src/mask/input_element_adapter.ts", "../../src/mask/mask_utils.ts", "../../src/question_text.ts", "../../src/question_multipletext.ts", "../../src/flowpanel.ts", "../../src/defaultTitle.ts", "../../src/questionnonvalue.ts", "../../src/question_empty.ts", "../../src/question_checkbox.ts", "../../src/multiSelectListModel.ts", "../../src/dropdownMultiSelectListModel.ts", "../../src/question_tagbox.ts", "../../src/dragdrop/choices.ts", "../../src/dragdrop/ranking-choices.ts", "../../src/dragdrop/ranking-select-to-rank.ts", "../../src/question_ranking.ts", "../../src/question_comment.ts", "../../src/utils/camera.ts", "../../src/question_file.ts", "../../src/question_html.ts", "../../src/question_radiogroup.ts", "../../src/question_rating.ts", "../../src/question_slider.ts", "../../src/question_boolean.ts", "../../src/question_imagepicker.ts", "../../src/question_image.ts", "../../node_modules/signature_pad/dist/signature_pad.js", "../../src/question_signaturepad.ts", "../../src/question_paneldynamic.ts", "../../src/surveyProgress.ts", "../../src/trigger.ts", "../../src/popup-survey.ts", "../../src/scroll.ts", "../../src/popup-view-model.ts", "../../src/utils/popup.ts", "../../src/popup-dropdown-view-model.ts", "../../src/popup-modal-view-model.ts", "../../src/popup-utils.ts", "../../src/question_buttongroup.ts", "../../src/mask/mask_base.ts", "../../src/mask/mask_pattern.ts", "../../src/mask/mask_numeric.ts", "../../src/mask/mask_datetime.ts", "../../src/mask/mask_currency.ts", "../../entries/chunks/model.ts", "../../src/svgbundle.ts"],
  "sourcesContent": ["/* eslint-disable no-restricted-globals */\nexport class DomWindowHelper {\n  public static isAvailable(): boolean {\n    return \"undefined\" !== typeof window;\n  }\n  public static isFileReaderAvailable(): boolean {\n    if (!DomWindowHelper.isAvailable()) return false;\n    return !!(<any>window)[\"FileReader\"];\n  }\n  public static getLocation(): Location {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window.location;\n  }\n  public static getVisualViewport(): VisualViewport | null {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.visualViewport;\n  }\n  public static getInnerWidth(): number {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window.innerWidth;\n  }\n  public static getInnerHeight(): number {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.innerHeight;\n  }\n  public static getDevicePixelRatio(): number {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.devicePixelRatio;\n  }\n  public static getWindow(): Window {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window;\n  }\n  public static hasOwn(propertyName: string): boolean {\n    if (!DomWindowHelper.isAvailable()) return;\n    return propertyName in window;\n  }\n  public static getSelection(): Selection | null {\n    if (DomWindowHelper.isAvailable() && window.getSelection) {\n      return window.getSelection();\n    }\n  }\n  public static requestAnimationFrame(callback: FrameRequestCallback): number {\n    if (DomWindowHelper.isAvailable()) {\n      return window.requestAnimationFrame(callback);\n    }\n  }\n  public static addEventListener(type: string, listener: (e?: any) => void): void {\n    if (!DomWindowHelper.isAvailable()) return;\n    window.addEventListener(type, listener);\n  }\n  public static removeEventListener(type: string, listener: (e?: any) => void): void {\n    if (!DomWindowHelper.isAvailable()) return;\n    window.removeEventListener(type, listener);\n  }\n\n  public static matchMedia(mediaQueryString: string): {matches:boolean} | null {\n    if (!DomWindowHelper.isAvailable() || typeof window.matchMedia === \"undefined\") return null;\n    return window.matchMedia(mediaQueryString);\n  }\n}\n\nexport class DomDocumentHelper {\n  public static isAvailable(): boolean {\n    return \"undefined\" !== typeof document;\n  }\n  public static getBody(): HTMLElement {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.body;\n  }\n  public static getDocumentElement(): HTMLElement {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.documentElement;\n  }\n  public static getDocument(): Document {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document;\n  }\n  public static getCookie(): string {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.cookie;\n  }\n  public static setCookie(newCookie: string): void {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.cookie = newCookie;\n  }\n  public static activeElementBlur(): Document {\n    if (!DomDocumentHelper.isAvailable()) return;\n\n    const activeElement = document.activeElement;\n    if (!!activeElement && !!(<any>activeElement).blur) {\n      (<any>activeElement).blur();\n    }\n  }\n  public static createElement(tagName: string): HTMLElement {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.createElement(tagName);\n  }\n  public static getComputedStyle(elt: Element): CSSStyleDeclaration {\n    if (!DomDocumentHelper.isAvailable()) return new CSSStyleDeclaration();\n    return document.defaultView.getComputedStyle(elt);\n  }\n  public static addEventListener(type: string, listener: (e?: any) => void): void {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.addEventListener(type, listener);\n  }\n  public static removeEventListener(type: string, listener: (e?: any) => void): void {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.removeEventListener(type, listener);\n  }\n}", "import { settings } from \"./settings\";\n\nexport interface HashTable<T = any> {\n  [key: string]: T;\n}\nexport interface IEqualValuesParameters {\n  ignoreOrder?: boolean;\n  caseSensitive?: boolean;\n  trimStrings?: boolean;\n  doNotConvertNumbers?: boolean;\n}\nexport function createDate(reason: string, val?: number | string | Date): Date {\n  if (!val) return new Date();\n  if (!settings.storeUtcDates && typeof val === \"string\" && isISODateOnly(val)) {\n    val += \"T00:00:00\";\n  }\n  const d = new Date(val);\n  return settings.onDateCreated(d, reason, val);\n}\n\nfunction isISODateOnly(str: string): boolean {\n  if (str.indexOf(\"T\") > 0) return false;\n  if (!/\\d{4}-\\d{2}-\\d{2}/.test(str)) return false;\n  return !isNaN(new Date(str).getTime());\n}\n\nexport class Helpers {\n  /**\n   * A static methods that returns true if a value undefined, null, empty string or empty array.\n   * @param value\n   */\n  public static isValueEmpty(value: any): boolean {\n    if (Array.isArray(value) && value.length === 0) return true;\n    if (!!value && Helpers.isValueObject(value) && value.constructor === Object) {\n      for (var key in value) {\n        if (!Helpers.isValueEmpty(value[key])) return false;\n      }\n      return true;\n    }\n    return !value && value !== 0 && value !== false;\n  }\n  public static isValueUndefined(value: any): boolean {\n    return (value === undefined || value === null) || (typeof value === \"number\" && isNaN(value));\n  }\n  public static isArrayContainsEqual(x: any, y: any): boolean {\n    if (!Array.isArray(x) || !Array.isArray(y)) return false;\n    if (x.length !== y.length) return false;\n    for (var i = 0; i < x.length; i++) {\n      var j = 0;\n      for (; j < y.length; j++) {\n        if (Helpers.isTwoValueEquals(x[i], y[j])) break;\n      }\n      if (j === y.length) return false;\n    }\n    return true;\n  }\n  public static checkIfArraysEqual(x: any, y: any, params: IEqualValuesParameters): boolean {\n    if (!Array.isArray(x) || !Array.isArray(y)) return false;\n    if (x.length !== y.length) return false;\n    const ignoreOrder: boolean = params.ignoreOrder !== undefined ? params.ignoreOrder : false;\n    if (ignoreOrder) {\n      var xSorted = [];\n      var ySorted = [];\n      for (var i = 0; i < x.length; i++) {\n        xSorted.push(x[i]);\n        ySorted.push(y[i]);\n      }\n      xSorted.sort();\n      ySorted.sort();\n      x = xSorted;\n      y = ySorted;\n    }\n    for (var i = 0; i < x.length; i++) {\n      if (!Helpers.checkIfValuesEqual(x[i], y[i], params)) return false;\n    }\n    return true;\n  }\n  public static isArraysEqual(\n    x: any,\n    y: any,\n    ignoreOrder: boolean = false,\n    caseSensitive?: boolean,\n    trimStrings? : boolean\n  ): boolean {\n    return Helpers.checkIfArraysEqual(x, y, { ignoreOrder: ignoreOrder, caseSensitive: caseSensitive, trimStrings: trimStrings });\n  }\n  public static compareStrings(x: string, y: string): number {\n    const normalize = settings.comparator.normalizeTextCallback;\n    if (!!x) x = normalize(x, \"compare\").trim();\n    if (!!y) y = normalize(y, \"compare\").trim();\n    if (!x && !y) return 0;\n    if (!x) return -1;\n    if (!y) return 1;\n    if (x === y) return 0;\n    let digitIndex = -1;\n    for (let i = 0; i < x.length && i < y.length; i ++) {\n      if (this.isCharDigit(x[i]) && this.isCharDigit(y[i])) {\n        digitIndex = i;\n        break;\n      }\n      if (x[i] !== y[i]) break;\n    }\n    if (digitIndex > -1) {\n      let nX = this.getNumberFromStr(x, digitIndex);\n      let nY = this.getNumberFromStr(y, digitIndex);\n      if (!Number.isNaN(nX) && !Number.isNaN(nY) && nX !== nY) {\n        return nX > nY ? 1 : -1;\n      }\n    }\n    return x > y ? 1 : -1;\n  }\n  public static checkIfValuesEqual(x: any, y: any, params: IEqualValuesParameters): boolean {\n    if (x === y) return true;\n\n    if (Array.isArray(x) && x.length === 0 && typeof y === \"undefined\")\n      return true;\n    if (Array.isArray(y) && y.length === 0 && typeof x === \"undefined\")\n      return true;\n    if ((x === undefined || x === null) && y === \"\") return true;\n    if ((y === undefined || y === null) && x === \"\") return true;\n    const caseSensitive = params.caseSensitive !== undefined ? params.caseSensitive : settings.comparator.caseSensitive;\n    const trimStrings = params.trimStrings !== undefined ? params.trimStrings : settings.comparator.trimStrings;\n\n    if (typeof x === \"string\" && typeof y === \"string\") {\n      const normalize = settings.comparator.normalizeTextCallback;\n      x = normalize(x, \"compare\");\n      y = normalize(y, \"compare\");\n      if (trimStrings) {\n        x = x.trim();\n        y = y.trim();\n      }\n      if (!caseSensitive) {\n        x = x.toLowerCase();\n        y = y.toLowerCase();\n      }\n      return x === y;\n    }\n    if (x instanceof Date && y instanceof Date) return x.getTime() == y.getTime();\n    const convertNumbers = !params.doNotConvertNumbers;\n    if (convertNumbers && Helpers.isConvertibleToNumber(x) && Helpers.isConvertibleToNumber(y)) {\n      if (parseInt(x) === parseInt(y) && parseFloat(x) === parseFloat(y)) {\n        return true;\n      }\n    }\n\n    if (\n      (!Helpers.isValueEmpty(x) && Helpers.isValueEmpty(y)) ||\n      (Helpers.isValueEmpty(x) && !Helpers.isValueEmpty(y))\n    )\n      return false;\n    if ((x === true || x === false) && typeof y == \"string\") {\n      return x.toString() === y.toLocaleLowerCase();\n    }\n    if ((y === true || y === false) && typeof x == \"string\") {\n      return y.toString() === x.toLocaleLowerCase();\n    }\n    const isXObj = Helpers.isValueObject(x);\n    const isYObj = Helpers.isValueObject(y);\n    if (!isXObj && !isYObj && (convertNumbers || (typeof x !== \"number\" && typeof y !== \"number\"))) return x == y;\n    if (!isXObj || !isYObj) return false;\n    if (x[\"equals\"] && y[\"equals\"]) return x.equals(y);\n    if (Array.isArray(x) && Array.isArray(y)) {\n      return Helpers.checkIfArraysEqual(x, y, params);\n    }\n\n    for (var p in x) {\n      if (!x.hasOwnProperty(p)) continue;\n      if (!y.hasOwnProperty(p)) return false;\n      if (!this.checkIfValuesEqual(x[p], y[p], params)) return false;\n    }\n    for (p in y) {\n      if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false;\n    }\n    return true;\n  }\n  public static isTwoValueEquals(\n    x: any,\n    y: any,\n    ignoreOrder: boolean = false,\n    caseSensitive?: boolean,\n    trimStrings? : boolean\n  ): boolean {\n    return this.checkIfValuesEqual(x, y, { ignoreOrder: ignoreOrder, caseSensitive: caseSensitive, trimStrings: trimStrings });\n  }\n  public static randomizeArray<T>(array: Array<T>): Array<T> {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  public static getUnbindValue(value: any): any {\n    if (Array.isArray(value)) {\n      const res = [];\n      for (let i = 0; i < value.length; i ++) {\n        res.push(Helpers.getUnbindValue(value[i]));\n      }\n      return res;\n    }\n    if (!!value && Helpers.isValueObject(value) && !(value instanceof Date)) {\n      return JSON.parse(JSON.stringify(value));\n    }\n    return value;\n  }\n  public static createCopy(obj: any): any {\n    return this.createCopyWithPrefix(obj, undefined);\n  }\n  public static createCopyWithPrefix(obj: any, prefix?: string): any {\n    var res: any = {};\n    if (!obj) return res;\n    for (var key in obj) {\n      const newKey = prefix ? prefix + key : key;\n      res[newKey] = obj[key];\n    }\n    return res;\n  }\n  public static isConvertibleToNumber(value: any): boolean {\n    return (\n      value !== undefined &&\n      value !== null &&\n      !Array.isArray(value) &&\n      !isNaN(value)\n    );\n  }\n  public static isValueObject(val: any, excludeArray?: boolean): boolean {\n    return val instanceof Object && (!excludeArray || !Array.isArray(val));\n  }\n  public static isNumber(value: any): boolean {\n    return !isNaN(this.getNumber(value));\n  }\n  public static getNumber(value: any): number {\n    const newValue = Helpers.getNumberCore(value);\n    return settings.parseNumber(value, newValue);\n  }\n  private static getNumberCore(value: any): number {\n    if (typeof value == \"string\") {\n      value = value.trim();\n      if (!value) return NaN;\n      if (value.indexOf(\"0x\") == 0) {\n        if (value.length > 32) return NaN;\n        return parseInt(value);\n      }\n      if (value.length > 15 && Helpers.isDigitsOnly(value)) return NaN;\n      if (Helpers.isStringHasOperator(value)) return NaN;\n    }\n    value = this.prepareStringToNumber(value);\n    const res = parseFloat(value);\n    if (isNaN(res) || !isFinite(value)) return NaN;\n    return res;\n  }\n  private static isStringHasOperator(str: string): boolean {\n    if (str.lastIndexOf(\"-\") > 0) return false;\n    if (str.lastIndexOf(\"+\") > 0) return false;\n    const operators = \"*^/%\";\n    for (let i = 0; i < operators.length; i ++) {\n      if (str.indexOf(operators[i]) > -1) return true;\n    }\n    return false;\n  }\n  private static prepareStringToNumber(val: any): any {\n    if (typeof val !== \"string\" || !val) return val;\n    let i = val.indexOf(\",\");\n    if (i > -1 && val.indexOf(\",\", i + 1) < 0) {\n      return val.replace(\",\", \".\");\n    }\n    return val;\n  }\n  public static getMaxLength(maxLength: number, surveyLength: number): any {\n    if (maxLength < 0) {\n      maxLength = surveyLength;\n    }\n    return maxLength > 0 ? maxLength : null;\n  }\n  public static getRemainingCharacterCounterText(newValue: string | undefined, maxLength: number | null): string {\n    if (!maxLength || maxLength <= 0 || !settings.showMaxLengthIndicator) {\n      return \"\";\n    }\n    const value = newValue ? newValue.length : \"0\";\n    return [value, maxLength].join(\"/\");\n  }\n  public static getNumberByIndex(index: number, startIndexStr: string, parentIndex?: number): string {\n    if (index < 0) return \"\";\n    var startIndex = 1;\n    var prefix = \"\";\n    var postfix = \".\";\n    var isNumeric = true;\n    var strIndex = \"A\";\n    var str = \"\";\n    const hasDigitFunc = (str: string): boolean => {\n      if (!str) return false;\n      for (var i = 0; i < str.length; i++) {\n        if (Helpers.isCharDigit(str[i])) return true;\n      }\n      return false;\n    };\n    if (!!startIndexStr) {\n      str = startIndexStr;\n      var ind = str.length - 1;\n      var hasDigit = hasDigitFunc(str);\n      var checkLetter = function() {\n        return (\n          (hasDigit && !Helpers.isCharDigit(str[ind])) ||\n          Helpers.isCharNotLetterAndDigit(str[ind])\n        );\n      };\n      while(ind >= 0 && checkLetter()) ind--;\n      var newPostfix = \"\";\n      if (ind < str.length - 1) {\n        newPostfix = str.substring(ind + 1);\n        str = str.substring(0, ind + 1);\n      }\n      ind = str.length - 1;\n      while(ind >= 0) {\n        if (checkLetter()) break;\n        ind--;\n        if (!hasDigit) break;\n      }\n      strIndex = str.substring(ind + 1);\n      prefix = str.substring(0, ind + 1);\n      if (parseInt(strIndex)) startIndex = parseInt(strIndex);\n      else if (strIndex.length == 1) isNumeric = false;\n      if (!!newPostfix || !!prefix) {\n        postfix = newPostfix;\n      }\n    }\n    if (parentIndex > -1 && hasDigitFunc(prefix)) {\n      prefix = this.getNumberByIndex(parentIndex, prefix);\n    }\n    if (isNumeric) {\n      let val = (index + startIndex).toString();\n      while(val.length < strIndex.length) val = \"0\" + val;\n      return prefix + val + postfix;\n    }\n    return (\n      prefix + String.fromCharCode(strIndex.charCodeAt(0) + index) + postfix\n    );\n  }\n  public static isCharNotLetterAndDigit(ch: string): boolean {\n    return ch.toUpperCase() == ch.toLowerCase() && !Helpers.isCharDigit(ch);\n  }\n  public static isCharDigit(ch: string): boolean {\n    return ch >= \"0\" && ch <= \"9\";\n  }\n  public static isDigitsOnly(str: string): boolean {\n    if (!str) return false;\n    for (let i = 0; i < str.length; i ++) {\n      if (!Helpers.isCharDigit(str[i])) return false;\n    }\n    return true;\n  }\n  private static getNumberFromStr(str: string, index: number): number {\n    if (!this.isCharDigit(str[index])) return NaN;\n    let nStr = \"\";\n    while(index < str.length && this.isCharDigit(str[index])) {\n      nStr += str[index];\n      index ++;\n    }\n    if (!nStr) return NaN;\n    return this.getNumber(nStr);\n  }\n  private static countDecimals(value: number): number {\n    if (Helpers.isNumber(value) && Math.floor(value) !== value) {\n      const strs = value.toString().split(\".\");\n      return strs.length > 1 && strs[1].length || 0;\n    }\n    return 0;\n  }\n  public static correctAfterPlusMinis(a: number, b: number, res: number): number {\n    const digitsA = Helpers.countDecimals(a);\n    const digitsB = Helpers.countDecimals(b);\n    if (digitsA > 0 || digitsB > 0) {\n      const digits = Math.max(digitsA, digitsB);\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n  public static sumAnyValues(a: any, b: any): any {\n    if (!Helpers.isNumber(a) || !Helpers.isNumber(b)) {\n      if (Array.isArray(a) && Array.isArray(b))\n        return [].concat(a).concat(b);\n      if (Array.isArray(a) || Array.isArray(b)) {\n        const arr = Array.isArray(a) ? a : b;\n        const val = arr === a ? b : a;\n        if (typeof val === \"string\") {\n          const str = arr.join(\", \");\n          return arr === a ? str + val : val + str;\n        }\n        if (typeof val === \"number\") {\n          let res = 0;\n          for (var i = 0; i < arr.length; i ++) {\n            if (typeof arr[i] === \"number\") {\n              res = Helpers.correctAfterPlusMinis(res, arr[i], res + arr[i]);\n            }\n          }\n          return Helpers.correctAfterPlusMinis(res, val, res + val);\n        }\n      }\n      return a + b;\n    }\n    if (typeof a === \"string\" || typeof b === \"string\") return a + b;\n    return Helpers.correctAfterPlusMinis(a, b, a + b);\n  }\n  public static correctAfterMultiple(a: number, b: number, res: number): number {\n    const digits = Helpers.countDecimals(a) + Helpers.countDecimals(b);\n    if (digits > 0) {\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n  private static findObjByPropValue(arr: Array<any>, propName: string, val: any): any {\n    for (var i = 0; i < arr.length; i ++) {\n      if (Helpers.isTwoValueEquals(arr[i][propName], val)) return arr[i];\n    }\n    return undefined;\n  }\n  public static convertArrayObjectToValue(src: Array<any>, propName: string): Array<any> {\n    const res = new Array<any>();\n    if (!src || !Array.isArray(src)) return res;\n    for (var i = 0; i < src.length; i ++) {\n      const itemVal = !!src[i] ? src[i][propName] : undefined;\n      if (!Helpers.isValueEmpty(itemVal)) res.push(itemVal);\n    }\n    return res;\n  }\n  public static convertDateToString(date: Date): string {\n    const toStr = (val: number): string => {\n      if (val < 10) return \"0\" + val.toString();\n      return val.toString();\n    };\n    return date.getFullYear() + \"-\" + toStr(date.getMonth() + 1) + \"-\" + toStr(date.getDate());\n  }\n  public static convertDateTimeToString(date: Date): string {\n    const toStr = (val: number): string => {\n      if (val < 10) return \"0\" + val.toString();\n      return val.toString();\n    };\n    return this.convertDateToString(date) + \" \" + toStr(date.getHours()) + \":\" + toStr(date.getMinutes());\n  }\n  public static convertValToQuestionVal(val: any, inputType?: string): any {\n    if (val instanceof Date) {\n      if (inputType === \"datetime-local\") return Helpers.convertDateTimeToString(val);\n      return Helpers.convertDateToString(val);\n    }\n    return this.getUnbindValue(val);\n  }\n  public static compareVerions(ver1: string, ver2: string): number {\n    if (!ver1 && !ver2) return 0;\n    const ver1Ar = ver1.split(\".\");\n    const ver2Ar = ver2.split(\".\");\n    const len1 = ver1Ar.length;\n    const len2 = ver2Ar.length;\n    for (let i = 0; i < len1 && i < len2; i ++) {\n      const str1 = ver1Ar[i];\n      const str2 = ver2Ar[i];\n      if (str1.length === str2.length) {\n        if (str1 !== str2) {\n          return str1 < str2 ? -1 : 1;\n        }\n      } else {\n        return str1.length < str2.length ? -1 : 1;\n      }\n    }\n    return len1 === len2 ? 0 : (len1 < len2 ? -1 : 1);\n  }\n  public static isUrlYoutubeVideo(url: string): boolean {\n    if (!url) return false;\n    const youtubeDomains = [\"www.youtube.com\", \"m.youtube.com\", \"youtube.com\", \"youtu.be\"];\n    url = url.toLowerCase();\n    url = url.replace(/^https?:\\/\\//, \"\");\n    for (let i = 0; i < youtubeDomains.length; i++) {\n      if (url.indexOf(youtubeDomains[i] + \"/\") === 0) return true;\n    }\n    return false;\n  }\n}\nif (!(<any>String.prototype)[\"format\"]) {\n  (<any>String.prototype)[\"format\"] = function() {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function(match: any, number: any) {\n      return typeof args[number] != \"undefined\" ? args[number] : match;\n    });\n  };\n}\n", "// Uncomment the line below if you create a custom dictionary:\n// import { setupLocale } from \"survey-core\";\n\nexport var englishStrings = {\n  pagePrevText: \"Previous\",\n  pageNextText: \"Next\",\n  completeText: \"Complete\",\n  previewText: \"Preview\",\n  editText: \"Edit\",\n  startSurveyText: \"Start\",\n  commentText: \"Please leave a comment\",\n  otherItemText: \"Other (describe)\",\n  noneItemText: \"None\",\n  refuseItemText: \"Refuse to answer\",\n  dontKnowItemText: \"Don't know\",\n  selectAllItemText: \"Select All\",\n  deselectAllItemText: \"Deselect all\",\n  progressText: \"Page {0} of {1}\",\n  indexText: \"{0} of {1}\",\n  panelDynamicProgressText: \"{0} of {1}\",\n  panelDynamicTabTextFormat: \"Panel {panelIndex}\",\n  questionsProgressText: \"Answered {0}/{1} questions\",\n  emptySurvey: \"The survey doesn't contain any visible elements.\",\n  completingSurvey: \"Thank you for completing the survey\",\n  completingSurveyBefore: \"You have already completed this survey.\",\n  loadingSurvey: \"Loading Survey...\",\n  placeholder: \"Select...\",\n  ratingOptionsCaption: \"Select...\",\n  buttongroupOptionsCaption: \"Select...\",\n  value: \"value\",\n  requiredError: \"Response required.\",\n  requiredErrorInPanel: \"Response required: answer at least one question.\",\n  requiredInAllRowsError: \"Response required: answer questions in all rows.\",\n  eachRowUniqueError: \"Each row must have a unique value.\",\n  numericError: \"The value should be numeric.\",\n  minError: \"The value should not be less than {0}\",\n  stepError: \"Please enter a value that matches the step size of {0}.\",\n  maxError: \"The value should not be greater than {0}\",\n  textNoDigitsAllow: \"Numbers are not allowed.\",\n  textMinLength: \"Please enter at least {0} character(s).\",\n  textMaxLength: \"Please enter no more than {0} character(s).\",\n  textMinMaxLength: \"Please enter at least {0} and no more than {1} characters.\",\n  minRowCountError: \"Please fill in at least {0} row(s).\",\n  minSelectError: \"Please select at least {0} option(s).\",\n  maxSelectError: \"Please select no more than {0} option(s).\",\n  numericMinMax: \"The '{0}' should be at least {1} and at most {2}\",\n  numericMin: \"The '{0}' should be at least {1}\",\n  numericMax: \"The '{0}' should be at most {1}\",\n  invalidEmail: \"Please enter a valid e-mail address.\",\n  invalidExpression: \"The expression: {0} should return 'true'.\",\n  urlRequestError: \"The request returned error '{0}'. {1}\",\n  urlGetChoicesError: \"The request returned empty data or the 'path' property is incorrect\",\n  exceedMaxSize: \"The file size should not exceed {0}.\",\n  noUploadFilesHandler: \"Files cannot be uploaded. Please add a handler for the 'onUploadFiles' event.\",\n  otherRequiredError: \"Response required: enter another value.\",\n  uploadingFile: \"Your file is uploading. Please wait several seconds and try again.\",\n  loadingFile: \"Loading...\",\n  chooseFile: \"Choose file(s)...\",\n  noFileChosen: \"No file selected\",\n  filePlaceholder: \"Drag and drop a file here or click the button below to select a file to upload.\",\n  confirmDelete: \"Are you sure you want to delete this record?\",\n  keyDuplicationError: \"This value should be unique.\",\n  addColumn: \"Add Column\",\n  addRow: \"Add Row\",\n  removeRow: \"Remove\",\n  noRowsText: \"There are no rows.\",\n  rowIndexTemplateTitle: \"Row {rowIndex}\",\n  rowNameTemplateTitle: \"{rowTitle}\",\n  addPanel: \"Add new\",\n  removePanel: \"Remove\",\n  showDetails: \"Show Details\",\n  hideDetails: \"Hide Details\",\n  choices_Item: \"item\",\n  choices_Choice: \"Choice option\",\n  matrix_column: \"Column\",\n  matrix_row: \"Row\",\n  multipletext_itemname: \"text\",\n  savingData: \"The results are being saved on the server...\",\n  savingDataError: \"An error occurred and we could not save the results.\",\n  savingDataSuccess: \"The results were saved successfully!\",\n  savingExceedSize: \"Your response exceeds 64KB. Please reduce the size of your file(s) and try again or contact the survey owner.\",\n  saveAgainButton: \"Try again\",\n  timerMin: \"min\",\n  timerSec: \"sec\",\n  timerSpentAll: \"You have spent {0} on this page and {1} in total.\",\n  timerSpentPage: \"You have spent {0} on this page.\",\n  timerSpentSurvey: \"You have spent {0} in total.\",\n  timerLimitAll: \"You have spent {0} of {1} on this page and {2} of {3} in total.\",\n  timerLimitPage: \"You have spent {0} of {1} on this page.\",\n  timerLimitSurvey: \"You have spent {0} of {1} in total.\",\n  clearCaption: \"Clear\",\n  selectCaption: \"Select\",\n  signaturePlaceHolder: \"Sign here\",\n  signaturePlaceHolderReadOnly: \"No signature\",\n  chooseFileCaption: \"Select File\",\n  takePhotoCaption: \"Take Photo\",\n  photoPlaceholder: \"Click the button below to take a photo using the camera.\",\n  fileOrPhotoPlaceholder: \"Drag and drop or select a file to upload or take a photo using the camera.\",\n  replaceFileCaption: \"Replace file\",\n  removeFileCaption: \"Remove this file\",\n  booleanCheckedLabel: \"Yes\",\n  booleanUncheckedLabel: \"No\",\n  confirmRemoveFile: \"Are you sure that you want to remove this file: {0}?\",\n  confirmRemoveAllFiles: \"Are you sure that you want to remove all files?\",\n  questionTitlePatternText: \"Question Title\",\n  modalCancelButtonText: \"Cancel\",\n  modalApplyButtonText: \"Apply\",\n  filterStringPlaceholder: \"Type to search...\",\n  emptyMessage: \"No data to display\",\n  loadingPage: \"Loading...\",\n  loadingData: \"Loading...\",\n  noEntriesText: \"No entries yet.\\nClick the button below to add a new entry.\",\n  noEntriesReadonlyText: \"No entries\",\n  tabTitlePlaceholder: \"New Panel\",\n  more: \"More\",\n  tagboxDoneButtonCaption: \"OK\",\n  selectToRankEmptyRankedAreaText: \"All choices are selected for ranking\",\n  selectToRankEmptyUnrankedAreaText: \"Drag choices here to rank them\",\n  ok: \"OK\",\n  cancel: \"Cancel\",\n  createCustomItem: \"Create \\\"{0}\\\" item...\",\n  toc: \"Table of contents\",\n  progressbar: \"Progress bar\"\n};\n\n/*\n  Uncomment the last line if you create a custom dictionary. This line calls the `setupLocale` method, which supports the following locale settings:\n\n  - `localeCode`: `string` - A short code used as a locale identifier (for example, \"en\", \"de\", \"fr\").\n  - `strings`: `object` - An object with custom translations.\n  - `nativeName`: `string` - The locale name in native language.\n  - `englishName`: `string` - The locale name in English.\n  - `rtl`: `boolean` - A flag that indicates whether the language is right-to-left. Default value: `false`.\n*/\n// setupLocale({ localeCode: \"en\", strings: englishStrings, nativeName: \"English\", englishName: \"English\" });", "import { englishStrings } from \"./localization/english\";\n\nexport var surveyLocalization = {\n  currentLocaleValue: \"\",\n  defaultLocaleValue: \"en\",\n  locales: <{ [index: string]: any }>{},\n  localeNames: <{ [index: string]: any }>{},\n  localeNamesInEnglish: <{ [index: string]: any }>{},\n  localeDirections: <{ [index: string]: any }>{},\n  supportedLocales: <Array<any>>[],\n  useEnglishNames: false,\n  //TODO remove on next week\n  get showNamesInEnglish(): boolean { return this.useEnglishNames; },\n  set showNamesInEnglish(val: boolean) { this.useEnglishNames = val; },\n  setupLocale(localeConfig: { localeCode: string, strings: any, nativeName: string, englishName: string, rtl?: boolean }): void {\n    const loc = localeConfig.localeCode;\n    this.locales[loc] = localeConfig.strings;\n    this.localeNames[loc] = localeConfig.nativeName;\n    this.localeNamesInEnglish[loc] = localeConfig.englishName;\n    if (localeConfig.rtl !== undefined) {\n      this.localeDirections[loc] = localeConfig.rtl ? \"rtl\" : \"ltr\";\n    }\n  },\n  get currentLocale(): string {\n    return this.currentLocaleValue === this.defaultLocaleValue ? \"\" : this.currentLocaleValue;\n  },\n  set currentLocale(val: string) {\n    this.currentLocaleValue = this.getCorrectLocaleName(val);\n  },\n  get defaultLocale() {\n    return this.defaultLocaleValue;\n  },\n  set defaultLocale(val: string) {\n    this.defaultLocaleValue = this.getCorrectLocaleName(val);\n  },\n  getCorrectLocaleName(loc: string): string {\n    if (loc === \"cz\") loc = \"cs\";\n    if (loc === \"gr\") loc = \"el\";\n    if (loc === \"rs\") loc = \"sr\";\n    if (loc === \"ua\") loc = \"uk\";\n    return loc;\n  },\n  getLocaleStrings(loc: string): any {\n    return this.locales[loc];\n  },\n  getString: function (strName: string, locale: string = null) {\n    const locs = new Array<any>();\n    const addLocaleCore = (locName: string): void => {\n      const strs = this.locales[locName];\n      if (!!strs) locs.push(strs);\n    };\n    const addLocale = (locName: string): void => {\n      if (!locName) return;\n      addLocaleCore(locName);\n      const index = locName.indexOf(\"-\");\n      if (index < 1) return;\n      locName = locName.substring(0, index);\n      addLocaleCore(locName);\n    };\n    addLocale(locale);\n    addLocale(this.currentLocale);\n    addLocale(this.defaultLocale);\n    if (this.defaultLocale !== \"en\") {\n      addLocaleCore(\"en\");\n    }\n    for (let i = 0; i < locs.length; i++) {\n      const res = locs[i][strName];\n      if (res !== undefined) return res;\n    }\n    return this.onGetExternalString(strName, locale);\n  },\n  getLocaleName(loc: string, inEnglish?: boolean): string {\n    if (!loc) return \"\";\n    if (inEnglish === undefined) inEnglish = this.showNamesInEnglish;\n    const firstNames = inEnglish ? this.localeNamesInEnglish : this.localeNames;\n    const secondNames = inEnglish ? this.localeNames : this.localeNamesInEnglish;\n    return firstNames[loc] || secondNames[loc] || loc;\n  },\n  getLocales: function (removeDefaultLoc: boolean = false): Array<string> {\n    var res = [];\n    res.push(\"\");\n    var locs = this.locales;\n    if (this.supportedLocales && this.supportedLocales.length > 0) {\n      locs = {};\n      for (var i = 0; i < this.supportedLocales.length; i++) {\n        locs[this.supportedLocales[i]] = true;\n      }\n    }\n    for (var key in locs) {\n      if (removeDefaultLoc && key == this.defaultLocale) continue;\n      res.push(key);\n    }\n    var locName = (loc: string): string => {\n      return this.getLocaleName(loc).toLowerCase();\n    };\n    res.sort((a, b): number => {\n      var str1 = locName(a);\n      var str2 = locName(b);\n      if (str1 === str2) return 0;\n      return str1 < str2 ? -1 : 1;\n    });\n    return res;\n  },\n  onGetExternalString: function (name: string, locale: string): string { return undefined; }\n};\n\nexport function getLocaleString(strName: string, locale: string = null): string {\n  return surveyLocalization.getString(strName, locale);\n}\nexport function getLocaleStrings(locale: string): any {\n  return surveyLocalization.getLocaleStrings(locale);\n}\nexport function setupLocale(localeConfig: { localeCode: string, strings: any, nativeName: string, englishName: string, rtl?: boolean }): void {\n  surveyLocalization.setupLocale(localeConfig);\n}\nexport var surveyStrings = englishStrings;\n(<any>surveyLocalization).locales[\"en\"] = englishStrings;\n(<any>surveyLocalization).localeNames[\"en\"] = \"english\";\n", "import { getLocaleString } from \"./surveyStrings\";\nimport { Base, ComputedUpdater } from \"./base\";\nimport { Helpers, HashTable } from \"./helpers\";\nimport { ILoadFromJSONOptions, ISaveToJSONOptions } from \"./base-interfaces\";\n\nexport interface IPropertyDecoratorOptions<T = any> {\n  defaultValue?: T;\n  defaultSource?: string;\n  getDefaultValue?: (objectInstance?: any) => T;\n  localizable?:\n  | { name?: string, onGetTextCallback?: (str: string) => string, defaultStr?: string }\n  | boolean;\n  onSet?: (val: T, objectInstance: any, prevVal?: T) => void;\n}\n\nfunction ensureLocString(\n  target: any,\n  options: IPropertyDecoratorOptions,\n  key: string\n) {\n  let locString = target.getLocalizableString(key);\n  if (!locString) {\n    let defaultStr: string;\n    if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n      defaultStr = options.localizable.defaultStr;\n    }\n    locString = target.createLocalizableString(key, target, true, defaultStr);\n    if (\n      typeof options.localizable === \"object\" &&\n      typeof options.localizable.onGetTextCallback === \"function\"\n    ) {\n      locString.onGetTextCallback = options.localizable.onGetTextCallback;\n    }\n  }\n}\nfunction getLocStringValue(\n  target: any,\n  options: IPropertyDecoratorOptions,\n  key: string\n) {\n  ensureLocString(target, options, key);\n  let res = target.getLocalizableStringText(key);\n  if (!!res) return res;\n  if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n    const loc = !!target.getLocale ? target.getLocale() : \"\";\n    return getLocaleString(options.localizable.defaultStr, loc);\n  }\n  return \"\";\n}\n\nexport function property(options: IPropertyDecoratorOptions = {}) {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  return function (target: any, key: string): void {\n    let processComputedUpdater = (obj: any, val: any) => {\n      if (!!val && typeof val === \"object\" && val.type === ComputedUpdater.ComputedUpdaterType) {\n        Base.startCollectDependencies(() => obj[key] = val.updater(), obj, key);\n        const result = val.updater();\n        const dependencies = Base.finishCollectDependencies();\n        val.setDependencies(dependencies);\n        if (obj.dependencies[key]) {\n          obj.dependencies[key].dispose();\n        }\n        obj.dependencies[key] = val;\n        return result;\n      }\n      return val;\n    };\n    if (!options || !options.localizable) {\n      Object.defineProperty(target, key, {\n        get: function () {\n          // const serializationProperty = Serializer.getProperty(target.getType(), key);\n          // if(!!serializationProperty && options.defaultValue !== undefined) {\n          //   ConsoleWarnings.error(\"remove defaultValue from @property for class \" + target.getType() + \" property name is \" + key);\n          // }\n          let defaultVal = null;\n          if (!!options) {\n            if (typeof options.getDefaultValue === \"function\") {\n              defaultVal = options.getDefaultValue(this);\n            }\n            if (options.defaultValue !== undefined) {\n              defaultVal = options.defaultValue;\n            }\n          }\n          return this.getPropertyValue(key, defaultVal);\n        },\n        set: function (val: any) {\n          const newValue = processComputedUpdater(this, val);\n          const prevValue = this.getPropertyValue(key);\n          if (newValue !== prevValue) {\n            this.setPropertyValue(key, newValue);\n            if (!!options && options.onSet) {\n              options.onSet(newValue, this, prevValue);\n            }\n          }\n        },\n      });\n    } else {\n      Object.defineProperty(target, key, {\n        get: function () {\n          return getLocStringValue(this, options, key);\n        },\n        set: function (val: any) {\n          ensureLocString(this, options, key);\n          const newValue = processComputedUpdater(this, val);\n          this.setLocalizableStringText(key, newValue);\n          if (!!options && options.onSet) {\n            options.onSet(newValue, this);\n          }\n        },\n      });\n      Object.defineProperty(\n        target,\n        typeof options.localizable === \"object\" && !!options.localizable.name ?\n          options.localizable.name : \"loc\" + key.charAt(0).toUpperCase() + key.slice(1),\n        {\n          get: function () {\n            ensureLocString(this, options, key);\n            return this.getLocalizableString(key);\n          },\n        }\n      );\n    }\n  };\n}\n\nexport interface IArrayPropertyDecoratorOptions {\n  onPush?: any;\n  onRemove?: any;\n  onSet?: (val: any, target: any) => void;\n}\n\nfunction ensureArray(\n  target: any,\n  options: IArrayPropertyDecoratorOptions,\n  key: string\n) {\n  target.ensureArray(\n    key,\n    (item: any, index: number) => {\n      const handler = !!options ? options.onPush : null;\n      handler && handler(item, index, target);\n    },\n    (item: any, index: number) => {\n      const handler = !!options ? options.onRemove : null;\n      handler && handler(item, index, target);\n    },\n  );\n}\n\nexport function propertyArray(options?: IArrayPropertyDecoratorOptions) {\n  return function (target: any, key: string) {\n    Object.defineProperty(target, key, {\n      get: function () {\n        ensureArray(this, options, key);\n        return this.getPropertyValue(key);\n      },\n      set: function (val: any) {\n        ensureArray(this, options, key);\n        const arr = this.getPropertyValue(key);\n        if (val === arr) {\n          return;\n        }\n        if (arr) {\n          arr.splice(0, arr.length, ...(val || []));\n        } else {\n          this.setPropertyValue(key, val);\n        }\n        if (!!options && options.onSet) {\n          options.onSet(val, this);\n        }\n      },\n    });\n  };\n}\n\nexport interface IObject {\n  [key: string]: any;\n}\n\nexport interface IJsonPropertyInfo {\n  name: string;\n  type?: string;\n  className?: string;\n  classNamePart?: string;\n  baseClassName?: string;\n  isRequired?: boolean;\n  isUnique?: boolean;\n  //uniquePropertyName\n  uniqueProperty?: string;\n  choices?: any;\n  visible?: boolean;\n  alternativeName?: string;\n  oldName?: string;\n  version?: string;\n  dataList?: Array<string>;\n  isLocalizable?: boolean;\n  isSerializable?: boolean;\n  isSerializableFunc?: (obj: any) => boolean;\n  isLightSerializable?: boolean;\n  readOnly?: boolean;\n  availableInMatrixColumn?: boolean;\n  serializationProperty?: string;\n  dependsOn?: Array<string> | string;\n\n  isBindable?: boolean;\n  isArray?: boolean;\n  layout?: string;\n  default?: any;\n  defaultFunc?: (obj: Base) => any;\n  baseValue?: any;\n  onSerializeValue?: (obj: any) => any;\n  onGetValue?: (obj: any) => any;\n  onSettingValue?: (obj: any, value: any) => any;\n  onSetValue?: (obj: any, value: any, jsonConv: JsonObject) => any;\n  visibleIf?: (obj: any) => boolean;\n  enableIf?: (obj: any) => boolean;\n  onExecuteExpression?: (obj: any, res: any) => any;\n  onPropertyEditorUpdate?: (obj: any, propEditor: any) => any;\n\n  displayName?: string;\n  category?: string;\n  categoryIndex?: number;\n  visibleIndex?: number;\n  nextToProperty?: string;\n  overridingProperty?: string;\n  showMode?: string;\n  locationInTable?: string;\n  maxLength?: number;\n  maxValue?: any;\n  minValue?: any;\n}\n/**\n * Contains information about a property of a survey element (page, panel, questions, and etc).\n * @see addProperty\n * @see removeProperty\n * @see [Add Properties](https://surveyjs.io/Documentation/Survey-Creator#addproperties)\n * @see [Remove Properties](https://surveyjs.io/Documentation/Survey-Creator#removeproperties)\n */\nexport class JsonObjectProperty implements IObject, IJsonPropertyInfo {\n  public static getItemValuesDefaultValue: (val: any, type: string) => any;\n  [key: string]: any;\n  private static Index = 1;\n  private static mergableValues = [\n    \"typeValue\",\n    \"choicesValue\",\n    \"baseValue\",\n    \"readOnlyValue\",\n    \"visibleValue\",\n    \"isSerializable\",\n    \"isLightSerializable\",\n    \"isCustom\",\n    \"isBindable\",\n    \"isUnique\",\n    \"uniquePropertyName\",\n    \"isDynamicChoices\",\n    \"isLocalizableValue\",\n    \"className\",\n    \"alternativeName\",\n    \"oldName\",\n    \"layout\",\n    \"version\",\n    \"classNamePart\",\n    \"baseClassName\",\n    \"defaultValue\",\n    \"defaultValueFunc\",\n    \"serializationProperty\",\n    \"onGetValue\",\n    \"onSetValue\",\n    \"onSettingValue\",\n    \"displayName\",\n    \"category\",\n    \"categoryIndex\",\n    \"visibleIndex\",\n    \"nextToProperty\",\n    \"overridingProperty\",\n    \"locationInTable\",\n    \"dependedProperties\",\n    \"visibleIf\",\n    \"enableIf\",\n    \"onExecuteExpression\",\n    \"onPropertyEditorUpdate\",\n    \"maxLength\",\n    \"maxValue\",\n    \"minValue\",\n    \"dataListValue\",\n  ];\n  private idValue: number;\n  private classInfoValue: JsonMetadataClass;\n  private typeValue: string;\n  private choicesValue: Array<any>;\n  public baseValue: any;\n  private isRequiredValue: boolean = false;\n  private isUniqueValue: boolean = false;\n  private uniquePropertyValue: string;\n  private readOnlyValue: boolean | null;\n  private visibleValue: boolean | null;\n  private isLocalizableValue: boolean | null;\n  private choicesfunc: (obj: any, choicesCallback: any) => Array<any>;\n  private dependedProperties: Array<string>;\n  public isSerializable: boolean = true;\n  public isSerializableFunc: (obj: any) => boolean;\n  public isLightSerializable: boolean = true;\n  public isCustom: boolean = false;\n  public isDynamicChoices: boolean = false; //TODO obsolete, use dependsOn attribute\n  public isBindable: boolean = false;\n  public className: string;\n  public alternativeName: string;\n  public oldName: string;\n  public classNamePart: string;\n  public baseClassName: string;\n  public defaultValueValue: any;\n  public defaultValueFunc: (obj: Base) => any;\n  public serializationProperty: string;\n  public displayName: string;\n  public category: string = \"\";\n  public categoryIndex: number = -1;\n  public visibleIndex: number = -1;\n  public nextToProperty: string;\n  public overridingProperty: string;\n  public availableInMatrixColumn: boolean;\n  public maxLength: number = -1;\n  public maxValue: any;\n  public minValue: any;\n  private dataListValue: Array<string>;\n  private locationInTableValue: string;\n  public layout: string;\n  public version: string;\n  public onSerializeValue: (obj: any) => any;\n  public onGetValue: (obj: any) => any;\n  public onSettingValue: (obj: any, value: any) => any;\n  public onSetValue: (obj: any, value: any, jsonConv: JsonObject) => any;\n  public visibleIf: (obj: any) => boolean;\n  public enableIf: (obj: any) => boolean;\n  public onExecuteExpression: (obj: any, res: any) => any;\n  public onPropertyEditorUpdate: (obj: any, propEditor: any) => any;\n\n  constructor(\n    classInfo: JsonMetadataClass,\n    public name: string,\n    isRequired: boolean = false\n  ) {\n    this.classInfoValue = classInfo;\n    this.isRequiredValue = isRequired;\n    this.idValue = JsonObjectProperty.Index++;\n  }\n  uniqueProperty?: string;\n  dependsOn?: string | Array<string>;\n  default?: any;\n  defaultFunc?: (obj: Base) => any;\n  public get id(): number {\n    return this.idValue;\n  }\n  public get classInfo(): JsonMetadataClass {\n    return this.classInfoValue;\n  }\n  public get type(): string {\n    return this.typeValue ? this.typeValue : \"string\";\n  }\n  public set type(value: string) {\n    if (value === \"itemvalues\") value = \"itemvalue[]\";\n    if (value === \"textitems\") value = \"textitem[]\";\n    this.typeValue = value;\n    if (this.typeValue.indexOf(\"[]\") === this.typeValue.length - 2) {\n      this.isArray = true;\n      this.className = this.typeValue.substring(0, this.typeValue.length - 2);\n    }\n  }\n  public get locationInTable(): string {\n    const res = this.locationInTableValue;\n    return res || \"column\";\n  }\n  public set locationInTable(val: string) {\n    this.locationInTableValue = val;\n  }\n  public get showMode(): string {\n    const res = this.locationInTableValue;\n    return res === \"detail\" ? \"form\" : (res === \"column\" ? \"list\" : \"\");\n  }\n  public set showMode(val: string) {\n    this.locationInTable = val === \"form\" ? \"detail\" : (val === \"list\" ? \"column\" : undefined);\n  }\n  public isArray = false;\n  public get isRequired(): boolean {\n    return this.isRequiredValue;\n  }\n  public set isRequired(val: boolean) {\n    if (val !== this.isRequired) {\n      this.isRequiredValue = val;\n      if (!!this.classInfo) {\n        this.classInfo.resetAllProperties();\n      }\n    }\n  }\n  public get isUnique(): boolean {\n    return this.isUniqueValue;\n  }\n  public set isUnique(val: boolean) {\n    this.isUniqueValue = val;\n  }\n  public get uniquePropertyName(): string {\n    return this.uniquePropertyValue;\n  }\n  public set uniquePropertyName(val: string) {\n    this.uniquePropertyValue = val;\n  }\n  public isPropertySerializable(obj: any): boolean {\n    if (this.isSerializableFunc) return this.isSerializableFunc(obj);\n    return this.isSerializable;\n  }\n  public getDefaultValue(obj: Base): any {\n    let result: any = !!this.defaultValueFunc ? this.defaultValueFunc(obj) : this.defaultValueValue;\n    if (\n      !!JsonObjectProperty.getItemValuesDefaultValue &&\n      Serializer.isDescendantOf(this.className, \"itemvalue\")\n    ) {\n      result = JsonObjectProperty.getItemValuesDefaultValue(this.defaultValueValue || [], this.className);\n    }\n    return result;\n  }\n  public get defaultValue(): any {\n    return this.getDefaultValue(undefined);\n  }\n  public set defaultValue(newValue: any) {\n    this.defaultValueValue = newValue;\n    if (newValue !== undefined) {\n      this.defaultValueFunc = undefined;\n    }\n  }\n  public isDefaultValue(value: any): boolean {\n    return this.isDefaultValueByObj(undefined, value);\n  }\n  public isDefaultValueByObj(obj: Base, value: any): boolean {\n    if (this.isLocalizable) return value === null || value === undefined;\n    const dValue = this.getDefaultValue(obj);\n    if (dValue !== undefined) {\n      if (typeof dValue !== \"object\") return dValue === value;\n      return Helpers.isTwoValueEquals(value, dValue, false, true, false);\n    }\n    return (\n      (value === false && (this.type == \"boolean\" || this.type == \"switch\") && !this.defaultValueFunc) ||\n      value === \"\" || Helpers.isValueEmpty(value)\n    );\n  }\n  public getSerializableValue(obj: any, storeDefaults?: boolean): any {\n    if (!!this.onSerializeValue) return this.onSerializeValue(obj);\n    const value = this.getValue(obj);\n    if (value === undefined || value === null) return undefined;\n    if (!storeDefaults && this.isDefaultValueByObj(obj, value)) return undefined;\n    return value;\n  }\n  public getValue(obj: any): any {\n    if (this.onGetValue) {\n      obj = this.getOriginalObj(obj);\n      return this.onGetValue(obj);\n    }\n    if (this.serializationProperty && !!obj[this.serializationProperty])\n      return obj[this.serializationProperty].getJson();\n    return obj[this.name];\n  }\n  public getPropertyValue(obj: any): any {\n    if (this.isLocalizable) {\n      return !!obj[this.serializationProperty]\n        ? obj[this.serializationProperty].text\n        : null;\n    }\n    return this.getValue(obj);\n  }\n  public get hasToUseSetValue() {\n    return this.onSetValue || this.serializationProperty;\n  }\n  public settingValue(obj: any, value: any): any {\n    if (!this.onSettingValue || obj.isLoadingFromJson) return value;\n    return this.onSettingValue(obj, value);\n  }\n  public setValue(obj: any, value: any, jsonConv: JsonObject): void {\n    if (this.onSetValue) {\n      obj = this.getOriginalObj(obj);\n      this.onSetValue(obj, value, jsonConv);\n    } else {\n      if (this.serializationProperty && !!obj[this.serializationProperty])\n        obj[this.serializationProperty].setJson(value, true);\n      else {\n        if (value && typeof value === \"string\") {\n          if (this.type == \"number\") {\n            value = parseInt(value);\n          }\n          if (this.type == \"boolean\" || this.type == \"switch\") {\n            value = value.toLowerCase() === \"true\";\n          }\n        }\n        obj[this.name] = value;\n      }\n    }\n  }\n  public validateValue(value: any): boolean {\n    const choices = this.choices;\n    if (!Array.isArray(choices) || choices.length === 0) return true;\n    return choices.indexOf(value) > -1;\n  }\n  public getObjType(objType: string) {\n    if (!this.classNamePart) return objType;\n    return objType.replace(this.classNamePart, \"\");\n  }\n  /**\n   * Depricated, please use getChoices\n   */\n  public get choices(): Array<any> {\n    return this.getChoices(null);\n  }\n  public get hasChoices(): boolean {\n    return !!this.choicesValue || !!this.choicesfunc;\n  }\n  public getChoices(obj: any, choicesCallback: any = null): Array<any> {\n    if (this.choicesValue != null) return this.choicesValue;\n    if (this.choicesfunc != null) return this.choicesfunc(obj, choicesCallback);\n    return null;\n  }\n  public setChoices(\n    value: Array<any>,\n    valueFunc: (obj: any) => Array<any> = null\n  ) {\n    this.choicesValue = value;\n    this.choicesfunc = valueFunc;\n  }\n  public getBaseValue(): string {\n    if (!this.baseValue) return \"\";\n    if (typeof this.baseValue == \"function\") return this.baseValue();\n    return this.baseValue;\n  }\n  public setBaseValue(val: any) {\n    this.baseValue = val;\n  }\n  public get readOnly(): boolean {\n    return this.readOnlyValue != null ? this.readOnlyValue : false;\n  }\n  public set readOnly(val: boolean) {\n    this.readOnlyValue = val;\n  }\n  public isEnable(obj: any): boolean {\n    if (this.readOnly) return false;\n    if (!obj || !this.enableIf) return true;\n    return this.enableIf(this.getOriginalObj(obj));\n  }\n  public isVisible(layout: string, obj: any = null): boolean {\n    let isLayout = !this.layout || !layout || this.layout === layout;\n    if (!this.visible || !isLayout) return false;\n    if (!!this.visibleIf && !!obj) {\n      return this.visibleIf(this.getOriginalObj(obj));\n    }\n    return true;\n  }\n  private getOriginalObj(obj: any): any {\n    if (obj && obj.getOriginalObj) {\n      const orjObj = obj.getOriginalObj();\n      if (orjObj && Serializer.findProperty(orjObj.getType(), this.name)) {\n        return orjObj;\n      }\n    }\n    return obj;\n  }\n  public get visible(): boolean {\n    return this.visibleValue != null ? this.visibleValue : true;\n  }\n  public set visible(val: boolean) {\n    this.visibleValue = val;\n  }\n  public isAvailableInVersion(ver: string): boolean {\n    if (!!this.alternativeName || this.oldName) return true;\n    return this.isAvailableInVersionCore(ver);\n  }\n  public getSerializedName(ver: string): string {\n    if (!this.alternativeName) return this.name;\n    return this.isAvailableInVersionCore(ver) ? this.name : this.alternativeName || this.oldName;\n  }\n  public getSerializedProperty(obj: any, ver: string): JsonObjectProperty {\n    if (!this.oldName || this.isAvailableInVersionCore(ver)) return this;\n    if (!obj || !obj.getType) return null;\n    return Serializer.findProperty(obj.getType(), this.oldName);\n  }\n  private isAvailableInVersionCore(ver: string): boolean {\n    if (!ver || !this.version) return true;\n    return Helpers.compareVerions(this.version, ver) <= 0;\n  }\n  public get isLocalizable(): boolean {\n    return this.isLocalizableValue != null ? this.isLocalizableValue : false;\n  }\n  public set isLocalizable(val: boolean) {\n    this.isLocalizableValue = val;\n  }\n  public get dataList(): Array<string> {\n    return Array.isArray(this.dataListValue) ? this.dataListValue : [];\n  }\n  public set dataList(val: Array<string>) {\n    this.dataListValue = val;\n  }\n  public mergeWith(prop: JsonObjectProperty) {\n    var valuesNames = JsonObjectProperty.mergableValues;\n    for (var i = 0; i < valuesNames.length; i++) {\n      this.mergeValue(prop, valuesNames[i]);\n    }\n  }\n  public addDependedProperty(name: string) {\n    if (!this.dependedProperties) {\n      this.dependedProperties = [];\n    }\n    if (this.dependedProperties.indexOf(name) < 0) {\n      this.dependedProperties.push(name);\n    }\n  }\n  public getDependedProperties(): Array<string> {\n    return !!this.dependedProperties ? this.dependedProperties : [];\n  }\n  public schemaType(): string {\n    if (this.className === \"choicesByUrl\") return undefined;\n    if (this.className === \"string\") return this.className;\n    if (!!this.className) return \"array\";\n    if (!!this.baseClassName) return \"array\";\n    if (this.type == \"switch\") return \"boolean\";\n    if (this.type == \"boolean\" || this.type == \"number\") return this.type;\n    return \"string\";\n  }\n  public schemaRef(): string {\n    if (!!this.className) return this.className;\n    return undefined;\n  }\n  private mergeValue(prop: JsonObjectProperty, valueName: string) {\n    if (this[valueName] == null && prop[valueName] != null) {\n      this[valueName] = prop[valueName];\n    }\n  }\n}\nexport class CustomPropertiesCollection {\n  private static properties: IObject = {};\n  private static parentClasses: { [key: string]: string } = {};\n  public static addProperty(className: string, property: any) {\n    className = className.toLowerCase();\n    var props = CustomPropertiesCollection.properties;\n    if (!props[className]) {\n      props[className] = [];\n    }\n    props[className].push(property);\n  }\n  public static removeProperty(className: string, propertyName: string) {\n    className = className.toLowerCase();\n    var props = CustomPropertiesCollection.properties;\n    if (!props[className]) return;\n    var properties = props[className];\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[i].name == propertyName) {\n        props[className].splice(i, 1);\n        break;\n      }\n    }\n  }\n  public static removeAllProperties(className: string): void {\n    className = className.toLowerCase();\n    delete CustomPropertiesCollection.properties[className];\n  }\n  public static addClass(className: string, parentClassName: string) {\n    className = className.toLowerCase();\n    if (parentClassName) {\n      parentClassName = parentClassName.toLowerCase();\n    }\n    CustomPropertiesCollection.parentClasses[className] = parentClassName;\n  }\n  public static getProperties(className: string): Array<any> {\n    className = className.toLowerCase();\n    var res = [];\n    var props = CustomPropertiesCollection.properties;\n    while(className) {\n      var properties = props[className];\n      if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n          res.push(properties[i]);\n        }\n      }\n      className = CustomPropertiesCollection.parentClasses[className];\n    }\n    return res;\n  }\n  public static createProperties(obj: any) {\n    if (!obj || !obj.getType) return;\n    CustomPropertiesCollection.createPropertiesCore(obj, obj.getType());\n  }\n  private static createPropertiesCore(obj: any, className: string) {\n    var props = CustomPropertiesCollection.properties;\n    if (props[className]) {\n      CustomPropertiesCollection.createPropertiesInObj(obj, props[className]);\n    }\n    var parentClass = CustomPropertiesCollection.parentClasses[className];\n    if (parentClass) {\n      CustomPropertiesCollection.createPropertiesCore(obj, parentClass);\n    }\n  }\n  private static createPropertiesInObj(obj: any, properties: any[]) {\n    for (var i = 0; i < properties.length; i++) {\n      CustomPropertiesCollection.createPropertyInObj(obj, properties[i]);\n    }\n  }\n  private static createPropertyInObj(obj: any, prop: JsonObjectProperty) {\n    if (CustomPropertiesCollection.checkIsPropertyExists(obj, prop.name)) return;\n    if (!!prop.serializationProperty && CustomPropertiesCollection.checkIsPropertyExists(obj, prop.serializationProperty)) return;\n    if (\n      prop.isLocalizable &&\n      prop.serializationProperty &&\n      obj.createCustomLocalizableObj\n    ) {\n      const locStr = obj.createCustomLocalizableObj(prop.name);\n      locStr.defaultValue = prop.getDefaultValue(obj);\n      var locDesc = {\n        get: function () {\n          return obj.getLocalizableString(prop.name);\n        },\n      };\n      Object.defineProperty(obj, prop.serializationProperty, locDesc);\n      var desc = {\n        get: function () {\n          return obj.getLocalizableStringText(prop.name);\n        },\n        set: function (v: any) {\n          obj.setLocalizableStringText(prop.name, v);\n        },\n      };\n      Object.defineProperty(obj, prop.name, desc);\n    } else {\n      var isArrayProp = prop.isArray || prop.type === \"multiplevalues\";\n      if (typeof obj.createNewArray === \"function\") {\n        if (Serializer.isDescendantOf(prop.className, \"itemvalue\")) {\n          obj.createNewArray(prop.name, function (item: any) {\n            item.locOwner = obj;\n            item.ownerPropertyName = prop.name;\n          });\n          isArrayProp = true;\n        } else {\n          //It is a simple array property\n          if (isArrayProp) {\n            obj.createNewArray(prop.name);\n          }\n        }\n        if (isArrayProp) {\n          const defaultValue = prop.getDefaultValue(obj);\n          if (Array.isArray(defaultValue)) {\n            obj.setPropertyValue(prop.name, defaultValue);\n          }\n        }\n      }\n      if (!!obj.getPropertyValue && !!obj.setPropertyValue) {\n        var desc = {\n          get: () => {\n            if (!!prop.onGetValue) {\n              return prop.onGetValue(obj);\n            }\n            return obj.getPropertyValue(prop.name, undefined);\n          },\n          set: function (v: any) {\n            if (!!prop.onSetValue) {\n              prop.onSetValue(obj, v, null);\n            } else {\n              obj.setPropertyValue(prop.name, v);\n            }\n          },\n        };\n        Object.defineProperty(obj, prop.name, desc);\n      }\n    }\n    if (prop.type === \"condition\" || prop.type === \"expression\") {\n      if (!!prop.onExecuteExpression) {\n        obj.addExpressionProperty(prop.name, prop.onExecuteExpression);\n      }\n    }\n  }\n  private static checkIsPropertyExists(obj: any, name: string): boolean {\n    return obj.hasOwnProperty(name) || obj[name];\n  }\n}\n\nexport class JsonMetadataClass {\n  static requiredSymbol = \"!\";\n  static typeSymbol = \":\";\n  properties: Array<JsonObjectProperty>;\n  private isCustomValue: boolean;\n  private allProperties: Array<JsonObjectProperty>;\n  private requiredProperties: Array<JsonObjectProperty>;\n  private hashProperties: HashTable<JsonObjectProperty>;\n  constructor(\n    public name: string,\n    properties: Array<any>,\n    public creator: (json?: any) => any = null,\n    public parentName: string = null\n  ) {\n    name = name.toLowerCase();\n    this.isCustomValue = !creator && name !== \"survey\";\n    if (this.parentName) {\n      this.parentName = this.parentName.toLowerCase();\n      CustomPropertiesCollection.addClass(name, this.parentName);\n      if (!!creator) {\n        this.makeParentRegularClass();\n      }\n    }\n    this.properties = new Array<JsonObjectProperty>();\n    for (var i = 0; i < properties.length; i++) {\n      this.createProperty(properties[i], this.isCustom);\n    }\n  }\n  //Obsolete\n  public find(name: string): JsonObjectProperty {\n    for (var i = 0; i < this.properties.length; i++) {\n      if (this.properties[i].name == name) return this.properties[i];\n    }\n    return null;\n  }\n  public findProperty(name: string): JsonObjectProperty {\n    this.fillAllProperties();\n    return this.hashProperties[name];\n  }\n  public getAllProperties(): Array<JsonObjectProperty> {\n    this.fillAllProperties();\n    return this.allProperties;\n  }\n  public getRequiredProperties(): Array<JsonObjectProperty> {\n    if (!!this.requiredProperties) return this.requiredProperties;\n    this.requiredProperties = [];\n    const props = this.getAllProperties();\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].isRequired)this.requiredProperties.push(props[i]);\n    }\n    return this.requiredProperties;\n  }\n  public resetAllProperties(): void {\n    this.allProperties = undefined;\n    this.requiredProperties = undefined;\n    this.hashProperties = undefined;\n    var childClasses = Serializer.getChildrenClasses(this.name);\n    for (var i = 0; i < childClasses.length; i++) {\n      childClasses[i].resetAllProperties();\n    }\n  }\n  public get isCustom(): boolean { return this.isCustomValue; }\n  private fillAllProperties(): void {\n    if (!!this.allProperties) return;\n    this.allProperties = [];\n    this.hashProperties = {};\n    const localProperties: HashTable<JsonObjectProperty> = {};\n    this.properties.forEach(prop => localProperties[prop.name] = prop);\n    const parentClass = !!this.parentName ? Serializer.findClass(this.parentName) : null;\n    if (!!parentClass) {\n      const parentProperties = parentClass.getAllProperties();\n      parentProperties.forEach(prop => {\n        const overridedProp = localProperties[prop.name];\n        if (!!overridedProp) {\n          overridedProp.mergeWith(prop);\n          this.addPropCore(overridedProp);\n        } else {\n          this.addPropCore(prop);\n        }\n      });\n    }\n    this.properties.forEach(prop => {\n      if (!this.hashProperties[prop.name]) {\n        this.addPropCore(prop);\n      }\n    });\n  }\n  private addPropCore(prop: JsonObjectProperty): void {\n    this.allProperties.push(prop);\n    this.hashProperties[prop.name] = prop;\n    if (!!prop.alternativeName) {\n      this.hashProperties[prop.alternativeName] = prop;\n    }\n  }\n  private isOverridedProp(propName: string): boolean {\n    return !!this.parentName && !!Serializer.findProperty(this.parentName, propName);\n  }\n  private hasRegularChildClass(): void {\n    if (!this.isCustom) return;\n    this.isCustomValue = false;\n    for (var i = 0; i < this.properties.length; i++) {\n      this.properties[i].isCustom = false;\n    }\n    CustomPropertiesCollection.removeAllProperties(this.name);\n    this.makeParentRegularClass();\n  }\n  private makeParentRegularClass(): void {\n    if (!this.parentName) return;\n    const parent = Serializer.findClass(this.parentName);\n    if (!!parent) {\n      parent.hasRegularChildClass();\n    }\n  }\n  public createProperty(propInfo: any, isCustom: boolean = false): JsonObjectProperty {\n    var propertyName = typeof propInfo === \"string\" ? propInfo : propInfo.name;\n    if (!propertyName) return;\n    var propertyType = null;\n    var typeIndex = propertyName.indexOf(JsonMetadataClass.typeSymbol);\n    if (typeIndex > -1) {\n      propertyType = propertyName.substring(typeIndex + 1);\n      propertyName = propertyName.substring(0, typeIndex);\n    }\n    var isRequired =\n      this.getIsPropertyNameRequired(propertyName) || !!propInfo.isRequired;\n    propertyName = this.getPropertyName(propertyName);\n    var prop = new JsonObjectProperty(this, propertyName, isRequired);\n    if (propertyType) {\n      prop.type = propertyType;\n    }\n    if (typeof propInfo === \"object\") {\n      if (propInfo.type) {\n        prop.type = propInfo.type;\n      }\n      if (propInfo.default !== undefined) {\n        prop.defaultValue = propInfo.default;\n      }\n      if (propInfo.defaultFunc !== undefined) {\n        prop.defaultValueFunc = propInfo.defaultFunc;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isSerializable)) {\n        prop.isSerializable = propInfo.isSerializable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isSerializableFunc)) {\n        prop.isSerializableFunc = propInfo.isSerializableFunc;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isLightSerializable)) {\n        prop.isLightSerializable = propInfo.isLightSerializable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.maxLength)) {\n        prop.maxLength = propInfo.maxLength;\n      }\n      if (propInfo.displayName !== undefined) {\n        prop.displayName = propInfo.displayName;\n      }\n      if (!Helpers.isValueEmpty(propInfo.category)) {\n        prop.category = propInfo.category;\n      }\n      if (!Helpers.isValueEmpty(propInfo.categoryIndex)) {\n        prop.categoryIndex = propInfo.categoryIndex;\n      }\n      if (!Helpers.isValueEmpty(propInfo.nextToProperty)) {\n        prop.nextToProperty = propInfo.nextToProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.overridingProperty)) {\n        prop.overridingProperty = propInfo.overridingProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.visibleIndex)) {\n        prop.visibleIndex = propInfo.visibleIndex;\n      }\n      if (!Helpers.isValueEmpty(propInfo.showMode)) {\n        prop.showMode = propInfo.showMode;\n      }\n      if (!Helpers.isValueEmpty(propInfo.locationInTable)) {\n        prop.locationInTable = propInfo.locationInTable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.maxValue)) {\n        prop.maxValue = propInfo.maxValue;\n      }\n      if (!Helpers.isValueEmpty(propInfo.minValue)) {\n        prop.minValue = propInfo.minValue;\n      }\n      if (!Helpers.isValueEmpty(propInfo.dataList)) {\n        prop.dataList = propInfo.dataList;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isDynamicChoices)) {\n        prop.isDynamicChoices = propInfo.isDynamicChoices;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isBindable)) {\n        prop.isBindable = propInfo.isBindable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isUnique)) {\n        prop.isUnique = propInfo.isUnique;\n      }\n      if (!Helpers.isValueEmpty(propInfo.uniqueProperty)) {\n        prop.uniquePropertyName = propInfo.uniqueProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isArray)) {\n        prop.isArray = propInfo.isArray;\n      }\n      if (propInfo.visible === true || propInfo.visible === false) {\n        prop.visible = propInfo.visible;\n      }\n      if (!!propInfo.visibleIf) {\n        prop.visibleIf = propInfo.visibleIf;\n      }\n      if (!!propInfo.enableIf) {\n        prop.enableIf = propInfo.enableIf;\n      }\n      if (!!propInfo.onExecuteExpression) {\n        prop.onExecuteExpression = propInfo.onExecuteExpression;\n      }\n      if (!!propInfo.onPropertyEditorUpdate) {\n        prop.onPropertyEditorUpdate = propInfo.onPropertyEditorUpdate;\n      }\n      if (propInfo.readOnly === true) {\n        prop.readOnly = true;\n      }\n      if (propInfo.availableInMatrixColumn === true) {\n        prop.availableInMatrixColumn = true;\n      }\n      if (propInfo.choices) {\n        var choicesFunc =\n          typeof propInfo.choices === \"function\" ? propInfo.choices : null;\n        var choicesValue =\n          typeof propInfo.choices !== \"function\" ? propInfo.choices : null;\n        prop.setChoices(choicesValue, choicesFunc);\n      }\n      if (!!propInfo.baseValue) {\n        prop.setBaseValue(propInfo.baseValue);\n      }\n      if (propInfo.onSerializeValue) {\n        prop.onSerializeValue = propInfo.onSerializeValue;\n      }\n      if (propInfo.onGetValue) {\n        prop.onGetValue = propInfo.onGetValue;\n      }\n      if (propInfo.onSetValue) {\n        prop.onSetValue = propInfo.onSetValue;\n      }\n      if (propInfo.onSettingValue) {\n        prop.onSettingValue = propInfo.onSettingValue;\n      }\n      if (propInfo.isLocalizable) {\n        propInfo.serializationProperty = \"loc\" + prop.name;\n      }\n      if (propInfo.serializationProperty) {\n        prop.serializationProperty = propInfo.serializationProperty;\n        var s: string;\n        if (\n          prop.serializationProperty &&\n          prop.serializationProperty.indexOf(\"loc\") == 0\n        ) {\n          prop.isLocalizable = true;\n        }\n      }\n      if (propInfo.isLocalizable) {\n        prop.isLocalizable = propInfo.isLocalizable;\n      }\n      if (propInfo.className) {\n        prop.className = propInfo.className;\n      }\n      if (propInfo.baseClassName) {\n        prop.baseClassName = propInfo.baseClassName;\n        prop.isArray = true;\n      }\n      if (prop.isArray === true) {\n        prop.isArray = true;\n      }\n      if (propInfo.classNamePart) {\n        prop.classNamePart = propInfo.classNamePart;\n      }\n      if (propInfo.alternativeName) {\n        prop.alternativeName = propInfo.alternativeName;\n      }\n      if (propInfo.oldName) {\n        prop.oldName = propInfo.oldName;\n      }\n      if (propInfo.layout) {\n        prop.layout = propInfo.layout;\n      }\n      if (propInfo.version) {\n        prop.version = propInfo.version;\n      }\n      if (propInfo.dependsOn) {\n        this.addDependsOnProperties(prop, propInfo.dependsOn);\n      }\n    }\n    this.properties.push(prop);\n    if (isCustom && !this.isOverridedProp(prop.name)) {\n      prop.isCustom = true;\n      CustomPropertiesCollection.addProperty(this.name, prop);\n    }\n    return prop;\n  }\n  private addDependsOnProperties(prop: JsonObjectProperty, dependsOn: any) {\n    const dArray = Array.isArray(dependsOn) ? dependsOn : [dependsOn];\n    prop.dependsOn = dArray;\n    for (var i = 0; i < dArray.length; i++) {\n      this.addDependsOnProperty(prop, dArray[i]);\n    }\n  }\n  private addDependsOnProperty(prop: JsonObjectProperty, dependsOn: string) {\n    var property = this.find(dependsOn);\n    if (!property) {\n      property = Serializer.findProperty(this.parentName, dependsOn);\n    }\n    if (!property) return;\n    property.addDependedProperty(prop.name);\n  }\n  private getIsPropertyNameRequired(propertyName: string): boolean {\n    return (\n      propertyName.length > 0 &&\n      propertyName[0] == JsonMetadataClass.requiredSymbol\n    );\n  }\n  private getPropertyName(propertyName: string): string {\n    if (!this.getIsPropertyNameRequired(propertyName)) return propertyName;\n    propertyName = propertyName.slice(1);\n    return propertyName;\n  }\n}\n\n/**\n * The metadata object. It contains object properties' runtime information and allows you to modify it.\n */\nexport class JsonMetadata {\n  private classes: HashTable<JsonMetadataClass> = {};\n  private alternativeNames: HashTable<string> = {};\n  private childrenClasses: HashTable<Array<JsonMetadataClass>> = {};\n  private dynamicPropsCache: HashTable<Array<JsonObjectProperty>> = {};\n  public onSerializingProperty: ((obj: Base, prop: JsonObjectProperty, value: any, json: any) => boolean) | undefined;\n  public getObjPropertyValue(obj: any, name: string): any {\n    if (this.isObjWrapper(obj) && this.isNeedUseObjWrapper(obj, name)) {\n      const orignalObj = obj.getOriginalObj();\n      const prop = Serializer.findProperty(orignalObj.getType(), name);\n      if (!!prop) return this.getObjPropertyValueCore(orignalObj, prop);\n    }\n    const prop = Serializer.findProperty(obj.getType(), name);\n    if (!prop) return obj[name];\n    return this.getObjPropertyValueCore(obj, prop);\n  }\n  public setObjPropertyValue(obj: any, name: string, val: any) {\n    if (obj[name] === val) return;\n    if (!!obj[name] && !!obj[name].setJson) {\n      obj[name].setJson(val, true);\n    } else {\n      if (Array.isArray(val)) {\n        const newVal = [];\n        for (var i = 0; i < val.length; i++) newVal.push(val[i]);\n        val = newVal;\n      }\n      obj[name] = val;\n    }\n  }\n  private getObjPropertyValueCore(obj: any, prop: JsonObjectProperty): any {\n    if (!prop.isPropertySerializable(obj)) return obj[prop.name];\n    if (prop.isLocalizable) {\n      if (prop.isArray) return obj[prop.name];\n      const locStr = obj.getLocalizableString(prop.name);\n      if (!!locStr) {\n        if (locStr.isDefautlLocale) return locStr.text;\n        return locStr.getValue(locStr.locale);\n      }\n      if (!!prop.serializationProperty)\n        return obj[prop.serializationProperty].text;\n    }\n    return obj.getPropertyValue(prop.name);\n  }\n  private isObjWrapper(obj: any): boolean {\n    return !!obj.getOriginalObj && !!obj.getOriginalObj();\n  }\n  private isNeedUseObjWrapper(obj: any, name: string): boolean {\n    if (!obj.getDynamicProperties) return true;\n    const props = obj.getDynamicProperties();\n    if (!Array.isArray(props)) return false;\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].name === name) return true;\n    }\n    return false;\n  }\n  public addClass(\n    name: string,\n    properties: Array<IJsonPropertyInfo | string>,\n    creator: (json?: any) => any = null,\n    parentName: string = null\n  ): JsonMetadataClass {\n    name = name.toLowerCase();\n    var metaDataClass = new JsonMetadataClass(\n      name,\n      properties,\n      creator,\n      parentName\n    );\n    this.classes[name] = metaDataClass;\n    if (parentName) {\n      parentName = parentName.toLowerCase();\n      var children = this.childrenClasses[parentName];\n      if (!children) {\n        this.childrenClasses[parentName] = [];\n      }\n      this.childrenClasses[parentName].push(metaDataClass);\n    }\n    return metaDataClass;\n  }\n  public removeClass(name: string) {\n    var metaClass = this.findClass(name);\n    if (!metaClass) return;\n    delete this.classes[metaClass.name];\n    if (!!metaClass.parentName) {\n      var index = this.childrenClasses[metaClass.parentName].indexOf(metaClass);\n      if (index > -1) {\n        this.childrenClasses[metaClass.parentName].splice(index, 1);\n      }\n    }\n  }\n  public overrideClassCreatore(name: string, creator: () => any) {\n    this.overrideClassCreator(name, creator);\n  }\n  public overrideClassCreator(name: string, creator: () => any) {\n    name = name.toLowerCase();\n    var metaDataClass = this.findClass(name);\n    if (metaDataClass) {\n      metaDataClass.creator = creator;\n    }\n  }\n  public getProperties(className: string): Array<JsonObjectProperty> {\n    var metaClass = this.findClass(className);\n    if (!metaClass) return [];\n    return metaClass.getAllProperties();\n  }\n  public getPropertiesByObj(obj: any): Array<JsonObjectProperty> {\n    const type = !!obj && !!obj.getType ? obj.getType() : undefined;\n    if (!type) return [];\n    const props = this.getProperties(type);\n    const dynamicProps = this.getDynamicPropertiesByObj(obj);\n    for (let i = dynamicProps.length - 1; i >= 0; i--) {\n      if (this.findProperty(type, dynamicProps[i].name)) {\n        dynamicProps.splice(i, 1);\n      }\n    }\n    if (dynamicProps.length === 0) return props;\n\n    return [].concat(props).concat(dynamicProps);\n  }\n  public addDynamicPropertiesIntoObj(dest: any, src: any, props: Array<JsonObjectProperty>): void {\n    props.forEach(prop => {\n      this.addDynamicPropertyIntoObj(dest, src, prop.name, false);\n      if (prop.serializationProperty) {\n        this.addDynamicPropertyIntoObj(dest, src, prop.serializationProperty, true);\n      }\n      if (prop.alternativeName) {\n        this.addDynamicPropertyIntoObj(dest, src, prop.alternativeName, false);\n      }\n    });\n  }\n  private addDynamicPropertyIntoObj(dest: any, src: any, propName: string, isReadOnly: boolean): void {\n    var desc = {\n      configurable: true,\n      get: function () {\n        return src[propName];\n      },\n    };\n    if (!isReadOnly) {\n      (<any>desc)[\"set\"] = function (v: any) {\n        src[propName] = v;\n      };\n    }\n    Object.defineProperty(dest, propName, desc);\n  }\n  public getDynamicPropertiesByObj(obj: any, dynamicType: string = null): Array<JsonObjectProperty> {\n    if (!obj || !obj.getType) return [];\n    if (!!obj.getDynamicProperties) return obj.getDynamicProperties();\n    if (!obj.getDynamicType && !dynamicType) return [];\n    const dType = !!dynamicType ? dynamicType : obj.getDynamicType();\n    return this.getDynamicPropertiesByTypes(obj.getType(), dType);\n  }\n  public getDynamicPropertiesByTypes(objType: string, dynamicType: string, nonSerialableProps?: Array<string>): Array<JsonObjectProperty> {\n    if (!dynamicType) return [];\n    const cacheType = dynamicType + \"-\" + objType;\n    if (this.dynamicPropsCache[cacheType]) return this.dynamicPropsCache[cacheType];\n    var dynamicProps = this.getProperties(dynamicType);\n    if (!dynamicProps || dynamicProps.length == 0) return [];\n    const hash: any = {};\n    const props = this.getProperties(objType);\n    for (var i = 0; i < props.length; i++) {\n      hash[props[i].name] = props[i];\n    }\n    const res = [];\n    if (!nonSerialableProps) nonSerialableProps = [];\n    for (let i = 0; i < dynamicProps.length; i++) {\n      const dProp = dynamicProps[i];\n      if (this.canAddDybamicProp(dProp, hash[dProp.name])) {\n        if (nonSerialableProps.indexOf(dProp.name) > -1) {\n          dProp.visible = false;\n          dProp.isSerializable = false;\n        }\n        res.push(dProp);\n      }\n    }\n    this.dynamicPropsCache[cacheType] = res;\n    return res;\n  }\n  private canAddDybamicProp(dProp: JsonObjectProperty, orgProp: JsonObjectProperty): boolean {\n    if (!orgProp) return true;\n    if (dProp === orgProp) return false;\n    let classInfo = dProp.classInfo;\n    while(classInfo && classInfo.parentName) {\n      dProp = this.findProperty(classInfo.parentName, dProp.name);\n      if (dProp && dProp === orgProp) return true;\n      classInfo = !!dProp ? dProp.classInfo : undefined;\n    }\n    return false;\n  }\n  public hasOriginalProperty(obj: Base, propName: string): boolean {\n    return !!this.getOriginalProperty(obj, propName);\n  }\n  public getOriginalProperty(obj: Base, propName: string): JsonObjectProperty {\n    var res = this.findProperty(obj.getType(), propName);\n    if (!!res) return res;\n    if (this.isObjWrapper(obj))\n      return this.findProperty((<any>obj).getOriginalObj().getType(), propName);\n    return null;\n  }\n  public getProperty(\n    className: string,\n    propertyName: string\n  ): JsonObjectProperty {\n    const prop = this.findProperty(className, propertyName);\n    if (!prop) return prop;\n    const classInfo = this.findClass(className);\n    if (prop.classInfo === classInfo) return prop;\n    const newProp = new JsonObjectProperty(classInfo, prop.name, prop.isRequired);\n    newProp.mergeWith(prop);\n    newProp.isArray = prop.isArray;\n    classInfo.properties.push(newProp);\n    classInfo.resetAllProperties();\n    return newProp;\n  }\n  public findProperty(\n    className: string,\n    propertyName: string\n  ): JsonObjectProperty {\n    const cl = this.findClass(className);\n    return !!cl ? cl.findProperty(propertyName) : null;\n  }\n  public findProperties(\n    className: string,\n    propertyNames: Array<string>\n  ): Array<JsonObjectProperty> {\n    var result = new Array<JsonObjectProperty>();\n    const cl = this.findClass(className);\n    if (!cl) return result;\n    for (var i = 0; i < propertyNames.length; i++) {\n      var prop = cl.findProperty(propertyNames[i]);\n      if (prop) {\n        result.push(prop);\n      }\n    }\n    return result;\n  }\n  public getAllPropertiesByName(\n    propertyName: string\n  ): Array<JsonObjectProperty> {\n    var res = new Array<JsonObjectProperty>();\n    var classes = this.getAllClasses();\n    for (var i = 0; i < classes.length; i++) {\n      var classInfo = this.findClass(classes[i]);\n      for (var j = 0; j < classInfo.properties.length; j++) {\n        if (classInfo.properties[j].name == propertyName) {\n          res.push(classInfo.properties[j]);\n          break;\n        }\n      }\n    }\n    return res;\n  }\n  public getAllClasses(): Array<string> {\n    var res = new Array<string>();\n    for (var name in this.classes) {\n      res.push(name);\n    }\n    return res;\n  }\n  public createClass(name: string, json: any = undefined): any {\n    name = name.toLowerCase();\n    var metaDataClass = this.findClass(name);\n    if (!metaDataClass) return null;\n    if (metaDataClass.creator) return metaDataClass.creator(json);\n    var parentName = metaDataClass.parentName;\n    while(parentName) {\n      metaDataClass = this.findClass(parentName);\n      if (!metaDataClass) return null;\n      parentName = metaDataClass.parentName;\n      if (metaDataClass.creator)\n        return this.createCustomType(name, metaDataClass.creator, json);\n    }\n    return null;\n  }\n  private createCustomType(\n    name: string,\n    creator: any,\n    json: any = undefined\n  ): any {\n    name = name.toLowerCase();\n    var res = creator(json);\n    var customTypeName = name;\n    var customTemplateName = res.getTemplate\n      ? res.getTemplate()\n      : res.getType();\n    res.getType = function () {\n      return customTypeName;\n    };\n    res.getTemplate = function () {\n      return customTemplateName;\n    };\n    CustomPropertiesCollection.createProperties(res);\n    return res;\n  }\n  public getChildrenClasses(\n    name: string,\n    canBeCreated: boolean = false\n  ): Array<JsonMetadataClass> {\n    name = name.toLowerCase();\n    var result: Array<JsonMetadataClass> = [];\n    this.fillChildrenClasses(name, canBeCreated, result);\n    return result;\n  }\n  public getRequiredProperties(name: string): Array<string> {\n    const metaClass = this.findClass(name);\n    if (!metaClass) return [];\n    const props = metaClass.getRequiredProperties();\n    var res = [];\n    for (var i = 0; i < props.length; i++) {\n      res.push(props[i].name);\n    }\n    return res;\n  }\n  public addProperties(className: string, propertiesInfos: Array<IJsonPropertyInfo | string>): void {\n    className = className.toLowerCase();\n    var metaDataClass = this.findClass(className);\n    for (var i = 0; i < propertiesInfos.length; i++) {\n      this.addCustomPropertyCore(metaDataClass, propertiesInfos[i]);\n    }\n  }\n  public addProperty(className: string, propertyInfo: IJsonPropertyInfo | string): JsonObjectProperty {\n    return this.addCustomPropertyCore(this.findClass(className), propertyInfo);\n  }\n  private addCustomPropertyCore(\n    metaDataClass: JsonMetadataClass,\n    propertyInfo: any\n  ): JsonObjectProperty {\n    if (!metaDataClass) return null;\n    var property = metaDataClass.createProperty(propertyInfo, true);\n    if (property) {\n      this.clearDynamicPropsCache(metaDataClass);\n      metaDataClass.resetAllProperties();\n    }\n    return property;\n  }\n  public removeProperty(className: string, propertyName: string) {\n    var metaDataClass = this.findClass(className);\n    if (!metaDataClass) return false;\n    var property = metaDataClass.find(propertyName);\n    if (property) {\n      this.clearDynamicPropsCache(metaDataClass);\n      this.removePropertyFromClass(metaDataClass, property);\n      metaDataClass.resetAllProperties();\n      CustomPropertiesCollection.removeProperty(\n        metaDataClass.name,\n        propertyName\n      );\n    }\n  }\n  private clearDynamicPropsCache(metaDataClass: JsonMetadataClass): void {\n    this.dynamicPropsCache = {};\n  }\n  private removePropertyFromClass(\n    metaDataClass: JsonMetadataClass,\n    property: JsonObjectProperty\n  ) {\n    var index = metaDataClass.properties.indexOf(property);\n    if (index < 0) return;\n    metaDataClass.properties.splice(index, 1);\n  }\n  private fillChildrenClasses(\n    name: string,\n    canBeCreated: boolean,\n    result: Array<JsonMetadataClass>\n  ) {\n    var children = this.childrenClasses[name];\n    if (!children) return;\n    for (var i = 0; i < children.length; i++) {\n      if (!canBeCreated || children[i].creator) {\n        result.push(children[i]);\n      }\n      this.fillChildrenClasses(children[i].name, canBeCreated, result);\n    }\n  }\n  public findClass(name: string): JsonMetadataClass {\n    name = name.toLowerCase();\n    var res = this.classes[name];\n    if (!res) {\n      var newName = this.alternativeNames[name];\n      if (!!newName && newName != name) return this.findClass(newName);\n    }\n    return res;\n  }\n  public isDescendantOf(className: string, ancestorClassName: string) {\n    if (!className || !ancestorClassName) {\n      return false;\n    }\n    className = className.toLowerCase();\n    ancestorClassName = ancestorClassName.toLowerCase();\n    var class_ = this.findClass(className);\n    if (!class_) {\n      return false;\n    }\n    var parentClass = class_;\n    do {\n      if (parentClass.name === ancestorClassName) {\n        return true;\n      }\n      parentClass = this.classes[parentClass.parentName];\n    } while(!!parentClass);\n    return false;\n  }\n  public addAlterNativeClassName(name: string, alternativeName: string) {\n    this.alternativeNames[alternativeName.toLowerCase()] = name.toLowerCase();\n  }\n  public generateSchema(className: string = undefined): any {\n    if (!className) className = \"survey\";\n    var classInfo = this.findClass(className);\n    if (!classInfo) return null;\n    var res = {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      title: \"SurveyJS Library json schema\",\n      type: \"object\",\n      properties: {},\n      definitions: { locstring: this.generateLocStrClass() },\n    };\n    this.generateSchemaProperties(classInfo, res, res.definitions, true);\n    return res;\n  }\n  private generateLocStrClass(): any {\n    const props: any = {};\n    const locProp = Serializer.findProperty(\"survey\", \"locale\");\n    if (!!locProp) {\n      const choices = locProp.getChoices(null);\n      if (Array.isArray(choices)) {\n        if (choices.indexOf(\"en\") < 0) {\n          choices.splice(0, 0, \"en\");\n        }\n        choices.splice(0, 0, \"default\");\n        choices.forEach(l => { if (!!l) { props[l] = { type: \"string\" }; } });\n      }\n    }\n    return {\n      $id: \"locstring\",\n      type: \"object\",\n      properties: props\n    };\n  }\n  private generateSchemaProperties(classInfo: JsonMetadataClass, classSchema: any, schemaDef: any, isRoot: boolean): void {\n    if (!classInfo) return;\n    const schemaProperties = classSchema.properties;\n    const requiredProps = [];\n    if (classInfo.name === \"question\") {\n      schemaProperties.type = { type: \"string\" };\n      requiredProps.push(\"type\");\n    }\n    for (let i = 0; i < classInfo.properties.length; i++) {\n      const prop = classInfo.properties[i];\n      if (prop.isSerializable === false) continue;\n      if (!!classInfo.parentName && !!Serializer.findProperty(classInfo.parentName, prop.name)) continue;\n      schemaProperties[prop.name] = this.generateSchemaProperty(prop, schemaDef, isRoot);\n      if (prop.isRequired) requiredProps.push(prop.name);\n    }\n    if (requiredProps.length > 0) {\n      classSchema.required = requiredProps;\n    }\n  }\n  private generateSchemaProperty(prop: JsonObjectProperty, schemaDef: any, isRoot: boolean): any {\n    if (prop.isLocalizable) {\n      return {\n        oneOf: [\n          { \"type\": \"string\" },\n          { \"$ref\": this.getChemeRefName(\"locstring\", isRoot) }\n        ]\n      };\n    }\n    const propType = prop.schemaType();\n    const refType = prop.schemaRef();\n    var res: any = {};\n    if (!!propType) {\n      res.type = propType;\n    }\n    if (prop.hasChoices) {\n      const enumRes = prop.getChoices(null);\n      if (Array.isArray(enumRes) && enumRes.length > 0) {\n        res.enum = this.getChoicesValues(enumRes);\n      }\n    }\n    if (!!refType) {\n      if (propType === \"array\") {\n        if (prop.className === \"string\") {\n          res.items = { type: prop.className };\n        } else {\n          res.items = { $ref: this.getChemeRefName(prop.className, isRoot) };\n        }\n      } else {\n        res[\"$ref\"] = this.getChemeRefName(refType, isRoot);\n      }\n      this.generateChemaClass(prop.className, schemaDef, false);\n    }\n    if (!!prop.baseClassName) {\n      var usedClasses = this.getChildrenClasses(prop.baseClassName, true);\n      if (prop.baseClassName == \"question\") {\n        usedClasses.push(this.findClass(\"panel\"));\n      }\n      res.items = { anyOf: [] };\n      for (var i = 0; i < usedClasses.length; i++) {\n        var className = usedClasses[i].name;\n        res.items.anyOf.push({ $ref: this.getChemeRefName(className, isRoot) });\n        this.generateChemaClass(className, schemaDef, false);\n      }\n    }\n    return res;\n  }\n  private getChemeRefName(className: string, isRoot: boolean): string {\n    //Fix for #6486, according to https://niem.github.io/json/reference/json-schema/references/#:~:text=In%20a%20JSON%20schema%2C%20a,%2C%20an%20in%2Dschema%20reference\n    //Checked by https://www.jsonschemavalidator.net/\n    return isRoot ? \"#/definitions/\" + className : className;\n  }\n  private generateChemaClass(className: string, schemaDef: any, isRoot: boolean) {\n    if (!!schemaDef[className]) return;\n    var classInfo = this.findClass(className);\n    if (!classInfo) return;\n    var hasParent = !!classInfo.parentName && classInfo.parentName != \"base\";\n    if (hasParent) {\n      this.generateChemaClass(classInfo.parentName, schemaDef, isRoot);\n    }\n    const res: any = { type: \"object\", $id: className };\n    schemaDef[className] = res;\n    const chemaProps: any = { properties: {} };\n    this.generateSchemaProperties(classInfo, chemaProps, schemaDef, isRoot);\n    if (hasParent) {\n      res.allOf = [\n        { $ref: this.getChemeRefName(classInfo.parentName, isRoot) },\n        { properties: chemaProps.properties },\n      ];\n    } else {\n      res.properties = chemaProps.properties;\n    }\n    if (Array.isArray(chemaProps.required)) {\n      res.required = chemaProps.required;\n    }\n  }\n  private getChoicesValues(enumRes: Array<any>): Array<any> {\n    const res = new Array<any>();\n    enumRes.forEach(item => {\n      if (typeof item === \"object\" && item.value !== undefined) {\n        res.push(item.value);\n      } else {\n        res.push(item);\n      }\n    });\n    return res;\n  }\n}\nexport class JsonError {\n  public description: string = \"\";\n  public at: number = -1;\n  public end: number = -1;\n  public jsonObj: any;\n  public element: Base;\n  constructor(public type: string, public message: string) { }\n  public getFullDescription(): string {\n    return this.message + (this.description ? \"\\n\" + this.description : \"\");\n  }\n}\nexport class JsonUnknownPropertyError extends JsonError {\n  constructor(public propertyName: string, public className: string) {\n    super(\"unknownproperty\", \"Unknown property in class '\" + className + \"': '\" + propertyName + \"'.\");\n  }\n}\nexport class JsonMissingTypeErrorBase extends JsonError {\n  constructor(\n    public baseClassName: string,\n    public type: string,\n    public message: string\n  ) {\n    super(type, message);\n  }\n}\nexport class JsonMissingTypeError extends JsonMissingTypeErrorBase {\n  constructor(public propertyName: string, public baseClassName: string) {\n    super(\n      baseClassName,\n      \"missingtypeproperty\",\n      \"The property type is missing in the object. Please take a look at property: '\" +\n      propertyName +\n      \"'.\"\n    );\n  }\n}\nexport class JsonIncorrectTypeError extends JsonMissingTypeErrorBase {\n  constructor(public propertyName: string, public baseClassName: string) {\n    super(\n      baseClassName,\n      \"incorrecttypeproperty\",\n      \"The property type is incorrect in the object. Please take a look at property: '\" +\n      propertyName +\n      \"'.\"\n    );\n  }\n}\nexport class JsonRequiredPropertyError extends JsonError {\n  constructor(public propertyName: string, public className: string) {\n    super(\n      \"requiredproperty\",\n      \"The property '\" +\n      propertyName +\n      \"' is required in class '\" +\n      className +\n      \"'.\"\n    );\n  }\n}\nexport class JsonRequiredArrayPropertyError extends JsonError {\n  constructor(public propertyName: string, public className: string) {\n    super(\"arrayproperty\", \"The property '\" + propertyName + \"' should be an array in '\" + className + \"'.\");\n  }\n}\n\nexport class JsonIncorrectPropertyValueError extends JsonError {\n  constructor(public property: JsonObjectProperty, public value: any) {\n    super(\"incorrectvalue\", \"The property value: '\" + value + \"' is incorrect for property '\" + property.name + \"'.\");\n  }\n}\n\nexport class JsonObject {\n  private static typePropertyName = \"type\";\n  private static positionPropertyName = \"pos\";\n  private static metaDataValue = new JsonMetadata();\n  public static get metaData() {\n    return JsonObject.metaDataValue;\n  }\n  public errors = new Array<JsonError>();\n  public lightSerializing: boolean = false;\n  public options: ILoadFromJSONOptions;\n  public toJsonObject(obj: any, options?: ISaveToJSONOptions | boolean): any {\n    return this.toJsonObjectCore(obj, null, options);\n  }\n  public toObject(jsonObj: any, obj: any, options?: ILoadFromJSONOptions): void {\n    this.toObjectCore(jsonObj, obj, options);\n    var error = this.getRequiredError(obj, jsonObj);\n    if (!!error) {\n      this.addNewError(error, jsonObj, obj);\n    }\n  }\n  public toObjectCore(jsonObj: any, obj: any, options?: ILoadFromJSONOptions): void {\n    if (!jsonObj) return;\n    var properties = null;\n    var objType = undefined;\n    var needAddErrors = true;\n    if (obj.getType) {\n      objType = obj.getType();\n      properties = Serializer.getProperties(objType);\n      needAddErrors =\n        !!objType && !Serializer.isDescendantOf(objType, \"itemvalue\");\n    }\n    if (!properties) return;\n    if (obj.startLoadingFromJson) {\n      obj.startLoadingFromJson(jsonObj);\n    }\n    properties = this.addDynamicProperties(obj, jsonObj, properties);\n    this.options = options;\n    const processedProps: any = {};\n    processedProps[JsonObject.typePropertyName] = true;\n    const parentProps = {};\n    for (var key in jsonObj) {\n      this.setPropertyValueToObj(jsonObj, obj, key, properties, processedProps, parentProps, objType, needAddErrors, options);\n    }\n    this.options = undefined;\n    if (obj.endLoadingFromJson) {\n      obj.endLoadingFromJson();\n    }\n  }\n  private setPropertyValueToObj(jsonObj: any, obj: any, key: string, properties: Array<JsonObjectProperty>, processedProps: any, parentProps: any,\n    objType: string, needAddErrors: boolean, options: ILoadFromJSONOptions): void {\n    if (processedProps[key]) return;\n    if (key === JsonObject.positionPropertyName) {\n      obj[key] = jsonObj[key];\n      return;\n    }\n    const property = this.findProperty(properties, key);\n    if (!property && needAddErrors) {\n      this.addNewError(new JsonUnknownPropertyError(key.toString(), objType), jsonObj, obj);\n    }\n    if (property) {\n      const dProps = property.dependsOn;\n      if (Array.isArray(dProps)) {\n        parentProps[key] = true;\n        dProps.forEach(propKey => {\n          if (!parentProps[propKey]) {\n            this.setPropertyValueToObj(jsonObj, obj, propKey, properties, processedProps, parentProps, objType, false, options);\n          }\n        });\n      }\n      this.valueToObj(jsonObj[key], obj, property, jsonObj, options);\n      processedProps[key] = true;\n    }\n  }\n  public toJsonObjectCore(\n    obj: any,\n    property: JsonObjectProperty,\n    options?: ISaveToJSONOptions | boolean\n  ): any {\n    if (!obj || !obj.getType) return obj;\n    if (!obj.isSurvey && typeof obj.getData === \"function\") return obj.getData();\n    var result = {};\n    if (property != null && !property.className) {\n      (<any>result)[JsonObject.typePropertyName] = property.getObjType(\n        obj.getType()\n      );\n    }\n    const storeDefaults = options === true;\n    if (!options || options === true) {\n      options = {};\n    }\n    if (storeDefaults) {\n      options.storeDefaults = storeDefaults;\n    }\n    this.propertiesToJson(\n      obj,\n      Serializer.getProperties(obj.getType()),\n      result,\n      options\n    );\n    this.propertiesToJson(\n      obj,\n      this.getDynamicProperties(obj),\n      result,\n      options\n    );\n    return result;\n  }\n  private getDynamicProperties(obj: any): Array<JsonObjectProperty> {\n    return Serializer.getDynamicPropertiesByObj(obj);\n  }\n  private addDynamicProperties(\n    obj: any,\n    jsonObj: any,\n    props: Array<JsonObjectProperty>\n  ): Array<JsonObjectProperty> {\n    if (!obj.getDynamicPropertyName && !obj.getDynamicProperties) return props;\n    if (obj.getDynamicPropertyName) {\n      const dynamicPropName = obj.getDynamicPropertyName();\n      if (!dynamicPropName) return props;\n      if (dynamicPropName && jsonObj[dynamicPropName]) {\n        obj[dynamicPropName] = jsonObj[dynamicPropName];\n      }\n    }\n    const dynamicProps = this.getDynamicProperties(obj);\n    return dynamicProps.length === 0 ? props : [].concat(props).concat(dynamicProps);\n  }\n  private propertiesToJson(\n    obj: any,\n    properties: Array<JsonObjectProperty>,\n    json: any,\n    options: ISaveToJSONOptions\n  ) {\n    for (var i: number = 0; i < properties.length; i++) {\n      this.valueToJson(obj, json, properties[i], options);\n    }\n  }\n  public valueToJson(obj: any, result: any, prop: JsonObjectProperty, options?: ISaveToJSONOptions): void {\n    if (!options) options = {};\n    if (!prop.isPropertySerializable(obj) || (prop.isLightSerializable === false && this.lightSerializing)) return;\n    if (options.version && !prop.isAvailableInVersion(options.version)) return;\n    this.valueToJsonCore(obj, result, prop, options);\n  }\n  private valueToJsonCore(obj: any, result: any, prop: JsonObjectProperty, options?: ISaveToJSONOptions): void {\n    const serProp = prop.getSerializedProperty(obj, options.version);\n    if (serProp && serProp !== prop) {\n      this.valueToJsonCore(obj, result, serProp, options);\n      return;\n    }\n    var value = prop.getSerializableValue(obj, options.storeDefaults);\n    if (value === undefined) return;\n    if (this.isValueArray(value)) {\n      var arrValue = [];\n      for (var i = 0; i < value.length; i++) {\n        arrValue.push(this.toJsonObjectCore(value[i], prop, options));\n      }\n      value = arrValue.length > 0 ? arrValue : null;\n    } else {\n      value = this.toJsonObjectCore(value, prop, options);\n    }\n    if (value === undefined || value === null) return;\n    const name = prop.getSerializedName(options.version);\n    var hasValue =\n      typeof obj[\"getPropertyValue\"] === \"function\" &&\n      obj[\"getPropertyValue\"](name, null) !== null;\n    if ((options.storeDefaults && hasValue) || !prop.isDefaultValueByObj(obj, value)) {\n      if (!Serializer.onSerializingProperty || !Serializer.onSerializingProperty(obj, prop, value, result)) {\n        result[name] = this.removePosOnValueToJson(prop, value);\n      }\n    }\n  }\n  public valueToObj(value: any, obj: any, property: JsonObjectProperty, jsonObj?: any, options?: ILoadFromJSONOptions): void {\n    if (value === null || value === undefined) return;\n    this.removePos(property, value);\n    if (property != null && property.hasToUseSetValue) {\n      property.setValue(obj, value, this);\n      return;\n    }\n    if (property.isArray && !Array.isArray(value) && !!value) {\n      value = [value];\n      const propName = !!jsonObj && property.alternativeName && !!jsonObj[property.alternativeName] ? property.alternativeName : property.name;\n      this.addNewError(new JsonRequiredArrayPropertyError(propName, obj.getType()), !!jsonObj ? jsonObj : value, obj);\n    }\n    if (this.isValueArray(value)) {\n      this.valueToArray(value, obj, property.name, property, options);\n      return;\n    }\n    var newObj = this.createNewObj(value, property);\n    if (newObj.newObj) {\n      this.toObjectCore(value, newObj.newObj, options);\n      value = newObj.newObj;\n    }\n    if (!newObj.error) {\n      if (property != null) {\n        property.setValue(obj, value, this);\n        if (!!options && options.validatePropertyValues) {\n          if (!property.validateValue(value)) {\n            this.addNewError(new JsonIncorrectPropertyValueError(property, value), jsonObj, obj);\n          }\n        }\n      } else {\n        obj[property.name] = value;\n      }\n    }\n  }\n  private removePosOnValueToJson(property: JsonObjectProperty, value: any): any {\n    if (!property.isCustom || !value) return value;\n    this.removePosFromObj(value);\n    return value;\n  }\n  private removePos(property: JsonObjectProperty, value: any): void {\n    if (!property || !property.type || property.type.indexOf(\"value\") < 0)\n      return;\n    this.removePosFromObj(value);\n  }\n  private removePosFromObj(obj: any) {\n    if (!obj || typeof obj.getType === \"function\") return;\n    if (Array.isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        this.removePosFromObj(obj[i]);\n      }\n    }\n    if (typeof obj !== \"object\") return;\n    if (!!obj[JsonObject.positionPropertyName]) {\n      delete obj[JsonObject.positionPropertyName];\n    }\n    for (let key in obj) {\n      this.removePosFromObj(obj[key]);\n    }\n  }\n  private isValueArray(value: any): boolean {\n    return value && Array.isArray(value);\n  }\n  private createNewObj(value: any, property: JsonObjectProperty): any {\n    var result: any = { newObj: null, error: null };\n    const className = this.getClassNameForNewObj(value, property);\n    result.newObj = className\n      ? Serializer.createClass(className, value)\n      : null;\n    result.error = this.checkNewObjectOnErrors(\n      result.newObj,\n      value,\n      property,\n      className\n    );\n    return result;\n  }\n  private getClassNameForNewObj(value: any, property: JsonObjectProperty): string {\n    var res = property != null && property.className ? property.className : undefined;\n    if (!res) {\n      res = value[JsonObject.typePropertyName];\n    }\n    if (!res) return res;\n    res = res.toLowerCase();\n    const classNamePart = property.classNamePart;\n    if (classNamePart && res.indexOf(classNamePart) < 0) {\n      res += classNamePart;\n    }\n    return res;\n  }\n  private checkNewObjectOnErrors(\n    newObj: any,\n    value: any,\n    property: JsonObjectProperty,\n    className: string\n  ): JsonError {\n    var error = null;\n    if (newObj) {\n      error = this.getRequiredError(newObj, value);\n    } else {\n      if (property.baseClassName) {\n        if (!className) {\n          error = new JsonMissingTypeError(\n            property.name,\n            property.baseClassName\n          );\n        } else {\n          error = new JsonIncorrectTypeError(\n            property.name,\n            property.baseClassName\n          );\n        }\n      }\n    }\n    if (error) {\n      this.addNewError(error, value, newObj);\n    }\n    return error;\n  }\n  private getRequiredError(obj: any, jsonValue: any): JsonError {\n    if (!obj.getType || typeof obj.getData === \"function\") return null;\n    const metaClass = Serializer.findClass(obj.getType());\n    if (!metaClass) return null;\n    const props = metaClass.getRequiredProperties();\n    if (!Array.isArray(props)) return null;\n    for (var i = 0; i < props.length; i++) {\n      const prop = props[i];\n      if (!Helpers.isValueEmpty(prop.defaultValue)) continue;\n      if (!jsonValue[prop.name]) {\n        return new JsonRequiredPropertyError(prop.name, obj.getType());\n      }\n    }\n    return null;\n  }\n  private addNewError(error: JsonError, jsonObj: any, element?: Base) {\n    error.jsonObj = jsonObj;\n    error.element = element;\n    this.errors.push(error);\n    if (!jsonObj) return;\n    const posObj = jsonObj[JsonObject.positionPropertyName];\n    if (!posObj) return;\n    error.at = posObj.start;\n    error.end = posObj.end;\n  }\n  private valueToArray(\n    value: Array<any>,\n    obj: any,\n    key: any,\n    property: JsonObjectProperty,\n    options?: ILoadFromJSONOptions\n  ) {\n    if (obj[key] && !this.isValueArray(obj[key]))\n      return;\n    if (obj[key] && value.length > 0) obj[key].splice(0, obj[key].length);\n    var valueRes = obj[key] ? obj[key] : [];\n    this.addValuesIntoArray(value, valueRes, property, options);\n    if (!obj[key]) obj[key] = valueRes;\n  }\n  private addValuesIntoArray(\n    value: Array<any>,\n    result: Array<any>,\n    property: JsonObjectProperty,\n    options?: ILoadFromJSONOptions\n  ) {\n    for (var i = 0; i < value.length; i++) {\n      var newValue = this.createNewObj(value[i], property);\n      if (newValue.newObj) {\n        if (!!value[i].name) {\n          newValue.newObj.name = value[i].name;\n        }\n        if (!!value[i].valueName) {\n          newValue.newObj.valueName = value[i].valueName.toString();\n        }\n        result.push(newValue.newObj);\n        this.toObjectCore(value[i], newValue.newObj, options);\n      } else {\n        if (!newValue.error) {\n          result.push(value[i]);\n        }\n      }\n    }\n  }\n  private findProperty(\n    properties: Array<JsonObjectProperty>,\n    key: any\n  ): JsonObjectProperty {\n    if (!properties) return null;\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      if (prop.name == key || prop.alternativeName == key) return prop;\n    }\n    return null;\n  }\n}\n\n/**\n * An alias for the metadata object. It contains object properties' runtime information and allows you to modify it.\n * @see JsonMetadata\n */\nexport var Serializer = JsonObject.metaData;\n", "import { IQuestion } from \"./base-interfaces\";\nimport { Helpers, HashTable } from \"./helpers\";\n\nexport interface IValueGetterItem {\n  name: string;\n  index?: number;\n}\nexport interface IValueGetterInfo {\n  context?: IValueGetterContext;\n  requireStrictCompare?: boolean;\n  isFound?: boolean;\n  value?: any;\n}\nexport interface IObjectValueContext {\n  getValueGetterContext(isUnwrapped?: boolean): IValueGetterContext;\n}\nexport interface IValueGetterContext {\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo;\n  getTextValue?(name: string, value: any, isDisplayValue: boolean): string;\n  getRootObj?(): IObjectValueContext;\n  getQuestion?(): IQuestion;\n}\nexport interface IValueInfoParams {\n  name: string;\n  context: IValueGetterContext;\n  isText?: boolean;\n  isDisplayValue?: boolean;\n  createObjects?: boolean;\n}\nexport interface IReturnValue {\n  isFound: boolean;\n  value: any;\n  question?: IQuestion;\n  strictCompare?: boolean;\n}\nexport class ValueGetter {\n  public constructor() {\n  }\n  public getValueInfo(params: IValueInfoParams): IReturnValue {\n    const res = this.getValueInfoCore(params);\n    if (!res.isFound && res.value === undefined && params.name.endsWith(\".length\")) {\n      res.isFound = true;\n      res.value = 0;\n    }\n    return res;\n  }\n  private getValueInfoCore(params: IValueInfoParams): IReturnValue {\n    const name = params.name;\n    const cxt = params.context;\n    let info = this.run(params.name, cxt, params.createObjects);\n    if ((!info || !info.isFound) && cxt && cxt.getRootObj) {\n      const obj = cxt.getRootObj();\n      if (!!obj) {\n        params.context = obj.getValueGetterContext();\n        return this.getValueInfo(params);\n      }\n    }\n    const res: IReturnValue = { isFound: false, value: undefined };\n    if (!info || !info.isFound) return res;\n    res.isFound = true;\n    res.value = info.value;\n    res.strictCompare = info.requireStrictCompare;\n    if (info.context) {\n      if (params.isText && info.context.getTextValue) {\n        res.value = info.context.getTextValue(name, res.value, params.isDisplayValue);\n      }\n      if (info.context.getQuestion) {\n        res.question = info.context.getQuestion();\n      }\n    }\n    return res;\n  }\n  public getValue(name: string, context: IValueGetterContext, isText?: boolean, isDisplayValue?: boolean): any {\n    const res = this.getValueInfo({ name: name, context: context, isText: isText, isDisplayValue: isDisplayValue });\n    return res.isFound ? res.value : undefined;\n  }\n  public getDisplayValue(name: string, context: IValueGetterContext, isDisplayValue: boolean = true): string {\n    return this.getValue(name, context, true, isDisplayValue);\n  }\n  public isAnyKeyChanged(keys: any, usedNames: string[]): boolean {\n    for (var i = 0; i < usedNames.length; i++) {\n      const name = usedNames[i];\n      if (!name) continue;\n      const lowerName = name.toLowerCase();\n      if (keys.hasOwnProperty(name)) return true;\n      if (name !== lowerName && keys.hasOwnProperty(lowerName)) return true;\n      const path = this.getPath(name);\n      const firstName = path.length > 0 ? path[0].name : \"\";\n      if (!keys.hasOwnProperty(firstName)) continue;\n      if (name === firstName) return true;\n      const keyValue = keys[firstName];\n      if (keyValue == undefined) continue;\n      if (\n        !keyValue.hasOwnProperty(\"oldValue\") ||\n        !keyValue.hasOwnProperty(\"newValue\")\n      )\n        return true;\n      const v: any = {};\n      v[firstName] = keyValue[\"oldValue\"];\n      var oldValue = this.getValueFromObject(v, name);\n      v[firstName] = keyValue[\"newValue\"];\n      var newValue = this.getValueFromObject(v, name);\n      if (!Helpers.isTwoValueEquals(oldValue, newValue, false, false, false)) return true;\n    }\n    return false;\n\n  }\n  private getValueFromObject(obj: any, fullName: string): any {\n    const res = this.getValueInfo({ name: fullName, context: new VariableGetterContext(obj) });\n    return res.isFound ? res.value : undefined;\n  }\n  private run(name: string, context: IValueGetterContext, createObjects: boolean): any {\n    if (!context) return undefined;\n    let path = this.getPath(name);\n    const info = context.getValue(path, true, -1, createObjects);\n    return !!info && info.isFound ? info : undefined;\n  }\n  public getPath(name: string): Array<IValueGetterItem> {\n    const path: Array<IValueGetterItem> = [];\n    const names = name.split(\".\");\n    for (let i = 0; i < names.length; i++) {\n      path.push(this.getValueItem(names[i]));\n    }\n    return path;\n  }\n  private getValueItem(name: string): IValueGetterItem {\n    name = name.trim();\n    let index: number | undefined = undefined;\n    if (name.lastIndexOf(\"]\") === name.length - 1) {\n      const ind = name.lastIndexOf(\"[\");\n      if (ind > -1) {\n        const indexStr = name.substring(ind + 1, name.length - 1);\n        index = Helpers.getNumber(indexStr);\n        if (isNaN(index) || index < 0) {\n          index = undefined;\n        }\n        if (index !== undefined) {\n          name = name.substring(0, ind);\n        }\n      }\n    }\n    const res: IValueGetterItem = { name: name };\n    if (index !== undefined) {\n      res.index = index;\n    }\n    return res;\n  }\n}\nexport class ValueGetterContextCore implements IValueGetterContext {\n  constructor() {}\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    let pIndex = 0;\n    const res: IValueGetterInfo = { isFound: false, value: this.getInitialvalue(), context: this };\n    while(pIndex < path.length) {\n      pIndex = this.checkValueByPath(path, pIndex, res);\n      if (!res.isFound) return undefined;\n      const item = path[pIndex];\n      pIndex++;\n      if (res.context !== this && !!res.context) {\n        return res.context.getValue([].concat(path.slice(pIndex)), false, item.index, createObjects);\n      }\n      if (item.index !== undefined) {\n        this.updateItemByIndex(item.index, res);\n        if (!res.isFound) return undefined;\n      }\n    }\n    return res;\n  }\n  protected isSearchNameRevert(): boolean { return false; }\n  private checkValueByPath(path: Array<IValueGetterItem>, pIndex: number, res: IValueGetterInfo): number {\n    const isRevert = this.isSearchNameRevert();\n    const initialIndex = pIndex;\n    const endIndex = this.getMaxIndexByPath(path, pIndex);\n    res.isFound = false;\n    if (isRevert) {\n      pIndex = endIndex;\n    }\n    while(!res.isFound && pIndex <= endIndex && pIndex >= initialIndex) {\n      const name = this.getNameByPath(path, initialIndex, pIndex + 1);\n      this.updateValueByItem(name, res);\n      if (res.isFound) break;\n      pIndex += isRevert ? -1 : 1;\n    }\n    return pIndex;\n  }\n  private getNameByPath(path: Array<IValueGetterItem>, start: number, end: number): string {\n    let name = \"\";\n    for (let i = start; i < end; i++) {\n      if (i > start) name += \".\";\n      name += path[i].name;\n    }\n    return name;\n  }\n  private getMaxIndexByPath(path: Array<IValueGetterItem>, start: number): number {\n    let index = start;\n    while(index < path.length) {\n      if (path[index].index !== undefined) break;\n      index++;\n    }\n    return index < path.length ? index : path.length - 1;\n  }\n  public getTextValue(name: string, value: any, isDisplayValue: boolean): string {\n    if (!isDisplayValue) return value;\n    if (value === undefined || value === null) return \"\";\n    return value.toString();\n  }\n  protected getInitialvalue(): any { return undefined; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {}\n  protected updateItemByIndex(index: number, res: IValueGetterInfo): void {}\n}\n\nexport class VariableGetterContext extends ValueGetterContextCore {\n  constructor(private variables: HashTable<any>) {\n    super();\n  }\n  protected getInitialvalue(): any { return this.variables; }\n  protected isSearchNameRevert(): boolean { return true; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const val = this.getValueByItemCore(res.value, name);\n    res.isFound = val !== undefined;\n    if (res.isFound) {\n      res.value = val;\n    }\n  }\n  protected updateItemByIndex(index: number, res: IValueGetterInfo): void {\n    const v = res.value;\n    if (Array.isArray(v) && index < v.length) {\n      res.value = v[index];\n      res.isFound = true;\n    } else {\n      res.isFound = false;\n    }\n  }\n  private getValueByItemCore(obj: any, name: string): any {\n    if (!obj || !name) return undefined;\n    const nameInLow = name.toLowerCase();\n    if (name === \"length\" && (Array.isArray(obj) || typeof obj === \"string\")) return obj.length;\n    let a = nameInLow[0];\n    let A = name[0].toLocaleUpperCase();\n    for (var key in obj) {\n      var first = key[0];\n      if (first === a || first === A) {\n        var keyName = key.toLowerCase();\n        if (keyName == nameInLow) return obj[key];\n      }\n    }\n    return undefined;\n  }\n}\nexport class VariableGetterContextEx extends VariableGetterContext {\n  constructor(variables: HashTable<any>, private second: IValueGetterContext) {\n    super(variables);\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    const res = super.getValue(path, isRoot, index, createObjects);\n    return !this.second || res?.isFound ? res : this.second.getValue(path, isRoot, index, createObjects);\n  }\n}\n\nexport class ProcessValue {\n  private contextValue: IValueGetterContext;\n  public properties: HashTable<any> = null;\n  public asyncValues: HashTable<any> = {};\n  public onCompleteAsyncFunc: (op: any) => void;\n  constructor(context: IValueGetterContext) {\n    this.contextValue = context;\n  }\n  public get context(): IValueGetterContext {\n    return this.contextValue;\n  }\n  public hasValue(text: string): boolean {\n    if (!!this.context) return this.getValueInfoByContext(text).isFound;\n    return false;\n  }\n  public getValue(text: string): any {\n    if (!!this.context) return this.getValueInfoByContext(text).value;\n    return undefined;\n  }\n  private getValueInfoByContext(text: string): any {\n    return new ValueGetter().getValueInfo(\n      { name: text, context: this.context, isText: false }\n    );\n  }\n  public getValueInfo(valueInfo: any) {\n    if (!!this.context) {\n      const cRes = this.getValueInfoByContext(valueInfo.name);\n      valueInfo.value = cRes.value;\n      valueInfo.hasValue = cRes.isFound;\n      valueInfo.strictCompare = cRes.strictCompare;\n      return;\n    }\n    return { hasValue: false };\n  }\n}\n", "export class ConsoleWarnings {\n  public static disposedObjectChangedProperty(propName: string, objType: string): void {\n    ConsoleWarnings.warn(\"An attempt to set a property \\\"\" + propName + \"\\\" of a disposed object \\\"\" + objType + \"\\\"\");\n  }\n  public static inCorrectQuestionValue(questionName: string, val: any): void {\n    const valStr = JSON.stringify(val, null, 3);\n    ConsoleWarnings.warn(\"An attempt to assign an incorrect value\" + valStr + \" to the following question: \\\"\" + questionName + \"\\\"\");\n  }\n  public static warn(text: string): void {\n    // eslint-disable-next-line no-console\n    console.warn(text);\n  }\n  public static error(text: string): void {\n    // eslint-disable-next-line no-console\n    console.error(text);\n  }\n}", "import { HashTable, Helpers, createDate } from \"./helpers\";\nimport { settings } from \"./settings\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { ConditionRunner, ExpressionExecutor } from \"./conditions\";\n\nexport class FunctionFactory {\n  public static Instance: FunctionFactory = new FunctionFactory();\n  private functionHash: HashTable<(params: any[], originalParams?: any[]) => any> = {};\n  private isAsyncHash: HashTable<boolean> = {};\n\n  public register(\n    name: string,\n    func: (params: any[], originalParams?: any[]) => any,\n    isAsync: boolean = false\n  ): void {\n    this.functionHash[name] = func;\n    if (isAsync)this.isAsyncHash[name] = true;\n  }\n  public unregister(name: string): void {\n    delete this.functionHash[name];\n    delete this.isAsyncHash[name];\n  }\n  public hasFunction(name: string): boolean {\n    return !!this.functionHash[name];\n  }\n  public isAsyncFunction(name: string): boolean {\n    return !!this.isAsyncHash[name];\n  }\n\n  public clear(): void {\n    this.functionHash = {};\n  }\n  public getAll(): Array<string> {\n    var result = [];\n    for (var key in this.functionHash) {\n      result.push(key);\n    }\n    return result.sort();\n  }\n  public run(name: string, params: any[], properties: HashTable<any> = null, originalParams: any[]): any {\n    const func = this.functionHash[name];\n    if (!func) {\n      ConsoleWarnings.warn(this.getUnknownFunctionErrorText(name, properties));\n      return null;\n    }\n    let classRunner = {\n      func: func,\n    };\n\n    if (properties) {\n      for (var key in properties) {\n        (<any>classRunner)[key] = properties[key];\n      }\n    }\n    return classRunner.func(params, originalParams);\n  }\n  private getUnknownFunctionErrorText(name: string, properties: HashTable<any>): string {\n    return \"Unknown function name: '\" + name + \"'.\" + ExpressionExecutor.getQuestionErrorText(properties);\n  }\n}\n\nexport var registerFunction = FunctionFactory.Instance.register;\n\nfunction getParamsAsArray(value: any, arr: any[]) {\n  if (value === undefined || value === null) return;\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      getParamsAsArray(value[i], arr);\n    }\n  } else {\n    if (Helpers.isNumber(value)) {\n      value = Helpers.getNumber(value);\n    }\n    arr.push(value);\n  }\n}\n\nfunction sum(params: any[]): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  var res = 0;\n  for (var i = 0; i < arr.length; i++) {\n    res = Helpers.correctAfterPlusMinis(res, arr[i], res + arr[i]);\n  }\n  return res;\n}\nFunctionFactory.Instance.register(\"sum\", sum);\n\nfunction min_max(params: any[], isMin: boolean): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  var res = undefined;\n  for (var i = 0; i < arr.length; i++) {\n    if (res === undefined) {\n      res = arr[i];\n    }\n    if (isMin) {\n      if (res > arr[i]) res = arr[i];\n    } else {\n      if (res < arr[i]) res = arr[i];\n    }\n  }\n  return res;\n}\n\nfunction min(params: any[]): any {\n  return min_max(params, true);\n}\nFunctionFactory.Instance.register(\"min\", min);\n\nfunction max(params: any[]): any {\n  return min_max(params, false);\n}\nFunctionFactory.Instance.register(\"max\", max);\n\nfunction count(params: any[]): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  return arr.length;\n}\nFunctionFactory.Instance.register(\"count\", count);\n\nfunction avg(params: any[]): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  const res = sum(params);\n  return arr.length > 0 ? res / arr.length : 0;\n}\nFunctionFactory.Instance.register(\"avg\", avg);\n\nfunction round(params: any[]): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  if (arr.length > 0) {\n    const num = arr[0];\n    const precision = arr[1] || 0;\n    if (Helpers.isNumber(num) && Helpers.isNumber(precision)) {\n      const p = Math.pow(10, precision);\n      const n = (num * p) * (1 + Number.EPSILON);\n      return Math.round(n) / p;\n    }\n  }\n  return NaN;\n}\nFunctionFactory.Instance.register(\"round\", round);\n\nfunction trunc(params: any[]): any {\n  var arr: any[] = [];\n  getParamsAsArray(params, arr);\n  if (arr.length > 0) {\n    const num = arr[0];\n    const precision = arr[1] || -1;\n    if (Helpers.isNumber(num) && Helpers.isNumber(precision)) {\n      const regexp = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + precision + \"})?\");\n      return Number(num.toString().match(regexp)[0]);\n    }\n  }\n  return NaN;\n}\nFunctionFactory.Instance.register(\"trunc\", trunc);\n\nfunction getInArrayParams(params: any[], originalParams: any[]): any {\n  if (params.length < 2 || params.length > 3) return null;\n  const arr = params[0];\n  if (!arr) return null;\n  if (!Array.isArray(arr) && !Array.isArray(Object.keys(arr))) return null;\n  const name = params[1];\n  if (typeof name !== \"string\" && !(name instanceof String)) return null;\n  let expression = params.length > 2 ? params[2] : undefined;\n  if (typeof expression !== \"string\" && !(expression instanceof String)) {\n    expression = undefined;\n  }\n  if (!expression) {\n    const operand = Array.isArray(originalParams) && originalParams.length > 2 ? originalParams[2] : undefined;\n    if (operand && !!operand.toString()) {\n      expression = operand.toString();\n    }\n  }\n  return { data: arr, name: name, expression: expression };\n}\n\nfunction convertToNumber(val: any): number {\n  if (typeof val === \"string\") return Helpers.isNumber(val) ? Helpers.getNumber(val) : undefined;\n  return val;\n}\nfunction processItemInArray(item: any, name: string, res: number,\n  func: (res: number, val: number) => number, needToConvert: boolean, condition: ConditionRunner, properties: any): number {\n  if (!item || Helpers.isValueEmpty(item[name])) return res;\n  if (condition && !condition.runValues(item, properties)) return res;\n  const val = needToConvert ? convertToNumber(item[name]) : 1;\n  return func(res, val);\n}\nfunction calcInArray(properties: any,\n  params: any[], originalParams: any[],\n  func: (res: number, val: number) => number, needToConvert: boolean = true\n): any {\n  var v = getInArrayParams(params, originalParams);\n  if (!v) return undefined;\n  let condition = !!v.expression ? new ConditionRunner(v.expression) : undefined;\n  if (condition && condition.isAsync) {\n    condition = undefined;\n  }\n  var res = undefined;\n  if (Array.isArray(v.data)) {\n    for (var i = 0; i < v.data.length; i++) {\n      res = processItemInArray(v.data[i], v.name, res, func, needToConvert, condition, properties);\n    }\n  } else {\n    for (var key in v.data) {\n      res = processItemInArray(v.data[key], v.name, res, func, needToConvert, condition, properties);\n    }\n  }\n  return res;\n}\nfunction getProperties(self: any): any {\n  return {\n    survey: self.survey,\n    question: self.question,\n    context: self.survey?.getValueGetterContext()\n  };\n}\nfunction sumInArray(params: any[], originalParams: any[]): any {\n  var res = calcInArray(getProperties(this), params, originalParams, function(res: number, val: number): number {\n    if (res == undefined) res = 0;\n    if (val == undefined || val == null) return res;\n    return Helpers.correctAfterPlusMinis(res, val, res + val);\n  });\n  return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"sumInArray\", sumInArray);\n\nfunction minInArray(params: any[], originalParams: any[]): any {\n  return calcInArray(getProperties(this), params, originalParams, function(res: number, val: number): number {\n    if (res == undefined) return val;\n    if (val == undefined || val == null) return res;\n    return res < val ? res : val;\n  });\n}\nFunctionFactory.Instance.register(\"minInArray\", minInArray);\n\nfunction maxInArray(params: any[], originalParams: any[]): any {\n  return calcInArray(getProperties(this), params, originalParams, function(res: number, val: number): number {\n    if (res == undefined) return val;\n    if (val == undefined || val == null) return res;\n    return res > val ? res : val;\n  });\n}\nFunctionFactory.Instance.register(\"maxInArray\", maxInArray);\n\nfunction countInArray(params: any[], originalParams: any[]): any {\n  var res = calcInArray(getProperties(this), params, originalParams, function(res: number, val: number): number {\n    if (res == undefined) res = 0;\n    if (val == undefined || val == null) return res;\n    return res + 1;\n  }, false);\n  return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"countInArray\", countInArray);\n\nfunction avgInArray(params: any[], originalParams: any[]): any {\n  const properties = getProperties(this);\n  const funcCall = (name: string): any => FunctionFactory.Instance.run(name, params, properties, originalParams);\n  const count = funcCall(\"countInArray\");\n  if (count == 0) return 0;\n  return funcCall(\"sumInArray\") / count;\n}\nFunctionFactory.Instance.register(\"avgInArray\", avgInArray);\n\nfunction iif(params: any[]): any {\n  if (!Array.isArray(params) || params.length < 2) return null;\n  const va2 = params.length > 2 ? params[2] : undefined;\n  return params[0] ? params[1] : va2;\n}\nFunctionFactory.Instance.register(\"iif\", iif);\n\nfunction getDate(params: any[]): any {\n  if (!Array.isArray(params) || params.length < 1 || !params[0]) return null;\n  return createDate(\"function-getDate\", params[0]);\n}\nFunctionFactory.Instance.register(\"getDate\", getDate);\n\nfunction dateDiffMonths(date1Param: any, date2Param: any, type: string): number {\n  if (type === \"days\") return diffDays([date1Param, date2Param]);\n  const date1 = createDate(\"function-dateDiffMonths\", date1Param);\n  const date2 = createDate(\"function-dateDiffMonths\", date2Param);\n  const age = date2.getFullYear() - date1.getFullYear();\n  type = type || \"years\";\n  let ageInMonths = age * 12 + date2.getMonth() - date1.getMonth();\n  if (date2.getDate() < date1.getDate()) {\n    ageInMonths -= 1;\n  }\n  return type === \"months\" ? ageInMonths : ~~(ageInMonths / 12);\n}\nfunction age(params: any[]): number {\n  if (!Array.isArray(params) || params.length < 1 || !params[0]) return null;\n  return dateDiffMonths(params[0], undefined, (params.length > 1 ? params[1] : \"\") || \"years\");\n}\nFunctionFactory.Instance.register(\"age\", age);\n\nfunction dateDiff(params: any[]): any {\n  if (!Array.isArray(params) || params.length < 2 || !params[0] || !params[1]) return null;\n  const type = (params.length > 2 ? params[2] : \"\") || \"days\";\n  const isHours = type === \"hours\" || type === \"minutes\" || type === \"seconds\";\n  const dType = isHours ? \"days\" : type;\n  let days = dateDiffMonths(params[0], params[1], dType);\n  if (isHours) {\n    const date1 = createDate(\"function-dateDiffMonths\", params[0]);\n    const date2 = createDate(\"function-dateDiffMonths\", params[1]);\n    if (date2.getHours() > date1.getHours() || (type !== \"hours\" && date2.getHours() === date1.getHours() && date2.getMinutes() > date1.getMinutes())) {\n      days -= 1;\n    }\n    let hours = days * 24 + date2.getHours() - date1.getHours();\n    if (type === \"hours\") return hours;\n    if (date2.getMinutes() < date1.getMinutes()) {\n      hours -= 1;\n    }\n    const minutes = hours * 60 + date2.getMinutes() - date1.getMinutes();\n    if (type === \"minutes\") return minutes;\n    return minutes * 60 + date2.getSeconds() - date1.getSeconds();\n  }\n  return days;\n}\nFunctionFactory.Instance.register(\"dateDiff\", dateDiff);\n\nfunction dateAdd(params: any[]): any {\n  if (!Array.isArray(params) || params.length < 2 || !params[0] || !params[1]) return null;\n  const date = createDate(\"function-dateAdd\", params[0]);\n  const valToAdd = params[1];\n  const interval = params[2] || \"days\";\n  if (interval === \"days\") {\n    date.setDate(date.getDate() + valToAdd);\n  }\n  if (interval === \"months\") {\n    date.setMonth(date.getMonth() + valToAdd);\n  }\n  if (interval === \"years\") {\n    date.setFullYear(date.getFullYear() + valToAdd);\n  }\n  return date;\n}\n\nFunctionFactory.Instance.register(\"dateAdd\", dateAdd);\n\nfunction isContainerReadyCore(container: any): boolean {\n  if (!container) return false;\n  var questions = container.questions;\n  for (var i = 0; i < questions.length; i++) {\n    if (!questions[i].validate(false)) return false;\n  }\n  return true;\n}\nfunction isContainerReady(params: any[]): any {\n  if (!params && params.length < 1) return false;\n  if (!params[0] || !this.survey) return false;\n  const name = params[0];\n  let container = this.survey.getPageByName(name);\n  if (!container) container = this.survey.getPanelByName(name);\n  if (!container) {\n    const question = this.survey.getQuestionByName(name);\n    if (!question || !Array.isArray(question.panels)) return false;\n    if (params.length > 1) {\n      if (params[1] < question.panels.length) {\n        container = question.panels[params[1]];\n      }\n    } else {\n      for (let i = 0; i < question.panels.length; i ++) {\n        if (!isContainerReadyCore(question.panels[i])) return false;\n      }\n      return true;\n    }\n  }\n  return isContainerReadyCore(container);\n}\nFunctionFactory.Instance.register(\"isContainerReady\", isContainerReady);\n\nfunction isDisplayMode() {\n  return this.survey && this.survey.isDisplayMode;\n}\nFunctionFactory.Instance.register(\"isDisplayMode\", isDisplayMode);\n\nfunction currentDate() {\n  return createDate(\"function-currentDate\");\n}\nFunctionFactory.Instance.register(\"currentDate\", currentDate);\n\nfunction today(params: any[]) {\n  var res = createDate(\"function-today\");\n  if (settings.localization.useLocalTimeZone) {\n    res.setHours(0, 0, 0, 0);\n  } else {\n    res.setUTCHours(0, 0, 0, 0);\n  }\n  if (Array.isArray(params) && params.length == 1) {\n    res.setDate(res.getDate() + params[0]);\n  }\n  return res;\n}\nFunctionFactory.Instance.register(\"today\", today);\n\nfunction getYear(params: any[]) {\n  if (params.length !== 1 || !params[0]) return undefined;\n  return createDate(\"function-getYear\", params[0]).getFullYear();\n}\nFunctionFactory.Instance.register(\"getYear\", getYear);\n\nfunction currentYear() {\n  return createDate(\"function-currentYear\").getFullYear();\n}\nFunctionFactory.Instance.register(\"currentYear\", currentYear);\n\nfunction diffDays(params: any[]) {\n  if (!Array.isArray(params) || params.length !== 2) return 0;\n  if (!params[0] || !params[1]) return 0;\n  const date1: any = createDate(\"function-diffDays\", params[0]);\n  const date2: any = createDate(\"function-diffDays\", params[1]);\n  const diffTime = Math.abs(date2 - date1);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n}\nFunctionFactory.Instance.register(\"diffDays\", diffDays);\n\nfunction dateFromFirstParameterOrToday(name: string, params: any[]) {\n  let date = today(undefined);\n  if (params && params[0]) {\n    date = createDate(\"function-\" + name, params[0]);\n  }\n  return date;\n}\n\nfunction year(params: any[]): any {\n  let date = dateFromFirstParameterOrToday(\"year\", params);\n  return date.getFullYear();\n}\nFunctionFactory.Instance.register(\"year\", year);\n\nfunction month(params: any[]): any {\n  let date = dateFromFirstParameterOrToday(\"month\", params);\n  return date.getMonth() + 1;\n}\nFunctionFactory.Instance.register(\"month\", month);\n\nfunction day(params: any[]): any {\n  let date = dateFromFirstParameterOrToday(\"day\", params);\n  return date.getDate();\n}\nFunctionFactory.Instance.register(\"day\", day);\n\nfunction weekday(params: any[]): any {\n  let date = dateFromFirstParameterOrToday(\"weekday\", params);\n  return date.getDay();\n}\nFunctionFactory.Instance.register(\"weekday\", weekday);\n\nfunction getQuestionValueByContext(context: any, name: string): any {\n  if (!context || !name) return undefined;\n  let q = context.question;\n  while(q && q.parent) {\n    const res = q.parent.getQuestionByName(name);\n    if (!!res) return res;\n    q = q.parentQuestion;\n  }\n  const keys = [\"row\", \"panel\", \"survey\"];\n  for (let i = 0; i < keys.length; i ++) {\n    const ctx = context[keys[i]];\n    if (ctx && ctx.getQuestionByName) {\n      const res = ctx.getQuestionByName(name);\n      if (res) return res;\n    }\n  }\n  return null;\n}\nfunction getDisplayValueReturnResult(q: any, params: any[]): string {\n  if (params.length > 1 && !Helpers.isValueEmpty(params[1])) return q.getDisplayValue(true, params[1]);\n  return q.displayValue;\n}\nfunction displayValue(params: any[]): any {\n  const q = getQuestionValueByContext(this, params[0]);\n  if (!q) return \"\";\n  if (q.isReady) {\n    this.returnResult(getDisplayValueReturnResult(q, params));\n  } else {\n    const displayValueOnReadyChanged = (sender: any, options: any) => {\n      if (sender.isReady) {\n        sender.onReadyChanged.remove(displayValueOnReadyChanged);\n        this.returnResult(getDisplayValueReturnResult(sender, params));\n      }\n    };\n    q.onReadyChanged.add(displayValueOnReadyChanged);\n  }\n  return undefined;\n}\nFunctionFactory.Instance.register(\"displayValue\", displayValue, true);\n\nfunction propertyValue(params: any[]): any {\n  if (params.length !== 2 || !params[0] || !params[1]) return undefined;\n  const q = getQuestionValueByContext(this, params[0]);\n  return q ? q[params[1]] : undefined;\n}\nFunctionFactory.Instance.register(\"propertyValue\", propertyValue);\nfunction substring_(params: any[]): any {\n  if (params.length < 2) return \"\";\n  const s = params[0];\n  if (!s || typeof s !== \"string\") return \"\";\n  const start = params[1];\n  if (!Helpers.isNumber(start)) return \"\";\n  const end = params.length > 2 ? params[2] : undefined;\n  if (!Helpers.isNumber(end)) return s.substring(start);\n  return s.substring(start, end);\n}\nFunctionFactory.Instance.register(\"substring\", substring_);", "import { HashTable, Helpers, createDate } from \"../helpers\";\nimport { FunctionFactory } from \"../functionsfactory\";\nimport { ProcessValue } from \"../conditionProcessValue\";\nimport { settings } from \"../settings\";\n\nexport interface AsyncFunctionItem {\n  operand?: FunctionOperand;\n  parent?: AsyncFunctionItem;\n  children?: Array<AsyncFunctionItem>;\n}\n\nexport abstract class Operand {\n  private static counter = 1;\n  private _id: number = Operand.counter ++;\n  public get id(): number { return this._id; }\n  public toString(func: (op: Operand) => string = undefined): string {\n    return \"\";\n  }\n  public abstract getType(): string;\n  public abstract evaluate(processValue?: ProcessValue): any;\n  public abstract setVariables(variables: Array<string>): any;\n  public hasFunction(): boolean {\n    return false;\n  }\n  public hasAsyncFunction(): boolean { return false; }\n  public addToAsyncList(list: Array<AsyncFunctionItem>): void {}\n  public addOperandsToList(list: Array<Operand>): void {\n    list.push(this);\n    this.addChildrenToList(list);\n  }\n  public isEqual(op: Operand): boolean {\n    return !!op && op.getType() === this.getType() && this.isContentEqual(op);\n  }\n  protected abstract isContentEqual(op: Operand): boolean;\n  protected areOperatorsEquals(op1: Operand, op2: Operand): boolean {\n    return !op1 && !op2 || !!op1 && op1.isEqual(op2);\n  }\n  protected addChildrenToList(list: Array<Operand>): void {}\n}\n\nexport class BinaryOperand extends Operand {\n  private consumer: Function;\n  private isArithmeticValue: boolean;\n  constructor(\n    private operatorName: string,\n    private left: any = null,\n    private right: any = null,\n    isArithmeticOp: boolean = false\n  ) {\n    super();\n    this.isArithmeticValue = isArithmeticOp;\n    if (isArithmeticOp) {\n      this.consumer = OperandMaker.binaryFunctions[\"arithmeticOp\"](\n        operatorName\n      );\n    } else {\n      this.consumer = OperandMaker.binaryFunctions[operatorName];\n    }\n\n    if (this.consumer == null) {\n      OperandMaker.throwInvalidOperatorError(operatorName);\n    }\n  }\n  private get requireStrictCompare(): boolean {\n    return this.getIsOperandRequireStrict(this.left) ||\n    this.getIsOperandRequireStrict(this.right);\n  }\n  private getIsOperandRequireStrict(op: any): boolean {\n    return !!op && op.requireStrictCompare;\n  }\n  public getType(): string {\n    return \"binary\";\n  }\n  public get isArithmetic(): boolean {\n    return this.isArithmeticValue;\n  }\n  public get isConjunction(): boolean {\n    return this.operatorName == \"or\" || this.operatorName == \"and\";\n  }\n  public get conjunction(): string {\n    return this.isConjunction ? this.operatorName : \"\";\n  }\n  public get operator(): string {\n    return this.operatorName;\n  }\n  public get leftOperand() {\n    return this.left;\n  }\n  public get rightOperand() {\n    return this.right;\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const bOp = <BinaryOperand>op;\n    return bOp.operator === this.operator &&\n      this.areOperatorsEquals(this.left, bOp.left) &&\n      this.areOperatorsEquals(this.right, bOp.right);\n  }\n  private evaluateParam(x: any, processValue?: ProcessValue): any {\n    return x == null ? null : x.evaluate(processValue);\n  }\n\n  public evaluate(processValue?: ProcessValue): any {\n    return this.consumer.call(\n      this,\n      this.evaluateParam(this.left, processValue),\n      this.evaluateParam(this.right, processValue),\n      this.requireStrictCompare\n    );\n  }\n\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return (\n      \"(\" +\n      OperandMaker.safeToString(this.left, func) +\n      \" \" +\n      OperandMaker.operatorToString(this.operatorName) +\n      \" \" +\n      OperandMaker.safeToString(this.right, func) +\n      \")\"\n    );\n  }\n\n  public setVariables(variables: Array<string>) {\n    if (this.left != null)this.left.setVariables(variables);\n    if (this.right != null)this.right.setVariables(variables);\n  }\n  public hasFunction(): boolean {\n    return (\n      (!!this.left && this.left.hasFunction()) ||\n      (!!this.right && this.right.hasFunction())\n    );\n  }\n  protected addChildrenToList(list: Array<Operand>): void {\n    if (!!this.left)this.left.addOperandsToList(list);\n    if (!!this.right)this.right.addOperandsToList(list);\n  }\n  public hasAsyncFunction(): boolean {\n    return (\n      (!!this.left && this.left.hasAsyncFunction()) ||\n      (!!this.right && this.right.hasAsyncFunction())\n    );\n  }\n  public addToAsyncList(list: Array<AsyncFunctionItem>) {\n    if (!!this.left)this.left.addToAsyncList(list);\n    if (!!this.right)this.right.addToAsyncList(list);\n  }\n}\n\nexport class UnaryOperand extends Operand {\n  private consumer: Function;\n  constructor(private expressionValue: Operand, private operatorName: string) {\n    super();\n    this.consumer = OperandMaker.unaryFunctions[operatorName];\n    if (this.consumer == null) {\n      OperandMaker.throwInvalidOperatorError(operatorName);\n    }\n  }\n  public get operator(): string {\n    return this.operatorName;\n  }\n  public get expression(): Operand {\n    return this.expressionValue;\n  }\n  public getType(): string {\n    return \"unary\";\n  }\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    const opName = OperandMaker.operatorToString(this.operator);\n    const exp = this.expression.toString(func);\n    return this.isRigtOperator ? exp + \" \" + opName : opName + \" \" + exp;\n  }\n  private get isRigtOperator(): boolean {\n    const st = this.operatorName.toLowerCase();\n    return st === \"notempty\" || st === \"empty\";\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const uOp = <UnaryOperand>op;\n    return uOp.operator == this.operator && this.areOperatorsEquals(this.expression, uOp.expression);\n  }\n  public hasFunction(): boolean {\n    return this.expression.hasFunction();\n  }\n  protected addChildrenToList(list: Array<Operand>): void {\n    this.expression.addOperandsToList(list);\n  }\n  public hasAsyncFunction(): boolean {\n    return this.expression.hasAsyncFunction();\n  }\n  public addToAsyncList(list: Array<AsyncFunctionItem>): void {\n    this.expression.addToAsyncList(list);\n  }\n  public evaluate(processValue?: ProcessValue): boolean {\n    let value = this.expression.evaluate(processValue);\n    return this.consumer.call(this, value);\n  }\n  public setVariables(variables: Array<string>) {\n    this.expression.setVariables(variables);\n  }\n}\n\nexport class ArrayOperand extends Operand {\n  constructor(public values: Array<Operand>) {\n    super();\n  }\n  public getType(): string {\n    return \"array\";\n  }\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return (\n      \"[\" +\n      this.values\n        .map(function(el: Operand) {\n          return el.toString(func);\n        })\n        .join(\", \") +\n      \"]\"\n    );\n  }\n\n  public evaluate(processValue?: ProcessValue): Array<any> {\n    return this.values.map(function(el: Operand) {\n      return el.evaluate(processValue);\n    });\n  }\n\n  public setVariables(variables: Array<string>) {\n    this.values.forEach((el) => {\n      el.setVariables(variables);\n    });\n  }\n\n  public hasFunction(): boolean {\n    return this.values.some((operand) => operand.hasFunction());\n  }\n  protected addChildrenToList(list: Array<Operand>): void {\n    this.values.forEach((el) => {\n      el.addOperandsToList(list);\n    });\n  }\n  public hasAsyncFunction(): boolean {\n    return this.values.some((operand) => operand.hasAsyncFunction());\n  }\n  public addToAsyncList(list: Array<AsyncFunctionItem>): void {\n    this.values.forEach((operand) => operand.addToAsyncList(list));\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const aOp = <ArrayOperand>op;\n    if (aOp.values.length !== this.values.length) return false;\n    for (var i = 0; i < this.values.length; i ++) {\n      if (!aOp.values[i].isEqual(this.values[i])) return false;\n    }\n    return true;\n  }\n}\n\nexport class Const extends Operand {\n  constructor(private value: any) {\n    super();\n  }\n  public getType(): string {\n    return \"const\";\n  }\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return this.value.toString();\n  }\n  public get correctValue(): any {\n    return this.getCorrectValue(this.value);\n  }\n  public get requireStrictCompare(): boolean { return false; }\n  public evaluate(): any {\n    return this.getCorrectValue(this.value);\n  }\n\n  public setVariables(variables: Array<string>): void {}\n  protected getCorrectValue(value: any): any {\n    if (!value || typeof value != \"string\") return value;\n    if (OperandMaker.isBooleanValue(value)) return value.toLowerCase() === \"true\";\n    if (\n      value.length > 1 &&\n      this.isQuote(value[0]) &&\n      this.isQuote(value[value.length - 1])\n    )\n      return value.substring(1, value.length - 1);\n    if (Helpers.isNumber(value)) {\n      if (value[0] === \"0\" && value.indexOf(\"0x\") != 0) {\n        const len = value.length;\n        const hasPoint = len > 1 && (value[1] === \".\" || value[1] === \",\");\n        if (!hasPoint && len > 1 || hasPoint && len < 2) return value;\n      }\n      return Helpers.getNumber(value);\n    }\n    return value;\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const cOp = <Const>op;\n    return cOp.value == this.value;\n  }\n  private isQuote(ch: string): boolean {\n    return ch == \"'\" || ch == '\"';\n  }\n}\n\nexport class Variable extends Const {\n  public static get DisableConversionChar(): string { return settings.expressionDisableConversionChar; }\n  public static set DisableConversionChar(val: string) { settings.expressionDisableConversionChar = val; }\n  private valueInfo: any = {};\n  private useValueAsItIs: boolean = false;\n  constructor(private variableName: string) {\n    super(variableName);\n    if (\n      !!this.variableName &&\n      this.variableName.length > 1 &&\n      this.variableName[0] === Variable.DisableConversionChar\n    ) {\n      this.variableName = this.variableName.substring(1);\n      this.useValueAsItIs = true;\n    }\n  }\n  public get requireStrictCompare(): boolean {\n    return this.valueInfo.strictCompare === true;\n  }\n  public getType(): string {\n    return \"variable\";\n  }\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    var prefix = this.useValueAsItIs ? Variable.DisableConversionChar : \"\";\n    return \"{\" + prefix + this.variableName + \"}\";\n  }\n  public get variable(): string {\n    return this.variableName;\n  }\n  public evaluate(processValue?: ProcessValue): any {\n    this.valueInfo.name = this.variableName;\n    processValue.getValueInfo(this.valueInfo);\n    if (!this.valueInfo.hasValue) return null;\n    let val = this.valueInfo.value;\n    if (this.valueInfo.onProcessValue) {\n      val = this.valueInfo.onProcessValue(val);\n    }\n    return this.getCorrectValue(val);\n  }\n  public setVariables(variables: Array<string>) {\n    variables.push(this.variableName);\n  }\n  protected getCorrectValue(value: any): any {\n    if (this.useValueAsItIs) return value;\n    return super.getCorrectValue(value);\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const vOp = <Variable>op;\n    return vOp.variable == this.variable;\n  }\n}\n\nexport class FunctionOperand extends Operand {\n  constructor(private originalValue: string, private parameters: ArrayOperand) {\n    super();\n    if (Array.isArray(parameters) && parameters.length === 0) {\n      this.parameters = new ArrayOperand([]);\n    }\n  }\n  public getType(): string {\n    return \"function\";\n  }\n  public evaluate(processValue?: ProcessValue): any {\n    const asyncVal = this.getAsynValue(processValue);\n    if (!!asyncVal) return asyncVal.value;\n    return this.evaluateCore(processValue);\n  }\n  private evaluateCore(processValue?: ProcessValue): any {\n    let properties = processValue.properties;\n    if (this.isAsyncFunction) {\n      properties = Helpers.createCopy(processValue.properties);\n      const id = this.id;\n      const asyncValues = processValue.asyncValues;\n      const onComplete = processValue.onCompleteAsyncFunc;\n      const item = this;\n      properties.returnResult = (result: any) => {\n        asyncValues[id] = { value: result };\n        onComplete(item);\n      };\n    }\n    return FunctionFactory.Instance.run(\n      this.originalValue,\n      this.parameters.evaluate(processValue),\n      properties,\n      this.parameters.values\n    );\n  }\n  public toString(func: (op: Operand) => string = undefined): string {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return this.originalValue + \"(\" + this.parameters.toString(func) + \")\";\n  }\n  public setVariables(variables: Array<string>): void {\n    this.parameters.setVariables(variables);\n  }\n  public isReady(proccessValue: ProcessValue): boolean {\n    return !!this.getAsynValue(proccessValue);\n  }\n  protected addChildrenToList(list: Array<Operand>): void {\n    this.parameters.addOperandsToList(list);\n  }\n  private getAsynValue(proccessValue: ProcessValue): any {\n    return proccessValue.asyncValues[this.id];\n  }\n  public hasFunction(): boolean { return true; }\n  public hasAsyncFunction(): boolean {\n    return this.isAsyncFunction() || this.parameters.hasAsyncFunction();\n  }\n  private isAsyncFunction(): boolean {\n    return FunctionFactory.Instance.isAsyncFunction(this.originalValue);\n  }\n  public addToAsyncList(list: Array<AsyncFunctionItem>): void {\n    let item: AsyncFunctionItem = undefined;\n    if (this.isAsyncFunction()) {\n      item = { operand: this };\n    }\n    if (this.parameters.hasAsyncFunction()) {\n      const children = new Array<AsyncFunctionItem>();\n      this.parameters.addToAsyncList(children);\n      children.forEach(child => child.parent = item);\n      if (!item) {\n        item = {};\n      }\n      item.children = children;\n    }\n    if (item) {\n      list.push(item);\n    }\n  }\n  protected isContentEqual(op: Operand): boolean {\n    const fOp = <FunctionOperand>op;\n    return fOp.originalValue == this.originalValue && this.areOperatorsEquals(fOp.parameters, this.parameters);\n  }\n}\n\nexport class OperandMaker {\n  static throwInvalidOperatorError(op: string): void {\n    throw new Error(\"Invalid operator: '\" + op + \"'\");\n  }\n\n  static safeToString(operand: Operand, func: (op: Operand) => string): string {\n    return operand == null ? \"\" : operand.toString(func);\n  }\n\n  static toOperandString(value: string): string {\n    if (\n      !!value &&\n      !Helpers.isNumber(value) &&\n      !OperandMaker.isBooleanValue(value)\n    )\n      value = \"'\" + value + \"'\";\n    return value;\n  }\n  static isBooleanValue(value: string): boolean {\n    return (\n      !!value &&\n      (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\")\n    );\n  }\n  static countDecimals(value: number): number {\n    if (Helpers.isNumber(value) && Math.floor(value) !== value) {\n      const strs = value.toString().split(\".\");\n      return strs.length > 1 && strs[1].length || 0;\n    }\n    return 0;\n  }\n  static plusMinus(a: number, b: number, res: number): number {\n    const digitsA = OperandMaker.countDecimals(a);\n    const digitsB = OperandMaker.countDecimals(b);\n    if (digitsA > 0 || digitsB > 0) {\n      const digits = Math.max(digitsA, digitsB);\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n\n  static unaryFunctions: HashTable<Function> = {\n    empty: function(value: any): boolean {\n      return Helpers.isValueEmpty(value);\n    },\n    notempty: function(value: any): boolean {\n      return !OperandMaker.unaryFunctions.empty(value);\n    },\n    negate: function(value: boolean): boolean {\n      return !value;\n    },\n  };\n\n  static binaryFunctions: HashTable<Function> = {\n    arithmeticOp(operatorName: string) {\n      const convertForArithmeticOp = (val: any, second: any): any => {\n        if (!Helpers.isValueEmpty(val)) return val;\n        if (typeof second === \"number\") return 0;\n        if (typeof val === \"string\") return val;\n        if (typeof second === \"string\") return \"\";\n        if (Array.isArray(second)) return [];\n        return 0;\n      };\n      return function(a: any, b: any): any {\n        a = convertForArithmeticOp(a, b);\n        b = convertForArithmeticOp(b, a);\n        let consumer = OperandMaker.binaryFunctions[operatorName];\n        return consumer == null ? null : consumer.call(this, a, b);\n      };\n    },\n    and: function(a: boolean, b: boolean): boolean {\n      return a && b;\n    },\n    or: function(a: boolean, b: boolean): boolean {\n      return a || b;\n    },\n    plus: function(a: any, b: any): any {\n      return Helpers.sumAnyValues(a, b);\n    },\n    minus: function(a: number, b: number): number {\n      return Helpers.correctAfterPlusMinis(a, b, a - b);\n    },\n    mul: function(a: number, b: number): number {\n      return Helpers.correctAfterMultiple(a, b, a * b);\n    },\n    div: function(a: number, b: number): number {\n      if (!b) return null;\n      return a / b;\n    },\n    mod: function(a: number, b: number): number {\n      if (!b) return null;\n      return a % b;\n    },\n    power: function(a: number, b: number): number {\n      return Math.pow(a, b);\n    },\n    greater: function(left: any, right: any): boolean {\n      if (left == null || right == null) return false;\n      left = OperandMaker.convertValForDateCompare(left, right);\n      right = OperandMaker.convertValForDateCompare(right, left);\n      return left > right;\n    },\n    less: function(left: any, right: any): boolean {\n      if (left == null || right == null) return false;\n      left = OperandMaker.convertValForDateCompare(left, right);\n      right = OperandMaker.convertValForDateCompare(right, left);\n      return left < right;\n    },\n    greaterorequal: function(left: any, right: any): boolean {\n      if (OperandMaker.binaryFunctions.equal(left, right)) return true;\n      return OperandMaker.binaryFunctions.greater(left, right);\n    },\n    lessorequal: function(left: any, right: any): boolean {\n      if (OperandMaker.binaryFunctions.equal(left, right)) return true;\n      return OperandMaker.binaryFunctions.less(left, right);\n    },\n    equal: function(left: any, right: any, strictCompare?: boolean): boolean {\n      left = OperandMaker.convertValForDateCompare(left, right);\n      right = OperandMaker.convertValForDateCompare(right, left);\n      return OperandMaker.isTwoValueEquals(left, right, strictCompare !== true);\n    },\n    notequal: function(left: any, right: any, strictCompare?: boolean): boolean {\n      return !OperandMaker.binaryFunctions.equal(left, right, strictCompare);\n    },\n    contains: function(left: any, right: any): boolean {\n      return OperandMaker.binaryFunctions.containsCore(left, right, true);\n    },\n    notcontains: function(left: any, right: any): boolean {\n      if (!left && !Helpers.isValueEmpty(right)) return true;\n      return OperandMaker.binaryFunctions.containsCore(left, right, false);\n    },\n    anyof: function(left: any, right: any): boolean {\n      if (Helpers.isValueEmpty(left) && Helpers.isValueEmpty(right))\n        return true;\n      if (\n        Helpers.isValueEmpty(left) ||\n        (!Array.isArray(left) && left.length === 0)\n      )\n        return false;\n      if (Helpers.isValueEmpty(right)) return true;\n      if (!Array.isArray(left))\n        return OperandMaker.binaryFunctions.contains(right, left);\n      if (!Array.isArray(right))\n        return OperandMaker.binaryFunctions.contains(left, right);\n      for (var i = 0; i < right.length; i++) {\n        if (OperandMaker.binaryFunctions.contains(left, right[i])) return true;\n      }\n      return false;\n    },\n    allof: function(left: any, right: any): boolean {\n      if (!left && !Helpers.isValueEmpty(right)) return false;\n      if (!Array.isArray(right))\n        return OperandMaker.binaryFunctions.contains(left, right);\n      for (var i = 0; i < right.length; i++) {\n        if (!OperandMaker.binaryFunctions.contains(left, right[i]))\n          return false;\n      }\n      return true;\n    },\n    containsCore: function(left: any, right: any, isContains: any): boolean {\n      if (!left && left !== 0 && left !== false) return false;\n      if (!left.length) {\n        left = left.toString();\n        if (typeof right === \"string\" || right instanceof String) {\n          left = left.toUpperCase();\n          right = right.toUpperCase();\n        }\n      }\n      if (typeof left === \"string\" || left instanceof String) {\n        if (!right) return false;\n        right = right.toString();\n        var found = left.indexOf(right) > -1;\n        return isContains ? found : !found;\n      }\n      var rightArray = Array.isArray(right) ? right : [right];\n      for (var rIndex = 0; rIndex < rightArray.length; rIndex++) {\n        var i = 0;\n        right = rightArray[rIndex];\n        for (; i < left.length; i++) {\n          if (OperandMaker.isTwoValueEquals(left[i], right)) break;\n        }\n        if (i == left.length) return !isContains;\n      }\n      return isContains;\n    },\n  };\n\n  static isTwoValueEquals(x: any, y: any, ignoreOrder: boolean = true): boolean {\n    if (x === \"undefined\") x = undefined;\n    if (y === \"undefined\") y = undefined;\n    return Helpers.isTwoValueEquals(x, y, ignoreOrder);\n  }\n  static operatorToString(operatorName: string): string {\n    let opStr = OperandMaker.signs[operatorName];\n    return opStr == null ? operatorName : opStr;\n  }\n  static convertValForDateCompare(val: any, second: any): any {\n    if (second instanceof Date && typeof val === \"string\") {\n      let res = createDate(\"expression-operand\", val);\n      res.setHours(0, 0, 0);\n      return res;\n    }\n    return val;\n  }\n  static signs: HashTable<string> = {\n    less: \"<\",\n    lessorequal: \"<=\",\n    greater: \">\",\n    greaterorequal: \">=\",\n    equal: \"==\",\n    notequal: \"!=\",\n    plus: \"+\",\n    minus: \"-\",\n    mul: \"*\",\n    div: \"/\",\n    and: \"and\",\n    or: \"or\",\n    power: \"^\",\n    mod: \"%\",\n    negate: \"!\",\n  };\n}", "/* eslint-disable */\nimport {\n  Const,\n  BinaryOperand,\n  Variable,\n  Operand,\n  UnaryOperand,\n  FunctionOperand,\n  ArrayOperand\n} from \"./expressions\";\n\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.3.1 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\n\n\"use strict\";\n\nexport interface IFilePosition {\n  offset: number;\n  line: number;\n  column: number;\n}\n\nexport interface IFileRange {\n  start: IFilePosition;\n  end: IFilePosition;\n}\n\nexport interface ILiteralExpectation {\n  type: \"literal\";\n  text: string;\n  ignoreCase: boolean;\n}\n\nexport interface IClassParts extends Array<string | IClassParts> {}\n\nexport interface IClassExpectation {\n  type: \"class\";\n  parts: IClassParts;\n  inverted: boolean;\n  ignoreCase: boolean;\n}\n\nexport interface IAnyExpectation {\n  type: \"any\";\n}\n\nexport interface IEndExpectation {\n  type: \"end\";\n}\n\nexport interface IOtherExpectation {\n  type: \"other\";\n  description: string;\n}\n\nexport type Expectation = ILiteralExpectation | IClassExpectation | IAnyExpectation | IEndExpectation | IOtherExpectation;\n\nexport class SyntaxError extends Error {\n  public static buildMessage(expected: Expectation[], found: string | null) {\n    function hex(ch: string): string {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\"/g, \"\\\\\\\"\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\" + hex(ch));\n    }\n\n    function classEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\\]/g, \"\\\\]\")\n        .replace(/\\^/g, \"\\\\^\")\n        .replace(/-/g, \"\\\\-\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\" + hex(ch));\n    }\n\n    function describeExpectation(expectation: Expectation) {\n      switch (expectation.type) {\n        case \"literal\":\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        case \"class\":\n          const escapedParts = expectation.parts.map((part) => {\n            return Array.isArray(part)\n              ? classEscape(part[0] as string) + \"-\" + classEscape(part[1] as string)\n              : classEscape(part);\n          });\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        case \"any\":\n          return \"any character\";\n        case \"end\":\n          return \"end of input\";\n        case \"other\":\n          return expectation.description;\n      }\n    }\n\n    function describeExpected(expected1: Expectation[]) {\n      const descriptions = expected1.map(describeExpectation);\n      let i: number;\n      let j: number;\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found1: string | null) {\n      return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  }\n\n  public message: string;\n  public expected: Expectation[];\n  public found: string | null;\n  public location: IFileRange;\n  public name: string;\n\n  constructor(message: string, expected: Expectation[], found: string | null, location: IFileRange) {\n    super();\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof (Error as any).captureStackTrace === \"function\") {\n      (Error as any).captureStackTrace(this, SyntaxError);\n    }\n  }\n}\n\nexport interface ICached {\n  nextPos: number;\n  result: any;\n}\n\nfunction peg$parse(input: string, options?: IParseOptions) {\n  options = options !== undefined ? options : {};\n\n  const peg$FAILED: Readonly<any> = {};\n\n  const peg$startRuleFunctions: {[id: string]: any} = { Expression: peg$parseExpression };\n  let peg$startRuleFunction: () => any = peg$parseExpression;\n\n  const peg$c0 = function(head: any, tail: any): any {\n    return buildBinaryOperand(head, tail, true);\n  };\n  const peg$c1 = \"||\";\n  const peg$c2 = peg$literalExpectation(\"||\", false);\n  const peg$c3 = \"or\";\n  const peg$c4 = peg$literalExpectation(\"or\", true);\n  const peg$c5 = function(): any { return \"or\"; };\n  const peg$c6 = \"&&\";\n  const peg$c7 = peg$literalExpectation(\"&&\", false);\n  const peg$c8 = \"and\";\n  const peg$c9 = peg$literalExpectation(\"and\", true);\n  const peg$c10 = function(): any { return \"and\"; };\n  const peg$c11 = function(head: any, tail: any): any {\n    return buildBinaryOperand(head, tail);\n  };\n  const peg$c12 = \"<=\";\n  const peg$c13 = peg$literalExpectation(\"<=\", false);\n  const peg$c14 = \"lessorequal\";\n  const peg$c15 = peg$literalExpectation(\"lessorequal\", true);\n  const peg$c16 = function(): any { return \"lessorequal\"; };\n  const peg$c17 = \">=\";\n  const peg$c18 = peg$literalExpectation(\">=\", false);\n  const peg$c19 = \"greaterorequal\";\n  const peg$c20 = peg$literalExpectation(\"greaterorequal\", true);\n  const peg$c21 = function(): any { return \"greaterorequal\"; };\n  const peg$c22 = \"==\";\n  const peg$c23 = peg$literalExpectation(\"==\", false);\n  const peg$c24 = \"equal\";\n  const peg$c25 = peg$literalExpectation(\"equal\", true);\n  const peg$c26 = function(): any { return \"equal\"; };\n  const peg$c27 = \"=\";\n  const peg$c28 = peg$literalExpectation(\"=\", false);\n  const peg$c29 = \"!=\";\n  const peg$c30 = peg$literalExpectation(\"!=\", false);\n  const peg$c31 = \"notequal\";\n  const peg$c32 = peg$literalExpectation(\"notequal\", true);\n  const peg$c33 = function(): any { return \"notequal\"; };\n  const peg$c34 = \"<\";\n  const peg$c35 = peg$literalExpectation(\"<\", false);\n  const peg$c36 = \"less\";\n  const peg$c37 = peg$literalExpectation(\"less\", true);\n  const peg$c38 = function(): any { return \"less\"; };\n  const peg$c39 = \">\";\n  const peg$c40 = peg$literalExpectation(\">\", false);\n  const peg$c41 = \"greater\";\n  const peg$c42 = peg$literalExpectation(\"greater\", true);\n  const peg$c43 = function(): any { return \"greater\"; };\n  const peg$c44 = \"+\";\n  const peg$c45 = peg$literalExpectation(\"+\", false);\n  const peg$c46 = function(): any { return \"plus\"; };\n  const peg$c47 = \"-\";\n  const peg$c48 = peg$literalExpectation(\"-\", false);\n  const peg$c49 = function(): any { return \"minus\"; };\n  const peg$c50 = \"*\";\n  const peg$c51 = peg$literalExpectation(\"*\", false);\n  const peg$c52 = function(): any { return \"mul\"; };\n  const peg$c53 = \"/\";\n  const peg$c54 = peg$literalExpectation(\"/\", false);\n  const peg$c55 = function(): any { return \"div\"; };\n  const peg$c56 = \"%\";\n  const peg$c57 = peg$literalExpectation(\"%\", false);\n  const peg$c58 = function(): any { return \"mod\"; };\n  const peg$c59 = \"^\";\n  const peg$c60 = peg$literalExpectation(\"^\", false);\n  const peg$c61 = \"power\";\n  const peg$c62 = peg$literalExpectation(\"power\", true);\n  const peg$c63 = function(): any { return \"power\"; };\n  const peg$c64 = \"*=\";\n  const peg$c65 = peg$literalExpectation(\"*=\", false);\n  const peg$c66 = \"contains\";\n  const peg$c67 = peg$literalExpectation(\"contains\", true);\n  const peg$c68 = \"contain\";\n  const peg$c69 = peg$literalExpectation(\"contain\", true);\n  const peg$c70 = function(): any { return \"contains\"; };\n  const peg$c71 = \"notcontains\";\n  const peg$c72 = peg$literalExpectation(\"notcontains\", true);\n  const peg$c73 = \"notcontain\";\n  const peg$c74 = peg$literalExpectation(\"notcontain\", true);\n  const peg$c75 = function(): any { return \"notcontains\"; };\n  const peg$c76 = \"anyof\";\n  const peg$c77 = peg$literalExpectation(\"anyof\", true);\n  const peg$c78 = function(): any { return \"anyof\"; };\n  const peg$c79 = \"allof\";\n  const peg$c80 = peg$literalExpectation(\"allof\", true);\n  const peg$c81 = function(): any { return \"allof\"; };\n  const peg$c82 = \"(\";\n  const peg$c83 = peg$literalExpectation(\"(\", false);\n  const peg$c84 = \")\";\n  const peg$c85 = peg$literalExpectation(\")\", false);\n  const peg$c86 = function(expr: any): any { return expr; };\n  const peg$c87 = function(name: any, params: any): any { return new FunctionOperand(name, params); };\n  const peg$c88 = \"!\";\n  const peg$c89 = peg$literalExpectation(\"!\", false);\n  const peg$c90 = \"negate\";\n  const peg$c91 = peg$literalExpectation(\"negate\", true);\n  const peg$c92 = function(expr: any): any { return new UnaryOperand(expr, \"negate\"); };\n  const peg$c93 = function(expr: any, op: any): any { return new UnaryOperand(expr, op); };\n  const peg$c94 = \"empty\";\n  const peg$c95 = peg$literalExpectation(\"empty\", true);\n  const peg$c96 = function(): any { return \"empty\"; };\n  const peg$c97 = \"notempty\";\n  const peg$c98 = peg$literalExpectation(\"notempty\", true);\n  const peg$c99 = function(): any { return \"notempty\"; };\n  const peg$c100 = \"undefined\";\n  const peg$c101 = peg$literalExpectation(\"undefined\", false);\n  const peg$c102 = \"null\";\n  const peg$c103 = peg$literalExpectation(\"null\", false);\n  const peg$c104 = function(): any { return null; };\n  const peg$c105 = function(value: any): any { return new Const(value); };\n  const peg$c106 = \"{\";\n  const peg$c107 = peg$literalExpectation(\"{\", false);\n  const peg$c108 = \"}\";\n  const peg$c109 = peg$literalExpectation(\"}\", false);\n  const peg$c110 = function(value: any): any { return new Variable(value); };\n  const peg$c111 = function(value: any): any { return value; };\n  const peg$c112 = \"''\";\n  const peg$c113 = peg$literalExpectation(\"''\", false);\n  const peg$c114 = function(): any { return \"\"; };\n  const peg$c115 = \"\\\"\\\"\";\n  const peg$c116 = peg$literalExpectation(\"\\\"\\\"\", false);\n  const peg$c117 = \"'\";\n  const peg$c118 = peg$literalExpectation(\"'\", false);\n  const peg$c119 = function(value: any): any { return \"'\" + value + \"'\"; };\n  const peg$c120 = \"\\\"\";\n  const peg$c121 = peg$literalExpectation(\"\\\"\", false);\n  const peg$c122 = \"[\";\n  const peg$c123 = peg$literalExpectation(\"[\", false);\n  const peg$c124 = \"]\";\n  const peg$c125 = peg$literalExpectation(\"]\", false);\n  const peg$c126 = function(sequence: any): any { return sequence; };\n  const peg$c127 = \",\";\n  const peg$c128 = peg$literalExpectation(\",\", false);\n  const peg$c129 = function(expr: any, tail: any): any {\n    if (expr == null)\n      return new ArrayOperand([]);\n\n    var array = [expr];\n    if (Array.isArray(tail)) {\n      var flatten = flattenArray(tail);\n      for (var i = 3; i < flatten.length; i += 4) {\n        array.push(flatten[i]);\n      }\n    }\n\n    return new ArrayOperand(array);\n  };\n  const peg$c130 = \"true\";\n  const peg$c131 = peg$literalExpectation(\"true\", true);\n  const peg$c132 = function(): any { return true; };\n  const peg$c133 = \"false\";\n  const peg$c134 = peg$literalExpectation(\"false\", true);\n  const peg$c135 = function(): any { return false; };\n  const peg$c136 = \"0x\";\n  const peg$c137 = peg$literalExpectation(\"0x\", false);\n  const peg$c138 = function(): any { return parseInt(text(), 16); };\n  const peg$c139 = /^[\\-]/;\n  const peg$c140 = peg$classExpectation([\"-\"], false, false);\n  const peg$c141 = function(sign: any, num: any): any { return sign == null ? num : -num; };\n  const peg$c142 = \".\";\n  const peg$c143 = peg$literalExpectation(\".\", false);\n  const peg$c144 = function(): any { return parseFloat(text()); };\n  const peg$c145 = function(): any { return parseInt(text(), 10); };\n  const peg$c146 = \"0\";\n  const peg$c147 = peg$literalExpectation(\"0\", false);\n  const peg$c148 = function(): any { return 0; };\n  const peg$c149 = function(chars: any): any { return chars.join(\"\"); };\n  const peg$c150 = \"\\\\'\";\n  const peg$c151 = peg$literalExpectation(\"\\\\'\", false);\n  const peg$c152 = function(): any { return \"'\"; };\n  const peg$c153 = \"\\\\\\\"\";\n  const peg$c154 = peg$literalExpectation(\"\\\\\\\"\", false);\n  const peg$c155 = function(): any { return \"\\\"\"; };\n  const peg$c156 = /^[^\"']/;\n  const peg$c157 = peg$classExpectation([\"\\\"\", \"'\"], true, false);\n  const peg$c158 = function(): any { return text(); };\n  const peg$c159 = /^[^{}]/;\n  const peg$c160 = peg$classExpectation([\"{\", \"}\"], true, false);\n  const peg$c161 = /^[0-9]/;\n  const peg$c162 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  const peg$c163 = /^[1-9]/;\n  const peg$c164 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  const peg$c165 = /^[a-zA-Z_]/;\n  const peg$c166 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\"], false, false);\n  const peg$c167 = peg$otherExpectation(\"whitespace\");\n  const peg$c168 = /^[ \\t\\n\\r]/;\n  const peg$c169 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n\n  let peg$currPos = 0;\n  let peg$savedPos = 0;\n  const peg$posDetailsCache = [{ line: 1, column: 1 }];\n  let peg$maxFailPos = 0;\n  let peg$maxFailExpected: Expectation[] = [];\n  let peg$silentFails = 0;\n\n  const peg$resultsCache: {[id: number]: ICached} = {};\n\n  let peg$result;\n\n  if (options.startRule !== undefined) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text(): string {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location(): IFileRange {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location1\n    );\n  }\n\n  function error(message: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location1);\n  }\n\n  function peg$literalExpectation(text1: string, ignoreCase: boolean): ILiteralExpectation {\n    return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts: IClassParts, inverted: boolean, ignoreCase: boolean): IClassExpectation {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation(): IAnyExpectation {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation(): IEndExpectation {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description: string): IOtherExpectation {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos: number) {\n    let details = peg$posDetailsCache[pos];\n    let p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos: number, endPos: number): IFileRange {\n    const startPosDetails = peg$computePosDetails(startPos);\n    const endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected1: Expectation) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected1);\n  }\n\n  function peg$buildSimpleError(message: string, location1: IFileRange) {\n    return new SyntaxError(message, [], \"\", location1);\n  }\n\n  function peg$buildStructuredError(expected1: Expectation[], found: string | null, location1: IFileRange) {\n    return new SyntaxError(\n      SyntaxError.buildMessage(expected1, found),\n      expected1,\n      found,\n      location1\n    );\n  }\n\n  function peg$parseExpression(): Operand {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    const key = peg$currPos * 34 + 0;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicOr();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parse_();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseOrSign();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parse_();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLogicOr();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseOrSign();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parse_();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseLogicOr();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseOrSign(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 1;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c3) {\n        s1 = input.substr(peg$currPos, 2);\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c5();\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseLogicOr(): BinaryOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 2;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicAnd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAndSign();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseLogicAnd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAndSign();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseLogicAnd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseAndSign(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 3;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c8) {\n        s1 = input.substr(peg$currPos, 3);\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c9); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c10();\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseLogicAnd(): BinaryOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 4;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseCompOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseComparableOperators();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseCompOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseComparableOperators();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseCompOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseComparableOperators(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 5;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c14) {\n        s1 = input.substr(peg$currPos, 11);\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c16();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c17) {\n        s1 = peg$c17;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 14).toLowerCase() === peg$c19) {\n          s1 = input.substr(peg$currPos, 14);\n          peg$currPos += 14;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c21();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n          s1 = peg$c22;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n            s1 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s1 = peg$c27;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n              s1 = input.substr(peg$currPos, 5);\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c25); }\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c26();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c29) {\n              s1 = peg$c29;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c31) {\n                s1 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s1 = peg$c34;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c36) {\n                  s1 = input.substr(peg$currPos, 4);\n                  peg$currPos += 4;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c38();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 62) {\n                  s1 = peg$c39;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c41) {\n                    s1 = input.substr(peg$currPos, 7);\n                    peg$currPos += 7;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c43();\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseCompOps(): BinaryOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 6;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePlusMinusOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsePlusMinusSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsePlusMinusOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePlusMinusSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsePlusMinusOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePlusMinusSigns(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 7;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s1 = peg$c44;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c46();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c49();\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePlusMinusOps(): BinaryOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 8;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMulDivOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMulDivSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseMulDivOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMulDivSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseMulDivOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseMulDivSigns(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 9;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c50;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c53;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c58();\n        }\n        s0 = s1;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseMulDivOps(): BinaryOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 10;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseBinaryFuncOp();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsePowerSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseBinaryFuncOp();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePowerSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseBinaryFuncOp();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePowerSigns(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 11;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 94) {\n      s1 = peg$c59;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c61) {\n        s1 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c63();\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseBinaryFuncOp(): any {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 12;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseBinFunctions();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 === peg$FAILED) {\n              s7 = null;\n            }\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseBinFunctions();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 === peg$FAILED) {\n                s7 = null;\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseBinFunctions(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 13;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c64) {\n      s1 = peg$c64;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c65); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c66) {\n        s1 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c68) {\n          s1 = input.substr(peg$currPos, 7);\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c69); }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c70();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c71) {\n        s1 = input.substr(peg$currPos, 11);\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 10).toLowerCase() === peg$c73) {\n          s1 = input.substr(peg$currPos, 10);\n          peg$currPos += 10;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c76) {\n          s1 = input.substr(peg$currPos, 5);\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c77); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c79) {\n            s1 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c80); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81();\n          }\n          s0 = s1;\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFactor(): Operand {\n    let s0, s1, s2, s3, s4, s5;\n\n    const key = peg$currPos * 34 + 14;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c82;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c83); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c84;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c85); }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c86(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionOp();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryFunctionOp();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseAtom();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseArrayOp();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFunctionOp(): any {\n    let s0, s1, s2, s3, s4;\n\n    const key = peg$currPos * 34 + 15;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLettersAndDigits();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c82;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSequence();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c84;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c85); }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunctionOp(): any {\n    let s0, s1, s2, s3;\n\n    const key = peg$currPos * 34 + 16;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s1 = peg$c88;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c90) {\n        s1 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c91); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c92(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseAtom();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseUnFunctions();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseUnFunctions(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 17;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c94) {\n      s1 = input.substr(peg$currPos, 5);\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c97) {\n        s1 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c99();\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseAtom(): any {\n    let s0, s1, s2, s3, s4;\n\n    const key = peg$currPos * 34 + 18;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 9) === peg$c100) {\n        s2 = peg$c100;\n        peg$currPos += 9;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c102) {\n          s2 = peg$c102;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c103); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c104();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseConstValue();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c105(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s2 = peg$c106;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c107); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseValueInput();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s4 = peg$c108;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c109); }\n              }\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c110(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseConstValue(): any {\n    let s0, s1, s2, s3;\n\n    const key = peg$currPos * 34 + 19;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicValue();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c111(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseArithmeticValue();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c111(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseLettersAndDigits();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c111(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c112) {\n            s1 = peg$c112;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c113); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c114();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c115) {\n              s1 = peg$c115;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c116); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c114();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s1 = peg$c117;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c118); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseAnyInput();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c117;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c118); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c119(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s1 = peg$c120;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c121); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseAnyInput();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 34) {\n                      s3 = peg$c120;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c121); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c119(s2);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseArrayOp(): any {\n    let s0, s1, s2, s3;\n\n    const key = peg$currPos * 34 + 20;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c122;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c123); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSequence();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c124;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c125); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c126(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSequence(): ArrayOperand {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    const key = peg$currPos * 34 + 21;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExpression();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c127;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c128); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExpression();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c127;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c128); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c129(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseLogicValue(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 22;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c130) {\n      s1 = input.substr(peg$currPos, 4);\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c131); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c132();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c133) {\n        s1 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c134); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c135();\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseArithmeticValue(): any {\n    let s0, s1, s2;\n\n    const key = peg$currPos * 34 + 23;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c136) {\n      s1 = peg$c136;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c137); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigits();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c138();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c139.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c140); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNumber();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c141(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNumber(): any {\n    let s0, s1, s2, s3;\n\n    const key = peg$currPos * 34 + 24;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseDigits();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c142;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c143); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDigits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c144();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseNonZeroDigits();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDigits();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c145();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n          s1 = peg$c146;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c147); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c148();\n        }\n        s0 = s1;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseValueInput(): any {\n    let s0, s1, s2;\n\n    const key = peg$currPos * 34 + 25;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseValueCharacters();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseValueCharacters();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c149(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseAnyInput(): any {\n    let s0, s1, s2;\n\n    const key = peg$currPos * 34 + 26;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseAnyCharacters();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseAnyCharacters();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c149(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseAnyCharacters(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 27;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c150) {\n      s1 = peg$c150;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c151); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c152();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c153) {\n        s1 = peg$c153;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c154); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c155();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (peg$c156.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c157); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c158();\n        }\n        s0 = s1;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseValueCharacters(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 28;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (peg$c159.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c160); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c158();\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseLettersAndDigits(): any {\n    let s0, s1, s2, s3, s4, s5, s6;\n\n    const key = peg$currPos * 34 + 29;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLetters();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseDigits();\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        s6 = peg$parseLetters();\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = peg$parseLetters();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseDigits();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$parseLetters();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parseLetters();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c158();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDigits(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 30;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c161.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c162); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c161.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c162); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNonZeroDigits(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 31;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c163.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c164); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c163.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c164); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseLetters(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 32;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c165.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c166); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c165.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c166); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_(): any {\n    let s0, s1;\n\n    const key = peg$currPos * 34 + 33;\n    const cached: ICached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c168.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c169); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c168.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c169); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c167); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function buildBinaryOperand(head: Operand, tail: Array<any>, isArithmeticOp: boolean = false) {\n    return tail.reduce(\n      function(result, elements) {\n        return new BinaryOperand(elements[1], result, elements[3], isArithmeticOp);\n      },\n      head);\n  }\n\n  function flattenArray(array: Array<any>): Array<any> {\n    return [].concat.apply([], array);\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport interface IParseOptions {\n  filename?: string;\n  startRule?: string;\n  tracer?: any;\n  [key: string]: any;\n}\nexport type ParseFunction = (input: string, options?: IParseOptions) => any;\nexport const parse: ParseFunction = peg$parse;\n", "import { Operand, Const } from \"./expressions/expressions\";\nimport { SyntaxError, parse } from \"./expressions/expressionParser\";\n\nexport class ConditionsParserError {\n  constructor(public at: number, public code: string) {}\n}\n\nexport class ConditionsParser {\n  private conditionError: ConditionsParserError;\n\n  private patchExpression(text: string) {\n    return text\n      .replace(/=>/g, \">=\")\n      .replace(/=</g, \"<=\")\n      .replace(/<>/g, \"!=\")\n      .replace(/equals/g, \"equal \")\n      .replace(/notequals/g, \"notequal \");\n  }\n\n  public createCondition(text: string): Operand {\n    return this.parseExpression(text);\n  }\n\n  public parseExpression(text: string): Operand {\n    try {\n      return parse(this.patchExpression(text));\n    } catch(e) {\n      if (e instanceof SyntaxError) {\n        this.conditionError = new ConditionsParserError(\n          e.location.start.offset,\n          e.message\n        );\n      }\n    }\n  }\n\n  public get error(): ConditionsParserError {\n    return this.conditionError;\n  }\n}\n", "import { HashTable } from \"./helpers\";\nimport { IValueGetterContext, ProcessValue, VariableGetterContextEx } from \"./conditionProcessValue\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { Operand, FunctionOperand, AsyncFunctionItem } from \"./expressions/expressions\";\nimport { ConditionsParser } from \"./conditionsParser\";\n\n/**\n * Base interface for expression execution\n */\nexport interface IExpresionExecutor {\n  /**\n   * This call back runs on executing expression if there is at least one async function\n   */\n  onComplete: (res: any, id: number) => void;\n  /**\n   * The expression as string, property with get\n   */\n  expression: string;\n  /**\n   * Returns true if the expression is valid and can be executed\n   */\n  canRun(): boolean;\n  /**\n   * Run the expression. Returns the result of execution.\n   * The result can be undefined if there is an asyn function. In this case result will be returned onComplete callback.\n   * @param values has with values names and their results. Normally it is question names and their values\n   * @param properties the list of properties that are available in functions. Commonly it is survey and question, if expression execuited in a question context\n   */\n  run(values: HashTable<any>, properties: HashTable<any>, id: number): any;\n  runContext(context: IValueGetterContext, properties: HashTable<any>, id: number): any;\n  /**\n   * Returns the list of variables that used in the expression. They defined as: {variableName} in default parser.\n   */\n  getVariables(): Array<string>;\n  /**\n   * Returns true if there is a function in the expression\n   */\n  hasFunction(): boolean;\n  /**\n   * Returns true if there is an async function in the expression\n   */\n  isAsync: boolean;\n}\n\nexport class ExpressionExecutorRunner {\n  private processValue: ProcessValue;\n  private asyncFuncList: Array<AsyncFunctionItem>;\n  constructor(private operand: Operand, private id: number, private onComplete: (res: any, id: number) => void, properties: HashTable<any>, context: IValueGetterContext) {\n    this.processValue = new ProcessValue(context);\n    this.processValue.properties = properties;\n  }\n  public run(isAsync: boolean): any {\n    if (!isAsync) return this.runValues();\n    this.processValue.onCompleteAsyncFunc = (op: any): void => {\n      const item = this.getAsyncItemByOperand(op, this.asyncFuncList);\n      if (item) {\n        this.doAsyncFunctionReady(item);\n      }\n    };\n    this.asyncFuncList = new Array<AsyncFunctionItem>();\n    this.operand.addToAsyncList(this.asyncFuncList);\n    for (var i = 0; i < this.asyncFuncList.length; i++) {\n      this.runAsyncItem(this.asyncFuncList[i]);\n    }\n    return false;\n  }\n  private getAsyncItemByOperand(op: FunctionOperand, list: Array<AsyncFunctionItem>): AsyncFunctionItem {\n    if (!Array.isArray(list)) return null;\n    for (let i = 0; i < list.length; i ++) {\n      if (list[i].operand === op) return list[i];\n      const res = this.getAsyncItemByOperand(op, list[i].children);\n      if (!!res) return res;\n    }\n    return null;\n  }\n  private runAsyncItem(item: AsyncFunctionItem): void {\n    if (item.children) {\n      item.children.forEach(child => this.runAsyncItem(child));\n    } else {\n      this.runAsyncItemCore(item);\n    }\n  }\n  private runAsyncItemCore(item: AsyncFunctionItem): void {\n    if (item.operand) {\n      item.operand.evaluate(this.processValue);\n    } else {\n      this.doAsyncFunctionReady(item);\n    }\n  }\n  private doAsyncFunctionReady(item: AsyncFunctionItem): void {\n    if (item.parent && this.isAsyncChildrenReady(item)) {\n      this.runAsyncItemCore(item.parent);\n      return;\n    }\n    for (var i = 0; i < this.asyncFuncList.length; i++) {\n      if (!this.isAsyncFuncReady(this.asyncFuncList[i])) return;\n    }\n    this.runValues();\n  }\n  private isAsyncFuncReady(item: AsyncFunctionItem): boolean {\n    if (item.operand && !item.operand.isReady(this.processValue)) return false;\n    return this.isAsyncChildrenReady(item);\n  }\n  private isAsyncChildrenReady(item: AsyncFunctionItem): boolean {\n    if (item.children) {\n      for (let i = 0; i < item.children.length; i ++) {\n        if (!this.isAsyncFuncReady(item.children[i])) return false;\n      }\n    }\n    return true;\n  }\n  private runValues(): any {\n    var res = this.operand.evaluate(this.processValue);\n    if (!!this.onComplete) {\n      this.onComplete(res, this.id);\n    }\n    return res;\n  }\n}\n\nexport class ExpressionExecutor implements IExpresionExecutor {\n  public static createExpressionExecutor: (expression: string) => IExpresionExecutor =\n    (expression: string) => { return new ExpressionExecutor(expression); };\n  public static getQuestionErrorText(properties: HashTable<any>): string {\n    if (!!properties) {\n      const question = properties[\"question\"];\n      if (!!question && !!question.name) {\n        return \" It is used in the question: '\" + question.name + \"'.\";\n      }\n    }\n    return \"\";\n  }\n  public onComplete: (res: any, id: number) => void;\n  private expressionValue: string;\n  private operand: Operand;\n  private parser = new ConditionsParser();\n  private isAsyncValue: boolean = false;\n  private hasFunctionValue: boolean = false;\n  constructor(expression: string) {\n    this.setExpression(expression);\n  }\n  public get expression(): string {\n    return this.expressionValue;\n  }\n  private setExpression(value: string): void {\n    if (this.expression === value) return;\n    this.expressionValue = value;\n    this.operand = this.parser.parseExpression(value);\n    this.hasFunctionValue = this.canRun() ? this.operand.hasFunction() : false;\n    this.isAsyncValue = this.hasFunction()\n      ? this.operand.hasAsyncFunction()\n      : false;\n  }\n  public getVariables(): Array<string> {\n    if (!this.operand) return [];\n\n    var variables: Array<string> = [];\n    this.operand.setVariables(variables);\n    return variables;\n  }\n\n  public hasFunction(): boolean {\n    return this.hasFunctionValue;\n  }\n  public get isAsync(): boolean {\n    return this.isAsyncValue;\n  }\n\n  public canRun(): boolean {\n    return !!this.operand;\n  }\n\n  public run(values: HashTable<any>, properties?: HashTable<any>, id?: number): any {\n    return this.runContext(new VariableGetterContextEx(values, properties?.context), properties, id);\n  }\n  public runContext(context: IValueGetterContext, properties: HashTable<any> = null, id: number): any {\n    if (!this.operand) {\n      if (!!this.expression) {\n        ConsoleWarnings.warn(\"Invalid expression: '\" + this.expression + \"'.\" + ExpressionExecutor.getQuestionErrorText(properties));\n      }\n      return null;\n    }\n    const runner = new ExpressionExecutorRunner(this.operand, id, this.onComplete, properties, context);\n    return runner.run(this.isAsync);\n  }\n}\n\nexport class ExpressionRunnerBase {\n  private expressionExecutor: IExpresionExecutor;\n  private variables: string[];\n  private containsFunc: boolean;\n  private static IdRunnerCounter = 1;\n  public onBeforeAsyncRun: (id: number) => void;\n  public onAfterAsyncRun: (id: number) => void;\n\n  public constructor(expression: string) {\n    this.expression = expression;\n  }\n  public get expression(): string {\n    return !!this.expressionExecutor ? this.expressionExecutor.expression : \"\";\n  }\n\n  public set expression(value: string) {\n    if (!!this.expressionExecutor && value === this.expression) return;\n    this.expressionExecutor = ExpressionExecutor.createExpressionExecutor(value);\n    this.expressionExecutor.onComplete = (res: any, id: number) => { this.doOnComplete(res, id); };\n    this.variables = undefined;\n    this.containsFunc = undefined;\n  }\n\n  public getVariables(): Array<string> {\n    if (this.variables === undefined) {\n      this.variables = this.expressionExecutor.getVariables();\n    }\n    return this.variables;\n  }\n\n  public hasFunction(): boolean {\n    if (this.containsFunc === undefined) {\n      this.containsFunc = this.expressionExecutor.hasFunction();\n    }\n    return this.containsFunc;\n  }\n  public get isAsync(): boolean {\n    return this.expressionExecutor.isAsync;\n  }\n\n  public canRun(): boolean {\n    return this.expressionExecutor.canRun();\n  }\n  public runContextCore(context: IValueGetterContext, properties?: HashTable<any>): any {\n    const id = ExpressionRunnerBase.IdRunnerCounter ++;\n    if (this.onBeforeAsyncRun && this.isAsync) {\n      this.onBeforeAsyncRun(id);\n    }\n    return this.expressionExecutor.runContext(context, properties, id);\n  }\n  protected doOnComplete(res: any, id: number): void {\n    if (this.onAfterAsyncRun && this.isAsync) {\n      this.onAfterAsyncRun(id);\n    }\n  }\n}\n\nexport class ConditionRunner extends ExpressionRunnerBase {\n  public onRunComplete: (result: boolean) => void;\n  public runValues(values: HashTable<any>, properties?: HashTable<any>): boolean {\n    return this.runContext(new VariableGetterContextEx(values, properties?.context), properties);\n  }\n  public runContext(context: IValueGetterContext, properties?: HashTable<any>): boolean {\n    return this.runContextCore(context, properties) == true;\n  }\n  protected doOnComplete(res: any, id: number): void {\n    if (!!this.onRunComplete)this.onRunComplete(res == true);\n    super.doOnComplete(res, id);\n  }\n}\n\nexport class ExpressionRunner extends ExpressionRunnerBase {\n  public onRunComplete: (result: any) => void;\n  public runValues(values: HashTable<any>, properties?: HashTable<any>): any {\n    return this.runContext(new VariableGetterContextEx(values, properties?.context), properties);\n  }\n  public runContext(context: IValueGetterContext, properties?: HashTable<any>): any {\n    return this.runContextCore(context, properties);\n  }\n  protected doOnComplete(res: any, id: number): void {\n    if (!!this.onRunComplete)this.onRunComplete(res);\n    super.doOnComplete(res, id);\n  }\n}\n", "import { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { Helpers, HashTable } from \"./helpers\";\nimport {\n  CustomPropertiesCollection,\n  JsonObject,\n  JsonObjectProperty,\n  JsonMetadataClass,\n  Serializer,\n} from \"./jsonobject\";\nimport { settings } from \"./settings\";\nimport { ItemValue } from \"./itemvalue\";\nimport { IElement, IFindElement, IProgressInfo, ISurvey, ILoadFromJSONOptions, ISaveToJSONOptions } from \"./base-interfaces\";\nimport { ExpressionRunner } from \"./conditions\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, VariableGetterContext } from \"./conditionProcessValue\";\n\ninterface IExpressionRunnerInfo {\n  onExecute: (obj: Base, res: any) => void;\n  canRun?: (obj: Base) => boolean;\n}\nexport class Bindings {\n  private properties: Array<JsonObjectProperty> = null;\n  private values: any = null;\n  constructor(private obj: Base) { }\n  public getType(): string {\n    return \"bindings\";\n  }\n  public get isSurveyObj(): boolean { return true; }\n  public getNames(): Array<string> {\n    var res: Array<string> = [];\n    this.fillProperties();\n    for (var i = 0; i < this.properties.length; i++) {\n      if (this.properties[i].isVisible(\"\", this.obj)) {\n        res.push(this.properties[i].name);\n      }\n    }\n    return res;\n  }\n  public getProperties(): Array<JsonObjectProperty> {\n    var res: Array<JsonObjectProperty> = [];\n    this.fillProperties();\n    for (var i = 0; i < this.properties.length; i++) {\n      res.push(this.properties[i]);\n    }\n    return res;\n  }\n  public setBinding(propertyName: string, valueName: string) {\n    if (!this.values)this.values = {};\n    const oldValue = this.getJson();\n    if (oldValue === valueName) return;\n    if (!!valueName) {\n      this.values[propertyName] = valueName;\n    } else {\n      delete this.values[propertyName];\n      if (Object.keys(this.values).length == 0) {\n        this.values = null;\n      }\n    }\n    this.onChangedJSON(oldValue);\n  }\n  public clearBinding(propertyName: string) {\n    this.setBinding(propertyName, \"\");\n  }\n  public isEmpty(): boolean {\n    if (!this.values) return true;\n    for (var key in this.values) return false;\n    return true;\n  }\n  public getValueNameByPropertyName(propertyName: string): string {\n    if (!this.values) return undefined;\n    return this.values[propertyName];\n  }\n  public getPropertiesByValueName(valueName: string): Array<string> {\n    if (!this.values) return [];\n    var res: Array<string> = [];\n    for (var key in this.values) {\n      if (this.values[key] == valueName) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n  public getJson(): any {\n    if (this.isEmpty()) return undefined;\n    const res: any = {};\n    this.getNames().forEach(key => {\n      if (this.values[key] !== undefined) {\n        res[key] = this.values[key];\n      }\n    });\n    return res;\n  }\n  public setJson(value: any, isLoading?: boolean): void {\n    const oldValue = this.getJson();\n    this.values = null;\n    if (!!value) {\n      this.getNames().forEach(key => {\n        if (value[key] !== undefined) {\n          if (!this.values)this.values = {};\n          this.values[key] = value[key];\n        }\n      });\n    }\n    if (!isLoading && !Helpers.isTwoValueEquals(oldValue, this.values)) {\n      this.onChangedJSON(oldValue);\n    }\n  }\n  private fillProperties() {\n    if (this.properties !== null) return;\n    this.properties = [];\n    var objProperties = Serializer.getPropertiesByObj(this.obj);\n    for (var i = 0; i < objProperties.length; i++) {\n      if (objProperties[i].isBindable) {\n        this.properties.push(objProperties[i]);\n      }\n    }\n  }\n  private onChangedJSON(oldValue: any): void {\n    if (this.obj) {\n      this.obj.onBindingChanged(oldValue, this.getJson());\n    }\n  }\n}\n\nexport class Dependencies {\n  private static DependenciesCount = 0;\n  constructor(public currentDependency: () => void, public target: Base, public property: string) {\n  }\n  dependencies: Array<{ obj: Base, prop: string, id: string }> = [];\n  id: string = \"\" + (++Dependencies.DependenciesCount);\n  addDependency(target: Base, property: string): void {\n    if (this.target === target && this.property === property)\n      return;\n    if (this.dependencies.some(dependency => dependency.obj === target && dependency.prop === property))\n      return;\n\n    this.dependencies.push({\n      obj: target,\n      prop: property,\n      id: this.id\n    });\n    target.registerPropertyChangedHandlers([property], this.currentDependency, this.id);\n\n  }\n  public dispose(): void {\n    this.dependencies.forEach(dependency => {\n      dependency.obj.unregisterPropertyChangedHandlers([dependency.prop], dependency.id);\n    });\n    // this.currentDependency = undefined;\n  }\n}\n\nexport class ComputedUpdater<T = any> {\n  public static readonly ComputedUpdaterType = \"__dependency_computed\";\n  private dependencies: Dependencies = undefined;\n  constructor(private _updater: () => T) {\n  }\n  readonly type = ComputedUpdater.ComputedUpdaterType;\n  public get updater(): () => T {\n    return this._updater;\n  }\n  public setDependencies(dependencies: Dependencies): void {\n    this.clearDependencies();\n    this.dependencies = dependencies;\n  }\n  protected getDependencies(): Dependencies {\n    return this.dependencies;\n  }\n  private clearDependencies() {\n    if (this.dependencies) {\n      this.dependencies.dispose();\n      this.dependencies = undefined;\n    }\n  }\n  dispose(): any {\n    this.clearDependencies();\n    this._updater = undefined;\n  }\n}\n\n/**\n * A base class for all SurveyJS objects.\n */\nexport class Base implements IObjectValueContext {\n  private static currentDependencis: Dependencies = undefined;\n  public static finishCollectDependencies(): Dependencies {\n    const deps = Base.currentDependencis;\n    Base.currentDependencis = undefined;\n    return deps;\n  }\n  public static startCollectDependencies(updater: () => void, target: Base, property: string): void {\n    if (Base.currentDependencis !== undefined) {\n      throw new Error(\"Attempt to collect nested dependencies. Nested dependencies are not supported.\");\n    }\n    Base.currentDependencis = new Dependencies(updater, target, property);\n  }\n  protected static collectDependency(target: Base, property: string): void {\n    if (Base.currentDependencis === undefined) return;\n    Base.currentDependencis.addDependency(target, property);\n  }\n  public dependencies: { [key: string]: ComputedUpdater } = {};\n  public static get commentSuffix(): string {\n    return settings.commentSuffix;\n  }\n  public static set commentSuffix(val: string) {\n    settings.commentSuffix = val;\n  }\n  public static get commentPrefix(): string {\n    return Base.commentSuffix;\n  }\n  public static set commentPrefix(val: string) {\n    Base.commentSuffix = val;\n  }\n  public static createItemValue: (item: any, type?: string) => any;\n  public static itemValueLocStrChanged: (arr: Array<any>) => void;\n  /**\n   * Returns `true` if a passed `value` is an empty string, array, or object or if it equals to `undefined` or `null`.\n   *\n   * @param value A value to be checked.\n   * @param trimString *(Optional)* When this parameter is `true`, the method ignores whitespace characters at the beginning and end of a string value. Pass `false` to disable this functionality.\n   */\n  public isValueEmpty(value: any, trimString: boolean = true): boolean {\n    if (trimString) {\n      value = this.trimValue(value);\n    }\n    return Helpers.isValueEmpty(value);\n  }\n  public equals(obj: Base): boolean {\n    if (!obj) return false;\n    if (this.isDisposed || obj.isDisposed) return false;\n    if (this.getType() != obj.getType()) return false;\n    return this.equalsCore(obj);\n  }\n  protected equalsCore(obj: Base): boolean {\n    if ((<any>this).name !== (<any>obj).name) return false;\n    return Helpers.isTwoValueEquals(this.toJSON(), obj.toJSON(), false, true, false);\n  }\n  protected trimValue(value: any): any {\n    if (!!value && (typeof value === \"string\" || value instanceof String))\n      return value.trim();\n    return value;\n  }\n  public static createPropertiesHash() {\n    return {};\n  }\n\n  private propertyHash: { [index: string]: any } = Base.createPropertiesHash();\n  private localizableStrings: { [index: string]: LocalizableString };\n  private arraysInfo: { [index: string]: any };\n  private eventList: Array<EventBase<any>> = [];\n  private expressionInfo: { [index: string]: IExpressionRunnerInfo };\n  private isDisposedValue: boolean;\n  private classMetaData: JsonMetadataClass;\n  private onPropChangeFunctions: Array<{\n    name: string,\n    func: (...args: any[]) => void,\n    key: string,\n  }>;\n  protected isLoadingFromJsonValue: boolean = false;\n  public loadingOwner: Base = null;\n\n  protected jsonObj: any;\n  /**\n   * An event that is raised when a property of this SurveyJS object has changed.\n   *\n   * Parameters:\n   *\n   * - `sender`: `this`\\\n   * A SurveyJS object whose property has changed.\n   * - `options.name`: `string`\\\n   * The name of the changed property.\n   * - `options.newValue`: `any`\\\n   * A new value for the property.\n   * - `options.oldValue`: `any`\\\n   * An old value of the property. If the property is an array, `oldValue` contains the same array as `newValue` does.\n   *\n   * If you need to add and remove property change event handlers dynamically, use the [`registerPropertyChangedHandlers`](#registerPropertyChangedHandlers) and [`unregisterPropertyChangedHandlers`](#unregisterPropertyChangedHandlers) methods instead.\n   */\n  public onPropertyChanged: EventBase<Base> = this.addEvent<Base>();\n  public onNestedPropertyChanged: EventBase<Base> = this.addEvent<Base>();\n  /**\n   * An event that is raised when an [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue) property is changed.\n   *\n   * Parameters:\n   *\n   * - `sender`: `this`\\\n   * A SurveyJS object whose property contains an array of `ItemValue` objects.\n   * - `options.obj`: [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue)\\\n   * An `ItemValue` object.\n   * - `options.propertyName`: `string`\\\n   * The name of the property to which an array of `ItemValue` objects is assigned (for example, `\"choices\"` or `\"rows\"`).\n   * - `options.name`: `\"text\"` | `\"value\"`\\\n   * The name of the changed property.\n   * - `options.newValue`: `any`\\\n   * A new value for the property.\n   */\n  public onItemValuePropertyChanged: Event<\n    (sender: Base, options: any) => any,\n    Base,\n    any\n  > = this.addEvent<Base>();\n\n  getPropertyValueCoreHandler: (propertiesHash: any, name: string) => any;\n\n  setPropertyValueCoreHandler: (\n    propertiesHash: any,\n    name: string,\n    val: any\n  ) => void;\n  createArrayCoreHandler: (propertiesHash: any, name: string) => Array<any>;\n  surveyChangedCallback: () => void;\n\n  private isCreating = true;\n\n  public constructor() {\n    CustomPropertiesCollection.createProperties(this);\n    this.onBaseCreating();\n    this.isCreating = false;\n  }\n  public dispose(): void {\n    for (var i = 0; i < this.eventList.length; i++) {\n      this.eventList[i].clear();\n    }\n    this.onPropertyValueChangedCallback = undefined;\n    this.isDisposedValue = true;\n    Object.keys(this.dependencies).forEach(key => this.dependencies[key].dispose());\n    // this.dependencies = {};\n    Object.keys(this.propertyHash).forEach(key => {\n      const propVal = this.getPropertyValueCore(this.propertyHash, key);\n      if (!!propVal && propVal.type == ComputedUpdater.ComputedUpdaterType) {\n        (propVal as ComputedUpdater).dispose();\n      }\n    });\n  }\n  public get isDisposed(): boolean {\n    return this.isDisposedValue === true;\n  }\n  public get isSurveyObj(): boolean { return true; }\n  protected addEvent<T, Options = any>(): EventBase<T, Options> {\n    const res = new EventBase<T, Options>();\n    this.eventList.push(res);\n    return res;\n  }\n  protected onBaseCreating(): void { }\n  /**\n   * Returns the object type as it is used in the JSON schema.\n   */\n  public getType(): string {\n    return \"base\";\n  }\n  /**\n   * Use this method to find out if the current object is of a given `typeName` or inherited from it.\n   *\n   * @param typeName One of the values listed in the [getType()](https://surveyjs.io/form-library/documentation/question#getType) description.\n   * @returns `true` if the current object is of a given `typeName` or inherited from it.\n   * @see getType\n   */\n  public isDescendantOf(typeName: string): boolean {\n    return Serializer.isDescendantOf(this.getType(), typeName);\n  }\n  public getSurvey(isLive: boolean = false): ISurvey {\n    return null;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    const survey = <IObjectValueContext><any>this.getSurvey();\n    return !!survey ? survey.getValueGetterContext() : new VariableGetterContext({});\n  }\n  /**\n   * Returns `true` if the survey is being designed in Survey Creator.\n   */\n  public get isDesignMode(): boolean {\n    const survey = this.getSurvey();\n    return !!survey && survey.isDesignMode;\n  }\n  /**\n   * Returns `true` if the object is included in a survey.\n   *\n   * This property may return `false`, for example, when you [create a survey model dynamically](https://surveyjs.io/form-library/documentation/design-survey-create-a-simple-survey#create-or-change-a-survey-model-dynamically).\n   */\n  public get inSurvey(): boolean {\n    return !!this.getSurvey(true);\n  }\n  private bindingsValue: Bindings;\n  public get bindings(): Bindings {\n    if (!this.bindingsValue) {\n      this.bindingsValue = new Bindings(this);\n    }\n    return this.bindingsValue;\n  }\n  protected isBindingEmpty(): boolean {\n    return !this.bindingsValue || this.bindingsValue.isEmpty();\n  }\n  checkBindings(valueName: string, value: any): void { }\n  protected updateBindings(propertyName: string, value: any): void {\n    if (!this.bindingsValue) return;\n    var valueName = this.bindings.getValueNameByPropertyName(propertyName);\n    if (!!valueName) {\n      this.updateBindingValue(valueName, value);\n    }\n  }\n  protected updateBindingValue(valueName: string, value: any) { }\n  public getTemplate(): string {\n    return this.getType();\n  }\n  /**\n   * Returns `true` if the object configuration is being loaded from JSON.\n   */\n  public get isLoadingFromJson(): boolean {\n    return this.isLoadingFromJsonValue || this.getIsLoadingFromJson();\n  }\n  protected getIsLoadingFromJson(): boolean {\n    if (!!this.loadingOwner && this.loadingOwner.isLoadingFromJson) return true;\n    return this.isLoadingFromJsonValue;\n  }\n  startLoadingFromJson(json?: any): void {\n    this.isLoadingFromJsonValue = true;\n    this.jsonObj = json;\n  }\n  endLoadingFromJson() {\n    this.isLoadingFromJsonValue = false;\n  }\n\n  /**\n   * Returns a JSON schema that corresponds to the current survey element.\n   * @param options An object with configuration options.\n   * @param {boolean} options.storeDefaults Pass `true` if the JSON schema should include properties with default values.\n   * @returns A JSON schema of the survey element.\n   * @see fromJSON\n   */\n  public toJSON(options?: ISaveToJSONOptions): any {\n    return new JsonObject().toJsonObject(this, options);\n  }\n  /**\n   * Assigns a new JSON schema to the current survey element.\n   *\n   * The JSON schema should contain only serializable properties of this survey element. Event handlers and properties that do not belong to the survey element are ignored.\n   *\n   * @param json A JSON schema that you want to apply to the current survey element.\n   * @param options An object with configuration options.\n   * @param {boolean} options.validatePropertyValues Pass `true` if you want to validate property values. Use the [`jsonErrors`](#jsonErrors) array to access validation errors.\n   * @see toJSON\n   */\n  public fromJSON(json: any, options?: ILoadFromJSONOptions): void {\n    new JsonObject().toObject(json, this, options);\n    this.onSurveyLoad();\n  }\n  public onSurveyLoad() { }\n  /**\n   * Creates a new object that has the same type and properties as the current SurveyJS object.\n   */\n  public clone(): Base {\n    var clonedObj = <Base>Serializer.createClass(this.getType());\n    clonedObj.fromJSON(this.toJSON());\n    return clonedObj;\n  }\n  /**\n   * Returns a `JsonObjectProperty` object with metadata about a serializable property that belongs to the current SurveyJS object.\n   *\n   * If the property is not found, this method returns `null`.\n   * @param propName A property name.\n   */\n  public getPropertyByName(propName: string): JsonObjectProperty {\n    const type = this.getType();\n    if (!this.classMetaData || this.classMetaData.name !== type) {\n      this.classMetaData = Serializer.findClass(type);\n    }\n    return !!this.classMetaData ? this.classMetaData.findProperty(propName) : null;\n  }\n  public isPropertyVisible(propName: string): boolean {\n    const prop = this.getPropertyByName(propName);\n    return !!prop ? prop.isVisible(\"\", this) : false;\n  }\n  public static createProgressInfo(): IProgressInfo {\n    return {\n      questionCount: 0,\n      answeredQuestionCount: 0,\n      requiredQuestionCount: 0,\n      requiredAnsweredQuestionCount: 0,\n    };\n  }\n  public getProgressInfo(): IProgressInfo {\n    return Base.createProgressInfo();\n  }\n  public localeChanged(): void { }\n  public locStrsChanged(): void {\n    if (!!this.arraysInfo) {\n      for (let key in this.arraysInfo) {\n        let item = this.arraysInfo[key];\n        if (item && item.isItemValues) {\n          var arr = this.getPropertyValue(key);\n          if (arr && !!Base.itemValueLocStrChanged)\n            Base.itemValueLocStrChanged(arr);\n        }\n      }\n    }\n    if (!!this.localizableStrings) {\n      for (let key in this.localizableStrings) {\n        let item = this.getLocalizableString(key);\n        if (item) item.strChanged();\n      }\n    }\n  }\n  /**\n   * Returns the value of a property with a specified name.\n   *\n   * If the property is not found or does not have a value, this method returns either `undefined`, `defaultValue` specified in the property configuration, or a value passed as the `defaultValue` parameter.\n   *\n   * @param name A property name.\n   * @param defaultValue *(Optional)* A value to return if the property is not found or does not have a value.\n   */\n  public getPropertyValue(name: string, defaultValue?: any, calcFunc?: ()=> any): any {\n    const res = this.getPropertyValueWithoutDefault(name);\n    if (!!calcFunc && Array.isArray(res) && res.length === 0 && (<any>res).isReset === true) {\n      delete (<any>res).isReset;\n      this.setArrayPropertyDirectly(name, calcFunc(), false);\n      return res;\n    }\n    if (this.isValueUndefined(res)) {\n      const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n      if (locStr) return locStr.text;\n      if (!this.isValueUndefined(defaultValue)) return defaultValue;\n      if (!!calcFunc) {\n        const newVal = calcFunc();\n        if (newVal !== undefined) {\n          if (Array.isArray(newVal)) {\n            const array = this.createNewArray(name);\n            array.splice(0, 0, ...newVal);\n            return array;\n          } else {\n            this.setPropertyValueDirectly(name, newVal);\n            return newVal;\n          }\n        }\n      }\n      const propDefaultValue = this.getDefaultPropertyValue(name);\n      if (propDefaultValue !== undefined) return propDefaultValue;\n    }\n    return res;\n  }\n  protected isValueUndefined(value: any): boolean {\n    return Helpers.isValueUndefined(value);\n  }\n  public getDefaultPropertyValue(name: string): any {\n    const prop = this.getPropertyByName(name);\n    if (!prop || prop.isCustom && this.isCreating) return undefined;\n    if (!!prop.defaultValueFunc) return prop.defaultValueFunc(this);\n    const dValue = prop.getDefaultValue(this);\n    if (!this.isValueUndefined(dValue) && !Array.isArray(dValue)) return dValue;\n    const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n    if (locStr && locStr.localizationName) return this.getLocalizationString(locStr.localizationName);\n    if (prop.type == \"boolean\" || prop.type == \"switch\") return false;\n    if (prop.isCustom && !!prop.onGetValue) return prop.onGetValue(this);\n    return undefined;\n  }\n  public hasDefaultPropertyValue(name: string): boolean {\n    return this.getDefaultPropertyValue(name) !== undefined;\n  }\n  public resetPropertyValue(name: string): void {\n    const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n    if (locStr) {\n      this.setLocalizableStringText(name, undefined);\n      locStr.clear();\n    } else {\n      this.setPropertyValue(name, undefined);\n    }\n  }\n  protected getPropertyValueWithoutDefault(name: string): any {\n    return this.getPropertyValueCore(this.propertyHash, name);\n  }\n  protected getPropertyValueCore(propertiesHash: any, name: string): any {\n    if (!this.isLoadingFromJson) {\n      Base.collectDependency(this, name);\n    }\n    if (this.getPropertyValueCoreHandler)\n      return this.getPropertyValueCoreHandler(propertiesHash, name);\n    else return propertiesHash[name];\n  }\n  public geValueFromHash(): any {\n    return this.propertyHash[\"value\"];\n  }\n  protected setPropertyValueCore(propertiesHash: any, name: string, val: any): void {\n    if (this.setPropertyValueCoreHandler) {\n      if (!this.isDisposedValue) {\n        this.setPropertyValueCoreHandler(propertiesHash, name, val);\n      } else {\n        ConsoleWarnings.disposedObjectChangedProperty(name, this.getType());\n      }\n    } else propertiesHash[name] = val;\n  }\n  public get isEditingSurveyElement(): boolean {\n    var survey = this.getSurvey();\n    return !!survey && survey.isEditingSurveyElement;\n  }\n  public iteratePropertiesHash(func: (hash: any, key: string) => void) {\n    var keys: string[] = [];\n    for (var key in this.propertyHash) {\n      if (\n        key === \"value\" &&\n        this.isEditingSurveyElement &&\n        Array.isArray((<any>this).value)\n      )\n        continue;\n\n      keys.push(key);\n    }\n    keys.forEach((key) => func(this.propertyHash, key));\n  }\n  /**\n   * Assigns a new value to a specified property.\n   * @param name A property name.\n   * @param val A new value for the property.\n   */\n  public setPropertyValue(name: string, val: any): void {\n    if (this.isDisposedValue) return;\n    if (!this.isLoadingFromJson) {\n      const prop = this.getPropertyByName(name);\n      if (!!prop) {\n        val = prop.settingValue(this, val);\n      }\n    }\n    var oldValue = this.getPropertyValue(name);\n    if (\n      oldValue &&\n      Array.isArray(oldValue) &&\n      !!this.arraysInfo &&\n      (!val || Array.isArray(val))\n    ) {\n      if (!this.isTwoValueEquals(oldValue, val)) {\n        this.setArrayPropertyDirectly(name, val);\n      }\n    } else {\n      if (val !== oldValue) {\n        this.setPropertyValueDirectly(name, val);\n        if (!this.isTwoValueEquals(oldValue, val)) {\n          this.propertyValueChanged(name, oldValue, val);\n        }\n      }\n    }\n  }\n  protected setArrayPropertyDirectly(name: string, val: any, sendNotification: boolean = true): void {\n    var arrayInfo = this.arraysInfo[name];\n    this.setArray(\n      name,\n      this.getPropertyValue(name),\n      val,\n      arrayInfo ? arrayInfo.isItemValues : false,\n      arrayInfo ? sendNotification && arrayInfo.onPush : null\n    );\n  }\n  protected setPropertyValueDirectly(name: string, val: any): void {\n    this.setPropertyValueCore(this.propertyHash, name, val);\n  }\n  protected clearPropertyValue(name: string) {\n    this.setPropertyValueCore(this.propertyHash, name, null);\n    delete this.propertyHash[name];\n  }\n  public onPropertyValueChangedCallback(\n    name: string,\n    oldValue: any,\n    newValue: any,\n    sender: Base,\n    arrayChanges: ArrayChanges\n  ) { }\n  public itemValuePropertyChanged(\n    item: ItemValue,\n    name: string,\n    oldValue: any,\n    newValue: any\n  ) {\n    this.onItemValuePropertyChanged.fire(this, {\n      obj: item,\n      name: name,\n      oldValue: oldValue,\n      newValue: newValue,\n      propertyName: item.ownerPropertyName,\n    });\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void { }\n  protected propertyValueChanged(name: string, oldValue: any, newValue: any, arrayChanges?: ArrayChanges, target?: Base): void {\n    if (this.isLoadingFromJson) return;\n    this.updateBindings(name, newValue);\n    this.onPropertyValueChanged(name, oldValue, newValue);\n    this.onPropertyChanged.fire(this, {\n      name: name,\n      oldValue: oldValue,\n      newValue: newValue,\n      arrayChanges: arrayChanges,\n      target: target\n    });\n    this.doPropertyValueChangedCallback(\n      name,\n      oldValue,\n      newValue,\n      arrayChanges,\n      this\n    );\n    this.checkConditionPropertyChanged(name);\n    if (!this.onPropChangeFunctions) return;\n    for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n      if (this.onPropChangeFunctions[i].name == name)\n        this.onPropChangeFunctions[i].func(newValue, arrayChanges);\n    }\n  }\n  public onBindingChanged(oldValue: any, newValue: any): void {\n    if (this.isLoadingFromJson) return;\n    this.doPropertyValueChangedCallback(\"bindings\", oldValue, newValue);\n  }\n  protected get isInternal(): boolean {\n    return false;\n  }\n  private doPropertyValueChangedCallback(\n    name: string,\n    oldValue: any,\n    newValue: any,\n    arrayChanges?: ArrayChanges,\n    target?: Base\n  ) {\n    const fireCallback = (obj: Base): void => {\n      if (!!obj && !!obj.onPropertyValueChangedCallback) {\n        obj.onPropertyValueChangedCallback(name, oldValue, newValue, target, arrayChanges);\n      }\n    };\n    if (this.isInternal) {\n      fireCallback(this);\n      return;\n    }\n    if (!target) target = this;\n    var notifier: any = this.getSurvey();\n    if (!notifier) notifier = this;\n    fireCallback(notifier);\n    if (notifier !== this) {\n      fireCallback(this);\n    }\n  }\n  public addExpressionProperty(name: string, onExecute: (obj: Base, res: any) => void, canRun?: (obj: Base) => boolean): void {\n    if (!this.expressionInfo) {\n      this.expressionInfo = {};\n    }\n    this.expressionInfo[name] = { onExecute: onExecute, canRun: canRun };\n  }\n  public getDataFilteredProperties(): any {\n    return {};\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    if (!this.expressionInfo) return;\n    for (var key in this.expressionInfo) {\n      this.runConditionItemCore(key, properties);\n    }\n  }\n  protected canRunConditions(): boolean {\n    return !this.isDesignMode;\n  }\n  private checkConditionPropertyChanged(propName: string): void {\n    if (!this.expressionInfo || !this.expressionInfo[propName]) return;\n    if (!this.canRunConditions()) return;\n    this.runConditionItemCore(propName, this.getDataFilteredProperties());\n  }\n  private runConditionItemCore(propName: string, properties: HashTable<any>): void {\n    const info = this.expressionInfo[propName];\n    const expression = this.getPropertyValue(propName);\n    if (!expression) return;\n    if (!!info.canRun && !info.canRun(this)) return;\n    this.runExpressionByProperty(propName, properties, (res) => {\n      info.onExecute(this, res);\n    });\n  }\n  private asynExpressionHash: any;\n  private doBeforeAsynRun(id: number): void {\n    if (!this.asynExpressionHash)this.asynExpressionHash = {};\n    const isChanged = !this.isAsyncExpressionRunning;\n    this.asynExpressionHash[id] = true;\n    if (isChanged) {\n      this.onAsyncRunningChanged();\n    }\n  }\n  private doAfterAsynRun(id: number): void {\n    if (!!this.asynExpressionHash) {\n      delete this.asynExpressionHash[id];\n      if (!this.isAsyncExpressionRunning) {\n        this.onAsyncRunningChanged();\n      }\n    }\n  }\n  protected onAsyncRunningChanged(): void { }\n  public get isAsyncExpressionRunning(): boolean {\n    return !!this.asynExpressionHash && Object.keys(this.asynExpressionHash).length > 0;\n  }\n  protected createExpressionRunner(expression: string): ExpressionRunner {\n    const res = new ExpressionRunner(expression);\n    res.onBeforeAsyncRun = (id: number): void => { this.doBeforeAsynRun(id); };\n    res.onAfterAsyncRun = (id: number): void => { this.doAfterAsynRun(id); };\n    return res;\n  }\n  private runExpressionHash: HashTable<any>;\n  protected getExpressionFromSurvey(propName: string): string {\n    let expression = this[propName];\n    if (!expression) return \"\";\n    const survey = this.getSurvey();\n    return !!survey ? survey.beforeExpressionRunning(this, propName, expression) : expression;\n  }\n  protected runExpressionByProperty(propName: string, properties: HashTable<any>,\n    onExecute: (value: any) => void, canRun?: (runner: ExpressionRunner) => boolean): boolean {\n    if (!this[propName]) return false;\n    const expression = this.getExpressionFromSurvey(propName);\n    if (!!expression) {\n      const info = this.getExpressionInfoByProperty(propName, expression);\n      const runner = info.runner;\n      if (!info.isRunning && (!canRun || canRun(runner))) {\n        info.isRunning = true;\n        runner.onRunComplete = (value: any) => {\n          onExecute(value);\n          info.isRunning = false;\n        };\n        runner.runContext(this.getValueGetterContext(), this.getPropertiesCopy(properties, propName));\n      }\n    }\n    return true;\n  }\n  protected getPropertiesCopy(properties: HashTable<any>, propName?: string): HashTable<any> {\n    const copy: HashTable<any> = {};\n    for (const key in properties) {\n      copy[key] = properties[key];\n    }\n    if (propName) {\n      copy.propertyName = propName;\n    }\n    return copy;\n  }\n  protected getExpressionByProperty(propName: string): ExpressionRunner {\n    const expression = this.getExpressionFromSurvey(propName);\n    if (!expression) return null;\n    return this.getExpressionInfoByProperty(propName, expression).runner;\n  }\n  private getExpressionInfoByProperty(propName: string, expression: string): any {\n    if (!this.runExpressionHash) {\n      this.runExpressionHash = {};\n    }\n    let info = this.runExpressionHash[propName];\n    if (!info) {\n      info = { runner: this.createExpressionRunner(expression) };\n      this.runExpressionHash[propName] = info;\n    } else {\n      info.runner.expression = expression;\n    }\n    return info;\n  }\n  /**\n   * Registers a single value change handler for one or multiple properties.\n   *\n   * The `registerPropertyChangedHandlers` and [`unregisterPropertyChangedHandlers`](#unregisterPropertyChangedHandlers) methods allow you to manage property change event handlers dynamically. If you only need to attach an event handler without removing it afterwards, you can use the [`onPropertyChanged`](#onPropertyChanged) event instead.\n   * @param propertyNames An array of one or multiple property names.\n   * @param handler A function to call when one of the listed properties change. Accepts a new property value as an argument.\n   * @param key *(Optional)* A key that identifies the current registration. If a function for one of the properties is already registered with the same key, the function will be overwritten. You can also use the key to subsequently unregister handlers.\n   * @see unregisterPropertyChangedHandlers\n   */\n  public registerPropertyChangedHandlers(propertyNames: Array<string>, handler: any, key: string = null): void {\n    for (var i = 0; i < propertyNames.length; i++) {\n      this.registerFunctionOnPropertyValueChanged(propertyNames[i], handler, key);\n    }\n  }\n  /**\n   * Unregisters value change event handlers for the specified properties.\n   * @param propertyNames An array of one or multiple property names.\n   * @param key *(Optional)* A key of the registration that you want to cancel.\n   * @see registerPropertyChangedHandlers\n   */\n  public unregisterPropertyChangedHandlers(propertyNames: Array<string>, key: string = null): void {\n    for (var i = 0; i < propertyNames.length; i++) {\n      this.unRegisterFunctionOnPropertyValueChanged(propertyNames[i], key);\n    }\n  }\n  public registerFunctionOnPropertyValueChanged(name: string, func: any, key: string = null): void {\n    if (!this.onPropChangeFunctions) {\n      this.onPropChangeFunctions = [];\n    }\n    if (key) {\n      for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n        var item = this.onPropChangeFunctions[i];\n        if (item.name == name && item.key == key) {\n          item.func = func;\n          return;\n        }\n      }\n    }\n    this.onPropChangeFunctions.push({ name: name, func: func, key: key });\n  }\n  public registerFunctionOnPropertiesValueChanged(names: Array<string>, func: any, key: string = null): void {\n    this.registerPropertyChangedHandlers(names, func, key);\n  }\n  public unRegisterFunctionOnPropertyValueChanged(name: string, key: string = null): Array<any> {\n    if (!this.onPropChangeFunctions) return;\n    for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n      var item = this.onPropChangeFunctions[i];\n      if (item.name == name && item.key == key) {\n        return this.onPropChangeFunctions.splice(i, 1);\n      }\n    }\n  }\n  public unRegisterFunctionOnPropertiesValueChanged(names: Array<string>, key: string = null): void {\n    this.unregisterPropertyChangedHandlers(names, key);\n  }\n  public createCustomLocalizableObj(name: string): LocalizableString {\n    const locStr = this.getLocalizableString(name);\n    if (locStr) return locStr;\n    return this.createLocalizableString(name, <ILocalizableOwner>(<any>this), false, true);\n  }\n  public getLocale(): string {\n    const locOwner = this.getSurvey();\n    return !!locOwner ? locOwner.getLocale() : \"\";\n  }\n  public getLocalizationString(strName: string): string {\n    return getLocaleString(strName, this.getLocale());\n  }\n  public getLocalizationFormatString(strName: string, ...args: any[]): string {\n    const str: any = this.getLocalizationString(strName);\n    if (!str || !str.format) return \"\";\n    return str.format(...args);\n  }\n  protected createLocalizableString(\n    name: string,\n    owner: ILocalizableOwner,\n    useMarkDown: boolean = false,\n    defaultStr: boolean | string = false\n  ): LocalizableString {\n    let locName = undefined;\n    if (defaultStr) {\n      locName = defaultStr === true ? name : defaultStr;\n    }\n    const locStr = new LocalizableString(owner, useMarkDown, name, locName);\n    locStr.onStrChanged = (oldValue: string, newValue: string) => {\n      this.propertyValueChanged(name, oldValue, newValue);\n    };\n    if (!this.localizableStrings) {\n      this.localizableStrings = {};\n    }\n    this.localizableStrings[name] = locStr;\n    const prop = this.getPropertyByName(name);\n    locStr.disableLocalization = prop && prop.isLocalizable === false;\n    return locStr;\n  }\n  protected removeLocalizableString(name: string): void {\n    if (this.localizableStrings) {\n      delete this.localizableStrings[name];\n    }\n  }\n  public getLocalizableString(name: string): LocalizableString {\n    return !!this.localizableStrings ? this.localizableStrings[name] : null;\n  }\n  public getLocalizableStringText(\n    name: string,\n    defaultStr: string = \"\"\n  ): string {\n    Base.collectDependency(this, name);\n    var locStr = this.getLocalizableString(name);\n    if (!locStr) return \"\";\n    var res = locStr.text;\n    return res ? res : defaultStr;\n  }\n  public setLocalizableStringText(name: string, value: string) {\n    let locStr = this.getLocalizableString(name);\n    if (!locStr) return;\n    let oldValue = locStr.text;\n    if (oldValue != value) {\n      locStr.text = value;\n      // this.propertyValueChanged(name, oldValue, value);\n    }\n  }\n  public addUsedLocales(locales: Array<string>): void {\n    if (!!this.localizableStrings) {\n      for (let key in this.localizableStrings) {\n        let item = this.getLocalizableString(key);\n        if (item)this.AddLocStringToUsedLocales(item, locales);\n      }\n    }\n    if (!!this.arraysInfo) {\n      for (let key in this.arraysInfo) {\n        const prop = this.getPropertyByName(key);\n        if (!prop || !prop.isPropertySerializable(this)) continue;\n        let items = this.getPropertyValue(key);\n        if (!items || !items.length) continue;\n        for (let i = 0; i < items.length; i++) {\n          let item = items[i];\n          if (item && item.addUsedLocales) {\n            item.addUsedLocales(locales);\n          }\n        }\n      }\n    }\n  }\n  public searchText(text: string, founded: Array<IFindElement>) {\n    var strs: Array<LocalizableString> = [];\n    this.getSearchableLocalizedStrings(strs);\n    for (var i = 0; i < strs.length; i++) {\n      if (strs[i].setFindText(text)) {\n        founded.push({ element: this, str: strs[i] });\n      }\n    }\n  }\n  private getSearchableLocalizedStrings(arr: Array<LocalizableString>) {\n    if (!!this.localizableStrings) {\n      let keys: Array<string> = [];\n      this.getSearchableLocKeys(keys);\n      for (var i = 0; i < keys.length; i++) {\n        let item = this.getLocalizableString(keys[i]);\n        if (item) arr.push(item);\n      }\n    }\n    if (!this.arraysInfo) return;\n    let keys: Array<string> = [];\n    this.getSearchableItemValueKeys(keys);\n    for (var i = 0; i < keys.length; i++) {\n      var items = this.getPropertyValue(keys[i]);\n      if (!items) continue;\n      for (var j = 0; j < items.length; j++) {\n        arr.push(items[j].locText);\n      }\n    }\n  }\n  protected getSearchableLocKeys(keys: Array<string>) { }\n  protected getSearchableItemValueKeys(keys: Array<string>) { }\n  protected AddLocStringToUsedLocales(\n    locStr: LocalizableString,\n    locales: Array<string>\n  ) {\n    var locs = locStr.getLocales();\n    for (var i = 0; i < locs.length; i++) {\n      if (locales.indexOf(locs[i]) < 0) {\n        locales.push(locs[i]);\n      }\n    }\n  }\n  protected createItemValues(name: string): Array<any> {\n    var self = this;\n    var result = this.createNewArray(name, function (item: any) {\n      item.locOwner = self;\n      item.ownerPropertyName = name;\n      if (typeof item.getSurvey == \"function\") {\n        const survey: any = item.getSurvey();\n        if (!!survey && typeof survey.makeReactive == \"function\") {\n          survey.makeReactive(item);\n        }\n      }\n    });\n    this.arraysInfo[name].isItemValues = true;\n    return result;\n  }\n  private notifyArrayChanged(ar: any, arrayChanges: ArrayChanges) {\n    !!ar.onArrayChanged && ar.onArrayChanged(arrayChanges);\n  }\n  protected createNewArrayCore(name: string): Array<any> {\n    var res = null;\n    if (!!this.createArrayCoreHandler) {\n      res = this.createArrayCoreHandler(this.propertyHash, name);\n    }\n    if (!res) {\n      res = new Array<any>();\n      this.setPropertyValueCore(this.propertyHash, name, res);\n    }\n    return res;\n  }\n  protected ensureArray(\n    name: string,\n    onPush: any = null,\n    onRemove: any = null\n  ) {\n    if (this.arraysInfo && this.arraysInfo[name]) {\n      return;\n    }\n\n    return this.createNewArray(name, onPush, onRemove);\n  }\n\n  protected createNewArray(\n    name: string,\n    onPush: any = null,\n    onRemove: any = null\n  ): Array<any> {\n    var newArray = this.createNewArrayCore(name);\n    if (!this.arraysInfo) {\n      this.arraysInfo = {};\n    }\n    this.arraysInfo[name] = { onPush: onPush, isItemValues: false };\n    var self = this;\n    newArray.push = function (value): number {\n      var result = Object.getPrototypeOf(newArray).push.call(newArray, value);\n      if (!self.isDisposedValue) {\n        if (onPush) onPush(value, newArray.length - 1);\n        const arrayChanges = new ArrayChanges(\n          newArray.length - 1,\n          0,\n          [value],\n          []\n        );\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.shift = function (): number {\n      var result = Object.getPrototypeOf(newArray).shift.call(newArray);\n      if (!self.isDisposedValue && result) {\n        if (onRemove) onRemove(result);\n        const arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.unshift = function (value): number {\n      var result = Object.getPrototypeOf(newArray).unshift.call(\n        newArray,\n        value\n      );\n      if (!self.isDisposedValue) {\n        if (onPush) onPush(value, newArray.length - 1);\n        const arrayChanges = new ArrayChanges(0, 0, [value], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.pop = function (): number {\n      var result = Object.getPrototypeOf(newArray).pop.call(newArray);\n      if (!self.isDisposedValue) {\n        if (onRemove) onRemove(result);\n        const arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.splice = function (\n      start?: number,\n      deleteCount?: number,\n      ...items: any[]\n    ): any[] {\n      if (!start) start = 0;\n      if (!deleteCount) deleteCount = 0;\n      var result = Object.getPrototypeOf(newArray).splice.call(\n        newArray,\n        start,\n        deleteCount,\n        ...items\n      );\n      if (!items) items = [];\n      if (!self.isDisposedValue) {\n        if (onRemove && result) {\n          for (var i = 0; i < result.length; i++) {\n            onRemove(result[i]);\n          }\n        }\n        if (onPush) {\n          for (var i = 0; i < items.length; i++) {\n            onPush(items[i], start + i);\n          }\n        }\n        const arrayChanges = new ArrayChanges(\n          start,\n          deleteCount,\n          items,\n          result\n        );\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n\n    return newArray;\n  }\n  protected getItemValueType(): string {\n    return undefined;\n  }\n  protected setArray(\n    name: string,\n    src: any[],\n    dest: any[],\n    isItemValues: boolean,\n    onPush: any\n  ) {\n    var deletedItems = [].concat(src);\n    Object.getPrototypeOf(src).splice.call(src, 0, src.length);\n    if (!!dest) {\n      for (var i = 0; i < dest.length; i++) {\n        var item = dest[i];\n        if (isItemValues) {\n          if (!!Base.createItemValue) {\n            item = Base.createItemValue(item, this.getItemValueType());\n          }\n        }\n        Object.getPrototypeOf(src).push.call(src, item);\n        if (onPush) onPush(src[i]);\n      }\n      delete (<any>src).isReset;\n    } else {\n      (<any>src).isReset = true;\n    }\n    const arrayChanges = new ArrayChanges(\n      0,\n      deletedItems.length,\n      src,\n      deletedItems\n    );\n    this.propertyValueChanged(name, deletedItems, src, arrayChanges);\n    this.notifyArrayChanged(src, arrayChanges);\n  }\n  protected isTwoValueEquals(\n    x: any,\n    y: any,\n    caseInSensitive: boolean = false,\n    trimString: boolean = false\n  ): boolean {\n    return Helpers.checkIfValuesEqual(x, y, { ignoreOrder: false, caseSensitive: !caseInSensitive, trimStrings: trimString, doNotConvertNumbers: true });\n  }\n  private static copyObject(dst: any, src: any) {\n    for (var key in src) {\n      var source = src[key];\n      if (typeof source === \"object\") {\n        source = {};\n        this.copyObject(source, src[key]);\n      }\n      dst[key] = source;\n    }\n  }\n  protected copyCssClasses(dest: any, source: any): void {\n    if (!source) return;\n    if (typeof source === \"string\" || source instanceof String) {\n      dest[\"root\"] = source;\n    } else {\n      Base.copyObject(dest, source);\n    }\n  }\n  private getValueInLowCase(val: any): any {\n    if (!!val && typeof val == \"string\") return val.toLowerCase();\n    return val;\n  }\n  public getElementsInDesign(includeHidden: boolean = false): Array<IElement> {\n    return [];\n  }\n  public get animationAllowed(): boolean {\n    return this.getIsAnimationAllowed();\n  }\n  protected getIsAnimationAllowed(): boolean {\n    return settings.animationEnabled && this.animationAllowedLock >= 0 && !this.isLoadingFromJson && !this.isDisposed && (!!this.onElementRerendered || !this.supportOnElementRerenderedEvent);\n  }\n  private animationAllowedLock: number = 0;\n  public blockAnimations(): void {\n    this.animationAllowedLock--;\n  }\n  public releaseAnimations(): void {\n    this.animationAllowedLock++;\n  }\n  //remove when knockout obsolete\n  public supportOnElementRerenderedEvent = true;\n  public onElementRerenderedEventEnabled = false;\n  public enableOnElementRerenderedEvent(): void {\n    this.onElementRerenderedEventEnabled = true;\n  }\n  public disableOnElementRerenderedEvent(): void {\n    this.onElementRerendered?.fire(this, { isCancel: true });\n    this.onElementRerenderedEventEnabled = false;\n  }\n  protected _onElementRerendered: EventBase<Base> = new EventBase();\n  public get onElementRerendered(): EventBase<Base> {\n    return this.supportOnElementRerenderedEvent && this.onElementRerenderedEventEnabled ? this._onElementRerendered : undefined;\n  }\n  public afterRerender(): void {\n    this.onElementRerendered?.fire(this, { isCancel: false });\n  }\n}\n\nexport class ArrayChanges<T = any> {\n  constructor(\n    public index: number,\n    public deleteCount: number,\n    public itemsToAdd: T[],\n    public deletedItems: T[]\n  ) { }\n}\n\nexport class Event<CallbackFunction extends Function, Sender, Options> {\n  public onCallbacksChanged: () => void;\n  protected callbacks: Array<CallbackFunction>;\n  public get isEmpty(): boolean {\n    return this.length === 0;\n  }\n  public get length(): number {\n    return !!this.callbacks ? this.callbacks.length : 0;\n  }\n  public fireByCreatingOptions(sender: any, createOptions: () => Options): void {\n    if (!this.callbacks) return;\n    for (var i = 0; i < this.callbacks.length; i++) {\n      this.callbacks[i](sender, createOptions());\n      if (!this.callbacks) return;\n    }\n  }\n  public fire(sender: Sender, options: Options): void {\n    if (!this.callbacks) return;\n    const callbacks = [].concat(this.callbacks);\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](sender, options);\n      if (!this.callbacks) return;\n    }\n  }\n  public clear(): void {\n    this.callbacks = undefined;\n  }\n  public add(func: CallbackFunction): void {\n    if (this.hasFunc(func)) return;\n    if (!this.callbacks) {\n      this.callbacks = new Array<CallbackFunction>();\n    }\n    this.callbacks.push(func);\n    this.fireCallbackChanged();\n  }\n  public remove(func: CallbackFunction): void {\n    if (this.hasFunc(func)) {\n      var index = this.callbacks.indexOf(func, 0);\n      this.callbacks.splice(index, 1);\n      this.fireCallbackChanged();\n    }\n  }\n  public hasFunc(func: CallbackFunction): boolean {\n    if (this.callbacks == null) return false;\n    return this.callbacks.indexOf(func, 0) > -1;\n  }\n  private fireCallbackChanged(): void {\n    if (!!this.onCallbacksChanged) {\n      this.onCallbacksChanged();\n    }\n  }\n}\n\nexport class EventBase<Sender, Options = any> extends Event<\n  (sender: Sender, options: Options) => any,\n  Sender,\n  Options\n> { }\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "import { DomDocumentHelper, DomWindowHelper } from \"../global_variables_utils\";\nimport { AdaptiveActionContainer } from \"../actions/adaptive-container\";\nimport { isContainerVisible } from \"./utils\";\ninterface IDimensions {\n  scroll: number;\n  offset: number;\n}\n\nexport class ResponsivityManager {\n  private resizeObserver: ResizeObserver = undefined;\n  private isInitialized = false;\n  private isResizeObserverStarted: boolean = false;\n\n  public getComputedStyle = (elt: Element): CSSStyleDeclaration => {\n    return DomDocumentHelper.getComputedStyle(elt);\n  };\n  constructor(\n    public container: HTMLDivElement, private model: AdaptiveActionContainer, public afterInitializeCallback?: () => void) {\n    if (typeof ResizeObserver !== \"undefined\") {\n      this.resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n        DomWindowHelper.requestAnimationFrame((): void | undefined => {\n          this.isResizeObserverStarted = true;\n          this.process();\n        });\n      });\n      this.resizeObserver.observe(this.container.parentElement);\n    }\n  }\n\n  protected getDimensions(element: HTMLElement): IDimensions {\n    return {\n      scroll: element.scrollWidth,\n      offset: element.offsetWidth,\n    };\n  }\n\n  protected getAvailableSpace(): number {\n    const style: CSSStyleDeclaration = this.getComputedStyle(this.container);\n    let space = this.container.offsetWidth;\n    if (style.boxSizing === \"border-box\") {\n      space -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    return space;\n  }\n  protected getGap(): number {\n    const computedStyle = this.getComputedStyle(this.container);\n    if (computedStyle.display == \"flex\") {\n      const gap = parseFloat(computedStyle.rowGap);\n      return !isNaN(gap) ? gap : 0;\n    }\n    return 0;\n  }\n\n  protected calcItemSize(item: HTMLElement): number {\n    return item.offsetWidth || item.getBoundingClientRect().width;\n  }\n\n  private updateItemsDimensions(callback: () => void) {\n    if (!this.container) return;\n    const actionsToUpdateDimension = this.isInitialized\n      ? this.model.renderedActions.filter(action => action.needUpdateMaxDimension || action.needUpdateMinDimension)\n      : this.model.renderedActions;\n    let actionsCounter = actionsToUpdateDimension.length;\n    if (actionsCounter == 0) {\n      callback();\n    }\n    const onItemDimensionsUpdated = () => {\n      if (--actionsCounter <= 0) {\n        callback();\n      }\n    };\n    actionsToUpdateDimension.forEach(action => {\n      const needUpdateMaxDimension = !this.isInitialized || action.needUpdateMaxDimension;\n      const needUpdateMinDimension = !this.isInitialized || action.needUpdateMinDimension;\n      const modeToCalculate = needUpdateMinDimension ? (needUpdateMaxDimension ? undefined : \"small\") : \"large\";\n      action.updateDimensions((el) => this.calcItemSize(el), () => {\n        action.needUpdateMaxDimension = false;\n        action.needUpdateMinDimension = false;\n        onItemDimensionsUpdated();\n      }, modeToCalculate);\n    });\n  }\n  private get isContainerVisible(): boolean {\n    return !!this.container && isContainerVisible(this.container);\n  }\n  protected shouldProcessResponsiveness () {\n    return this.isContainerVisible && !this.model.isResponsivenessDisabled && !this.isDisposed;\n  }\n  private process(): void {\n    if (this.shouldProcessResponsiveness()) {\n      this.updateItemsDimensions(() => {\n        if (this.shouldProcessResponsiveness()) {\n          this.model.fit({ availableSpace: this.getAvailableSpace(), gap: this.getGap() });\n        }\n        if (!this.isInitialized) {\n          this.isInitialized = true;\n          this.afterInitializeCallback && this.afterInitializeCallback();\n        }\n      });\n    }\n  }\n  private isDisposed: boolean = false;\n  public update(forceUpdate: boolean) {\n    if (!this.isResizeObserverStarted) return;\n    if (!this.model.isResponsivenessDisabled) {\n      if (forceUpdate) {\n        this.isInitialized = false;\n      }\n      this.process();\n    }\n  }\n  public dispose(): void {\n    this.isDisposed = true;\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    this.isResizeObserverStarted = false;\n    this.resizeObserver = undefined;\n    this.container = undefined;\n  }\n}\n\nexport class VerticalResponsivityManager extends ResponsivityManager {\n  constructor(container: HTMLDivElement, model: AdaptiveActionContainer) {\n    super(container, model);\n  }\n\n  protected getDimensions(): IDimensions {\n    return {\n      scroll: this.container.scrollHeight,\n      offset: this.container.offsetHeight,\n    };\n  }\n\n  protected getAvailableSpace(): number {\n    const style: CSSStyleDeclaration = this.getComputedStyle(this.container);\n    let space: number = this.container.offsetHeight;\n    if (style.boxSizing === \"border-box\") {\n      space -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    }\n    return space;\n  }\n\n  protected calcItemSize(item: HTMLDivElement): number {\n    return item.offsetHeight;\n  }\n}\n", "export class CssClassBuilder {\n  private classes: string[] = [];\n\n  public isEmpty(): boolean {\n    return this.toString() === \"\";\n  }\n  public append(value: string, condition: boolean = true): CssClassBuilder {\n    if (!!value && condition) {\n      if (typeof value === \"string\") {\n        value = value.trim();\n      }\n      this.classes.push(value);\n    }\n    return this;\n  }\n  public toString(): string {\n    return this.classes.join(\" \");\n  }\n}", "export interface IExecutable {\n  id?: string;\n  execute: () => void;\n  isCompleted: boolean;\n  dispose?: () => void;\n}\n\nexport class Task implements IExecutable {\n  private _isCompleted = false;\n  constructor(private func: () => void, private isMultiple = false) {}\n  execute = () => {\n    if (!this._isCompleted) {\n      this.func();\n      this._isCompleted = !this.isMultiple;\n    }\n  };\n  public discard() {\n    this._isCompleted = true;\n  }\n  get isCompleted() {\n    return this._isCompleted;\n  }\n}\nexport class TaskManger {\n  private static instance: TaskManger = undefined;\n  private static tasks: Array<IExecutable> = [];\n  private constructor(private interval: number = 100) {\n    setTimeout(TaskManger.Instance().tick, interval);\n  }\n  // dispose\n  public static Instance() {\n    if (!TaskManger.instance) {\n      TaskManger.instance = new TaskManger();\n    }\n    return TaskManger.instance;\n  }\n  private tick() {\n    try {\n      var newTasks = [];\n      for (var i = 0; i < TaskManger.tasks.length; i++) {\n        let task = TaskManger.tasks[i];\n        task.execute();\n        if (!task.isCompleted) {\n          newTasks.push(task);\n        } else {\n          if (typeof task.dispose === \"function\") {\n            task.dispose();\n          }\n        }\n      }\n      TaskManger.tasks = newTasks;\n    } finally {\n      setTimeout(TaskManger.Instance().tick, this.interval);\n    }\n  }\n  public static schedule(task: IExecutable) {\n    TaskManger.tasks.push(task);\n  }\n}\n\nexport function debounce<T extends (...args: any[]) => void>(func: T): { run: T, cancel: () => void, getLastArguments: () => any[], flushSync: () => void } {\n  let isSheduled = false;\n  let isCanceled = false;\n  let funcArgs: any;\n  const cancelCallback = () => {\n    isCanceled = true;\n    funcArgs = undefined;\n  };\n  return { run: ((...args: any) => {\n    isCanceled = false;\n    funcArgs = args;\n    if (!isSheduled) {\n      isSheduled = true;\n      queueMicrotask(() => {\n        if (!isCanceled) {\n          func.apply(this, funcArgs);\n        }\n        funcArgs = undefined;\n        isCanceled = false;\n        isSheduled = false;\n      });\n    }\n  }) as T,\n  cancel: cancelCallback,\n  getLastArguments: () => funcArgs,\n  flushSync: () => {\n    if (!isCanceled && isSheduled) {\n      func.apply(this, funcArgs);\n      cancelCallback();\n    }\n  }\n  };\n}\n", "import { property, propertyArray } from \"../jsonobject\";\nimport { Base } from \"../base\";\nimport { IAction, Action, BaseAction } from \"./action\";\nimport { CssClassBuilder } from \"../utils/cssClassBuilder\";\nimport { ILocalizableOwner, LocalizableString } from \".././localizablestring\";\nimport { mergeValues } from \"../utils/utils\";\nimport { debounce } from \"../utils/taskmanager\";\n\nexport type ActionBarCssClasses = { [index: string]: string };\n\nexport let defaultActionBarCss: ActionBarCssClasses = {\n  root: \"sv-action-bar\",\n  defaultSizeMode: \"sv-action-bar--default-size-mode\",\n  smallSizeMode: \"sv-action-bar--small-size-mode\",\n  item: \"sv-action-bar-item\",\n  itemWithTitle: \"\",\n  itemAsIcon: \"sv-action-bar-item--icon\",\n  itemActive: \"sv-action-bar-item--active\",\n  itemPressed: \"sv-action-bar-item--pressed\",\n  itemIcon: \"sv-action-bar-item__icon\",\n  itemTitle: \"sv-action-bar-item__title\",\n  itemTitleWithIcon: \"sv-action-bar-item__title--with-icon\",\n};\n\nexport type ContainerUpdateOptions = { needUpdateActions?: boolean, needUpdateIsEmpty?: boolean }\n\nexport class ActionContainer<T extends BaseAction = Action> extends Base implements ILocalizableOwner {\n  private static ContainerID = 1;\n  protected id = ActionContainer.ContainerID++;\n\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  public getRenderer(name: string): string {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  public getRendererContext(locStr: LocalizableString): any {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  public getProcessedText(text: string): string {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  public getLocale(): string {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  @propertyArray({}) visibleActions: Array<T> = [];\n  @propertyArray({\n    onSet: (_: any, target: ActionContainer<Action>) => {\n      target.onSet();\n    },\n    onPush: (item: any, i: number, target: ActionContainer<Action>) => {\n      target.onPush(item);\n    },\n    onRemove: (item: any, i: number, target: ActionContainer<Action>) => {\n      target.onRemove(item);\n    }\n  })\n    actions: Array<T>;\n  private cssClassesValue: any;\n  protected getRenderedActions(): Array<T> {\n    return this.visibleActions;\n  }\n\n  @property({}) containerCss: string;\n  public sizeMode: \"default\" | \"small\" = \"default\";\n  public locOwner: ILocalizableOwner;\n  @property({ defaultValue: true }) isEmpty: boolean;\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.actions.forEach(item => {\n      if (item.locTitle) item.locTitle.strChanged();\n      item.locStrsChanged();\n    });\n  }\n\n  public flushUpdates() {\n    this.raiseUpdateCallback.flushSync();\n  }\n  protected raiseUpdate(options?: { needUpdateActions?: boolean, needUpdateIsEmpty?: boolean }) {\n    const lastArguments = this.raiseUpdateCallback.getLastArguments();\n    const lastOptions = ((lastArguments && lastArguments[0]) ?? {}) as ContainerUpdateOptions;\n    this.raiseUpdateCallback.run(this.mergeUpdateOptions(options, lastOptions));\n  }\n  protected mergeUpdateOptions(nextOptions: ContainerUpdateOptions, prevOptions: ContainerUpdateOptions): ContainerUpdateOptions {\n    const options = Object.assign({}, nextOptions);\n    options.needUpdateActions = !!options.needUpdateActions || !!prevOptions.needUpdateActions;\n    options.needUpdateIsEmpty = !!options.needUpdateIsEmpty || !!prevOptions.needUpdateIsEmpty;\n    return options;\n  }\n  private raiseUpdateCallback = debounce((isResetInitialized) => {\n    this.update(isResetInitialized);\n  });\n  protected update(options?: ContainerUpdateOptions) {\n    if (options?.needUpdateActions) {\n      this.updateVisibleActions();\n    }\n    if (options?.needUpdateIsEmpty) {\n      this.updateIsEmpty();\n    }\n  }\n  protected updateVisibleActions() {\n    this.visibleActions = this.getVisibleActions();\n  }\n  private updateIsEmpty() {\n    this.isEmpty = this.getIsEmpty();\n  }\n  protected getIsEmpty(): boolean {\n    return this.visibleActions.length <= 0;\n  }\n\n  public getVisibleActions() {\n    return this.actions.filter((action) => action.visible !== false);\n  }\n\n  protected onSet() {\n    this.actions.forEach((action) => {\n      this.patchAction(action);\n    });\n  }\n  protected onPush(action: T) {\n    this.patchAction(action);\n    this.raiseUpdate({ needUpdateActions: true, needUpdateIsEmpty: true });\n  }\n\n  protected onRemove(action: T) {\n    this.unPatchAction(action);\n    this.raiseUpdate({ needUpdateActions: true, needUpdateIsEmpty: true });\n  }\n\n  protected onActionPropertyChanged(action: T, options: { name: string, newValue: any, oldValue: any }) {\n    if (options.name == \"_visible\") {\n      this.raiseUpdate({ needUpdateActions: true, needUpdateIsEmpty: true });\n    }\n  }\n  protected onActionPropertyChangedCallback = this.onActionPropertyChanged.bind(this);\n  protected patchAction(action: T) {\n    this.setActionCssClasses(action);\n    action.owner = this;\n    action.onPropertyChanged.add(this.onActionPropertyChangedCallback);\n  }\n  protected unPatchAction(action: T) {\n    action.owner = null;\n    action.onPropertyChanged.remove(this.onActionPropertyChangedCallback);\n  }\n\n  private setActionCssClasses(item: T) {\n    item.cssClasses = this.cssClasses;\n  }\n\n  public get hasActions(): boolean {\n    return (this.actions || []).length > 0;\n  }\n\n  public get hasVisibleActions(): boolean {\n    return !this.isEmpty;\n  }\n\n  public get renderedActions(): Array<T> {\n    return this.getRenderedActions();\n  }\n  public getRootStyle() {\n    return undefined;\n  }\n  public getRootCss(): string {\n    const sizeModeClass = this.sizeMode === \"small\" ? this.cssClasses.smallSizeMode : this.cssClasses.defaultSizeMode;\n    return new CssClassBuilder().append(this.cssClasses.root + (!!sizeModeClass ? \" \" + sizeModeClass : \"\") + (!!this.containerCss ? \" \" + this.containerCss : \"\"))\n      .append(this.cssClasses.root + \"--empty\", this.isEmpty)\n      .toString();\n  }\n  protected getDefaultCssClasses(): any {\n    return defaultActionBarCss;\n  }\n  protected getAllActions() {\n    return this.actions;\n  }\n  public setCssClasses(val: ActionBarCssClasses, mergeWithDefault: boolean = true) {\n    this.cssClassesValue = {};\n    if (mergeWithDefault) {\n      this.copyCssClasses(this.cssClassesValue, this.getDefaultCssClasses());\n    }\n    mergeValues(val, this.cssClasses);\n    this.getAllActions().forEach((action: T) => {\n      this.setActionCssClasses(action);\n    });\n  }\n  public set cssClasses(val: ActionBarCssClasses) {\n    this.setCssClasses(val);\n  }\n  public get cssClasses(): ActionBarCssClasses {\n    if (!this.cssClassesValue) {\n      this.cssClassesValue = this.getDefaultCssClasses();\n    }\n    return this.cssClassesValue;\n  }\n  private createAction(item: IAction): T {\n    return <T>(item instanceof BaseAction ? item : new Action(item));\n  }\n  public addAction(val: IAction, sortByVisibleIndex = true): T {\n    const res: T = this.createAction(val);\n    if (sortByVisibleIndex && !this.isActionVisible(res)) return res;\n    const items = [].concat(this.actions, res);\n    this.sortItems(items);\n    this.actions = items;\n    return res;\n  }\n  public setItems(items: Array<IAction>, sortByVisibleIndex = true): void {\n    const newActions: Array<T> = [];\n    items.forEach(item => {\n      if (!sortByVisibleIndex || this.isActionVisible(item)) {\n        newActions.push(this.createAction(item));\n      }\n    });\n    if (sortByVisibleIndex) {\n      this.sortItems(newActions);\n    }\n    this.actions = newActions;\n  }\n  private sortItems(items: Array<IAction>): void {\n    if (this.hasSetVisibleIndex(items)) {\n      items.sort(this.compareByVisibleIndex);\n    }\n  }\n  private hasSetVisibleIndex(items: Array<IAction>): boolean {\n    for (let i = 0; i < items.length; i ++) {\n      const index = items[i].visibleIndex;\n      if (index !== undefined && index >= 0) return true;\n    }\n    return false;\n  }\n  private compareByVisibleIndex(first: IAction, second: IAction): number {\n    return first.visibleIndex - second.visibleIndex;\n  }\n  private isActionVisible(item: IAction): boolean {\n    return item.visibleIndex >= 0 || item.visibleIndex === undefined;\n  }\n  @property({ defaultValue: 300 }) subItemsShowDelay: number;\n  @property({ defaultValue: 300 }) subItemsHideDelay: number;\n  protected popupAfterShowCallback(itemValue: T): void {\n\n  }\n\n  public mouseOverHandler(itemValue: T): void {\n    itemValue.isHovered = true;\n    let needToShowPopup = false;\n    let otherPopupVisible = false;\n    this.actions.forEach(action => {\n      if (action === itemValue && !!itemValue.popupModel) {\n        needToShowPopup = true;\n      }\n      if (action.popupModel && action.popupModel.isVisible) {\n        otherPopupVisible = true;\n      }\n    });\n    if (needToShowPopup) {\n      const delay = otherPopupVisible ? Math.max(this.subItemsShowDelay, this.subItemsHideDelay) : this.subItemsShowDelay;\n      itemValue.showPopupDelayed(delay);\n      this.popupAfterShowCallback(itemValue);\n    }\n  }\n\n  public initResponsivityManager(container: HTMLDivElement, delayedUpdateFunction?: (callback: () => void) => void): void {\n    return;\n  }\n  public resetResponsivityManager(): void { }\n  public getActionById(id: string): T {\n    for (var i = 0; i < this.actions.length; i++) {\n      if (this.actions[i].id === id) return this.actions[i];\n    }\n    return null;\n  }\n  public dispose(): void {\n    super.dispose();\n    this.resetResponsivityManager();\n    this.actions.forEach(action => action.dispose());\n    this.actions.length = 0;\n  }\n}\n", "import { DomDocumentHelper } from \"./global_variables_utils\";\n\nexport class ElementHelper {\n  static focusElement(element: Element) {\n    element && (<HTMLElement>element).focus();\n  }\n  static visibility(node: Element): boolean {\n    var style = DomDocumentHelper.getComputedStyle(node);\n    if (style.display === \"none\" || style.visibility === \"hidden\") return false;\n    return node.parentElement ? this.visibility(node.parentElement) : true;\n  }\n  static getNextElementPreorder(element: Element): Element {\n    const result = !!element.nextElementSibling ? element.nextElementSibling : element.parentElement.firstElementChild;\n    if (this.visibility(result)) {\n      return result;\n    } else {\n      return this.getNextElementPreorder(result);\n    }\n  }\n  static getNextElementPostorder(element: Element): Element {\n    const result = !!element.previousElementSibling ? element.previousElementSibling : element.parentElement.lastElementChild;\n    if (this.visibility(result)) {\n      return result;\n    } else {\n      return this.getNextElementPostorder(result);\n    }\n  }\n  static hasHorizontalScroller(element: HTMLElement): boolean {\n    if (!!element) {\n      return element.scrollWidth > element.offsetWidth;\n    }\n    return false;\n  }\n  static hasVerticalScroller(element: HTMLElement): boolean {\n    if (!!element) {\n      return element.scrollHeight > element.offsetHeight;\n    }\n    return false;\n  }\n}", "import { DomWindowHelper } from \"../global_variables_utils\";\n\n// isMobile\nlet _isMobile = false;\nlet vendor = null;\n\nif (typeof navigator !== \"undefined\" && !!navigator && DomWindowHelper.isAvailable()) {\n  vendor = navigator.userAgent || navigator.vendor || DomWindowHelper.hasOwn(\"opera\");\n}\n\n(function (a: any) {\n  if (!a) return;\n  if ((navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 0) || navigator.platform === \"iPad\") {\n    _isMobile = true;\n  } else if (\n    /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n      a\n    ) ||\n    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n      a.substring(0, 4)\n    )\n  )\n    _isMobile = true;\n})(vendor);\n\nlet _IPad = false;\n\nexport const IsMobile = _isMobile || _IPad;\n\nexport var mouseInfo = {\n  get isTouch(): boolean {\n    return !this.hasMouse && this.hasTouchEvent;\n  },\n  get hasTouchEvent(): boolean {\n    return DomWindowHelper.isAvailable() && (DomWindowHelper.hasOwn(\"ontouchstart\") || navigator.maxTouchPoints > 0);\n  },\n  hasMouse: true\n};\n\nconst matchMediaMethod: MatchMediaMethod = DomWindowHelper.matchMedia;\nmouseInfo.hasMouse = detectMouseSupport(matchMediaMethod);\n\nexport let IsTouch = mouseInfo.isTouch;\n\n//for tests\nexport function _setIsTouch(val: boolean): void {\n  IsTouch = val;\n}\n\n//for tests\nlet _isTablet: boolean = undefined;\nexport function _setIsTablet(val: boolean | undefined): void {\n  _isTablet = val;\n}\n\nexport function calculateIsTablet(windowWidth?: number, windowHeight?: number, tabletSizeBreakpoint = 600): boolean {\n  if (_isTablet !== undefined) return _isTablet;\n\n  const _windowWidth = windowWidth || DomWindowHelper.getInnerWidth();\n  const _windowHeight = windowHeight || DomWindowHelper.getInnerHeight();\n  const width = Math.min(_windowWidth, _windowHeight);\n  const isTablet = width >= tabletSizeBreakpoint;\n  return isTablet;\n}\n\nexport type MatchMediaMethod = ((query:string) => {matches:boolean} | null) | null;\nexport function detectMouseSupport(matchMedia: MatchMediaMethod):boolean {\n  if (!matchMedia) return false;\n  if (IsMobile) return false;\n\n  const pointerQuery = matchMedia(\"(pointer:fine)\");\n  const hoverQuery = matchMedia(\"(any-hover:hover)\");\n\n  return !!pointerQuery && pointerQuery.matches || !!hoverQuery && hoverQuery.matches;\n}", "import { property } from \"./jsonobject\";\r\nimport { ActionContainer } from \"./actions/container\";\r\nimport { Action, BaseAction, IAction } from \"./actions/action\";\r\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\r\nimport { ElementHelper } from \"./element-helper\";\r\nimport { classesToSelector, getFirstVisibleChild } from \"./utils/utils\";\r\nimport { settings } from \"./settings\";\r\nimport { ILocalizableOwner } from \"./localizablestring\";\r\nimport { IsTouch } from \"./utils/devices\";\r\n\r\nexport let defaultListCss = {\r\n  root: \"sv-list__container\",\r\n  item: \"sv-list__item\",\r\n  searchClearButtonIcon: \"sv-list__filter-clear-button\",\r\n  loadingIndicator: \"sv-list__loading-indicator\",\r\n  itemSelected: \"sv-list__item--selected\",\r\n  itemGroup: \"sv-list__item--group\",\r\n  itemGroupSelected: \"sv-list__item--group-selected\",\r\n  itemWithIcon: \"sv-list__item--with-icon\",\r\n  itemDisabled: \"sv-list__item--disabled\",\r\n  itemFocused: \"sv-list__item--focused\",\r\n  itemHovered: \"sv-list__item--hovered\",\r\n  itemTextWrap: \"sv-list__item-text--wrap\",\r\n  itemIcon: \"sv-list__item-icon\",\r\n  itemMarkerIcon: \"sv-list-item__marker-icon\",\r\n  itemSeparator: \"sv-list__item-separator\",\r\n  itemBody: \"sv-list__item-body\",\r\n  itemsContainer: \"sv-list\",\r\n  itemsContainerFiltering: \"sv-list--filtering\",\r\n  filter: \"sv-list__filter\",\r\n  filterIcon: \"sv-list__filter-icon\",\r\n  filterInput: \"sv-list__input\",\r\n  emptyContainer: \"sv-list__empty-container\",\r\n  emptyText: \"sv-list__empty-text\"\r\n};\r\nexport interface IListModel {\r\n  items: Array<IAction>;\r\n  onSelectionChanged?: (item: IAction, ...params: any[]) => void;\r\n  allowSelection?: boolean;\r\n  searchEnabled?: boolean;\r\n  selectedItem?: IAction;\r\n  elementId?: string;\r\n  locOwner?: ILocalizableOwner;\r\n  cssClasses?: any;\r\n  listRole?: string;\r\n  listItemRole?: string;\r\n  listAriaLabel?: string;\r\n  onFilterStringChangedCallback?: (text: string) => void;\r\n  onTextSearchCallback?: (item: IAction, textToSearch: string) => boolean;\r\n  disableSearch?: boolean;\r\n}\r\nexport class ListModel<T extends BaseAction = Action> extends ActionContainer<T> {\r\n  private listContainerHtmlElement: HTMLElement;\r\n  private loadingIndicatorValue: T;\r\n  private onFilterStringChangedCallback: (text: string) => void;\r\n  private onTextSearchCallback: (item: IAction, textToSearch: string) => boolean;\r\n\r\n  @property({\r\n    defaultValue: true,\r\n    onSet: (newValue: boolean, target: ListModel<T>) => {\r\n      target.onSet();\r\n    }\r\n  }) searchEnabled: boolean;\r\n  @property({ defaultValue: false }) showFilter: boolean;\r\n  @property({ defaultValue: false }) forceShowFilter: boolean;\r\n  @property({ defaultValue: false }) isExpanded: boolean;\r\n  @property({}) selectedItem: IAction;\r\n  @property() focusedItem: T;\r\n  @property({\r\n    onSet: (_, target: ListModel<T>) => {\r\n      target.onFilterStringChanged(target.filterString);\r\n    }\r\n  }) filterString: string;\r\n  @property({ defaultValue: false }) hasVerticalScroller: boolean;\r\n  @property({ defaultValue: true }) isAllDataLoaded: boolean;\r\n  @property({ defaultValue: false }) showSearchClearButton: boolean;\r\n  @property({ defaultValue: true }) renderElements: boolean;\r\n  @property({ defaultValue: false }) textWrapEnabled: boolean;\r\n  @property({ defaultValue: \"sv-list-item-content\" }) itemComponent: string;\r\n  @property({ defaultValue: \"listbox\" }) listRole: string;\r\n  @property({ defaultValue: \"option\" }) listItemRole: string;\r\n  @property() listAriaLabel: string;\r\n  @property({ defaultValue: false }) disableSearch: boolean;\r\n\r\n  public static INDENT: number = 16;\r\n  public static MINELEMENTCOUNT: number = 10;\r\n  public scrollHandler: (e?: any) => void;\r\n  public areSameItemsCallback: (item1: IAction, item2: IAction) => boolean;\r\n\r\n  private hasText(item: T, filterStringInLow: string): boolean {\r\n    if (!filterStringInLow) return true;\r\n    const text = item.title || \"\";\r\n    if (this.onTextSearchCallback) return this.onTextSearchCallback(item, filterStringInLow);\r\n    let textInLow = text.toLocaleLowerCase();\r\n    textInLow = settings.comparator.normalizeTextCallback(textInLow, \"filter\");\r\n    return textInLow.indexOf(filterStringInLow.toLocaleLowerCase()) > -1;\r\n  }\r\n  public isItemVisible(item: T): boolean {\r\n    if (item.id === this.loadingIndicator.id) return item.visible;\r\n    if (this.disableSearch) return item.visible;\r\n    return item.visible && this.hasText(item, this.filterString);\r\n  }\r\n\r\n  protected getRenderedActions(): Array<T> {\r\n    let actions = super.getRenderedActions();\r\n\r\n    if (this.filterString) {\r\n      let newActions: Array<T> = [];\r\n      actions.forEach(action => {\r\n        newActions.push(action);\r\n        if (action.items) {\r\n          action.items.forEach(item => {\r\n            const a = new Action(item);\r\n            if (!a.iconName) { a.iconName = action.iconName; }\r\n            newActions.push(a as IAction as T);\r\n          });\r\n        }\r\n      });\r\n      return newActions;\r\n    }\r\n\r\n    return actions;\r\n  }\r\n  public get visibleItems(): Array<T> {\r\n    return this.actions.filter(item => this.isItemVisible(item));\r\n  }\r\n  private onFilterStringChanged(text: string) {\r\n    if (!!this.onFilterStringChangedCallback) {\r\n      this.onFilterStringChangedCallback(text);\r\n    }\r\n    this.raiseUpdate({ needUpdateIsEmpty: true });\r\n  }\r\n  protected getIsEmpty(): boolean {\r\n    return !this.renderedActions.some(action => this.isItemVisible(action));\r\n  }\r\n  private scrollToItem(classes: string, ms = 0): void {\r\n    setTimeout(() => {\r\n      if (!this.listContainerHtmlElement) return;\r\n\r\n      const item = this.listContainerHtmlElement.querySelector(classesToSelector(classes));\r\n      if (item) {\r\n        setTimeout(() => {\r\n          item.scrollIntoView({ behavior: \"smooth\", block: \"nearest\", inline: \"start\" });\r\n        }, ms);\r\n      }\r\n    }, ms);\r\n  }\r\n\r\n  constructor(\r\n    items: Array<IAction> | IListModel,\r\n    public onSelectionChanged?: (item: T, ...params: any[]) => void,\r\n    public allowSelection?: boolean,\r\n    selectedItem?: IAction,\r\n    public elementId?: string\r\n  ) {\r\n    super();\r\n    if (Object.keys(items).indexOf(\"items\") !== -1) {\r\n      const options = (items as any) as IListModel;\r\n      Object.keys(options).forEach((key: keyof IListModel) => {\r\n        switch(key) {\r\n          case \"items\":\r\n            this.setItems(options.items);\r\n            break;\r\n          case \"onFilterStringChangedCallback\":\r\n            this.setOnFilterStringChangedCallback(options.onFilterStringChangedCallback);\r\n            break;\r\n          case \"onTextSearchCallback\":\r\n            this.setOnTextSearchCallback(options.onTextSearchCallback);\r\n            break;\r\n          default:\r\n            (this as any)[key] = options[key];\r\n        }\r\n      });\r\n      this.updateActionsIds();\r\n    } else {\r\n      this.setItems(items as Array<IAction>);\r\n      this.selectedItem = selectedItem;\r\n    }\r\n  }\r\n  public setOnFilterStringChangedCallback(callback: (text: string) => void): void {\r\n    this.onFilterStringChangedCallback = callback;\r\n  }\r\n  public setOnTextSearchCallback(callback: (item: T, textToSearch: string) => boolean): void {\r\n    this.onTextSearchCallback = callback;\r\n  }\r\n  public setItems(items: Array<IAction>, sortByVisibleIndex = true): void {\r\n    super.setItems(items, sortByVisibleIndex);\r\n    this.updateActionsIds();\r\n    if (!this.isAllDataLoaded && !!this.actions.length) {\r\n      this.actions.push(this.loadingIndicator);\r\n    }\r\n  }\r\n  private updateActionsIds(): void {\r\n    if (this.elementId) {\r\n      this.actions.forEach((action: IAction) => { action.elementId = this.elementId + action.id; });\r\n    }\r\n  }\r\n  public setSearchEnabled(newValue: boolean): void {\r\n    this.searchEnabled = newValue;\r\n    this.showSearchClearButton = newValue;\r\n  }\r\n  protected onSet(): void {\r\n    this.showFilter = this.searchEnabled && (this.forceShowFilter || (this.actions || []).length > ListModel.MINELEMENTCOUNT);\r\n    super.onSet();\r\n  }\r\n  protected getDefaultCssClasses() {\r\n    return defaultListCss;\r\n  }\r\n\r\n  public onItemClick = (itemValue: T): void => {\r\n    if (this.isItemDisabled(itemValue)) {\r\n      return;\r\n    }\r\n    this.isExpanded = false;\r\n    if (this.allowSelection) {\r\n      this.selectedItem = itemValue;\r\n    }\r\n    if (!!this.onSelectionChanged) {\r\n      this.onSelectionChanged(itemValue);\r\n    }\r\n    const action = (itemValue as IAction).action;\r\n    if (!!action) {\r\n      action(itemValue);\r\n    }\r\n  };\r\n\r\n  protected popupAfterShowCallback(itemValue: T) {\r\n    this.addScrollEventListener(() => {\r\n      itemValue.hidePopup();\r\n    });\r\n  }\r\n\r\n  public onItemHover = (itemValue: T): void => {\r\n    this.mouseOverHandler(itemValue);\r\n  };\r\n  public onItemLeave(itemValue: T) {\r\n    itemValue.hidePopupDelayed(this.subItemsHideDelay);\r\n  }\r\n\r\n  public isItemDisabled: (itemValue: T) => boolean = (itemValue: T) => {\r\n    return itemValue.enabled !== undefined && !itemValue.enabled;\r\n  };\r\n\r\n  public getA11yItemAriaSelected: (itemValue: T) => \"true\" | \"false\" | undefined = (itemValue: T) => {\r\n    if (this.listItemRole == \"option\") return this.isItemSelected(itemValue) ? \"true\" : \"false\";\r\n    return undefined;\r\n  };\r\n\r\n  public getA11yItemAriaChecked: (itemValue: T) => \"true\" | \"false\" | undefined = (itemValue: T) => {\r\n    if (this.listItemRole == \"menuitemradio\") return this.isItemSelected(itemValue) ? \"true\" : \"false\";\r\n    return undefined;\r\n  };\r\n\r\n  public isItemSelected: (itemValue: T) => boolean = (itemValue: T) => {\r\n    return this.areSameItems(this.selectedItem, itemValue);\r\n  };\r\n\r\n  public isItemFocused: (itemValue: T) => boolean = (itemValue: T) => {\r\n    return this.areSameItems(this.focusedItem, itemValue);\r\n  };\r\n  protected areSameItems(item1: IAction, item2: IAction): boolean {\r\n    if (!!this.areSameItemsCallback) return this.areSameItemsCallback(item1, item2);\r\n    return !!item1 && !!item2 && item1.id == item2.id;\r\n  }\r\n\r\n  public getListClass: () => string = () => {\r\n    return new CssClassBuilder()\r\n      .append(this.cssClasses.itemsContainer)\r\n      .append(this.cssClasses.itemsContainerFiltering, !!this.filterString && this.visibleActions.length !== this.visibleItems.length)\r\n      .toString();\r\n  };\r\n  public getItemClass: (itemValue: T) => string = (itemValue: T) => {\r\n    const isSelected = this.isItemSelected(itemValue);\r\n    return new CssClassBuilder()\r\n      .append(this.cssClasses.item)\r\n      .append(this.cssClasses.itemWithIcon, !!itemValue.iconName)\r\n      .append(this.cssClasses.itemDisabled, this.isItemDisabled(itemValue))\r\n      .append(this.cssClasses.itemFocused, this.isItemFocused(itemValue))\r\n      .append(this.cssClasses.itemSelected, !itemValue.hasSubItems && isSelected)\r\n      .append(this.cssClasses.itemGroup, itemValue.hasSubItems)\r\n      .append(this.cssClasses.itemGroupSelected, itemValue.hasSubItems && isSelected)\r\n\r\n      .append(this.cssClasses.itemHovered, itemValue.isHovered)\r\n      .append(this.cssClasses.itemTextWrap, this.textWrapEnabled)\r\n      .append(itemValue.css)\r\n      .toString();\r\n  };\r\n\r\n  // public getItemIndent = (itemValue: any) => {\r\n  //   const level: number = itemValue.level || 0;\r\n  //   return (level + 1) * ListModel.INDENT + \"px\";\r\n  // };\r\n\r\n  public getItemStyle = (itemValue: any) => {\r\n    const level: number = itemValue.level || 0;\r\n    return {\r\n      \"--sjs-list-item-level\": level + 1\r\n    };\r\n  };\r\n\r\n  public get a11ya11y_input_ariaLabel(): string {\r\n    return this.listAriaLabel;\r\n  }\r\n  public get filterStringPlaceholder(): string {\r\n    return this.getLocalizationString(\"filterStringPlaceholder\");\r\n  }\r\n  public get emptyMessage(): string {\r\n    return this.isAllDataLoaded ? this.getLocalizationString(\"emptyMessage\") : this.getLocalizationString(\"loadingData\");\r\n  }\r\n  public get scrollableContainer(): HTMLElement {\r\n    return this.listContainerHtmlElement.querySelector(classesToSelector(this.cssClasses.itemsContainer));\r\n  }\r\n  public get loadingIndicator(): T {\r\n    if (!this.loadingIndicatorValue) {\r\n      this.loadingIndicatorValue = <T><any>(new Action({\r\n        id: \"loadingIndicator\",\r\n        title: this.getLocalizationString(\"loadingPage\"),\r\n        action: () => { },\r\n        css: this.cssClasses.loadingIndicator\r\n      }));\r\n    }\r\n    return this.loadingIndicatorValue;\r\n  }\r\n\r\n  public goToItems(event: KeyboardEvent): void {\r\n    if (event.key === \"ArrowDown\" || event.keyCode === 40) {\r\n      const currentElement = (<HTMLElement>event.target).parentElement;\r\n      const listElement = currentElement.parentElement.querySelector(\"ul\");\r\n      const firstChild = getFirstVisibleChild(listElement);\r\n      if (!!listElement && !!firstChild) {\r\n        ElementHelper.focusElement(firstChild);\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  public onMouseMove(event: MouseEvent): void {\r\n    this.resetFocusedItem();\r\n  }\r\n  public onKeyDown(event: KeyboardEvent): void {\r\n    const currentElement = <Element>event.target;\r\n    if (event.key === \"ArrowDown\" || event.keyCode === 40) {\r\n      ElementHelper.focusElement(ElementHelper.getNextElementPreorder(currentElement));\r\n      event.preventDefault();\r\n    } else if (event.key === \"ArrowUp\" || event.keyCode === 38) {\r\n      ElementHelper.focusElement(ElementHelper.getNextElementPostorder(currentElement));\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  public onPointerDown(event: PointerEvent, item: any) { }\r\n  public refresh(): void { // used in popup\r\n    if (this.filterString == \"\") {\r\n      this.raiseUpdate({ needUpdateIsEmpty: true });\r\n    }\r\n    this.resetFocusedItem();\r\n  }\r\n  public onClickSearchClearButton(event: any) {\r\n    event.currentTarget.parentElement.querySelector(\"input\").focus();\r\n    this.refresh();\r\n  }\r\n  public resetFocusedItem(): void {\r\n    this.focusedItem = undefined;\r\n  }\r\n  public focusFirstVisibleItem(): void {\r\n    if (!IsTouch) {\r\n      this.focusedItem = this.visibleItems[0];\r\n    }\r\n  }\r\n  public focusLastVisibleItem(): void {\r\n    this.focusedItem = this.visibleItems[this.visibleItems.length - 1];\r\n  }\r\n  public initFocusedItem() {\r\n    this.focusedItem = this.visibleItems.filter(item => item.visible && this.isItemSelected(item))[0];\r\n    if (!this.focusedItem) {\r\n      this.focusFirstVisibleItem();\r\n    }\r\n  }\r\n  public focusNextVisibleItem(): void {\r\n    if (!this.focusedItem) {\r\n      this.initFocusedItem();\r\n    } else {\r\n      const items = this.visibleItems;\r\n      const currentFocusedItemIndex = items.indexOf(this.focusedItem);\r\n      const nextItem = items[currentFocusedItemIndex + 1];\r\n      if (nextItem) {\r\n        this.focusedItem = nextItem;\r\n      } else {\r\n        this.focusFirstVisibleItem();\r\n      }\r\n    }\r\n  }\r\n  public focusPrevVisibleItem(): void {\r\n    if (!this.focusedItem) {\r\n      this.initFocusedItem();\r\n    } else {\r\n      const items = this.visibleItems;\r\n      const currentFocusedItemIndex = items.indexOf(this.focusedItem);\r\n      const prevItem = items[currentFocusedItemIndex - 1];\r\n      if (prevItem) {\r\n        this.focusedItem = prevItem;\r\n      } else {\r\n        this.focusLastVisibleItem();\r\n      }\r\n    }\r\n  }\r\n  public selectFocusedItem(): void {\r\n    !!this.focusedItem && this.onItemClick(this.focusedItem);\r\n  }\r\n  public initListContainerHtmlElement(htmlElement: HTMLElement): void {\r\n    this.listContainerHtmlElement = htmlElement;\r\n  }\r\n  public onLastItemRended(item: T): void {\r\n    if (this.isAllDataLoaded) return;\r\n\r\n    if (item === this.actions[this.actions.length - 1] && !!this.listContainerHtmlElement) {\r\n      this.hasVerticalScroller = ElementHelper.hasVerticalScroller(this.scrollableContainer);\r\n    }\r\n  }\r\n  public scrollToFocusedItem(): void {\r\n    this.scrollToItem(this.cssClasses.itemFocused);\r\n  }\r\n  public scrollToSelectedItem(): void {\r\n    if (!!this.selectedItem && this.selectedItem.items && this.selectedItem.items.length > 0) {\r\n      this.scrollToItem(this.cssClasses.itemGroupSelected, 110);\r\n    } else {\r\n      this.scrollToItem(this.cssClasses.itemSelected, 110);\r\n    }\r\n  }\r\n\r\n  public addScrollEventListener(handler: (e?: any) => void): void {\r\n    if (!!handler) {\r\n      this.removeScrollEventListener();\r\n      this.scrollHandler = handler;\r\n    }\r\n    if (!!this.scrollHandler) {\r\n      this.scrollableContainer.addEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n  }\r\n  public removeScrollEventListener(): void {\r\n    if (!!this.scrollHandler) {\r\n      this.scrollableContainer.removeEventListener(\"scroll\", this.scrollHandler);\r\n    }\r\n  }\r\n\r\n  public dispose(): void {\r\n    super.dispose();\r\n    if (!!this.loadingIndicatorValue) {\r\n      this.loadingIndicatorValue.dispose();\r\n    }\r\n    this.listContainerHtmlElement = undefined;\r\n  }\r\n}\r\n", "import { Base, EventBase } from \"./base\";\r\nimport { IAction } from \"./actions/action\";\r\nimport { property } from \"./jsonobject\";\r\nimport { VerticalPosition, HorizontalPosition, PositionMode } from \"./utils/popup\";\r\nimport { calculateIsTablet, IsTouch } from \"./utils/devices\";\r\n\r\ntype DisplayPopupMode = \"modal-popup\" | \"modal-overlay\" | \"menu-overlay\" | \"menu-popup-overlay\" | \"menu-popup\";\r\nexport interface IPopupOptionsBase {\r\n  onBlur?: () => void;\r\n  onHide?: () => void;\r\n  /**\r\n   * A callback function executed when the dialog is opened.\r\n   */\r\n  onShow?: () => void;\r\n  /**\r\n   * A callback function executed when users click the Cancel button in the dialog.\r\n   */\r\n  onCancel?: () => void;\r\n  onDispose?: () => void;\r\n  getTargetCallback?: (container: HTMLElement) => HTMLElement;\r\n  getAreaCallback?: (container: HTMLElement) => HTMLElement;\r\n  /**\r\n   * A CSS class to apply to the root element of the dialog for custom styling.\r\n   */\r\n  cssClass?: string;\r\n  /**\r\n   * The dialog's title.\r\n   */\r\n  title?: string;\r\n  verticalPosition?: VerticalPosition;\r\n  horizontalPosition?: HorizontalPosition;\r\n  showPointer?: boolean;\r\n  isModal?: boolean;\r\n  canShrink?: boolean;\r\n  displayMode?: \"popup\" | \"overlay\";\r\n}\r\n/**\r\n * An interface used to configure the content and behavior of a modal dialog displayed via the [`showDialog()`](https://surveyjs.io/form-library/documentation/api-reference/settings#showDialog) method.\r\n *\r\n * [View Demo](https://surveyjs.io/survey-creator/examples/add-modal-property-editor-to-property-grid/ (linkStyle))\r\n */\r\nexport interface IDialogOptions extends IPopupOptionsBase {\r\n  /**\r\n   * The name of the component to render inside the dialog.\r\n   *\r\n   * This component should be registered in the component collection used by the application (e.g., in `ReactElementFactory` for React and HTML/JS/CSS, `AngularComponentFactory` for Angular, or `app.component()` for Vue.js).\r\n   */\r\n  componentName: string;\r\n  /**\r\n   * An object with component props.\r\n   */\r\n  data: any;\r\n  /**\r\n   * A callback function executed when users click the Apply button in the dialog.\r\n   *\r\n   * This function should return `true` to close the dialog or `false` to keep it open (for example, if validation fails).\r\n   * @returns `true` to close the dialog or `false` to keep it open.\r\n   * @see onCancel\r\n   */\r\n  onApply: () => boolean;\r\n  isFocusedContent?: boolean;\r\n}\r\n\r\nexport class PopupModel<T = any> extends Base implements IPopupOptionsBase {\r\n  public setWidthByTarget: boolean;\r\n  public focusFirstInputSelector = \"\";\r\n  public locale: string;\r\n  public onCancel: () => void = () => { };\r\n  public onApply: () => boolean = () => { return true; };\r\n  public onHide: () => void = () => { };\r\n  public onShow: () => void = () => { };\r\n  public onBlur: () => void = () => { };\r\n  public onDispose: () => void = () => { };\r\n  public getTargetCallback?: (container: HTMLElement) => HTMLElement;\r\n  public getAreaCallback?: (container: HTMLElement) => HTMLElement;\r\n\r\n  @property() contentComponentName: string;\r\n  @property() contentComponentData: T;\r\n  @property({ defaultValue: \"bottom\" }) verticalPosition: VerticalPosition;\r\n  @property({ defaultValue: \"left\" }) horizontalPosition: HorizontalPosition;\r\n  @property({ defaultValue: true }) showPointer: boolean;\r\n  @property({ defaultValue: false }) isModal: boolean;\r\n  @property({ defaultValue: true }) canShrink: boolean;\r\n  @property({ defaultValue: true }) isFocusedContent: boolean;\r\n  @property({ defaultValue: true }) isFocusedContainer: boolean;\r\n  @property({ defaultValue: \"\" }) cssClass: string;\r\n  @property({ defaultValue: \"\" }) title: string;\r\n  @property({ defaultValue: \"auto\" }) overlayDisplayMode: \"auto\" | \"tablet-dropdown-overlay\" | \"dropdown-overlay\" | \"plain\";\r\n  @property({ defaultValue: \"popup\" }) displayMode: \"popup\" | \"overlay\";\r\n  @property({ defaultValue: \"flex\" }) positionMode: PositionMode;\r\n\r\n  public onVisibilityChanged: EventBase<PopupModel> = this.addEvent<PopupModel>();\r\n  public onFooterActionsCreated: EventBase<Base> = this.addEvent<Base>();\r\n  public onRecalculatePosition: EventBase<Base> = this.addEvent<Base>();\r\n\r\n  private refreshInnerModel(): void {\r\n    const innerModel = (this.contentComponentData as any)[\"model\"];\r\n    innerModel && innerModel.refresh && innerModel.refresh();\r\n  }\r\n\r\n  constructor(\r\n    contentComponentName: string,\r\n    contentComponentData: T,\r\n    options?: IPopupOptionsBase\r\n  ) {\r\n    super();\r\n    this.contentComponentName = contentComponentName;\r\n    this.contentComponentData = contentComponentData;\r\n    if (!!options) {\r\n      for (var key in options) {\r\n        (<any>this)[key] = (<any>options)[key];\r\n      }\r\n    }\r\n  }\r\n  public get isVisible(): boolean {\r\n    return this.getPropertyValue(\"isVisible\", false);\r\n  }\r\n  public set isVisible(value: boolean) {\r\n    if (this.isVisible === value) {\r\n      return;\r\n    }\r\n    this.setPropertyValue(\"isVisible\", value);\r\n    this.onVisibilityChanged.fire(this, { model: this, isVisible: value });\r\n  }\r\n  public toggleVisibility(): void {\r\n    this.isVisible = !this.isVisible;\r\n  }\r\n  public show(): void {\r\n    if (!this.isVisible)\r\n      this.isVisible = true;\r\n  }\r\n  public hide(): void {\r\n    if (this.isVisible)\r\n      this.isVisible = false;\r\n  }\r\n  public recalculatePosition(isResetHeight: boolean): void {\r\n    this.onRecalculatePosition.fire(this, { isResetHeight: isResetHeight });\r\n  }\r\n  public updateFooterActions(footerActions: Array<IAction>): Array<IAction> {\r\n    const options = { actions: footerActions };\r\n    this.onFooterActionsCreated.fire(this, options);\r\n    return options.actions;\r\n  }\r\n\r\n  public getDisplayMode(): DisplayPopupMode {\r\n    if (this.isModal) {\r\n      return this.displayMode === \"popup\" ? \"modal-popup\" : \"modal-overlay\";\r\n    } else {\r\n      if (this.displayMode === \"popup\") {\r\n        return \"menu-popup\";\r\n      } else {\r\n        let result: DisplayPopupMode;\r\n        switch(this.overlayDisplayMode) {\r\n          case \"plain\": {\r\n            result = \"menu-popup\";\r\n            break;\r\n          }\r\n          case \"dropdown-overlay\": {\r\n            result = \"menu-overlay\";\r\n            break;\r\n          }\r\n          case \"tablet-dropdown-overlay\": {\r\n            result = \"menu-popup-overlay\";\r\n            break;\r\n          }\r\n          case \"auto\": {\r\n            if (!IsTouch) {\r\n              result = \"menu-popup\"; // desktop\r\n            } else {\r\n              result = \"menu-popup-overlay\"; //tablet\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateDisplayMode(menuType: \"dropdown\" | \"popup\" | \"overlay\"): boolean {\r\n    let newDisplayMode;\r\n    let newOverlayDisplayMode;\r\n\r\n    switch(menuType) {\r\n      case \"dropdown\": {\r\n        newDisplayMode = \"popup\";\r\n        newOverlayDisplayMode = \"auto\";\r\n        break;\r\n      }\r\n      case \"popup\": {\r\n        newDisplayMode = \"overlay\";\r\n        newOverlayDisplayMode = \"tablet-dropdown-overlay\";\r\n        break;\r\n      }\r\n      case \"overlay\": {\r\n        newDisplayMode = \"overlay\";\r\n        newOverlayDisplayMode = \"dropdown-overlay\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (this.displayMode !== newDisplayMode) {\r\n      const isDropdown = menuType === \"dropdown\";\r\n      this.setWidthByTarget = isDropdown;\r\n      this.isFocusedContent = !isDropdown;\r\n    }\r\n\r\n    if (this.displayMode !== newDisplayMode || this.overlayDisplayMode !== newOverlayDisplayMode) {\r\n      this.displayMode = newDisplayMode;\r\n      this.overlayDisplayMode = newOverlayDisplayMode;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  public onHiding(): void {\r\n    this.refreshInnerModel();\r\n    this.onHide();\r\n  }\r\n  public dispose(): void {\r\n    super.dispose();\r\n    this.onDispose();\r\n  }\r\n}\r\n", "import { ILocalizableOwner, LocalizableString } from \"../localizablestring\";\nimport { Base, ComputedUpdater, EventBase } from \"../base\";\nimport { getLocaleString } from \"../surveyStrings\";\nimport { property } from \"../jsonobject\";\nimport { IListModel, ListModel } from \"../list\";\nimport { IPopupOptionsBase, PopupModel } from \"../popup\";\nimport { CssClassBuilder } from \"../utils/cssClassBuilder\";\nimport { ActionBarCssClasses, defaultActionBarCss } from \"./container\";\n\nexport type actionModeType = \"large\" | \"small\" | \"popup\" | \"removed\";\n\n/**\n * An action item.\n *\n * Action items are used in the Toolbar, matrix rows, titles of pages, panels, questions, and other survey elements.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n */\nexport interface IAction {\n  /**\n   * A unique action item identifier.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   */\n  id?: string;\n  /**\n   * Specifies the action item's visibility.\n   * @see enabled\n   * @see active\n   */\n  visible?: boolean | ComputedUpdater<boolean>;\n  /**\n   * The action item's title.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   * @see showTitle\n   * @see disableShrink\n   */\n  title?: string;\n  locTitle?: LocalizableString;\n  locTitleName?: string;\n  /**\n   * The action item's tooltip.\n   */\n  tooltip?: string;\n  locTooltipName?: string;\n  /**\n   * Specifies whether users can interact with the action item.\n   * @see active\n   * @see visible\n   */\n  enabled?: boolean | ComputedUpdater<boolean>;\n  enabledIf?: () => boolean;\n  /**\n   * Specifies the visibility of the action item's title.\n   * @see title\n   * @see disableShrink\n   */\n  showTitle?: boolean;\n  /**\n   * A function that is executed when users click the action item.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   */\n  action?: (context?: any) => void;\n  onFocus?: (isMouse: boolean, event: any) => void;\n  /**\n   * One or several CSS classes that you want to apply to the outer `<div>` element.\n   *\n   * In the markup, an action item is rendered as an `<input>` or `<button>` wrapped in a `<div>`. The `css` property applies classes to the `<div>` element.\n   *\n   * To apply several classes, separate them with a space character: `\"myclass1 myclass2\"`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   * @see innerCss\n   */\n  css?: string;\n  /**\n   * One or several CSS classes that you want to apply to the inner `<input>` or `<button>` element.\n   *\n   * In the markup, an action item is rendered as an `<input>` or `<button>` wrapped in a `<div>`. The `innerCss` property applies classes to the `<input>`/`<button>` element.\n   *\n   * To apply several classes, separate them with a space character: `\"myclass1 myclass2\"`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   * @see css\n   */\n  innerCss?: string;\n  /**\n   * The action item's data object. Use it to pass required data to a custom template or component.\n   */\n  data?: any;\n  popupModel?: any; //TODO: temp, use data instead\n  needSeparator?: boolean; //TODO: temp\n  /**\n   * Specifies whether the action item is active.\n   *\n   * Use this property as a flag to specify different action item appearances in different states.\n   * @see enabled\n   * @see visible\n   */\n  active?: boolean;\n  pressed?: boolean;\n  /**\n   * Specifies the name of a template used to render the action item.\n   * @see component\n   */\n  template?: string;\n  /**\n   * Specifies the name of a component used to render the action item.\n   */\n  component?: string;\n  /**\n   * The action item's icon name.\n   * @see iconSize\n   */\n  iconName?: string;\n  /**\n   * The action item's icon size in pixels.\n   * @see iconName\n   */\n  iconSize?: number | string;\n  /**\n   * The action item's location in a matrix question's row.\n   *\n   * The following values are available:\n   *\n   * - `\"start\"` - The action item is located at the beginning of the row.\n   * - `\"end\"` - The action is located at the end of the row.\n   */\n  location?: string;\n  /**\n   * Set this property to `true` if you want to disable keyboard navigation for the action item (sets the `tabIndex` attribute to -1).\n   */\n  disableTabStop?: boolean;\n\n  /**\n   * Set this property to `true` if you want the item's `title` to be always visible.\n   * If you set it to `false`, the `title` hides when the screen space is limited, and the item displays only the icon.\n   * @see title\n   * @see iconName\n   */\n  disableShrink?: boolean;\n  disableHide?: boolean;\n  mode?: actionModeType;\n  /**\n   * A number that specifies the action's position relative to other actions.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-navigation-button/ (linkStyle))\n   */\n  visibleIndex?: number;\n  needSpace?: boolean;\n  ariaChecked?: boolean;\n  ariaExpanded?: boolean;\n  ariaRole?: string;\n  elementId?: string;\n  items?: Array<IAction>;\n  markerIconName?: string;\n  showPopup?: () => void;\n  hidePopup?: () => void;\n}\n\nexport interface IActionDropdownPopupOptions extends IListModel, IPopupOptionsBase {\n}\nexport function createDropdownActionModel(actionOptions: IAction, dropdownOptions: IActionDropdownPopupOptions, locOwner?: ILocalizableOwner): Action {\n  dropdownOptions.locOwner = locOwner;\n  return createDropdownActionModelAdvanced(actionOptions, dropdownOptions, dropdownOptions);\n}\nexport function createDropdownActionModelAdvanced(actionOptions: IAction, listOptions: IListModel, popupOptions?: IPopupOptionsBase): Action {\n  const originalSelectionChanged = listOptions.onSelectionChanged;\n  listOptions.onSelectionChanged = (item: Action, ...params: any[]) => {\n    if (newAction.hasTitle) { newAction.title = item.title; }\n    if (originalSelectionChanged) {\n      originalSelectionChanged(item, params);\n    }\n  };\n  const popupModel: PopupModel = createPopupModelWithListModel(listOptions, popupOptions);\n  popupModel.getTargetCallback = getActionDropdownButtonTarget;\n  const newActionOptions = Object.assign({}, actionOptions, {\n    component: \"sv-action-bar-item-dropdown\",\n    popupModel: popupModel,\n    action: (action: IAction, isUserAction: boolean) => {\n      !!(actionOptions.action) && actionOptions.action();\n      popupModel.isFocusedContent = popupModel.isFocusedContent || !isUserAction;\n      popupModel.show();\n    },\n  });\n  const newAction: Action = new Action(newActionOptions);\n  newAction.data = popupModel.contentComponentData?.model;\n\n  return newAction;\n}\n\nexport function createPopupModelWithListModel(listOptions: IListModel, popupOptions: IPopupOptionsBase): PopupModel {\n  if (!listOptions.listRole) listOptions.listRole = \"menu\";\n  if (!listOptions.listItemRole) listOptions.listItemRole = !!listOptions.allowSelection ? \"menuitemradio\" : \"menuitem\";\n\n  const listModel: ListModel = new ListModel(listOptions as any);\n  listModel.onSelectionChanged = (item: Action) => {\n    if (listOptions.onSelectionChanged) {\n      listOptions.onSelectionChanged(item);\n    }\n    popupModel.hide();\n  };\n\n  const _popupOptions = popupOptions || {};\n  _popupOptions.onDispose = () => { listModel.dispose(); };\n  const popupModel: PopupModel = new PopupModel(\"sv-list\", { model: listModel }, _popupOptions);\n  popupModel.isFocusedContent = listModel.showFilter;\n  popupModel.onShow = () => {\n    if (!!_popupOptions.onShow) _popupOptions.onShow();\n    listModel.scrollToSelectedItem();\n  };\n  popupModel.onHide = () => {\n    if (!!_popupOptions.onHide) _popupOptions.onHide();\n    listModel.filterString = \"\";\n  };\n\n  return popupModel;\n}\n\nexport function getActionDropdownButtonTarget(container: HTMLElement): HTMLElement {\n  return container?.previousElementSibling as HTMLElement;\n}\n\nexport abstract class BaseAction extends Base implements IAction {\n  items?: IAction[];\n  private static renderedId = 1;\n  private static getNextRendredId(): number { return BaseAction.renderedId++; }\n  private cssClassesValue: any;\n  private rendredIdValue = BaseAction.getNextRendredId();\n  private ownerValue: ILocalizableOwner;\n  @property() tooltip: string;\n  @property() showTitle: boolean;\n  @property() innerCss: string;\n  @property() active: boolean;\n  @property() pressed: boolean;\n  private _data: any;\n  public get data() {\n    return this._data;\n  }\n  public set data(val: any) {\n    this._data = val;\n  }\n  @property() popupModel: any;\n  @property() needSeparator: boolean;\n  @property() template: string;\n  @property({ defaultValue: \"large\" }) mode: actionModeType;\n  @property() visibleIndex: number;\n  @property() disableTabStop: boolean;\n  @property() disableShrink: boolean;\n  @property() disableHide: boolean;\n  @property({ defaultValue: false }) needSpace: boolean;\n  @property() ariaChecked: boolean;\n  @property() ariaExpanded: boolean;\n  @property({ defaultValue: \"button\" }) ariaRole: string;\n  public id: string;\n  @property() iconName: string;\n  @property({ defaultValue: 24 }) iconSize: number | string;\n  @property() markerIconName: string;\n  @property() css?: string;\n  minDimension: number;\n  maxDimension: number;\n  public addVisibilityChangedCallback(callback: (action: BaseAction) => void) {}\n  public removeVisibilityChangedCallback(callback: (action: BaseAction) => void) {}\n  public get renderedId(): number { return this.rendredIdValue; }\n  public get owner(): ILocalizableOwner { return this.ownerValue; }\n  public set owner(val: ILocalizableOwner) {\n    if (val !== this.owner) {\n      this.ownerValue = val;\n      this.locStrsChanged();\n    }\n  }\n  public get visible(): boolean {\n    return this.getVisible();\n  }\n  public set visible(val: boolean) {\n    this.setVisible(val);\n  }\n  public get enabled() {\n    return this.getEnabled();\n  }\n  public set enabled(val: boolean) {\n    this.setEnabled(val);\n  }\n  public get component(): string {\n    return this.getComponent();\n  }\n  public set component(val: string) {\n    this.setComponent(val);\n  }\n  public get locTitle(): LocalizableString {\n    return this.getLocTitle();\n  }\n  public set locTitle(val: LocalizableString) {\n    this.setLocTitle(val);\n  }\n  public get title(): string {\n    return this.getTitle();\n  }\n  public set title(val: string) {\n    this.setTitle(val);\n  }\n  public set cssClasses(val: ActionBarCssClasses) {\n    this.cssClassesValue = val;\n  }\n  public get cssClasses(): Readonly<ActionBarCssClasses> {\n    return this.cssClassesValue || defaultActionBarCss;\n  }\n  public get isVisible() {\n    return this.visible && this.mode !== \"popup\" && this.mode !== \"removed\";\n  }\n  public get disabled(): boolean {\n    return this.enabled !== undefined && !this.enabled;\n  }\n  public get canShrink() {\n    return !this.disableShrink && !!this.iconName;\n  }\n  public get hasTitle(): boolean {\n    return (\n      ((this.mode != \"small\" &&\n        (this.showTitle || this.showTitle === undefined)) ||\n        !this.iconName) &&\n      !!this.title\n    );\n  }\n  public get hasSubItems(): boolean {\n    return !!this.items && this.items.length > 0;\n  }\n  public getActionBarItemTitleCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.itemTitle)\n      .append(this.cssClasses.itemTitleWithIcon, !!this.iconName)\n      .toString();\n  }\n  public getActionBarItemCss(): string {\n    const hasTitle = this.hasTitle;\n    return new CssClassBuilder()\n      .append(this.cssClasses.item)\n      .append(this.cssClasses.itemWithTitle, hasTitle)\n      .append(this.cssClasses.itemAsIcon, !hasTitle)\n      .append(this.cssClasses.itemActive, !!this.active)\n      .append(this.cssClasses.itemPressed, !!this.pressed)\n      .append(this.innerCss)\n      .toString();\n  }\n  public getActionRootCss(): string {\n    return new CssClassBuilder()\n      .append(\"sv-action\")\n      .append(this.css)\n      .append(\"sv-action--space\", this.needSpace)\n      .append(\"sv-action--hidden\", !this.isVisible)\n      .toString();\n  }\n  public getTooltip(): string {\n    return this.tooltip || this.title;\n  }\n  public getIsTrusted(args: any): boolean {\n    if (!!args.originalEvent) {\n      return args.originalEvent.isTrusted;\n    }\n    return args.isTrusted;\n  }\n  public showPopup(): void {\n    if (!!this.popupModel) {\n      this.popupModel.show();\n    }\n  }\n  public hidePopup(): void {\n    if (!!this.popupModel) {\n      this.popupModel.hide();\n    }\n  }\n\n  @property({ defaultValue: false }) isPressed: boolean;\n  @property({ defaultValue: false }) isHovered: boolean;\n\n  private showPopupTimeout: any;\n  private hidePopupTimeout: any;\n  private clearPopupTimeouts() {\n    if (this.showPopupTimeout) clearTimeout(this.showPopupTimeout);\n    if (this.hidePopupTimeout) clearTimeout(this.hidePopupTimeout);\n  }\n  public showPopupDelayed(delay: number) {\n\n    this.clearPopupTimeouts();\n    this.showPopupTimeout = setTimeout(() => {\n      this.clearPopupTimeouts();\n\n      this.showPopup();\n\n    }, delay);\n  }\n\n  public hidePopupDelayed(delay: number) {\n    if (this.popupModel?.isVisible) {\n\n      this.clearPopupTimeouts();\n      this.hidePopupTimeout = setTimeout(() => {\n        this.clearPopupTimeouts();\n\n        this.hidePopup();\n        this.isHovered = false;\n\n      }, delay);\n    } else {\n      this.clearPopupTimeouts();\n      this.isHovered = false;\n    }\n  }\n\n  protected abstract getEnabled(): boolean;\n  protected abstract setEnabled(val: boolean): void;\n  protected abstract getVisible(): boolean;\n  protected abstract setVisible(val: boolean): void;\n  protected abstract getLocTitle(): LocalizableString;\n  protected abstract setLocTitle(val: LocalizableString): void;\n  protected abstract getTitle(): string;\n  protected abstract setTitle(val: string): void;\n  protected abstract getComponent(): string;\n  protected abstract setComponent(val: string): void;\n}\n\nexport class Action extends BaseAction implements IAction, ILocalizableOwner {\n  private locTitleValue: LocalizableString;\n  public innerItem: IAction;\n  constructor(innerItemData: IAction) {\n    super();\n    const innerItem: IAction = (innerItemData instanceof Action) ? innerItemData.innerItem : innerItemData;\n    this.innerItem = innerItem;\n    this.locTitle = !!innerItem ? innerItem[\"locTitle\"] : null;\n    //Object.assign(this, item) to support IE11\n    if (!!innerItem) {\n      for (var key in innerItem) {\n        if (key === \"locTitle\" || key === \"title\" && !!this.locTitle && !!this.title) continue;\n        (<any>this)[key] = (<any>innerItem)[key];\n      }\n    }\n    if (!!this.locTitleName) {\n      this.locTitleChanged();\n    }\n    this.locStrChangedInPopupModel();\n  }\n  private createLocTitle(): LocalizableString {\n    return this.createLocalizableString(\"title\", this, true);\n  }\n  public setSubItems(options: IListModel): void {\n    this.markerIconName = \"icon-next_16x16\";\n    this.component = this.getGroupComponentName();\n    this.items = [...options.items];\n    if (!this.popupModel) {\n      this.createPopupForSubitems(options);\n    } else {\n      const list: ListModel = this.popupModel.contentComponentData.model as ListModel;\n      list.setItems(this.items);\n    }\n  }\n  private createPopupForSubitems(options: IListModel): void {\n    const listOptions = Object.assign({}, options);\n    listOptions.searchEnabled = false;\n    const popupModel = createPopupModelWithListModel(\n      listOptions,\n      { horizontalPosition: \"right\", showPointer: false, canShrink: false }\n    );\n    popupModel.cssClass = \"sv-popup-inner\";\n    this.popupModel = popupModel;\n  }\n\n  location?: string;\n  @property() id: string;\n  @property({ defaultValue: true }) private _visible: boolean;\n  @property({\n    onSet: (_, target: Action) => {\n      target.locTooltipChanged();\n    }\n  }) locTooltipName?: string;\n  @property() private _enabled: boolean;\n  @property() action: (context?: any, isUserAction?: boolean) => void;\n  @property() onFocus: (isMouse: boolean, event: any) => void;\n  @property() _component: string;\n  @property() items: any;\n  @property({\n    onSet: (val, target) => {\n      if (target.locTitleValue.text === val) return;\n      target.locTitleValue.text = val;\n    }\n  }) _title: string;\n  protected getLocTitle(): LocalizableString {\n    return this.locTitleValue;\n  }\n  protected setLocTitle(val: LocalizableString): void {\n    if (!val && !this.locTitleValue) {\n      val = this.createLocTitle();\n    }\n    if (!!this.locTitleValue) {\n      this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n    }\n    this.locTitleValue = val;\n    this.locTitleValue.onStringChanged.add(this.locTitleChanged);\n    this.locTitleChanged();\n  }\n  protected getTitle(): string {\n    return this._title;\n  }\n  protected setTitle(val: string): void {\n    this._title = val;\n  }\n  public get locTitleName(): string {\n    return this.locTitle.localizationName;\n  }\n  public set locTitleName(val: string) {\n    this.locTitle.localizationName = val;\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.locTooltipChanged();\n    this.locStrChangedInPopupModel();\n  }\n  public doAction(args: any): boolean {\n    const evt = !!args.originalEvent ? args.originalEvent : args;\n    this.action(this, evt.isTrusted);\n    evt.preventDefault();\n    evt.stopPropagation();\n    return true;\n  }\n  private isMouseDown: boolean;\n  public doMouseDown(args: any): void {\n    this.isMouseDown = true;\n  }\n  public doFocus(args: any): void {\n    if (!!this.onFocus) {\n      const evt = !!args.originalEvent ? args.originalEvent : args;\n      this.onFocus(this.isMouseDown, evt);\n    }\n    this.isMouseDown = false;\n  }\n  private locStrChangedInPopupModel(): void {\n    if (!this.popupModel || !this.popupModel.contentComponentData || !this.popupModel.contentComponentData.model) return;\n    const model = this.popupModel.contentComponentData.model;\n    if (Array.isArray(model.actions)) {\n      const actions: Array<any> = model.actions;\n      actions.forEach(item => {\n        if (!!(<any>item).locStrsChanged) {\n          (<any>item).locStrsChanged();\n        }\n      });\n    }\n  }\n  private locTitleChanged = () => {\n    const val = this.locTitle.renderedHtml;\n    this.setPropertyValue(\"_title\", !!val ? val : undefined);\n  };\n  private locTooltipChanged(): void {\n    if (!this.locTooltipName) return;\n    this.tooltip = getLocaleString(this.locTooltipName, this.locTitle.locale);\n  }\n\n  //ILocalizableOwner\n  getLocale(): string { return this.owner ? this.owner.getLocale() : \"\"; }\n  getMarkdownHtml(text: string, name: string, item?: any): string { return this.owner ? this.owner.getMarkdownHtml(text, name, item) : undefined; }\n  getProcessedText(text: string): string { return this.owner ? this.owner.getProcessedText(text) : text; }\n  getRenderer(name: string): string { return this.owner ? this.owner.getRenderer(name) : null; }\n  getRendererContext(locStr: LocalizableString): any { return this.owner ? this.owner.getRendererContext(locStr) : locStr; }\n\n  public setVisible(val: boolean): void {\n    if (this.visible !== val) {\n      this._visible = val;\n    }\n  }\n  public getVisible(): boolean {\n    return this._visible;\n  }\n\n  public enabledIf?: () => boolean;\n  public setEnabled(val: boolean): void {\n    this._enabled = val;\n  }\n  public getEnabled(): boolean {\n    if (this.enabledIf) return this.enabledIf();\n    return this._enabled;\n  }\n  public setComponent(val: string): void {\n    this._component = val;\n  }\n  public getComponent(): string {\n    return this._component;\n  }\n  protected getGroupComponentName() {\n    return \"sv-list-item-group\";\n  }\n  public dispose(): void {\n    if (!!this.locTitleValue) {\n      this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n    }\n    this.locTitleChanged = undefined;\n    this.action = undefined;\n    super.dispose();\n    if (this.popupModel) {\n      this.popupModel.dispose();\n    }\n  }\n  public updateDimension(mode: actionModeType, htmlElement: HTMLElement, calcDimension: (el: HTMLElement) => number): void {\n    const property = mode == \"small\" ? \"minDimension\" : \"maxDimension\";\n    if (htmlElement) {\n      const actionContainer = htmlElement;\n      if (actionContainer.classList.contains(\"sv-action--hidden\")) {\n        actionContainer.classList.remove(\"sv-action--hidden\");\n        this[property] = calcDimension(htmlElement);\n        actionContainer.classList.add(\"sv-action--hidden\");\n      } else {\n        this[property] = calcDimension(htmlElement);\n      }\n    }\n  }\n\n  public needUpdateMaxDimension: boolean = false;\n  public needUpdateMinDimension: boolean = false;\n  public updateModeCallback: (mode: actionModeType, callback: (mode: actionModeType, el: HTMLElement) => void) => void;\n  public afterRenderCallback: () => void;\n  public afterRender(): void {\n    this.afterRenderCallback && this.afterRenderCallback();\n  }\n  public updateMode(mode: actionModeType, callback: (mode: actionModeType, el: HTMLElement) => void): void {\n    if (this.updateModeCallback) {\n      this.updateModeCallback(mode, callback);\n    } else {\n      this.afterRenderCallback = () => {\n        this.updateModeCallback(mode, callback);\n        this.afterRenderCallback = undefined;\n      };\n    }\n  }\n  public updateDimensions(calcDimension: (htmlElement: HTMLElement) => number, callback: () => void, modeToCalculate?: actionModeType): void {\n    const mode = !modeToCalculate || (modeToCalculate == \"large\" && this.mode !== \"small\") ? this.mode : modeToCalculate;\n    this.updateMode(mode, (mode, htmlElement) => {\n      this.updateDimension(mode, htmlElement, calcDimension);\n      if (!modeToCalculate) {\n        this.updateMode(mode !== \"small\" ? \"small\" : \"large\", (mode, htmlElement) => {\n          this.updateDimension(mode, htmlElement, calcDimension);\n          callback();\n        });\n      } else {\n        callback();\n      }\n    });\n  }\n}\n\nexport class ActionDropdownViewModel {\n  private popupModel: any;\n  private funcKey = \"sv-dropdown-action\";\n  constructor(private item: Action) {\n    this.setupPopupCallbacks();\n  }\n  private setupPopupCallbacks() {\n    const popupModel = this.popupModel = this.item.popupModel;\n    if (!popupModel) return;\n    popupModel.registerPropertyChangedHandlers([\"isVisible\"], () => {\n      if (!popupModel.isVisible) {\n        this.item.pressed = false;\n      } else {\n        this.item.pressed = true;\n      }\n    }, this.funcKey);\n  }\n  private removePopupCallbacks() {\n    if (!!this.popupModel) {\n      this.popupModel.unregisterPropertyChangedHandlers([\"isVisible\"], this.funcKey);\n    }\n  }\n  public dispose(): void {\n    this.removePopupCallbacks();\n  }\n}", "import { ResponsivityManager } from \"../utils/responsivity-manager\";\nimport { ListModel } from \"../list\";\nimport { Action, actionModeType, createDropdownActionModelAdvanced, IAction } from \"./action\";\nimport { ActionContainer, ContainerUpdateOptions } from \"./container\";\nimport { getLocaleString } from \"../surveyStrings\";\nimport { property } from \"../jsonobject\";\n\nexport enum UpdateResponsivenessMode {\n  None = 0,\n  Light = 1,\n  Hard = 3\n}\n\nexport type AdaptiveContainerUpdateOptions = { updateResponsivenessMode?: UpdateResponsivenessMode } & ContainerUpdateOptions;\n\nexport class AdaptiveActionContainer<T extends Action = Action> extends ActionContainer<T> {\n  public dotsItem: Action;\n  protected responsivityManager: ResponsivityManager;\n  public minVisibleItemsCount: number = 0;\n  public isResponsivenessDisabled = false;\n  @property() private isInitialized: boolean = false;\n  private hideItemsGreaterN(visibleItemsCount: number) {\n    const actionsToHide = this.getActionsToHide();\n    visibleItemsCount = Math.max(visibleItemsCount, this.minVisibleItemsCount - (this.visibleActions.length - actionsToHide.length));\n    const hiddenItems: IAction[] = [];\n    actionsToHide.forEach((item) => {\n      if (visibleItemsCount <= 0) {\n        item.mode = \"popup\";\n        hiddenItems.push(item.innerItem);\n      }\n      visibleItemsCount--;\n    });\n    this.hiddenItemsListModel.setItems(hiddenItems);\n  }\n\n  private getActionsToHide() {\n    return this.visibleActions.filter(action => !action.disableHide);\n  }\n  private updateItemMode(availableSpace: number, maxItemsSize: number) {\n    const items = this.visibleActions;\n    for (let index = items.length - 1; index >= 0; index--) {\n      if (maxItemsSize > availableSpace && !items[index].disableShrink) {\n        maxItemsSize -= items[index].maxDimension - items[index].minDimension;\n        items[index].mode = \"small\";\n      } else {\n        items[index].mode = \"large\";\n      }\n    }\n  }\n  constructor() {\n    super();\n\n    this.dotsItem = createDropdownActionModelAdvanced({\n      id: \"dotsItem-id\" + this.id++,\n      css: \"sv-dots\",\n      innerCss: \"sv-dots__item\",\n      iconName: \"icon-more\",\n      visible: false,\n      tooltip: getLocaleString(\"more\"),\n    }, {\n      items: [],\n      allowSelection: false\n    });\n  }\n  public get hiddenItemsListModel(): ListModel {\n    return this.dotsItem.data as ListModel;\n  }\n  protected onSet(): void {\n    super.onSet();\n    this.raiseUpdate({ updateResponsivenessMode: UpdateResponsivenessMode.Hard });\n  }\n\n  protected onPush(action: T): void {\n    super.onPush(action);\n    this.raiseUpdate({ updateResponsivenessMode: UpdateResponsivenessMode.Hard });\n  }\n  protected onRemove(action: T): void {\n    super.onRemove(action);\n    this.raiseUpdate({ updateResponsivenessMode: UpdateResponsivenessMode.Hard });\n  }\n\n  protected onActionPropertyChanged(action: T, options: { name: string, newValue: any, oldValue: any }): void {\n    super.onActionPropertyChanged(action, options);\n    if (options.name == \"_visible\" || options.name == \"_title\") {\n      action.needUpdateMaxDimension = action.visible;\n      action.needUpdateMinDimension = action.visible;\n      this.raiseUpdate({ updateResponsivenessMode: UpdateResponsivenessMode.Light });\n    }\n    if (options.name == \"disableHide\" && options.newValue && action.mode == \"popup\") {\n      this.raiseUpdate({ updateResponsivenessMode: UpdateResponsivenessMode.Light });\n    }\n  }\n\n  protected getRenderedActions(): Array<T> {\n    const actions = super.getRenderedActions();\n    if (actions.length == 0 || (actions.length === 1 && !!actions[0].iconName))\n      return actions;\n    return actions.concat([<T>this.dotsItem]);\n  }\n\n  protected getAllActions(): T[] {\n    return this.actions.concat(<T>this.dotsItem);\n  }\n\n  protected getActionMinDimension(action: Action): number {\n    return action.disableShrink ? action.maxDimension : action.minDimension;\n  }\n\n  private getVisibleItemsCount(options: { availableSpace: number, gap?: number }): number {\n    let { availableSpace, gap } = options;\n    availableSpace -= this.dotsItem.minDimension + gap;\n    let currentItemsSize = 0;\n    if (this.visibleActions[0].disableHide) {\n      availableSpace += gap;\n    } else {\n      currentItemsSize -= gap;\n    }\n    this.visibleActions\n      .filter((action) => action.disableHide)\n      .forEach(action => {\n        return availableSpace -= (this.getActionMinDimension(action) + gap);\n      });\n    const actionsToHide = this.getActionsToHide();\n    if (actionsToHide.length === 1 && !!actionsToHide[0].iconName) {\n      return 1;\n    }\n    for (let i = 0; i < actionsToHide.length; i++) {\n      currentItemsSize += this.getActionMinDimension(actionsToHide[i]) + gap;\n      if (currentItemsSize > availableSpace) {\n        return i;\n      }\n    }\n  }\n\n  public fit(options: { availableSpace: number, gap?: number }): void {\n    if (options.availableSpace <= 0) return;\n    options.gap = options.gap ?? 0;\n    const { availableSpace, gap } = options;\n\n    this.dotsItem.visible = false;\n    const actions = this.visibleActions;\n    let minSize = - 1 * options.gap;\n    let maxSize = - 1 * options.gap;\n    actions.forEach((action) => {\n      minSize += this.getActionMinDimension(action) + gap;\n      maxSize += action.maxDimension + gap;\n    });\n    if (availableSpace >= maxSize) {\n      this.setActionsMode(\"large\");\n    } else if (availableSpace < minSize) {\n      this.setActionsMode(\"small\");\n      this.hideItemsGreaterN(this.getVisibleItemsCount(options));\n      this.dotsItem.visible = !!this.hiddenItemsListModel.actions.length;\n    } else {\n      this.updateItemMode(options.availableSpace, maxSize);\n    }\n  }\n  protected createResponsivityManager(container: HTMLDivElement): ResponsivityManager {\n    return new ResponsivityManager(\n      container, this\n    );\n  }\n  protected mergeUpdateOptions(nextOptions: AdaptiveContainerUpdateOptions, prevOptions: AdaptiveContainerUpdateOptions): AdaptiveContainerUpdateOptions {\n    const options = super.mergeUpdateOptions(nextOptions, prevOptions) as AdaptiveContainerUpdateOptions;\n    options.updateResponsivenessMode = options.updateResponsivenessMode | prevOptions.updateResponsivenessMode;\n    return options;\n  }\n  protected raiseUpdate(options?: AdaptiveContainerUpdateOptions): void {\n    super.raiseUpdate(options);\n  }\n  protected update(options: AdaptiveContainerUpdateOptions): void {\n    super.update(options);\n    if (options.updateResponsivenessMode) {\n      this.responsivityManager?.update(options.updateResponsivenessMode == UpdateResponsivenessMode.Hard);\n    }\n  }\n  public initResponsivityManager(container: HTMLDivElement): void {\n    if (!!this.responsivityManager) {\n      if (this.responsivityManager.container == container) {\n        return;\n      }\n      this.responsivityManager.dispose();\n    }\n    this.isInitialized = false;\n    this.responsivityManager = this.createResponsivityManager(container);\n    this.responsivityManager.afterInitializeCallback = () => {\n      this.isInitialized = true;\n    };\n  }\n  public resetResponsivityManager(): void {\n    if (!!this.responsivityManager) {\n      this.responsivityManager.dispose();\n      this.responsivityManager = undefined;\n    }\n  }\n  public getRootStyle() {\n    if (!this.isInitialized && !this.isResponsivenessDisabled) {\n      return { opacity: 0 };\n    } else {\n      return undefined;\n    }\n  }\n  public setActionsMode(mode: actionModeType): void {\n    this.actions.forEach((action) => {\n      if (mode == \"small\" && action.disableShrink) {\n        action.mode = \"large\";\n      } else {\n        action.mode = mode;\n      }\n    });\n  }\n  public dispose(): void {\n    super.dispose();\n    this.dotsItem.data.dispose();\n    this.dotsItem.dispose();\n    this.resetResponsivityManager();\n  }\n}", "import { debounce } from \"./taskmanager\";\nimport { compareArrays } from \"./utils\";\nimport { EventBase, Base } from \"../base\";\nimport { DomWindowHelper } from \"../global_variables_utils\";\n\nexport interface AnimationOptions{\n  cssClass: string;\n  onBeforeRunAnimation?: (element: HTMLElement) => void;\n  onAfterRunAnimation?: (element: HTMLElement) => void;\n}\n\nexport interface IAnimationConsumer<T extends Array<any> = []> {\n  getLeaveOptions?(...args: T): AnimationOptions;\n  getEnterOptions?(...args: T): AnimationOptions;\n  getAnimatedElement(...args: T): HTMLElement;\n  isAnimationEnabled(): boolean;\n  getRerenderEvent(): EventBase<Base>;\n}\n\ninterface IGroupAnimationInfo {\n  isReorderingRunning: boolean;\n  isDeletingRunning: boolean;\n  isAddingRunning: boolean;\n}\ninterface IGroupAnimationCompareInfo<T> {\n  addedItems: Array<T>;\n  deletedItems: Array<T>;\n  reorderedItems: Array<{ item: T, movedForward: boolean}>;\n  mergedItems: Array<T>;\n}\nexport interface IAnimationGroupConsumer<T> extends IAnimationConsumer<[T]> {\n  getLeaveOptions?(item: T, info? : IGroupAnimationInfo): AnimationOptions;\n  getEnterOptions?(item: T, info?: IGroupAnimationInfo): AnimationOptions;\n  getReorderOptions?(item: T, movedForward: boolean, info?: IGroupAnimationInfo): AnimationOptions;\n  getKey?: (item: T) => any;\n  onCompareArrays?(options: IGroupAnimationCompareInfo<T>): void;\n  allowSyncRemovalAddition?: boolean;\n}\n\nexport class AnimationUtils {\n  private getMsFromRule(value: string) {\n    if (value === \"auto\") return 0;\n    return Number(value.slice(0, -1).replace(\",\", \".\")) * 1000;\n  }\n  private reflow(element: HTMLElement) {\n    return element.offsetHeight;\n  }\n  private getAnimationsCount(element: HTMLElement) {\n    let animationName = \"\";\n    if (getComputedStyle) {\n      animationName = getComputedStyle(element).animationName;\n    }\n    return (animationName && animationName != \"none\" ? animationName.split(\", \").length : 0);\n  }\n  private getAnimationDuration(element: HTMLElement): number {\n    const style = getComputedStyle(element);\n    const delays = style[\"animationDelay\"].split(\", \");\n    const durations = style[\"animationDuration\"].split(\", \");\n    let duration = 0;\n    for (let i = 0; i < Math.max(durations.length, delays.length); i ++) {\n      duration = Math.max(duration, this.getMsFromRule(durations[i % durations.length]) + this.getMsFromRule(delays[i % delays.length]));\n    }\n    return duration;\n  }\n  private cancelQueue: Array<() => void> = [];\n\n  private addCancelCallback(callback: () => void) {\n    this.cancelQueue.push(callback);\n  }\n  private removeCancelCallback(callback: () => void) {\n    if (this.cancelQueue.indexOf(callback) >= 0) {\n      this.cancelQueue.splice(this.cancelQueue.indexOf(callback), 1);\n    }\n  }\n\n  protected onAnimationEnd(element: HTMLElement, callback: (isCancel?: boolean) => void, options: AnimationOptions): void {\n    let cancelTimeout: any;\n    let animationsCount = this.getAnimationsCount(element);\n    const onEndCallback = (isCancel: boolean = true) => {\n      callback(isCancel);\n      clearTimeout(cancelTimeout);\n      this.removeCancelCallback(onEndCallback);\n      element.removeEventListener(\"animationend\", onAnimationEndCallback);\n    };\n    const onAnimationEndCallback = (event: AnimationEvent) => {\n      if (event.target == event.currentTarget && --animationsCount <= 0) {\n        onEndCallback(false);\n      }\n    };\n    if (animationsCount > 0) {\n      element.addEventListener(\"animationend\", onAnimationEndCallback);\n      this.addCancelCallback(onEndCallback);\n      cancelTimeout = setTimeout(() => {\n        onEndCallback(false);\n      }, this.getAnimationDuration(element) + 10);\n    } else {\n      callback(true);\n    }\n  }\n\n  protected afterAnimationRun(element: HTMLElement, options: AnimationOptions | AnimationOptions): void {\n    if (element && options) {\n      options.onAfterRunAnimation && options.onAfterRunAnimation(element);\n    }\n  }\n\n  protected beforeAnimationRun(element: HTMLElement, options: AnimationOptions | AnimationOptions): void {\n    if (element && options) {\n      options.onBeforeRunAnimation && options.onBeforeRunAnimation(element);\n    }\n  }\n  private getCssClasses(options: AnimationOptions) {\n    return options.cssClass.replace(/\\s+$/, \"\").split(/\\s+/);\n  }\n  protected runAnimation(element: HTMLElement, options: AnimationOptions, callback: (isCancel?: boolean) => void): void {\n    if (element && options?.cssClass) {\n      this.reflow(element);\n      this.getCssClasses(options).forEach((cssClass) => {\n        element.classList.add(cssClass);\n      });\n      this.onAnimationEnd(element, callback, options);\n    } else {\n      callback(true);\n    }\n  }\n  protected clearHtmlElement(element: HTMLElement, options: AnimationOptions): void {\n    if (element && options.cssClass) {\n      this.getCssClasses(options).forEach((cssClass) => {\n        element.classList.remove(cssClass);\n      });\n    }\n    this.afterAnimationRun(element, options);\n  }\n\n  protected onNextRender(callback: (isCancel?: boolean) => void, isCancel: boolean = false): void {\n    if (!isCancel && DomWindowHelper.isAvailable()) {\n      let latestRAF: number;\n      const cancelCallback = () => {\n        callback(true);\n        cancelAnimationFrame(latestRAF);\n      };\n      latestRAF = DomWindowHelper.requestAnimationFrame(() => {\n        latestRAF = DomWindowHelper.requestAnimationFrame(() => {\n          callback(false);\n          this.removeCancelCallback(cancelCallback);\n        });\n      });\n      this.addCancelCallback(cancelCallback);\n    } else {\n      callback(true);\n    }\n  }\n\n  public cancel(): void {\n    const cancelQueue = [].concat(this.cancelQueue);\n    cancelQueue.forEach(callback => callback());\n    this.cancelQueue = [];\n  }\n}\n\nexport class AnimationPropertyUtils extends AnimationUtils {\n  public onEnter(options: IAnimationConsumer): void {\n    const htmlElement = options.getAnimatedElement();\n    const enterOptions: AnimationOptions = options.getEnterOptions ? options.getEnterOptions() : {} as any;\n    this.beforeAnimationRun(htmlElement, enterOptions);\n    this.runAnimation(htmlElement, enterOptions, () => {\n      this.clearHtmlElement(htmlElement, enterOptions);\n    });\n  }\n  public onLeave(options: IAnimationConsumer, callback: () => void): void {\n    const htmlElement = options.getAnimatedElement();\n    const leaveOptions: AnimationOptions = options.getLeaveOptions ? options.getLeaveOptions() : {} as any;\n    this.beforeAnimationRun(htmlElement, leaveOptions);\n    this.runAnimation(htmlElement, leaveOptions, (isCancel) => {\n      callback();\n      this.onNextRender(() => {\n        this.clearHtmlElement(htmlElement, leaveOptions);\n      }, isCancel);\n    });\n  }\n}\nexport class AnimationGroupUtils<T> extends AnimationUtils {\n  public runGroupAnimation(options: IAnimationGroupConsumer<T>, addedItems: Array<T>, removedItems: Array<T>, reorderedItems: Array<{ item: T, movedForward: boolean }>, callback?: () => void): void {\n    const info: IGroupAnimationInfo = {\n      isAddingRunning: addedItems.length > 0,\n      isDeletingRunning: removedItems.length > 0,\n      isReorderingRunning: reorderedItems.length > 0\n    };\n    const addedHtmlElements = addedItems.map((el) => options.getAnimatedElement(el));\n    const enterOptions: Array<AnimationOptions> = addedItems.map((el) => options.getEnterOptions ? options.getEnterOptions(el, info) : {} as any);\n    const removedHtmlElements = removedItems.map((el) => options.getAnimatedElement(el));\n    const leaveOptions: Array<AnimationOptions> = removedItems.map((el) => options.getLeaveOptions ? options.getLeaveOptions(el, info) : {} as any);\n    const reorderedHtmlElements = reorderedItems.map(el => options.getAnimatedElement(el.item));\n    const reorderedOptions: Array<AnimationOptions> = reorderedItems.map(el => options.getReorderOptions ? options.getReorderOptions(el.item, el.movedForward, info) : {} as any);\n    addedItems.forEach((_, i) => {\n      this.beforeAnimationRun(addedHtmlElements[i], enterOptions[i]);\n    });\n    removedItems.forEach((_, i) => {\n      this.beforeAnimationRun(removedHtmlElements[i], leaveOptions[i]);\n    });\n    reorderedItems.forEach((_, i) => {\n      this.beforeAnimationRun(reorderedHtmlElements[i], reorderedOptions[i]);\n    });\n    let counter = addedItems.length + removedItems.length + reorderedHtmlElements.length;\n    const onAnimationEndCallback = (isCancel: boolean) => {\n      if (--counter <= 0) {\n        callback && callback();\n        this.onNextRender(() => {\n          addedItems.forEach((_, i) => {\n            this.clearHtmlElement(addedHtmlElements[i], enterOptions[i]);\n          });\n          removedItems.forEach((_, i) => {\n            this.clearHtmlElement(removedHtmlElements[i], leaveOptions[i]);\n          });\n          reorderedItems.forEach((_, i) => {\n            this.clearHtmlElement(reorderedHtmlElements[i], reorderedOptions[i]);\n          });\n        }, isCancel);\n      }\n    };\n    addedItems.forEach((_, i) => {\n      this.runAnimation(addedHtmlElements[i], enterOptions[i], onAnimationEndCallback);\n    });\n    removedItems.forEach((_, i) => {\n      this.runAnimation(removedHtmlElements[i], leaveOptions[i], onAnimationEndCallback);\n    });\n    reorderedItems.forEach((_, i) => {\n      this.runAnimation(reorderedHtmlElements[i], reorderedOptions[i], onAnimationEndCallback);\n    });\n  }\n}\n\nexport abstract class AnimationProperty<T, S extends IAnimationConsumer<any> = IAnimationConsumer> {\n  constructor(protected animationOptions: S, protected update: (val: T, isTempUpdate?: boolean) => void, protected getCurrentValue: () => T) {\n  }\n  protected animation: AnimationUtils;\n  protected onNextRender(callback: () => void, onCancel?: () => void): void {\n    const rerenderEvent = this.animationOptions.getRerenderEvent();\n    if (!rerenderEvent) {\n      if (DomWindowHelper.isAvailable()) {\n        const raf = DomWindowHelper.requestAnimationFrame(() => {\n          callback();\n          this.cancelCallback = undefined;\n        });\n        this.cancelCallback = () => {\n          onCancel && onCancel();\n          cancelAnimationFrame(raf);\n          this.cancelCallback = undefined;\n        };\n      } else {\n        throw new Error(\"Can't get next render\");\n      }\n    } else {\n      const clear = () => {\n        rerenderEvent.remove(nextRenderCallback);\n        this.cancelCallback = undefined;\n      };\n      const nextRenderCallback = (_: Base, options: { isCancel: boolean }) => {\n        if (options.isCancel) {\n          onCancel && onCancel();\n        } else {\n          callback();\n        }\n        clear();\n      };\n      this.cancelCallback = () => {\n        onCancel && onCancel();\n        clear();\n      };\n      rerenderEvent.add(nextRenderCallback);\n    }\n  }\n  protected abstract _sync(newValue: T): void;\n  private _debouncedSync = debounce((newValue: T) => {\n    this.cancelAnimations();\n    try {\n      this._sync(newValue);\n    } catch{\n      this.update(newValue);\n    }\n  });\n  sync(newValue: T): void {\n    if (this.animationOptions.isAnimationEnabled()) {\n      this._debouncedSync.run(newValue);\n    } else {\n      this.cancel();\n      this.update(newValue);\n    }\n  }\n  private cancelCallback: () => void;\n  cancel(): void {\n    this._debouncedSync.cancel();\n    this.cancelAnimations();\n  }\n  cancelAnimations(): void {\n    this.cancelCallback && this.cancelCallback();\n    this.animation.cancel();\n  }\n}\n\nexport class AnimationBoolean extends AnimationProperty<boolean> {\n  protected animation: AnimationPropertyUtils = new AnimationPropertyUtils();\n  protected _sync(newValue: boolean): void {\n    if (newValue !== this.getCurrentValue()) {\n      if (newValue) {\n        this.onNextRender(() => {\n          this.animation.onEnter(this.animationOptions);\n        });\n        this.update(newValue);\n      } else {\n        this.animation.onLeave(this.animationOptions, () => {\n          this.update(newValue);\n        });\n      }\n    } else {\n      this.update(newValue);\n    }\n  }\n}\n\nexport class AnimationGroup<T> extends AnimationProperty<Array<T>, IAnimationGroupConsumer<T>> {\n  protected animation: AnimationGroupUtils<T> = new AnimationGroupUtils();\n  protected _sync (newValue: Array<T>): void {\n    newValue = [].concat(newValue);\n    const oldValue = [].concat(this.getCurrentValue());\n    const allowSyncRemovalAddition = this.animationOptions.allowSyncRemovalAddition ?? true;\n    let compareResult = compareArrays(oldValue, newValue, this.animationOptions.getKey ?? ((item: T) => item));\n\n    if (!allowSyncRemovalAddition && (compareResult.reorderedItems.length > 0 || compareResult.addedItems.length > 0)) {\n      compareResult.deletedItems = [];\n      compareResult.mergedItems = newValue;\n    }\n    if (!!this.animationOptions.onCompareArrays) {\n      this.animationOptions.onCompareArrays(compareResult);\n    }\n    let { addedItems, reorderedItems, deletedItems, mergedItems } = compareResult;\n    const runAnimationCallback = () => {\n      this.animation.runGroupAnimation(this.animationOptions, addedItems, deletedItems, reorderedItems, () => {\n        if (deletedItems.length > 0) {\n          this.update(newValue);\n        }\n      });\n    };\n    if ([addedItems, deletedItems, reorderedItems].some((arr) => arr.length > 0)) {\n      if (deletedItems.length <= 0 || reorderedItems.length > 0 || addedItems.length > 0) {\n        this.onNextRender(runAnimationCallback, () => {\n          this.update(newValue);\n        });\n        this.update(mergedItems);\n      } else {\n        runAnimationCallback();\n      }\n    } else {\n      this.update(newValue);\n    }\n  }\n}\nexport class AnimationTab<T> extends AnimationProperty<Array<T>, IAnimationGroupConsumer<T>> {\n  protected animation: AnimationGroupUtils<T> = new AnimationGroupUtils();\n  constructor(animationOptions: IAnimationGroupConsumer<T>, update: (val: Array<T>, isTempUpdate?: boolean) => void, getCurrentValue: () => Array<T>, protected mergeValues?: (newValue: Array<T>, oldValue: Array<T>) => Array<T>) {\n    super(animationOptions, update, getCurrentValue);\n  }\n  protected _sync(newValue: [T]): void {\n    const oldValue = [].concat(this.getCurrentValue());\n    if (oldValue[0] !== newValue[0]) {\n      const tempValue = !!this.mergeValues ? this.mergeValues(newValue, oldValue) : [].concat(oldValue, newValue);\n      this.onNextRender(() => {\n        this.animation.runGroupAnimation(this.animationOptions, newValue, oldValue, [], () => {\n          this.update(newValue);\n        });\n      }, () => this.update(newValue));\n      this.update(tempValue, true);\n\n    } else {\n      this.update(newValue);\n    }\n  }\n}", "import { JsonObjectProperty, Serializer, property } from \"./jsonobject\";\nimport { Base, EventBase } from \"./base\";\nimport { Action, IAction } from \"./actions/action\";\nimport { AdaptiveActionContainer } from \"./actions/adaptive-container\";\nimport {\n  ISurveyElement,\n  IElement,\n  IPage,\n  IPanel,\n  IProgressInfo,\n  ISurvey,\n  ISurveyData,\n  ISurveyImpl,\n  ITextProcessor,\n  ITitleOwner\n} from \"./base-interfaces\";\nimport { SurveyError } from \"./survey-error\";\nimport { Helpers } from \"./helpers\";\nimport { settings } from \"./settings\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { ActionContainer, defaultActionBarCss } from \"./actions/container\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { SurveyModel } from \"./survey\";\nimport { IAnimationConsumer, AnimationBoolean, AnimationProperty } from \"./utils/animation\";\nimport { classesToSelector, cleanHtmlElementAfterAnimation, prepareElementForVerticalAnimation } from \"./utils/utils\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { PanelModel } from \"./panel\";\nimport { IObjectValueContext, IValueGetterContext } from \"./conditionProcessValue\";\nimport { ItemValue } from \"./itemvalue\";\n\n/**\n * A base class for the [`SurveyElement`](https://surveyjs.io/form-library/documentation/surveyelement) and [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) classes.\n */\nexport abstract class SurveyElementCore extends Base implements ILocalizableOwner {\n  constructor() {\n    super();\n    this.createLocTitleProperty();\n  }\n  protected createLocTitleProperty(): LocalizableString {\n    return this.createLocalizableString(\"title\", this, true);\n  }\n  /**\n   * Returns `true` if the survey element is a page.\n   *\n   * This property returns `false` for [`PageModel`](https://surveyjs.io/form-library/documentation/api-reference/page-model) objects in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and all regular pages become panels.\n   */\n  public get isPage(): boolean { return false; }\n  /**\n   * Returns `true` if the survey element is a panel or acts as one.\n   *\n   * This property returns `true` for `PageModel` objects in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and all regular pages become panels.\n   */\n  public get isPanel(): boolean { return false; }\n  /**\n   * Returns `true` if the survey element is a question.\n   */\n  public get isQuestion(): boolean { return false; }\n  /**\n   * Returns `true` if the element is a survey.\n   */\n  public get isSurvey(): boolean { return false; }\n  /**\n   * A title for the survey element. If `title` is undefined, the `name` property value is displayed instead.\n   *\n   * Empty pages and panels do not display their titles or names.\n   *\n   * @see [Configure Question Titles](https://surveyjs.io/form-library/documentation/design-survey-question-titles)\n  */\n  public get title(): string {\n    return this.getLocalizableStringText(\"title\", this.getDefaultTitleValue());\n  }\n  public set title(val: string) {\n    this.setTitleValue(val);\n  }\n  get locTitle(): LocalizableString {\n    return this.getLocalizableString(\"title\");\n  }\n  get locRenderedTitle(): LocalizableString {\n    return this.locTitle;\n  }\n  protected getDefaultTitleValue(): string { return undefined; }\n  protected setTitleValue(val: string): void {\n    this.setLocalizableStringText(\"title\", val);\n  }\n  /**\n   * Returns `true` if the survey element has a description.\n   * @see description\n  */\n  public get hasDescription(): boolean {\n    return this.getPropertyValue(\"hasDescription\", undefined, () => this.calcDescriptionVisibility());\n  }\n  public set hasDescription(val: boolean) {\n    this.setPropertyValue(\"hasDescription\", val);\n  }\n  protected calcDescriptionVisibility(): boolean {\n    const newDescription = this.description;\n    let showPlaceholder = false;\n    if (this.isDesignMode) {\n      const property: JsonObjectProperty = Serializer.findProperty(this.getType(), \"description\");\n      showPlaceholder = !!(property?.placeholder);\n    }\n    return !!newDescription || (showPlaceholder && this.isDesignMode);\n  }\n  protected resetDescriptionVisibility(): void {\n    this.resetPropertyValue(\"hasDescription\");\n  }\n  /**\n   * Explanatory text displayed under the title.\n   * @see hasDescription\n   */\n  @property({\n    localizable: true, onSet: (newDescription, self) => {\n      self.resetDescriptionVisibility();\n    }\n  }) description: string;\n  get locDescription(): LocalizableString {\n    return this.getLocalizableString(\"description\");\n  }\n  public get titleTagName(): string {\n    let titleTagName = this.getDefaultTitleTagName();\n    const survey = this.getSurvey();\n    return !!survey ? survey.getElementTitleTagName(this, titleTagName) : titleTagName;\n  }\n  protected getDefaultTitleTagName(): string {\n    return (<any>settings.titleTags)[this.getType()];\n  }\n  public get hasTitle(): boolean { return this.title.length > 0; }\n  public get hasTitleActions(): boolean { return false; }\n  public get hasTitleEvents(): boolean {\n    return this.hasTitleActions;\n  }\n  public getTitleToolbar(): AdaptiveActionContainer { return null; }\n  public getTitleOwner(): ITitleOwner { return undefined; }\n  public get isTitleOwner(): boolean { return !!this.getTitleOwner(); }\n  public get isTitleRenderedAsString(): boolean { return this.getIsTitleRenderedAsString(); }\n  public toggleState(): boolean { return undefined; }\n  public get cssClasses(): any { return {}; }\n  public get cssTitle(): string { return \"\"; }\n  public get ariaTitleId(): string { return undefined; }\n  public get ariaDescriptionId(): string { return undefined; }\n  public get titleTabIndex(): number { return undefined; }\n  public get titleAriaExpanded(): any { return undefined; }\n  public get titleAriaRole(): any { return undefined; }\n  public get ariaLabel(): string {\n    return this.locTitle.renderedHtml;\n  }\n  public get titleAriaLabel(): string | null {\n    return this.ariaLabel;\n  }\n  protected getIsTitleRenderedAsString(): boolean { return !this.isTitleOwner; }\n  //ILocalizableOwner\n  public abstract getLocale(): string;\n  public abstract getMarkdownHtml(text: string, name: string, item?: any): string;\n  public abstract getRenderer(name: string): string;\n  public abstract getRendererContext(locStr: LocalizableString): any;\n  public abstract getProcessedText(text: string): string;\n}\n\n/**\n * A base class for all survey elements.\n */\nexport class SurveyElement<E = any> extends SurveyElementCore implements ISurveyElement {\n  stateChangedCallback: () => void;\n\n  public static getProgressInfoByElements(\n    children: Array<SurveyElement>,\n    isRequired: boolean\n  ): IProgressInfo {\n    const info: IProgressInfo = Base.createProgressInfo();\n    for (let i = 0; i < children.length; i++) {\n      if (!children[i].isVisible) continue;\n      const childInfo: IProgressInfo = children[i].getProgressInfo();\n      info.questionCount += childInfo.questionCount;\n      info.answeredQuestionCount += childInfo.answeredQuestionCount;\n      info.requiredQuestionCount += childInfo.requiredQuestionCount;\n      info.requiredAnsweredQuestionCount +=\n        childInfo.requiredAnsweredQuestionCount;\n    }\n    if (isRequired && info.questionCount > 0) {\n      if (info.requiredQuestionCount == 0) info.requiredQuestionCount = 1;\n      if (info.answeredQuestionCount > 0)\n        info.requiredAnsweredQuestionCount = 1;\n    }\n    return info;\n  }\n  private surveyImplValue: ISurveyImpl;\n  private surveyDataValue: ISurveyData;\n  private surveyValue: ISurvey;\n  private textProcessorValue: ITextProcessor;\n  private selectedElementInDesignValue: SurveyElement = this;\n\n  public readOnlyChangedCallback: () => void;\n\n  private static IsNeedScrollIntoView(el: Element, checkLeft: boolean, scrollIfVisible?: boolean) {\n    const elTop: number = scrollIfVisible ? -1 : el.getBoundingClientRect().top;\n    let needScroll = elTop < 0;\n    let elLeft: number = -1;\n    if (!needScroll && checkLeft) {\n      elLeft = el.getBoundingClientRect().left;\n      needScroll = elLeft < 0;\n    }\n    if (!needScroll && DomWindowHelper.isAvailable()) {\n      const height = DomWindowHelper.getInnerHeight();\n      needScroll = height > 0 && height < elTop;\n      if (!needScroll && checkLeft) {\n        const width = DomWindowHelper.getInnerWidth();\n        needScroll = width > 0 && width < elLeft;\n      }\n    }\n    return needScroll;\n  }\n  public static ScrollIntoView(el: Element, scrollIntoViewOptions?: ScrollIntoViewOptions, doneCallback?: () => void): void {\n    el.scrollIntoView(scrollIntoViewOptions);\n    if (typeof doneCallback === \"function\") {\n      let lastPos: number = null;\n      let same: number = 0;\n      const checkPos = () => {\n        const newPos = el.getBoundingClientRect().top;\n        if (newPos === lastPos) {\n          if (same++ > 2) {\n            doneCallback();\n            return;\n          }\n        } else {\n          lastPos = newPos;\n          same = 0;\n        }\n        requestAnimationFrame(checkPos);\n      };\n      DomWindowHelper.requestAnimationFrame(checkPos);\n    }\n  }\n  public static ScrollElementToTop(element: Element, scrollIfVisible?: boolean, scrollIntoViewOptions?: ScrollIntoViewOptions, doneCallback?: () => void): boolean {\n    return SurveyElement.ScrollElementToViewCore(element, false, scrollIfVisible, scrollIntoViewOptions, doneCallback);\n  }\n  public static ScrollElementToViewCore(el: Element, checkLeft: boolean, scrollIfVisible?: boolean, scrollIntoViewOptions?: ScrollIntoViewOptions, doneCallback?: () => void): boolean {\n    if (!el || !el.scrollIntoView) {\n      doneCallback && doneCallback();\n      return false;\n    }\n    const needScroll = SurveyElement.IsNeedScrollIntoView(el, checkLeft, scrollIfVisible);\n    if (needScroll) {\n      SurveyElement.ScrollIntoView(el, scrollIntoViewOptions, doneCallback);\n    } else {\n      doneCallback && doneCallback();\n    }\n    return needScroll;\n  }\n  public static GetFirstNonTextElement(elements: any, removeSpaces: boolean = false): any {\n    if (!elements || !elements.length || elements.length == 0) return null;\n    if (removeSpaces) {\n      let tEl = elements[0];\n      if (tEl.nodeName === \"#text\") tEl.data = \"\";\n      tEl = elements[elements.length - 1];\n      if (tEl.nodeName === \"#text\") tEl.data = \"\";\n    }\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].nodeName != \"#text\" && elements[i].nodeName != \"#comment\")\n        return elements[i];\n    }\n    return null;\n  }\n  public static FocusElement(elementId: string, isTimeOut?: boolean, containerEl?: HTMLElement): boolean {\n    if (!elementId || !DomDocumentHelper.isAvailable()) return false;\n    const res: boolean = !isTimeOut ? SurveyElement.focusElementCore(elementId, containerEl) : false;\n    if (!res) {\n      setTimeout(() => {\n        SurveyElement.focusElementCore(elementId, containerEl);\n      }, isTimeOut ? 100 : 10);\n    }\n    return res;\n  }\n  private static focusElementCore(elementId: string, containerEl?: HTMLElement): boolean {\n    const { root } = settings.environment;\n    if (!root && !containerEl) return false;\n    const el: HTMLElement = containerEl ? containerEl.querySelector(`#${CSS.escape(elementId)}`) : root.getElementById(elementId);\n    // https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    if (el && !(<any>el)[\"disabled\"] && el.style.display !== \"none\" && el.offsetParent !== null) {\n      SurveyElement.ScrollElementToViewCore(el, true, false);\n      el.focus();\n      return true;\n    }\n    return false;\n  }\n  // TODO V2: get rid of this flag\n  public static CreateDisabledDesignElements: boolean = false;\n  public disableDesignActions: boolean =\n    SurveyElement.CreateDisabledDesignElements;\n  public get effectiveColSpan(): number {\n    const res = this.getPropertyValueWithoutDefault(\"effectiveColSpan\");\n    if (res !== undefined) return res;\n    this.setRootStyle();\n    return this.getPropertyValue(\"effectiveColSpan\");\n  }\n  /**\n   * Specifies how many columns this survey element spans in the grid layout. Applies only if you set the `SurveyModel`'s [`gridLayoutEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#gridLayoutEnabled) property to `true` and define the [`gridLayoutColumns`](https://surveyjs.io/form-library/documentation/api-reference/page-model#gridLayoutColumns) array for the parent page or panel.\n   *\n   * Default value: 1\n   */\n  public get colSpan(): number {\n    return this.getPropertyValue(\"colSpan\", 1);\n  }\n  public set colSpan(val: number) {\n    this.setPropertyValue(\"colSpan\", val);\n  }\n\n  constructor(name: string) {\n    super();\n    this.setPropertyValueDirectly(\"name\", this.getValidName(name));\n    this.createNewArray(\"errors\");\n    this.createNewArray(\"titleActions\");\n    this.registerPropertyChangedHandlers([\"isReadOnly\"], () => { this.onReadOnlyChanged(); });\n    this.registerPropertyChangedHandlers([\"errors\"], () => { this.updateVisibleErrors(); });\n    this.registerPropertyChangedHandlers([\"isSingleInRow\"], () => { this.updateElementCss(false); });\n    this.registerPropertyChangedHandlers([\"minWidth\", \"maxWidth\", \"renderWidth\", \"allowRootStyle\", \"parent\"], () => { this.updateRootStyle(); });\n    this.registerPropertyChangedHandlers([\"effectiveColSpan\"], (val: number) => { this.colSpan = val; });\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name === \"state\") {\n      this.updateElementCss(false);\n      this.notifyStateChanged(oldValue);\n      if (this.stateChangedCallback)this.stateChangedCallback();\n    }\n  }\n  protected getSkeletonComponentNameCore(): string {\n    if (this.survey) {\n      return this.survey.getSkeletonComponentName(this);\n    }\n    return \"sv-skeleton\";\n  }\n  protected canUpdateValueOnVisibleChanged(): boolean {\n    return !this.isLoadingFromJson && !!this.survey && !this.survey.isSettingData();\n  }\n  private parentQuestionValue: E = null;\n  /**\n   * A Dynamic Panel, Dynamic Matrix, or Dropdown Matrix that includes the current question.\n   *\n   * This property is `null` for standalone questions.\n   */\n  public get parentQuestion(): E {\n    return this.parentQuestionValue;\n  }\n  setParentQuestion(val: E): void {\n    this.parentQuestionValue = val;\n    this.onParentQuestionChanged();\n  }\n  protected onParentQuestionChanged(): void { }\n  public updateElementVisibility(): void {\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n  }\n\n  public get skeletonComponentName(): string {\n    return this.getSkeletonComponentNameCore();\n  }\n  /**\n   * Gets and sets the survey element's expand state.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - The survey element is displayed in full and cannot be collapsed in the UI.\n   * - `\"expanded\"` - The survey element is displayed in full and can be collapsed in the UI.\n   * - `\"collapsed\"` - The survey element displays only `title` and `description` and can be expanded in the UI.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/ (linkStyle))\n   * @hidefor PageModel\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  public get state(): string {\n    return this.getPropertyValue(\"state\");\n  }\n  public set state(val: string) {\n    this.setPropertyValue(\"state\", val);\n    this.renderedIsExpanded = !this.isCollapsed;\n  }\n  protected notifyStateChanged(prevState: string): void {\n    if (this.survey) {\n      this.survey.elementContentVisibilityChanged(this);\n    }\n  }\n  /**\n   * Returns `true` if the survey element is collapsed.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isExpanded\n   */\n  public get isCollapsed(): boolean {\n    return this.state === \"collapsed\" && !this.isDesignMode;\n  }\n  /**\n   * Returns `true` if the survey element is expanded.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   */\n  public get isExpanded(): boolean {\n    return this.state === \"expanded\";\n  }\n  /**\n   * Collapses the survey element.\n   *\n   * In collapsed state, the element displays only `title` and `description`.\n   * @hidefor PageModel\n   * @see title\n   * @see description\n   * @see state\n   * @see toggleState\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  public collapse() {\n    if (this.isDesignMode) return;\n    this.state = \"collapsed\";\n  }\n  /**\n   * Expands the survey element.\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  public expand() {\n    this.state = \"expanded\";\n  }\n  /**\n   * Toggles the survey element's `state` between collapsed and expanded.\n   * @hidefor PageModel\n   * @see state\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  public toggleState(): boolean {\n    if (this.isCollapsed) {\n      this.expand();\n      return true;\n    }\n    if (this.isExpanded) {\n      this.collapse();\n      return false;\n    }\n    return true;\n  }\n  public get hasStateButton(): boolean {\n    return this.isExpanded || this.isCollapsed;\n  }\n  public get shortcutText(): string {\n    return this.title || this.name;\n  }\n  private titleToolbarValue: AdaptiveActionContainer;\n  public getTitleToolbar(): AdaptiveActionContainer {\n    if (!this.titleToolbarValue) {\n      this.titleToolbarValue = <AdaptiveActionContainer>this.createActionContainer(true);\n      this.titleToolbarValue.locOwner = this;\n      this.titleToolbarValue.containerCss = (this.isPanel ? this.cssClasses.panel.titleBar : this.cssClasses.titleBar) || \"sv-action-title-bar\";\n      this.titleToolbarValue.setItems(this.getTitleActions());\n      this.titleToolbarValue.flushUpdates();\n    }\n    return this.titleToolbarValue;\n  }\n  protected createActionContainer(allowAdaptiveActions?: boolean): ActionContainer {\n    const actionContainer = allowAdaptiveActions ? new AdaptiveActionContainer() : new ActionContainer();\n    if (this.survey && !!this.survey.getCss().actionBar) {\n      actionContainer.cssClasses = this.survey.getCss().actionBar;\n    }\n\n    return actionContainer;\n  }\n  public get titleActions(): Array<any> {\n    return this.getPropertyValue(\"titleActions\");\n  }\n  private isTitleActionRequested: boolean;\n  public getTitleActions(): Array<any> {\n    if (!this.isTitleActionRequested) {\n      this.updateTitleActions();\n      this.isTitleActionRequested = true;\n    }\n    return this.titleActions;\n  }\n  protected getDefaultTitleActions(): Array<IAction> {\n    return [];\n  }\n  private updateTitleActions() {\n    let actions: Array<IAction> = this.getDefaultTitleActions();\n    if (!!this.survey) {\n      actions = this.survey.getUpdatedElementTitleActions(this, actions);\n    }\n    this.setPropertyValue(\"titleActions\", actions);\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    if (!!this.titleToolbarValue) {\n      this.titleToolbarValue.locStrsChanged();\n    }\n  }\n  public get hasTitleActions(): boolean {\n    return this.getTitleActions().length > 0;\n  }\n  public get hasTitleEvents(): boolean {\n    return this.state !== undefined && this.state !== \"default\";\n  }\n  public get titleTabIndex(): number {\n    return !this.isPage && this.state !== \"default\" ? 0 : undefined;\n  }\n  public get titleAriaExpanded(): any {\n    if (this.isPage || this.state === \"default\") return undefined;\n    return this.state === \"expanded\" ? \"true\" : \"false\";\n  }\n\n  public get titleAriaRole(): any {\n    if (this.isPage || this.state === \"default\") return undefined;\n    return \"button\";\n  }\n\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    this.surveyImplValue = value;\n    if (!this.surveyImplValue) {\n      this.setSurveyCore(null);\n      this.surveyDataValue = null;\n      this.textProcessorValue = null;\n    } else {\n      this.surveyDataValue = this.surveyImplValue.getSurveyData();\n      this.setSurveyCore(this.surveyImplValue.getSurvey());\n      this.textProcessorValue = this.createTextProcessor();\n      this.onSetData();\n    }\n    if (!!this.survey) {\n      this.resetDescriptionVisibility();\n      this.clearCssClasses();\n    }\n    this.blockAnimations();\n    this.renderedIsExpanded = !this.isCollapsed;\n    this.releaseAnimations();\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    const data = <IObjectValueContext><any>this.data;\n    return !!data ? data.getValueGetterContext() : super.getValueGetterContext();\n  }\n  protected createTextProcessor(): ITextProcessor {\n    return this.surveyImplValue.getTextProcessor();\n  }\n  protected canRunConditions(): boolean {\n    return super.canRunConditions() && !!this.data;\n  }\n  public getDataFilteredProperties(): any {\n    var props = !!this.data ? this.data.getFilteredProperties() : {};\n    props.question = this;\n    return props;\n  }\n  protected get surveyImpl() {\n    return this.surveyImplValue;\n  }\n  /* You shouldn't use this method ever */\n  __setData(data: ISurveyData) {\n    this.surveyDataValue = data;\n  }\n  public get data(): ISurveyData {\n    return this.surveyDataValue;\n  }\n  /**\n   * Returns the survey object.\n   */\n  public get survey(): ISurvey {\n    return this.getSurvey();\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    if (!!this.surveyValue) return this.surveyValue;\n    if (!!this.surveyImplValue) {\n      this.setSurveyCore(this.surveyImplValue.getSurvey());\n    }\n    return this.surveyValue;\n  }\n  protected setSurveyCore(value: ISurvey): void {\n    this.surveyValue = value;\n    if (!!this.surveyChangedCallback) {\n      this.surveyChangedCallback();\n    }\n  }\n  public get skeletonHeight(): string {\n    let skeletonHeight: string = undefined;\n    if (!!this.survey && (this.survey as any).skeletonHeight) {\n      skeletonHeight = (this.survey as any).skeletonHeight + \"px\";\n    }\n    return skeletonHeight;\n  }\n  public isContentElement: boolean = false;\n  public isEditableTemplateElement: boolean = false;\n  public isInteractiveDesignElement: boolean = true;\n  protected get isInternal(): boolean {\n    return this.isContentElement;\n  }\n  public get areInvisibleElementsShowing(): boolean {\n    return (\n      !!this.survey &&\n      this.survey.areInvisibleElementsShowing &&\n      !this.isContentElement\n    );\n  }\n  public get isVisible(): boolean {\n    return true;\n  }\n  /**\n   * Returns `true` if the survey element or its parent element is read-only.\n   *\n   * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see readOnly\n   */\n  public get isReadOnly(): boolean {\n    return this.readOnly;\n  }\n  /**\n   * Makes the survey element read-only.\n   *\n   * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isReadOnly\n   */\n  public get readOnly(): boolean {\n    return this.getPropertyValue(\"readOnly\");\n  }\n  public set readOnly(val: boolean) {\n    if (this.readOnly == val) return;\n    this.setPropertyValue(\"readOnly\", val);\n    if (!this.isLoadingFromJson) {\n      this.setPropertyValue(\"isReadOnly\", this.isReadOnly);\n    }\n  }\n  protected onReadOnlyChanged() {\n    if (!!this.readOnlyChangedCallback) {\n      this.readOnlyChangedCallback();\n    }\n  }\n  private get css(): any {\n    return !!this.survey ? this.survey.getCss() : {};\n  }\n  private isCssValueCalculating: boolean;\n  public get cssClassesValue(): any {\n    let res = this.getPropertyValueWithoutDefault(\"cssClassesValue\");\n    if (!res && !this.isCssValueCalculating) {\n      this.isCssValueCalculating = true;\n      res = this.createCssClassesValue();\n      this.isCssValueCalculating = false;\n    }\n    return res;\n  }\n  private createCssClassesValue(): any {\n    const res = this.calcCssClasses(this.css);\n    this.setPropertyValue(\"cssClassesValue\", res);\n    this.onCalcCssClasses(res);\n    this.updateElementCssCore(this.cssClassesValue);\n    return res;\n  }\n  protected onCalcCssClasses(classes: any): void {}\n  /**\n   * Returns an object in which keys are UI elements and values are CSS classes applied to them.\n   *\n   * Use the following events of the [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) object to override CSS classes:\n   *\n   * - [`onUpdateQuestionCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdateQuestionCssClasses)\n   * - [`onUpdatePanelCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePanelCssClasses)\n   * - [`onUpdatePageCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePageCssClasses)\n   * - [`onUpdateChoiceItemCss`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onUpdateChoiceItemCss)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   */\n  public get cssClasses(): any {\n    const _dummy = this.cssClassesValue;\n    if (!this.survey) return this.calcCssClasses(this.css);\n    if (!this.cssClassesValue) {\n      this.createCssClassesValue();\n    }\n    return this.cssClassesValue;\n  }\n  public get cssTitleNumber(): any {\n    const css = this.cssClasses;\n    if (css.number) return css.number;\n    return css.panel ? css.panel.number : undefined;\n  }\n  public get cssRequiredMark(): any {\n    const css = this.cssClasses;\n    return css.requiredMark || (css.panel && css.panel.requiredMark);\n  }\n  public getCssTitleExpandableSvg(): string {\n    if (this.state === \"default\") return null;\n    return this.cssClasses.titleExpandableSvg;\n  }\n  protected calcCssClasses(css: any): any { return undefined; }\n  protected updateElementCssCore(cssClasses: any): void { }\n  public get cssError(): string { return \"\"; }\n  public updateElementCss(reNew?: boolean): void {\n    this.clearCssClasses();\n  }\n  protected clearCssClasses(): void {\n    this.resetPropertyValue(\"cssClassesValue\");\n  }\n  protected getIsLoadingFromJson(): boolean {\n    if (super.getIsLoadingFromJson()) return true;\n    return this.surveyValue ? this.surveyValue.isLoadingFromJson : false;\n  }\n  /**\n   * A survey element identifier.\n   *\n   * > Question names must be unique.\n   */\n  public get name(): string {\n    return this.getPropertyValue(\"name\", \"\");\n  }\n  public set name(val: string) {\n    var oldValue = this.name;\n    this.setPropertyValue(\"name\", this.getValidName(val));\n    if (!this.isLoadingFromJson && !!oldValue) {\n      this.onNameChanged(oldValue);\n    }\n  }\n  protected getValidName(name: string): string {\n    return name;\n  }\n  protected onNameChanged(oldValue: string) { }\n  protected updateBindingValue(valueName: string, value: any) {\n    if (\n      !!this.data &&\n      !this.isTwoValueEquals(value, this.data.getValue(valueName))\n    ) {\n      this.data.setValue(valueName, value, false);\n    }\n  }\n  /**\n   * Validation errors. Call the `validate()` method to validate survey element data.\n   * @see validate\n   */\n  public get errors(): Array<SurveyError> {\n    return this.getPropertyValue(\"errors\");\n  }\n  public set errors(val: Array<SurveyError>) {\n    this.setPropertyValue(\"errors\", val);\n  }\n  @property({ defaultValue: false }) hasVisibleErrors: boolean;\n  private updateVisibleErrors() {\n    var counter = 0;\n    for (var i = 0; i < this.errors.length; i++) {\n      if (this.errors[i].visible) counter++;\n    }\n    this.hasVisibleErrors = counter > 0;\n  }\n  /**\n   * Returns `true` if the survey element or its child elements have validation errors.\n   *\n   * This property contains the result of the most recent validation. This result may be outdated. Call the `validate` method to get an up-to-date value.\n   * @see errors\n   */\n  public get containsErrors(): boolean {\n    return this.getPropertyValue(\"containsErrors\", false);\n  }\n  public updateContainsErrors() {\n    this.setPropertyValue(\"containsErrors\", this.getContainsErrors());\n  }\n  protected getContainsErrors(): boolean {\n    return this.errors.length > 0;\n  }\n  public get selectedElementInDesign(): SurveyElement {\n    return this.selectedElementInDesignValue;\n  }\n  public set selectedElementInDesign(val: SurveyElement) {\n    this.selectedElementInDesignValue = val;\n  }\n  public updateCustomWidgets(): void { }\n\n  public onSurveyLoad(): void { }\n  private wasRenderedValue: boolean;\n  public get wasRendered(): boolean { return !!this.wasRenderedValue; }\n  protected resetWasRendered(): void {\n    this.wasRenderedValue = false;\n  }\n  public onFirstRendering(): void {\n    if (!this.wasRendered) {\n      this.wasRenderedValue = true;\n      this.onFirstRenderingCore();\n    }\n  }\n  protected onFirstRenderingCore(): void {}\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n    if (!this.survey) {\n      this.onSurveyLoad();\n    }\n  }\n  public setVisibleIndex(index: number): number {\n    return 0;\n  }\n  public delete(doDispose: boolean): void { }\n  //ILocalizableOwner\n  locOwner: ILocalizableOwner;\n  /**\n   * Returns the survey's [locale](https://surveyjs.io/form-library/documentation/surveymodel#locale).\n   *\n   * If a default locale is used, this method returns an empty string. To get the applied locale in this case, use the following code:\n   *\n   * ```js\n   * import { surveyLocalization } from 'survey-core';\n   * const defaultLocale = surveyLocalization.defaultLocale;\n   * ```\n   *\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization)\n   */\n  public getLocale(): string {\n    return this.survey\n      ? (<ILocalizableOwner>(<any>this.survey)).getLocale()\n      : this.locOwner\n        ? this.locOwner.getLocale()\n        : \"\";\n  }\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return this.survey\n      ? this.survey.getSurveyMarkdownHtml(this, text, name, item)\n      : this.locOwner\n        ? this.locOwner.getMarkdownHtml(text, name, item)\n        : undefined;\n  }\n  public getRenderer(name: string, item?: ItemValue): string {\n    return this.survey && typeof this.survey.getRendererForString === \"function\"\n      ? this.survey.getRendererForString(this, name, item)\n      : this.locOwner && typeof this.locOwner.getRenderer === \"function\"\n        ? this.locOwner.getRenderer(name)\n        : null;\n  }\n  public getRendererContext(locStr: LocalizableString, item?: ItemValue): any {\n    return this.survey && typeof this.survey.getRendererContextForString === \"function\"\n      ? this.survey.getRendererContextForString(this, locStr, item)\n      : this.locOwner && typeof this.locOwner.getRendererContext === \"function\"\n        ? this.locOwner.getRendererContext(locStr)\n        : locStr;\n  }\n  public getProcessedText(text: string): string {\n    if (this.isLoadingFromJson) return text;\n    if (this.textProcessor)\n      return this.textProcessor.processText(text, this.getUseDisplayValuesInDynamicTexts());\n    if (this.locOwner) return this.locOwner.getProcessedText(text);\n    return text;\n  }\n  protected getUseDisplayValuesInDynamicTexts(): boolean { return true; }\n  protected removeSelfFromList(list: Array<any>) {\n    if (!list || !Array.isArray(list)) return;\n    const index: number = list.indexOf(this);\n    if (index > -1) {\n      list.splice(index, 1);\n    }\n  }\n  protected get textProcessor(): ITextProcessor {\n    return this.textProcessorValue;\n  }\n  protected getProcessedHtml(html: string): string {\n    if (!html || !this.textProcessor) return html;\n    return this.textProcessor.processText(html, true);\n  }\n  protected onSetData(): void { }\n  public get parent(): IPanel {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  public set parent(val: IPanel) {\n    this.setPropertyValue(\"parent\", val);\n  }\n\n  protected getPage(parent: IPanel): IPage {\n    while(parent && parent.parent) parent = parent.parent;\n    if (parent && parent.isPage) return <IPage>(<any>parent);\n    return null;\n  }\n  protected moveToBase(\n    parent: IPanel,\n    container: IPanel,\n    insertBefore: any = null\n  ): boolean {\n    if (!container) return false;\n    parent.removeElement(<IElement>(<any>this));\n    let index = -1;\n    if (Helpers.isNumber(insertBefore)) {\n      index = parseInt(insertBefore);\n    }\n    if (index == -1 && !!insertBefore && !!insertBefore.getType) {\n      index = container.indexOf(insertBefore);\n    }\n    container.addElement(<IElement>(<any>this), index);\n    return true;\n  }\n\n  protected setPage(parent: IPanel, newPage: IPage): void {\n    const oldPage: IPage = this.getPage(parent);\n    (<any>this).prevSurvey = this.survey;\n\n    //fix for the creator v1: https://github.com/surveyjs/survey-creator/issues/1744\n    if (typeof newPage === \"string\") {\n      const survey = this.getSurvey();\n      survey.pages.forEach((page: IPage) => {\n        if (<any>newPage === page.name) newPage = page;\n      });\n    }\n\n    if (oldPage === newPage) return;\n    if (parent) parent.removeElement(<IElement>(<any>this));\n    if (newPage) {\n      newPage.addElement(<IElement>(<any>this), -1);\n    }\n    (<any>this).prevSurvey = undefined;\n  }\n  protected getSearchableLocKeys(keys: Array<string>) {\n    keys.push(\"title\");\n    keys.push(\"description\");\n  }\n  public get hasParent() {\n    return (this.parent && !this.parent.isPage) || (this.parent === undefined);\n  }\n  @property({ defaultValue: true }) isSingleInRow: boolean = true;\n\n  private shouldAddRunnerStyles(): boolean {\n    return !this.isDesignMode;\n  }\n\n  protected get isCompact(): boolean {\n    return this.survey && (<SurveyModel>this.survey)[\"isCompact\"];\n  }\n\n  private canHaveFrameStyles() {\n    if (<any>this.survey?.currentSingleElement === this) return true;\n    return (this.parent !== undefined && (!this.hasParent || this.parent && (this.parent as PanelModel).showPanelAsPage));\n  }\n\n  protected getHasFrameV2(): boolean {\n    return this.shouldAddRunnerStyles() && this.canHaveFrameStyles();\n  }\n  protected getIsNested(): boolean {\n    return this.shouldAddRunnerStyles() && !this.canHaveFrameStyles();\n  }\n  protected getCssRoot(cssClasses: { [index: string]: string }): string {\n    const isExpanadable = !!this.isCollapsed || !!this.isExpanded;\n    return new CssClassBuilder()\n      .append(cssClasses.withFrame, this.getHasFrameV2() && !this.isCompact)\n      .append(cssClasses.compact, this.isCompact && this.getHasFrameV2())\n      .append(cssClasses.collapsed, !!this.isCollapsed)\n      .append(cssClasses.expandableAnimating, isExpanadable && this.isAnimatingCollapseExpand)\n      .append(cssClasses.expanded, !!this.isExpanded && this.renderedIsExpanded)\n      .append(cssClasses.expandable, isExpanadable)\n      .append(cssClasses.nested, this.getIsNested())\n      .toString();\n  }\n\n  /**\n   * Sets survey element width in CSS values.\n   *\n   * Default value: \"\"\n   * @see minWidth\n   * @see maxWidth\n  */\n  public get width(): string {\n    return this.getPropertyValue(\"width\", \"\");\n  }\n  public set width(val: string) {\n    this.setPropertyValue(\"width\", val);\n  }\n  /**\n   * Gets or sets minimum survey element width in CSS values.\n   *\n   * Default value: \"300px\" (taken from [`settings.minWidth`](https://surveyjs.io/form-library/documentation/settings#minWidth))\n   * @see maxWidth\n   * @see renderWidth\n   * @see width\n   */\n  public get minWidth(): string {\n    return this.getPropertyValue(\"minWidth\");\n  }\n  public set minWidth(val: string) {\n    this.setPropertyValue(\"minWidth\", val);\n  }\n  /**\n   * Gets or sets maximum survey element width in CSS values.\n   *\n   * Default value: \"100%\" (taken from [`settings.maxWidth`](https://surveyjs.io/form-library/documentation/settings#maxWidth))\n   * @see minWidth\n   * @see renderWidth\n   * @see width\n   */\n  public get maxWidth(): string {\n    return this.getPropertyValue(\"maxWidth\");\n  }\n  public set maxWidth(val: string) {\n    this.setPropertyValue(\"maxWidth\", val);\n  }\n\n  /**\n   * Returns a calculated width of the rendered survey element in CSS values.\n   * @see width\n   * @see minWidth\n   * @see maxWidth\n   */\n  public get renderWidth(): string {\n    return this.getPropertyValue(\"renderWidth\", \"\");\n  }\n  public set renderWidth(val: string) {\n    this.setPropertyValue(\"renderWidth\", val);\n  }\n\n  /**\n   * Increases or decreases an indent of survey element content from the left edge. Accepts positive integer values and 0.\n   */\n  public get indent(): number {\n    return this.getPropertyValue(\"indent\");\n  }\n  public set indent(val: number) {\n    this.setPropertyValue(\"indent\", val);\n  }\n  public get rightIndent(): number {\n    return this.getPropertyValue(\"rightIndent\", 0);\n  }\n  public set rightIndent(val: number) {\n    this.setPropertyValue(\"rightIndent\", val);\n  }\n  public getRootStyle(): object {\n    const style: any = {};\n    if (!!this.paddingLeft) { style[\"--sv-element-add-padding-left\"] = this.paddingLeft; }\n    if (!!this.paddingRight) { style[\"--sv-element-add-padding-right\"] = this.paddingRight; }\n    return style;\n  }\n  get paddingLeft(): string {\n    return this.getPropertyValue(\"paddingLeft\", undefined, () => this.calcPaddingLeft());\n  }\n  protected calcPaddingLeft(): string {\n    return \"\";\n  }\n  get paddingRight(): string {\n    return this.getPropertyValue(\"paddingRight\", undefined, () => this.calcPaddingRight());\n  }\n  set paddingRight(val: string) {\n    this.setPropertyValue(\"paddingRight\", val);\n  }\n  protected calcPaddingRight(): string {\n    return \"\";\n  }\n  protected resetIndents(): void {\n    this.resetPropertyValue(\"paddingLeft\");\n    this.resetPropertyValue(\"paddingRight\");\n  }\n\n  @property({ defaultValue: true }) allowRootStyle: boolean;\n  public get rootStyle(): any {\n    return this.getPropertyValue(\"rootStyle\", undefined, () => this.calcRootStyle());\n  }\n  public set rootStyle(val: any) { this.setPropertyValue(\"rootStyle\", val); }\n  public updateRootStyle(): void {\n    if (!this.getPropertyValueWithoutDefault(\"rootStyle\")) {\n      this.resetPropertyValue(\"effectiveColSpan\");\n    } else {\n      this.setRootStyle();\n    }\n  }\n  private setRootStyle() {\n    this.rootStyle = this.calcRootStyle();\n  }\n  protected calcRootStyle(): any {\n    const style: { [index: string]: any } = {};\n    let _width;\n    if (!!this.parent) {\n      const columns = this.parent.getColumsForElement(this as any);\n      _width = columns.reduce((sum, col) => col.effectiveWidth + sum, 0);\n      if (!!_width && _width !== 100) {\n        style[\"flexGrow\"] = 1;\n        style[\"flexShrink\"] = 0;\n        style[\"flexBasis\"] = _width + \"%\";\n        style[\"minWidth\"] = undefined;\n        style[\"maxWidth\"] = this.maxWidth;\n      }\n    }\n    if (Object.keys(style).length == 0) {\n      let minWidth: string | number = \"\" + this.minWidth;\n      if (!!minWidth && minWidth != \"auto\") {\n        if (minWidth.indexOf(\"px\") != -1 && this.survey) {\n          minWidth = minWidth.replace(\"px\", \"\");\n          let minWidthNum = parseFloat(minWidth);\n          if (!isNaN(minWidthNum)) {\n            minWidth = minWidthNum * (this.survey as any).widthScale / 100;\n            minWidth = \"\" + minWidth + \"px\";\n          }\n        }\n        minWidth = \"min(100%, \" + minWidth + \")\";\n      }\n      if (this.allowRootStyle && this.renderWidth) {\n        style[\"flexGrow\"] = 1;\n        style[\"flexShrink\"] = 1;\n        style[\"flexBasis\"] = this.renderWidth;\n        style[\"minWidth\"] = minWidth;\n        style[\"maxWidth\"] = this.maxWidth;\n      }\n    }\n    return style;\n  }\n  private isContainsSelection(el: any) {\n    let elementWithSelection: any = undefined;\n    const _document = DomDocumentHelper.getDocument();\n    if (DomDocumentHelper.isAvailable() && !!_document && (_document as any)[\"selection\"]) {\n      elementWithSelection = (_document as any)[\"selection\"].createRange().parentElement();\n    } else {\n      var selection = DomWindowHelper.getSelection();\n      if (!!selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        if (range.startOffset !== range.endOffset) {\n          elementWithSelection = range.startContainer.parentNode;\n        }\n      }\n    }\n    return elementWithSelection == el;\n  }\n  public get clickTitleFunction(): any {\n    if (this.needClickTitleFunction()) {\n      return (event?: MouseEvent) => {\n        if (!!event && this.isContainsSelection(event.target)) {\n          return;\n        }\n        return this.processTitleClick();\n      };\n    }\n    return undefined;\n  }\n  protected needClickTitleFunction(): boolean {\n    return this.state !== \"default\";\n  }\n  protected processTitleClick() {\n    if (this.state !== \"default\") {\n      this.toggleState();\n    }\n  }\n  public get hasAdditionalTitleToolbar(): boolean {\n    return false;\n  }\n  public get additionalTitleToolbar(): ActionContainer {\n    return this.getAdditionalTitleToolbar();\n  }\n  protected getAdditionalTitleToolbar(): ActionContainer | null {\n    return null;\n  }\n  protected getCssTitle(cssClasses: any): string {\n    if (!cssClasses) return \"\";\n    const isExpandable = this.state !== \"default\";\n    const numInlineLimit = 4;\n    return new CssClassBuilder()\n      .append(cssClasses.title)\n      .append(cssClasses.titleNumInline, ((<any>this).no || \"\").length > numInlineLimit || isExpandable)\n      .append(cssClasses.titleExpandable, isExpandable)\n      .append(cssClasses.titleExpanded, this.isExpanded)\n      .append(cssClasses.titleCollapsed, this.isCollapsed)\n      .append(cssClasses.titleDisabled, this.isDisabledStyle)\n      .append(cssClasses.titleReadOnly, this.isReadOnly)\n      .append(cssClasses.titleOnError, this.containsErrors).toString();\n  }\n  public get isDisabledStyle(): boolean {\n    return this.getIsDisableAndReadOnlyStyles(false)[1];\n  }\n  public get isReadOnlyStyle(): boolean {\n    return this.getIsDisableAndReadOnlyStyles(false)[0];\n  }\n  protected getIsDisableAndReadOnlyStyles(itemReadOnly: boolean): Array<boolean> {\n    const isPreview = this.isPreviewStyle;\n    const isReadOnly = itemReadOnly || this.isReadOnly;\n    const isReadOnlyStyle = isReadOnly && !isPreview;\n    // const isDisableStyle = this.isDefaultV2Theme && (isReadOnly || isPreview); this was useful for the old theme\n    return [isReadOnlyStyle, false];\n  }\n  public get isPreviewStyle(): boolean {\n    return !!this.survey && this.survey.state === \"preview\";\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    this.resetDescriptionVisibility();\n    if (this.errors.length > 0) {\n      this.errors.forEach(err => {\n        err.updateText();\n      });\n    }\n  }\n\n  private wrapperElement?: HTMLElement;\n  public setWrapperElement(element?: HTMLElement) {\n    this.wrapperElement = element;\n  }\n  public getWrapperElement(): HTMLElement {\n    return this.wrapperElement;\n  }\n\n  @property() private _renderedIsExpanded: boolean = true;\n  private _isAnimatingCollapseExpand: boolean = false;\n  private set isAnimatingCollapseExpand(val: boolean) {\n    if (val !== this._isAnimatingCollapseExpand) {\n      this._isAnimatingCollapseExpand = val;\n      this.updateElementCss(false);\n    }\n  }\n  private get isAnimatingCollapseExpand() {\n    return this._isAnimatingCollapseExpand || this._renderedIsExpanded != this.isExpanded;\n  }\n  protected onElementExpanded(elementIsRendered: boolean) {\n  }\n  private getExpandCollapseAnimationOptions(): IAnimationConsumer {\n    const beforeRunAnimation = (el: HTMLElement) => {\n      this.isAnimatingCollapseExpand = true;\n      prepareElementForVerticalAnimation(el);\n    };\n    const afterRunAnimation = (el: HTMLElement) => {\n      this.isAnimatingCollapseExpand = false;\n      cleanHtmlElementAfterAnimation(el);\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      getEnterOptions: () => {\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        return {\n          cssClass: cssClasses.contentEnter,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: (el) => {\n            afterRunAnimation(el);\n            this.onElementExpanded(true);\n          },\n        };\n      },\n      getLeaveOptions: () => {\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        return {\n          cssClass: cssClasses.contentLeave,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: afterRunAnimation\n        };\n      },\n      getAnimatedElement: () => {\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        if (cssClasses.content) {\n          const selector = classesToSelector(cssClasses.content);\n          if (selector) {\n            return this.getWrapperElement()?.querySelector(`:scope ${selector}`);\n          }\n        }\n        return undefined;\n      },\n      isAnimationEnabled: () => this.isExpandCollapseAnimationEnabled\n    };\n  }\n\n  private get isExpandCollapseAnimationEnabled() {\n    return this.animationAllowed && !this.isDesignMode;\n  }\n\n  private animationCollapsed = new AnimationBoolean(this.getExpandCollapseAnimationOptions(), (val) => {\n    this._renderedIsExpanded = val;\n    if (this.animationAllowed) {\n      if (val) {\n        this.isAnimatingCollapseExpand = true;\n      } else {\n        this.updateElementCss(false);\n      }\n    }\n  }, () => this.renderedIsExpanded);\n  public set renderedIsExpanded(val: boolean) {\n    const oldValue = this._renderedIsExpanded;\n    this.animationCollapsed.sync(val);\n    if (!this.isExpandCollapseAnimationEnabled && !oldValue && this.renderedIsExpanded) {\n      this.onElementExpanded(false);\n    }\n  }\n\n  public get renderedIsExpanded(): boolean {\n    return !!this._renderedIsExpanded;\n  }\n  protected getIsAnimationAllowed(): boolean {\n    return super.getIsAnimationAllowed() && !!this.survey && !(this.survey as SurveyModel)[\"isEndLoadingFromJson\"];\n  }\n\n  public onAfterRenderElement: EventBase<SurveyElement<E>, any> = this.addEvent<SurveyElement<E>, any>();\n  public afterRenderCore(element: HTMLElement): void {\n    this.onAfterRenderElement.fire(this, { htmlElement: element });\n  }\n\n  public dispose(): void {\n    super.dispose();\n    if (this.titleToolbarValue) {\n      this.titleToolbarValue.dispose();\n    }\n  }\n}\n\nexport class RenderingCompletedAwaiter {\n  constructor(private _elements: Array<SurveyElement>, private _renderedHandler: () => void, waitingTimeout = 100) {\n    this._elements.forEach(element => {\n      if (element.onAfterRenderElement) {\n        element.onAfterRenderElement.add(this._elementRenderedHandler);\n        this._elementsToRenderCount++;\n      }\n    });\n    if (this._elementsToRenderCount > 0) {\n      this._elementsToRenderTimer = setTimeout(() => {\n        if (this._elementsToRenderCount > 0) {\n          this.visibleElementsRendered();\n        }\n      }, waitingTimeout);\n    } else {\n      this.visibleElementsRendered();\n    }\n  }\n  private _elementsToRenderCount = 0;\n  private _elementsToRenderTimer: any = undefined;\n  private _elementRenderedHandler = (s: SurveyElement, o: any) => {\n    s.onAfterRenderElement?.remove(this._elementRenderedHandler);\n    this._elementsToRenderCount--;\n    if (this._elementsToRenderCount <= 0) {\n      this.visibleElementsRendered();\n    }\n  };\n  private stopWaitingForElementsRendering() {\n    if (this._elementsToRenderTimer) {\n      clearTimeout(this._elementsToRenderTimer);\n      this._elementsToRenderTimer = undefined;\n    }\n    this._elements.forEach(element => {\n      element.onAfterRenderElement?.remove(this._elementRenderedHandler);\n    });\n    this._elementsToRenderCount = 0;\n  }\n  private visibleElementsRendered(): void {\n    const renderedHandler = this._renderedHandler;\n    this.dispose();\n    if (typeof renderedHandler == \"function\") {\n      renderedHandler();\n    }\n  }\n  public dispose(): void {\n    this.stopWaitingForElementsRendering();\n    this._elements = undefined;\n    this._renderedHandler = undefined;\n  }\n}", "import { Helpers } from \"./helpers\";\nimport { surveyLocalization, getLocaleString } from \"./surveyStrings\";\nimport { settings } from \"./settings\";\nimport { Base, EventBase } from \"./base\";\nimport { Serializer } from \"./jsonobject\";\nimport { SurveyElementCore } from \"./survey-element\";\nimport { ItemValue } from \"./itemvalue\";\n\nexport interface ILocalizableOwner {\n  getLocale(): string;\n  getMarkdownHtml(text: string, name: string, item?: any): string;\n  getProcessedText(text: string): string;\n  getRenderer(name: string, item?: ItemValue): string;\n  getRendererContext(locStr: LocalizableString, item?: ItemValue): any;\n}\nexport interface ILocalizableString {\n  getLocaleText(loc: string): string;\n  setLocaleText(loc: string, newValue: string): any;\n  getJson(): any;\n  getLocales(): Array<string>;\n  getIsMultiple(): boolean;\n}\n/**\n * The class represents the string that supports multi-languages and markdown.\n * It uses in all objects where support for multi-languages and markdown is required.\n */\nexport class LocalizableString implements ILocalizableString {\n  public static SerializeAsObject: boolean = false;\n  public static get defaultLocale(): string {\n    return settings.localization.defaultLocaleName;\n  }\n  public static set defaultLocale(val: string) {\n    settings.localization.defaultLocaleName = val;\n  }\n  public static defaultRenderer = \"sv-string-viewer\";\n  public static editableRenderer = \"sv-string-editor\";\n\n  private values: any = {};\n  private htmlValues = {};\n  private renderedText: string;\n  private calculatedTextValue: string;\n  private _localizationName: string;\n  public get localizationName(): string {\n    return this._localizationName;\n  }\n  public set localizationName(val: string) {\n    if (this._localizationName != val) {\n      this._localizationName = val;\n      this.strChanged();\n    }\n  }\n  private _allowLineBreaks: boolean;\n  public get allowLineBreaks(): boolean {\n    if (this._allowLineBreaks === undefined) {\n      this._allowLineBreaks = false;\n      if (!!this.name && this.owner instanceof SurveyElementCore) {\n        this._allowLineBreaks = Serializer.findProperty((this.owner as SurveyElementCore).getType(), this.name)?.type == \"text\";\n      }\n    }\n    return this._allowLineBreaks;\n  }\n  public onGetTextCallback: (str: string, nonProcessedText?: string) => string;\n  public storeDefaultText: boolean;\n  public serializeCallBackText: boolean;\n  public onStrChanged: (oldValue: string, newValue: string) => void;\n  public lastChangedLoc: string;\n  public onSearchChanged: () => void;\n  public sharedData: LocalizableString;\n  public searchText: string;\n  public searchIndex: number;\n  public disableLocalization: boolean;\n  public defaultValue: string;\n  constructor(public owner: ILocalizableOwner, public useMarkdown: boolean = false,\n    public name?: string, locName?: string) {\n    this._localizationName = locName;\n    this.onCreating();\n  }\n  public getIsMultiple(): boolean { return false; }\n  public get locale(): string {\n    if (this.owner && this.owner.getLocale) {\n      const res = this.owner.getLocale();\n      if (!!res || !this.sharedData) return res;\n    }\n    if (!!this.sharedData) return this.sharedData.locale;\n    return \"\";\n  }\n  public get isDefautlLocale(): boolean {\n    const loc = this.locale;\n    return !loc || loc === settings.defaultLocaleName;\n  }\n  public strChanged(): void {\n    if (!this.isTextRequested) return;\n    this.searchableText = undefined;\n    if (this.renderedText === undefined && this.isEmpty && !this.onGetTextCallback && !this.localizationName) return;\n    this.calculatedTextValue = this.calcText();\n    if (this.renderedText !== this.calculatedTextValue) {\n      this.renderedText = undefined;\n      this.calculatedTextValue = undefined;\n    }\n    this.htmlValues = {};\n    this.onChanged();\n    this.onStringChanged.fire(this, {});\n  }\n  public get text(): string {\n    return this.pureText;\n  }\n  public set text(value: string) {\n    this.setLocaleText(this.locale, value);\n  }\n  public get calculatedText(): string {\n    this.renderedText =\n      this.calculatedTextValue !== undefined\n        ? this.calculatedTextValue\n        : this.calcText();\n    this.calculatedTextValue = undefined;\n    return this.renderedText;\n  }\n  public getPlaceholder(): string {\n    let res = \"\";\n    if (!this.isDefautlLocale) {\n      const dialectLocale = this.getRootDialect(this.locale);\n      res = this.getLocaleText(dialectLocale || settings.defaultLocaleName);\n    }\n    if (!res && this.onGetTextCallback) {\n      res = this.onGetTextCallback(\"\", \"\");\n    }\n    return res;\n  }\n  private calcText(): string {\n    const pureText = this.pureText;\n    let res = pureText;\n    if (res && this.owner && this.owner.getProcessedText && res.indexOf(\"{\") > -1) {\n      res = this.owner.getProcessedText(res);\n    }\n    if (this.onGetTextCallback) res = this.onGetTextCallback(res, pureText);\n    return res;\n  }\n  private isTextRequested: boolean;\n  public get pureText(): string {\n    this.isTextRequested = true;\n    var loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    var res = this.getValue(loc);\n    if (this.isValueEmpty(res) && loc === this.defaultLoc) {\n      res = this.getValue(surveyLocalization.defaultLocale);\n    }\n    if (this.isValueEmpty(res)) {\n      const dialect = this.getRootDialect(loc);\n      if (!!dialect) {\n        res = this.getValue(dialect);\n      }\n    }\n    if (this.isValueEmpty(res) && loc !== this.defaultLoc) {\n      res = this.getValue(this.defaultLoc);\n    }\n    if (this.isValueEmpty(res) && !!this.getLocalizationName()) {\n      res = this.getLocalizationStr();\n    }\n    if (!res) res = this.defaultValue || \"\";\n    return res;\n  }\n  private getRootDialect(loc: string): string {\n    if (!loc) return loc;\n    const index = loc.indexOf(\"-\");\n    return index > -1 ? loc.substring(0, index) : \"\";\n  }\n  private getLocalizationName(): string {\n    return !!this.sharedData ? this.sharedData.localizationName : this.localizationName;\n  }\n  private getLocalizationStr(): string {\n    const name = this.getLocalizationName();\n    return !!name ? getLocaleString(name, this.locale) : \"\";\n  }\n  public get hasHtml(): boolean {\n    return this.hasHtmlValue();\n  }\n  public get html(): string {\n    if (!this.hasHtml) return \"\";\n    return this.getHtmlValue();\n  }\n  public get isEmpty(): boolean {\n    return this.getValuesKeys().length == 0;\n  }\n  public get textOrHtml(): string {\n    return this.hasHtml ? this.getHtmlValue() : this.calculatedText;\n  }\n  public get renderedHtml(): string {\n    return this.textOrHtml;\n  }\n  public getLocaleText(loc: string): string {\n    const res = this.getLocaleTextCore(loc);\n    return res ? res : \"\";\n  }\n  private getLocaleTextCore(loc: string): string {\n    if (!loc) loc = this.defaultLoc;\n    return this.getValue(loc);\n  }\n  private isLocaleTextEqualsWithDefault(loc: string, val: string): boolean {\n    let res = this.getLocaleTextCore(loc);\n    if (res === val) return true;\n    return this.isValueEmpty(res) && this.isValueEmpty(val);\n  }\n  public clear(): void {\n    this.setJson(undefined);\n  }\n  public clearLocale(loc?: string): void {\n    this.setLocaleText(loc, undefined);\n  }\n  public setLocaleText(loc: string, value: string): void {\n    loc = this.getValueLoc(loc);\n    this.lastChangedLoc = loc;\n    if (!!loc && value === undefined) {\n      const oldValue = this.getValue(loc);\n      if (oldValue !== undefined) {\n        this.deleteValue(loc);\n        this.fireStrChanged(loc, oldValue);\n      }\n      return;\n    }\n    if (!this.storeDefaultText && this.isLocaleTextEqualsWithDefault(loc, value)) {\n      if (!this.isValueEmpty(value) || !!loc && loc !== this.defaultLoc) return;\n      let dl = surveyLocalization.defaultLocale;\n      let oldValue = this.getValue(dl);\n      if (!!dl && !this.isValueEmpty(oldValue)) {\n        this.setValue(dl, value);\n        this.fireStrChanged(dl, oldValue);\n      }\n      return;\n    }\n    if (!settings.localization.storeDuplicatedTranslations &&\n      !this.isValueEmpty(value) && loc && loc != this.defaultLoc &&\n      !this.getValue(loc) &&\n      value == this.getLocaleText(this.defaultLoc)\n    )\n      return;\n    var curLoc = this.curLocale;\n    if (!loc) loc = this.defaultLoc;\n    var oldValue = this.onStrChanged && loc === curLoc ? this.pureText : undefined;\n    delete (<any>this).htmlValues[loc];\n    if (this.isValueEmpty(value)) {\n      this.deleteValue(loc);\n    } else {\n      if (typeof value === \"string\") {\n        if (this.canRemoveLocValue(loc, value)) {\n          this.setLocaleText(loc, null);\n        } else {\n          this.setValue(loc, value);\n          if (loc == this.defaultLoc) {\n            this.deleteValuesEqualsToDefault(value);\n          }\n        }\n      }\n    }\n    this.fireStrChanged(loc, oldValue);\n  }\n  private isValueEmpty(val: string): boolean {\n    if (val === undefined || val === null) return true;\n    if (this.localizationName) return false;\n    return val === \"\";\n  }\n  private get curLocale(): string {\n    return !!this.locale ? this.locale : this.defaultLoc;\n  }\n  private canRemoveLocValue(loc: string, val: string): boolean {\n    if (settings.localization.storeDuplicatedTranslations) return false;\n    if (loc === this.defaultLoc) return false;\n    const dialect = this.getRootDialect(loc);\n    if (!!dialect) {\n      const dialectVal = this.getLocaleText(dialect);\n      if (!!dialectVal) return dialectVal == val;\n      return this.canRemoveLocValue(dialect, val);\n    } else {\n      return val == this.getLocaleText(this.defaultLoc);\n    }\n  }\n  private fireStrChanged(loc: string, oldValue: string) {\n    this.strChanged();\n    if (!this.onStrChanged) return;\n    const value = this.pureText;\n    if (loc !== this.curLocale || oldValue !== value) {\n      this.onStrChanged(oldValue, value);\n    }\n  }\n  public hasNonDefaultText(): boolean {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return false;\n    return keys.length > 1 || keys[0] != this.defaultLoc;\n  }\n  public getLocales(): Array<string> {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return [];\n    return keys;\n  }\n  public getJson(): any {\n    if (!!this.sharedData) return this.sharedData.getJson();\n    const keys = this.getValuesKeys();\n    if (keys.length == 0) {\n      if (this.serializeCallBackText) {\n        const text = this.calcText();\n        if (!!text) return text;\n      }\n      return null;\n    }\n    if (\n      keys.length == 1 &&\n      keys[0] == settings.localization.defaultLocaleName &&\n      !settings.serialization.localizableStringSerializeAsObject\n    )\n      return (<any>this).values[keys[0]];\n    const res: any = {};\n    for (let key in this.values) {\n      res[key] = this.values[key];\n    }\n    return res;\n  }\n  public setJson(value: any, isLoading?: boolean): void {\n    if (!!this.sharedData) {\n      this.sharedData.setJson(value, isLoading);\n      return;\n    }\n    this.lastChangedLoc = undefined;\n    this.values = {};\n    this.htmlValues = {};\n    if (value === null || value === undefined) return;\n    if (isLoading) {\n      if (typeof value === \"string\") {\n        this.values[settings.defaultLocaleName] = value;\n      } else {\n        this.values = value;\n        delete this.values[\"pos\"];\n      }\n    } else {\n      if (typeof value === \"string\") {\n        this.setLocaleText(null, value);\n      } else {\n        for (var key in value) {\n          this.setLocaleText(key, value[key]);\n        }\n      }\n      this.strChanged();\n    }\n  }\n  public get renderAs(): string {\n    if (!this.owner || typeof this.owner.getRenderer !== \"function\") {\n      return LocalizableString.defaultRenderer;\n    }\n    return this.owner.getRenderer(this.name) || LocalizableString.defaultRenderer;\n  }\n  public get renderAsData(): any {\n    if (!this.owner || typeof this.owner.getRendererContext !== \"function\") {\n      return this;\n    }\n    return this.owner.getRendererContext(this) || this;\n  }\n  public equals(obj: any): boolean {\n    if (!!this.sharedData) return this.sharedData.equals(obj);\n    if (!obj || !obj.values) return false;\n    return Helpers.isTwoValueEquals(this.values, obj.values, false, true, false);\n  }\n  private searchableText: string;\n  public setFindText(text: string): boolean {\n    if (this.searchText == text) return;\n    this.searchText = text;\n    if (!this.searchableText) {\n      let textOrHtml = this.textOrHtml;\n      this.searchableText = !!textOrHtml ? textOrHtml.toLowerCase() : \"\";\n    }\n    var str = this.searchableText;\n    var index = !!str && !!text ? str.indexOf(text) : undefined;\n    if (index < 0) index = undefined;\n    if (index != undefined || this.searchIndex != index) {\n      this.searchIndex = index;\n      if (!!this.onSearchChanged) {\n        this.onSearchChanged();\n      }\n    }\n    return this.searchIndex != undefined;\n  }\n  public onChanged(): void { }\n  public onStringChanged: EventBase<LocalizableString> = new EventBase<LocalizableString>();\n  protected onCreating(): void { }\n  private hasHtmlValue(): boolean {\n    if (!this.owner || !this.useMarkdown) return false;\n    let loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    if ((<any>this).htmlValues[loc] !== undefined) return !!(<any>this).htmlValues[loc];\n    let renderedText = this.calculatedText;\n    if (!renderedText) {\n      this.setHtmlValue(loc, \"\");\n      return false;\n    }\n    if (!!this.getLocalizationName() && renderedText === this.getLocalizationStr()) {\n      this.setHtmlValue(loc, \"\");\n      return false;\n    }\n    const res = this.owner.getMarkdownHtml(renderedText, this.name);\n    this.setHtmlValue(loc, res);\n    return !!res;\n  }\n  private setHtmlValue(loc: string, val: string): void {\n    (<any>this).htmlValues[loc] = val;\n  }\n  public getHtmlValue(): string {\n    var loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    return (<any>this).htmlValues[loc];\n  }\n  private deleteValuesEqualsToDefault(defaultValue: string) {\n    if (settings.localization.storeDuplicatedTranslations) return;\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      if (keys[i] == this.defaultLoc) continue;\n      if (this.getValue(keys[i]) == defaultValue) {\n        this.deleteValue(keys[i]);\n      }\n    }\n  }\n  private getValue(loc: string): string {\n    if (!!this.sharedData) return this.sharedData.getValue(loc);\n    return (<any>this).values[this.getValueLoc(loc)];\n  }\n  private setValue(loc: string, value: string) {\n    if (!!this.sharedData)this.sharedData.setValue(loc, value);\n    else (<any>this).values[this.getValueLoc(loc)] = value;\n  }\n  private deleteValue(loc: string) {\n    if (!!this.sharedData)this.sharedData.deleteValue(loc);\n    else delete (<any>this).values[this.getValueLoc(loc)];\n  }\n  private getValueLoc(loc: string): string {\n    if (this.disableLocalization) return settings.localization.defaultLocaleName;\n    return loc;\n  }\n  private getValuesKeys(): string[] {\n    if (!!this.sharedData) return this.sharedData.getValuesKeys();\n    return Object.keys(this.values);\n  }\n  private get defaultLoc(): string {\n    return settings.localization.defaultLocaleName;\n  }\n}\n/**\n * The class represents the list of strings that supports multi-languages.\n */\nexport class LocalizableStrings implements ILocalizableString {\n  private values: any = {};\n  public onValueChanged: (oldValue: any, newValue: any) => void;\n  constructor(public owner: ILocalizableOwner) { }\n  public getIsMultiple(): boolean { return true; }\n  public get locale() {\n    return this.owner && this.owner.getLocale ? this.owner.getLocale() : \"\";\n  }\n  public get value(): Array<string> {\n    return this.getValue(\"\");\n  }\n  public set value(val: Array<string>) {\n    this.setValue(\"\", val);\n  }\n  public get text(): string {\n    return Array.isArray(this.value) ? this.value.join(\"\\n\") : \"\";\n  }\n  public set text(val: string) {\n    this.value = !!val ? val.split(\"\\n\") : [];\n  }\n  public getLocaleText(loc: string): string {\n    var res = this.getValueCore(loc, !loc || loc === this.locale);\n    if (!res || !Array.isArray(res) || res.length == 0) return \"\";\n    return res.join(\"\\n\");\n  }\n  public setLocaleText(loc: string, newValue: string): any {\n    var val = !!newValue ? newValue.split(\"\\n\") : null;\n    this.setValue(loc, val);\n  }\n  public getValue(loc: string): Array<string> {\n    return this.getValueCore(loc);\n  }\n  private getValueCore(loc: string, useDefault: boolean = true): Array<string> {\n    loc = this.getLocale(loc);\n    if (this.values[loc]) return this.values[loc];\n    if (useDefault) {\n      var defLoc = settings.localization.defaultLocaleName;\n      if (loc !== defLoc && this.values[defLoc]) return this.values[defLoc];\n    }\n    return [];\n  }\n  public setValue(loc: string, val: Array<string>) {\n    loc = this.getLocale(loc);\n    const oldValue = Helpers.createCopy(this.values);\n    if (!val || val.length == 0) {\n      delete this.values[loc];\n    } else {\n      this.values[loc] = val;\n    }\n    if (!!this.onValueChanged) {\n      this.onValueChanged(oldValue, this.values);\n    }\n  }\n  public hasValue(loc: string = \"\"): boolean {\n    return !this.isEmpty && this.getValue(loc).length > 0;\n  }\n  public get isEmpty(): boolean {\n    return this.getValuesKeys().length == 0;\n  }\n  private getLocale(loc: string): string {\n    if (!!loc) return loc;\n    loc = this.locale;\n    return !!loc ? loc : settings.localization.defaultLocaleName;\n  }\n  public getLocales(): Array<string> {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return [];\n    return keys;\n  }\n  public getJson(): any {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return null;\n    if (\n      keys.length == 1 &&\n      keys[0] == settings.localization.defaultLocaleName &&\n      !settings.serialization.localizableStringSerializeAsObject\n    ) return (<any>this).values[keys[0]];\n    return Helpers.createCopy(this.values);\n  }\n  public setJson(value: any) {\n    this.values = {};\n    if (!value) return;\n    if (Array.isArray(value)) {\n      this.setValue(null, value);\n    } else {\n      for (var key in value) {\n        this.setValue(key, value[key]);\n      }\n    }\n  }\n  private getValuesKeys(): string[] {\n    return Object.keys(this.values);\n  }\n}\n", "import { LocalizableString } from \"../localizablestring\";\nimport { settings, ISurveyEnvironment } from \"./../settings\";\nimport { IDialogOptions } from \"../popup\";\nimport { getLocaleString } from \"../surveyStrings\";\nimport { PopupBaseViewModel } from \"../popup-view-model\";\nimport { DomDocumentHelper, DomWindowHelper } from \"../global_variables_utils\";\n\nfunction compareVersions(a: any, b: any): number {\n  const regExStrip0: RegExp = /(\\.0+)+$/;\n  const segmentsA: string[] = a.replace(regExStrip0, \"\").split(\".\");\n  const segmentsB: string[] = b.replace(regExStrip0, \"\").split(\".\");\n  const len: number = Math.min(segmentsA.length, segmentsB.length);\n  for (let i: number = 0; i < len; i++) {\n    const diff: number =\n      parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n    if (diff) {\n      return diff;\n    }\n  }\n  return segmentsA.length - segmentsB.length;\n}\n\nfunction confirmAction(message: string): boolean {\n  if (!!settings && !!settings.confirmActionFunc)\n    return settings.confirmActionFunc(message);\n  return confirm(message);\n}\n\nfunction confirmActionAsync(options: IConfirmDialogOptions): void {\n  const callbackFunc = (res: boolean): void => {\n    if (res) options.funcOnYes();\n    else if (!!options.funcOnNo) options.funcOnNo();\n  };\n  if (!!settings && !!settings.confirmActionFunc) {\n    callbackFunc(confirmAction(options.message));\n    return;\n  }\n  if (!!settings && !!settings.confirmActionAsync) {\n    settings.confirmActionAsync(options.message, callbackFunc, options);\n  } else {\n    showConfirmDialog(options.message, callbackFunc, options);\n  }\n}\nfunction detectIEBrowser(): boolean {\n  const ua: string = navigator.userAgent;\n  const oldIe: number = ua.indexOf(\"MSIE \");\n  const elevenIe: number = ua.indexOf(\"Trident/\");\n  return oldIe > -1 || elevenIe > -1;\n}\nfunction detectIEOrEdge(): boolean {\n  if (typeof (<any>detectIEOrEdge).isIEOrEdge === \"undefined\") {\n    const ua: string = navigator.userAgent;\n    const msie: number = ua.indexOf(\"MSIE \");\n    const trident: number = ua.indexOf(\"Trident/\");\n    const edge: number = ua.indexOf(\"Edge/\");\n    (<any>detectIEOrEdge).isIEOrEdge = edge > 0 || trident > 0 || msie > 0;\n  }\n  return (<any>detectIEOrEdge).isIEOrEdge;\n}\nfunction loadFileFromBase64(b64Data: string, fileName: string): void {\n  try {\n    const byteString: string = atob(b64Data.split(\",\")[1]);\n\n    // separate out the mime component\n    const mimeString: string = b64Data\n      .split(\",\")[0]\n      .split(\":\")[1]\n      .split(\";\")[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    const ab: ArrayBuffer = new ArrayBuffer(byteString.length);\n    const ia: Uint8Array = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    // write the ArrayBuffer to a blob, and you're done\n    const bb: Blob = new Blob([ab], { type: mimeString });\n    if (!!navigator && (<any>navigator)[\"msSaveBlob\"]) {\n      (<any>navigator)[\"msSaveOrOpenBlob\"](bb, fileName);\n    }\n  } catch(err) { }\n}\nfunction isMobile(): boolean {\n  return (DomWindowHelper.isAvailable() && DomWindowHelper.hasOwn(\"orientation\"));\n}\n\nconst isShadowDOM = (rootElement: Document | ShadowRoot | HTMLElement): rootElement is ShadowRoot => {\n  return !!rootElement && !!(\"host\" in rootElement && rootElement.host);\n};\n\nconst getElement = (element: HTMLElement | string): HTMLElement => {\n  const { root }: ISurveyEnvironment = settings.environment;\n  return typeof element === \"string\" ? root.getElementById(element) : element;\n};\n\nfunction isElementVisible(\n  element: HTMLElement,\n  threshold: number = 0\n): boolean {\n  if (typeof settings.environment === \"undefined\" || !element.offsetHeight) {\n    return false;\n  }\n\n  const { root }: ISurveyEnvironment = settings.environment;\n  const clientHeight = isShadowDOM(root)\n    ? root.host.clientHeight\n    : root.documentElement.clientHeight;\n  const elementRect: DOMRect = element.getBoundingClientRect();\n  const viewHeight: number = Math.max(\n    clientHeight,\n    DomWindowHelper.getInnerHeight()\n  );\n  const topWin: number = -threshold;\n  const bottomWin: number = viewHeight + threshold;\n  const topEl: number = elementRect.top;\n  const bottomEl: number = elementRect.bottom;\n\n  const maxTop: number = Math.max(topWin, topEl);\n  const minBottom: number = Math.min(bottomWin, bottomEl);\n  return maxTop <= minBottom;\n}\n\nfunction findScrollableParent(element: Element): Element {\n  if (!element) {\n    return DomDocumentHelper.isAvailable() ? DomDocumentHelper.getDocument().documentElement : undefined;\n  }\n  if (\n    element.scrollHeight > element.clientHeight &&\n    (getComputedStyle(element).overflowY === \"scroll\" ||\n      getComputedStyle(element).overflowY === \"auto\")\n  ) {\n    return element;\n  }\n\n  if (\n    element.scrollWidth > element.clientWidth &&\n    (getComputedStyle(element).overflowX === \"scroll\" ||\n      getComputedStyle(element).overflowX === \"auto\")\n  ) {\n    return element;\n  }\n  if (!element.parentElement) {\n    const rootNode = element.getRootNode();\n    if (rootNode instanceof Document || rootNode instanceof ShadowRoot) {\n      return isShadowDOM(rootNode) ? rootNode.host : rootNode.documentElement;\n    }\n  }\n  return findScrollableParent(element.parentElement);\n}\n\nfunction activateLazyRenderingChecks(element: Element): void {\n  if (!element) return;\n  const scrollableEl = findScrollableParent(element);\n  if (!!scrollableEl) {\n    setTimeout(() => scrollableEl.dispatchEvent(new CustomEvent(\"scroll\")), 10);\n  }\n}\n\nfunction navigateToUrl(url: string): void {\n  const location = DomWindowHelper.getLocation();\n  if (!url || !location) return;\n  location.href = getSafeUrl(url);\n}\n\nfunction wrapUrlForBackgroundImage(url: string): string {\n  return !!url ? [\"url(\", url, \")\"].join(\"\") : \"\";\n}\nfunction isBase64URL(url: string): boolean {\n  if (typeof url == \"string\") {\n    return /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[^;]+?)*),(.+)$/.test(url);\n  }\n  return null;\n}\n\n// old-name: new-name\nconst renamedIcons: any = {\n  \"changecamera\": \"flip-24x24\",\n  \"clear\": \"clear-24x24\",\n  \"cancel\": \"cancel-24x24\",\n  \"closecamera\": \"close-24x24\",\n  \"defaultfile\": \"file-72x72\",\n  \"choosefile\": \"folder-24x24\",\n  \"file\": \"toolbox-file-24x24\",\n  \"left\": \"chevronleft-16x16\",\n  \"modernbooleancheckchecked\": \"plus-32x32\",\n  \"modernbooleancheckunchecked\": \"minus-32x32\",\n  \"more\": \"more-24x24\",\n  \"navmenu_24x24\": \"navmenu-24x24\",\n  \"removefile\": \"error-24x24\",\n  \"takepicture\": \"camera-32x32\",\n  \"takepicture_24x24\": \"camera-24x24\",\n  \"v2check\": \"check-16x16\",\n  \"checked\": \"check-16x16\",\n  \"v2check_24x24\": \"check-24x24\",\n  \"back-to-panel_16x16\": \"restoredown-16x16\",\n  \"clear_16x16\": \"clear-16x16\",\n  \"close_16x16\": \"close-16x16\",\n  \"collapsedetail\": \"collapsedetails-16x16\",\n  \"expanddetail\": \"expanddetails-16x16\",\n  \"full-screen_16x16\": \"maximize-16x16\",\n  \"loading\": \"loading-48x48\",\n  \"minimize_16x16\": \"minimize-16x16\",\n  \"next_16x16\": \"chevronright-16x16\",\n  \"previous_16x16\": \"chevronleft-16x16\",\n  \"no-image\": \"noimage-48x48\",\n  \"ranking-dash\": \"rankingundefined-16x16\",\n  \"drag-n-drop\": \"drag-24x24\",\n  \"ranking-arrows\": \"reorder-24x24\",\n  \"restore_16x16\": \"fullsize-16x16\",\n  \"reset\": \"restore-24x24\",\n  \"search\": \"search-24x24\",\n  \"average\": \"smiley-rate5-24x24\",\n  \"excellent\": \"smiley-rate9-24x24\",\n  \"good\": \"smiley-rate7-24x24\",\n  \"normal\": \"smiley-rate6-24x24\",\n  \"not-good\": \"smiley-rate4-24x24\",\n  \"perfect\": \"smiley-rate10-24x24\",\n  \"poor\": \"smiley-rate3-24x24\",\n  \"terrible\": \"smiley-rate1-24x24\",\n  \"very-good\": \"smiley-rate8-24x24\",\n  \"very-poor\": \"smiley-rate2-24x24\",\n  \"add_16x16\": \"add-16x16\",\n  \"add_24x24\": \"add-24x24\",\n  \"alert_24x24\": \"warning-24x24\",\n  \"apply\": \"apply-24x24\",\n  \"arrow-down\": \"arrowdown-24x24\",\n  \"arrow-left\": \"arrowleft-24x24\",\n  \"arrow-left_16x16\": \"arrowleft-16x16\",\n  \"arrowleft\": \"arrowleft-16x16\",\n  \"arrow-right\": \"arrowright-24x24\",\n  \"arrow-right_16x16\": \"arrowright-16x16\",\n  \"arrowright\": \"arrowright-16x16\",\n  \"arrow-up\": \"arrowup-24x24\",\n  \"boolean\": \"toolbox-boolean-24x24\",\n  \"change-question-type_16x16\": \"speechbubble-16x16\",\n  \"checkbox\": \"toolbox-checkbox-24x24\",\n  \"collapse-detail_16x16\": \"minusbox-16x16\",\n  \"collapse-panel\": \"collapse-pg-24x24\",\n  \"collapse_16x16\": \"collapse-16x16\",\n  \"color-picker\": \"dropper-16x16\",\n  \"comment\": \"toolbox-longtext-24x24\",\n  \"config\": \"wrench-24x24\",\n  \"copy\": \"copy-24x24\",\n  \"default\": \"toolbox-customquestion-24x24\",\n  \"delete_16x16\": \"delete-16x16\",\n  \"delete_24x24\": \"delete-24x24\",\n  \"delete\": \"delete-24x24\",\n  \"description-hide\": \"hidehint-16x16\",\n  \"description\": \"hint-16x16\",\n  \"device-desktop\": \"desktop-24x24\",\n  \"device-phone\": \"phone-24x24\",\n  \"device-rotate\": \"rotate-24x24\",\n  \"device-tablet\": \"tablet-24x24\",\n  \"download\": \"download-24x24\",\n  \"drag-area-indicator\": \"drag-24x24\",\n  \"drag-area-indicator_24x16\": \"draghorizontal-24x16\",\n  \"v2dragelement_16x16\": \"draghorizontal-24x16\",\n  \"drop-down-arrow\": \"chevrondown-24x24\",\n  \"drop-down-arrow_16x16\": \"chevrondown-16x16\",\n  \"chevron_16x16\": \"chevrondown-16x16\",\n  \"dropdown\": \"toolbox-dropdown-24x24\",\n  \"duplicate_16x16\": \"copy-16x16\",\n  \"edit\": \"edit-24x24\",\n  \"edit_16x16\": \"edit-16x16\",\n  \"editing-finish\": \"finishedit-24x24\",\n  \"error\": \"error-16x16\",\n  \"expand-detail_16x16\": \"plusbox-16x16\",\n  \"expand-panel\": \"expand-pg-24x24\",\n  \"expand_16x16\": \"expand-16x16\",\n  \"expression\": \"toolbox-expression-24x24\",\n  \"fast-entry\": \"textedit-24x24\",\n  \"fix\": \"fix-24x24\",\n  \"html\": \"toolbox-html-24x24\",\n  \"image\": \"toolbox-image-24x24\",\n  \"imagepicker\": \"toolbox-imagepicker-24x24\",\n  \"import\": \"import-24x24\",\n  \"invisible-items\": \"invisible-24x24\",\n  \"language\": \"language-24x24\",\n  \"load\": \"import-24x24\",\n  \"logic-collapse\": \"collapse-24x24\",\n  \"logic-expand\": \"expand-24x24\",\n  \"logo\": \"image-48x48\",\n  \"matrix\": \"toolbox-matrix-24x24\",\n  \"matrixdropdown\": \"toolbox-multimatrix-24x24\",\n  \"matrixdynamic\": \"toolbox-dynamicmatrix-24x24\",\n  \"multipletext\": \"toolbox-multipletext-24x24\",\n  \"panel\": \"toolbox-panel-24x24\",\n  \"paneldynamic\": \"toolbox-dynamicpanel-24x24\",\n  \"preview\": \"preview-24x24\",\n  \"radiogroup\": \"toolbox-radiogroup-24x24\",\n  \"ranking\": \"toolbox-ranking-24x24\",\n  \"rating\": \"toolbox-rating-24x24\",\n  \"slider\": \"toolbox-slider-24x24\",\n  \"redo\": \"redo-24x24\",\n  \"remove_16x16\": \"remove-16x16\",\n  \"required\": \"required-16x16\",\n  \"save\": \"save-24x24\",\n  \"select-page\": \"selectpage-24x24\",\n  \"settings\": \"settings-24x24\",\n  \"settings_16x16\": \"settings-16x16\",\n  \"signaturepad\": \"toolbox-signature-24x24\",\n  \"switch-active_16x16\": \"switchon-16x16\",\n  \"switch-inactive_16x16\": \"switchoff-16x16\",\n  \"tagbox\": \"toolbox-tagbox-24x24\",\n  \"text\": \"toolbox-singleline-24x24\",\n  \"theme\": \"theme-24x24\",\n  \"toolbox\": \"toolbox-24x24\",\n  \"undo\": \"undo-24x24\",\n  \"visible\": \"visible-24x24\",\n  \"wizard\": \"wand-24x24\",\n  \"searchclear\": \"clear-16x16\",\n  \"chevron-16x16\": \"chevrondown-16x16\",\n  \"chevron\": \"chevrondown-24x24\",\n  \"progressbuttonv2\": \"arrowleft-16x16\",\n  \"right\": \"chevronright-16x16\",\n  \"add-lg\": \"add-24x24\",\n  \"add\": \"add-24x24\",\n};\n\nfunction getIconNameFromProxy(iconName: string): string {\n  const customIconName = getCustomNewIconNameIfExists(iconName);\n  return customIconName || getNewIconName(iconName);\n}\n\nexport function getNewIconName(iconName: string): string {\n  const prefix = \"icon-\";\n  const nameWithoutPrefix = iconName.replace(prefix, \"\");\n  const result = renamedIcons[nameWithoutPrefix] || nameWithoutPrefix;\n  return prefix + result;\n}\n\nexport function getCustomNewIconNameIfExists(iconName: string): string {\n  // only for settings.customIcons[\"icon-import\"] = \"icon-export\"; feature\n  let result = (<any>settings.customIcons)[iconName];\n  if (result) return getNewIconName(result);\n\n  iconName = getNewIconName(iconName);\n  result = (<any>settings.customIcons)[iconName];\n  if (result) return result;\n\n  return null;\n}\n\nfunction createSvg(\n  size: number | string,\n  width: number,\n  height: number,\n  iconName: string,\n  svgElem: any,\n  title: string,\n): void {\n  if (!svgElem) return;\n  if (size !== \"auto\") {\n    svgElem.style.width = (size || width || 16) + \"px\";\n    svgElem.style.height = (size || height || 16) + \"px\";\n  }\n  const node: any = svgElem.childNodes[0];\n  const realIconName = getIconNameFromProxy(iconName);\n  node.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"xlink:href\",\n    \"#\" + realIconName\n  );\n\n  let titleElement = svgElem.getElementsByTagName(\"title\")[0];\n  if (!title) {\n    if (!!titleElement) {\n      svgElem.removeChild(titleElement);\n    }\n    return;\n  } else {\n    if (!titleElement) {\n      titleElement = DomDocumentHelper.getDocument().createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n      svgElem.appendChild(titleElement);\n    }\n  }\n  titleElement.textContent = title;\n}\nexport function getSafeUrl(url: string): string {\n  if (!url) return url;\n  if (url.toLocaleLowerCase().indexOf(\"javascript:\") > -1) return encodeURIComponent(url);\n  return url;\n}\n\nexport function unwrap<T>(value: T | (() => T)): T {\n  if (typeof value !== \"function\") {\n    return value;\n  } else {\n    return (<() => T>value)();\n  }\n}\n\n// export function getSize(value: any): number {\n//   if (typeof value === \"number\") {\n//     return value;\n//   }\n//   if (typeof value === \"string\" && value.includes(\"px\")) {\n//     return parseInt(value);\n//   }\n//   if (!!value && typeof value === \"string\" && value.length > 0) {\n//     const lastSymbol: string = value[value.length - 1];\n//     if ((lastSymbol >= \"0\" && lastSymbol <= \"9\") || lastSymbol == \".\") {\n//       try {\n//         const num: number = parseInt(value);\n//         return num;\n//       } catch { }\n//     }\n//   }\n//   return value;\n// }\n\nexport function getRenderedSize(val: string | number): number {\n  if (typeof val == \"string\") {\n    if (!isNaN(Number(val))) {\n      return Number(val);\n    } else if (val.includes(\"px\")) {\n      return parseFloat(val);\n    }\n  }\n  if (typeof val == \"number\") {\n    return val;\n  }\n  return undefined;\n}\nexport function getRenderedStyleSize(val: string | number): string {\n  if (getRenderedSize(val) !== undefined) {\n    return undefined;\n  }\n  return val as string;\n}\n\nexport interface IAttachKey2clickOptions {\n  processEsc?: boolean;\n  disableTabStop?: boolean;\n  __keyDownReceived?: boolean;\n}\nconst keyFocusedClassName = \"sv-focused--by-key\";\nexport function doKey2ClickBlur(evt: KeyboardEvent): void {\n  const element: any = evt.target;\n  if (!element || !element.classList) return;\n  element.classList.remove(keyFocusedClassName);\n}\n\nexport function doKey2ClickUp(evt: KeyboardEvent, options?: IAttachKey2clickOptions): void {\n  if (!!evt.target && (<any>evt.target)[\"contentEditable\"] === \"true\") {\n    return;\n  }\n  const element: any = evt.target;\n  if (!element) return;\n  const char: number = evt.which || evt.keyCode;\n  if (char === 9) {\n    if (!!element.classList && !element.classList.contains(keyFocusedClassName)) {\n      element.classList.add(keyFocusedClassName);\n    }\n    return;\n  }\n\n  if (options) {\n    if (!options.__keyDownReceived) return;\n    options.__keyDownReceived = false;\n  }\n\n  if (char === 13 || char === 32) {\n    if (element.click) element.click();\n  } else if ((!options || options.processEsc) && char === 27) {\n    if (element.blur) element.blur();\n  }\n}\n\nexport function doKey2ClickDown(evt: KeyboardEvent, options: IAttachKey2clickOptions = { processEsc: true }): void {\n  if (options) options.__keyDownReceived = true;\n  if (!!evt.target && (<any>evt.target)[\"contentEditable\"] === \"true\") {\n    return;\n  }\n  var char = evt.which || evt.keyCode;\n  const supportedCodes = [13, 32];\n  if (options.processEsc) {\n    supportedCodes.push(27);\n  }\n  if (supportedCodes.indexOf(char) !== -1) {\n    evt.preventDefault();\n  }\n}\n\nfunction increaseHeightByContent(element: HTMLElement, getComputedStyle?: (elt: Element) => any) {\n  if (!element) return;\n  if (!getComputedStyle) getComputedStyle = (elt: Element) => { return DomDocumentHelper.getComputedStyle(elt); };\n  const rows = parseFloat(element.getAttribute(\"rows\") || \"2\");\n  const style = getComputedStyle(element);\n  const oldOverlow = style.overflowY;\n  const lineHeight = parseFloat(style.lineHeight);\n  if (!!element.scrollHeight) {\n    const paddingBorderWidth = (parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth) + parseFloat(style.paddingBottom) + parseFloat(style.paddingTop));\n    let currentLinesCount = (element.scrollHeight - paddingBorderWidth) / lineHeight;\n    const setHeight = (linesCount: number) => { element.style.height = linesCount * lineHeight + paddingBorderWidth + \"px\"; };\n    setHeight(currentLinesCount);\n    element.style.overflowY = \"hidden\";\n    while(element.scrollHeight <= element.offsetHeight && currentLinesCount > rows) {\n      currentLinesCount--;\n      setHeight(currentLinesCount);\n    }\n    element.style.overflowY = oldOverlow;\n    if (element.scrollHeight > element.offsetHeight) {\n      currentLinesCount++;\n      setHeight(currentLinesCount);\n    }\n  } else {\n    element.style.height = \"auto\";\n  }\n}\nfunction getOriginalEvent(event: any) {\n  return event.originalEvent || event;\n}\nfunction preventDefaults(event: any) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction classesToSelector(str: string): string {\n  if (!str) return str;\n  const re = /\\s*?([\\w-]+)\\s*?/g;\n  return str.replace(re, \".$1\");\n}\n\nfunction getElementWidth(el: HTMLElement) {\n  return !!getComputedStyle ? Number.parseFloat(getComputedStyle(el).width) : el.offsetWidth;\n}\n\nfunction isContainerVisible(el: HTMLElement) {\n  return !!(\n    el.offsetWidth ||\n    el.offsetHeight ||\n    el.getClientRects().length\n  );\n}\n\nfunction getFirstVisibleChild(el: HTMLElement) {\n  let result;\n  for (let index = 0; index < el.children.length; index++) {\n    if (!result && getComputedStyle(el.children[index]).display !== \"none\") {\n      result = el.children[index];\n    }\n  }\n  return result;\n}\nfunction findParentByClassNames(element: HTMLElement, classNames: Array<string>): Element {\n  if (!!element) {\n    if (classNames.every(className => !className || element.classList.contains(className))) {\n      return element;\n    } else {\n      return findParentByClassNames(element.parentElement, classNames);\n    }\n  }\n}\nexport function sanitizeEditableContent(element: any, cleanLineBreaks: boolean = true) {\n  if (DomWindowHelper.isAvailable() && DomDocumentHelper.isAvailable() && element.childNodes.length > 0) {\n    const selection = DomWindowHelper.getSelection();\n    if (selection.rangeCount == 0) {\n      return;\n    }\n\n    let range = selection.getRangeAt(0);\n    range.setStart(range.endContainer, range.endOffset);\n    range.setEndAfter(element.lastChild);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    let tail = selection.toString();\n    let innerText = element.innerText;\n    tail = tail.replace(/\\r/g, \"\");\n    if (cleanLineBreaks) {\n      tail = tail.replace(/\\n/g, \"\");\n      innerText = innerText.replace(/\\n/g, \"\");\n    }\n    const tail_len = tail.length;\n\n    element.innerText = innerText;\n    range = DomDocumentHelper.getDocument().createRange();\n\n    range.setStart(element.firstChild, 0);\n    range.setEnd(element.firstChild, 0);\n\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    while(selection.toString().length < innerText.length - tail_len) {\n      const selLen = selection.toString().length;\n      (selection as any).modify(\"extend\", \"forward\", \"character\");\n      if (selection.toString().length == selLen) break;\n    }\n    range = selection.getRangeAt(0);\n    range.setStart(range.endContainer, range.endOffset);\n  }\n}\nfunction mergeValues(src: any, dest: any): void {\n  if (!dest || !src) return;\n  if (typeof dest !== \"object\") return;\n  for (var key in src) {\n    var value = src[key];\n    if (!Array.isArray(value) && value && typeof value === \"object\") {\n      if (!dest[key] || typeof dest[key] !== \"object\") dest[key] = {};\n      mergeValues(value, dest[key]);\n    } else {\n      dest[key] = value;\n    }\n  }\n}\nfunction updateListCssValues(res: any, css: any): void {\n  const listCssClasses = {};\n  mergeValues(css.list, listCssClasses);\n  mergeValues(res.list, listCssClasses);\n  res[\"list\"] = listCssClasses;\n}\n\nexport class Logger {\n  private _result = \"\";\n  public log(action: string) {\n    this._result += \"->\" + action;\n  }\n  public get result() {\n    return this._result;\n  }\n}\n\nexport interface IConfirmDialogOptions {\n  message?: string;\n  funcOnYes?: () => void;\n  funcOnNo?: () => void;\n  applyTitle?: string;\n  locale?: string;\n  rootElement?: HTMLElement;\n  cssClass?: string;\n}\n\nexport function showConfirmDialog(message: string, callback: (res: boolean) => void, options: IConfirmDialogOptions = {}): boolean {\n  const locStr = new LocalizableString(undefined, false);\n  locStr.defaultValue = message || options.message;\n  const popupViewModel: PopupBaseViewModel = settings.showDialog(<IDialogOptions>{\n    componentName: \"sv-string-viewer\",\n    data: { locStr: locStr, locString: locStr, model: locStr }, //TODO fix in library\n    onApply: () => {\n      callback(true);\n      return true;\n    },\n    onCancel: () => {\n      callback(false);\n      return false;\n    },\n    displayMode: \"popup\",\n    isFocusedContent: false,\n    cssClass: options.cssClass || \"sv-popup--confirm\"\n  }, options.rootElement);\n  const toolbar = popupViewModel.footerToolbar;\n  const applyBtn = toolbar.getActionById(\"apply\");\n  const cancelBtn = toolbar.getActionById(\"cancel\");\n  cancelBtn.title = getLocaleString(\"cancel\", options.locale);\n  applyBtn.title = options.applyTitle || getLocaleString(\"ok\", options.locale);\n  applyBtn.innerCss = \"sd-btn--danger\";\n  configConfirmDialog(popupViewModel);\n  return true;\n}\n\nexport function configConfirmDialog(popupViewModel: PopupBaseViewModel): void {\n  popupViewModel.width = \"min-content\";\n}\n\nfunction chooseFiles(input: HTMLInputElement, callback: (files: File[]) => void): void {\n  if (!DomWindowHelper.isFileReaderAvailable()) return;\n  input.value = \"\";\n  input.onchange = (event) => {\n    if (!DomWindowHelper.isFileReaderAvailable()) return;\n    if (!input || !input.files || input.files.length < 1) return;\n    let files = [];\n    for (let i = 0; i < input.files.length; i++) {\n      files.push(input.files[i]);\n    }\n    callback(files);\n  };\n  input.click();\n}\nexport function compareArrays<T>(oldValue: Array<T>, newValue: Array<T>, getKey: (item: T) => any): { addedItems: Array<T>, deletedItems: Array<T>, reorderedItems: Array<{ item: T, movedForward: boolean }>, mergedItems: Array<T> } {\n  const oldItemsMap = new Map<any, T>();\n  const newItemsMap = new Map<any, T>();\n  const commonItemsInNewMap = new Map<any, number>();\n  const commonItemsInOldMap = new Map<any, number>();\n  oldValue.forEach((item) => {\n    const itemKey = getKey(item);\n    if (!oldItemsMap.has(itemKey)) {\n      oldItemsMap.set(getKey(item), item);\n    } else {\n      //if keys are set incorrectly do not process comparing\n      throw new Error(\"keys must be unique\");\n    }\n  });\n  newValue.forEach((item) => {\n    const itemKey = getKey(item);\n    if (!newItemsMap.has(itemKey)) {\n      newItemsMap.set(itemKey, item);\n    } else {\n      //if keys are set incorrectly do not process comparing\n      throw new Error(\"keys must be unique\");\n    }\n  });\n  const addedItems: Array<T> = [];\n  const deletedItems: Array<T> = [];\n\n  //calculating addedItems and items that exist in both arrays\n  newItemsMap.forEach((item, key) => {\n    if (!oldItemsMap.has(key)) {\n      addedItems.push(item);\n    } else {\n      commonItemsInNewMap.set(key, commonItemsInNewMap.size);\n    }\n  });\n\n  //calculating deletedItems and items that exist in both arrays\n\n  oldItemsMap.forEach((item, key) => {\n    if (!newItemsMap.has(key)) {\n      deletedItems.push(item);\n    } else {\n      commonItemsInOldMap.set(key, commonItemsInOldMap.size);\n    }\n  });\n\n  //calculating reordered items\n  const reorderedItems: Array<{ item: T, movedForward: boolean }> = [];\n  commonItemsInNewMap.forEach((index, key) => {\n    const oldIndex = commonItemsInOldMap.get(key);\n    const item = newItemsMap.get(key);\n    if (oldIndex !== index) reorderedItems.push({ item: item, movedForward: oldIndex < index });\n  });\n\n  //calculating merged array if multiple operations are applied at once\n\n  const oldItemsWithCorrectOrder = new Array<T>(oldValue.length);\n  let commonItemsIndex = 0;\n  const commonItemsKeysOrder = Array.from(commonItemsInNewMap.keys());\n  oldValue.forEach((item, index) => {\n    if (commonItemsInNewMap.has(getKey(item))) {\n      oldItemsWithCorrectOrder[index] = newItemsMap.get(commonItemsKeysOrder[commonItemsIndex]);\n      commonItemsIndex++;\n    } else {\n      oldItemsWithCorrectOrder[index] = item;\n    }\n  });\n\n  const valuesToInsertBeforeKey = new Map<any, Array<T>>();\n  let tempValuesArray: Array<T> = [];\n  oldItemsWithCorrectOrder.forEach((item) => {\n    const itemKey = getKey(item);\n    if (newItemsMap.has(itemKey)) {\n      if (tempValuesArray.length > 0) {\n        valuesToInsertBeforeKey.set(itemKey, tempValuesArray);\n        tempValuesArray = [];\n      }\n    } else {\n      tempValuesArray.push(item);\n    }\n  });\n  const mergedItems = new Array<T>();\n  newItemsMap.forEach((item, key) => {\n    if (valuesToInsertBeforeKey.has(key)) {\n      valuesToInsertBeforeKey.get(key).forEach((item) => {\n        mergedItems.push(item);\n      });\n    }\n    mergedItems.push(item);\n  });\n  tempValuesArray.forEach((item) => {\n    mergedItems.push(item);\n  });\n  return { reorderedItems, deletedItems, addedItems, mergedItems };\n}\n\ninterface IVerticalDimensions {\n  paddingTop: string;\n  paddingBottom: string;\n  marginTop: string;\n  marginBottom: string;\n  heightTo: string;\n  borderTopWidth: string;\n  borderBottomWidth: string;\n  heightFrom: string;\n}\n\nexport function getVerticalDimensions(el: HTMLElement): IVerticalDimensions {\n  if (DomDocumentHelper.isAvailable()) {\n    const { paddingTop, paddingBottom, borderTopWidth, borderBottomWidth, marginTop, marginBottom, boxSizing } = DomDocumentHelper.getComputedStyle(el);\n    let heightTo = el.offsetHeight + \"px\";\n    if (boxSizing == \"content-box\") {\n      let heightPx = el.offsetHeight;\n      [borderBottomWidth, borderTopWidth, paddingBottom, paddingTop].forEach((style) => {\n        heightPx -= parseFloat(style);\n      });\n      heightTo = heightPx + \"px\";\n    }\n    return {\n      paddingTop,\n      paddingBottom,\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      heightFrom: \"0px\",\n      heightTo: heightTo\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport function setPropertiesOnElementForAnimation(el: HTMLElement, styles: any, prefix: string = \"--animation-\"): void {\n  (el as any)[\"__sv_created_properties\"] = (el as any)[\"__sv_created_properties\"] ?? [];\n  Object.keys(styles).forEach((key) => {\n    const propertyName = `${prefix}${key.split(/\\.?(?=[A-Z])/).join(\"-\").toLowerCase()}`;\n    el.style.setProperty(propertyName, (styles as any)[key]);\n    (el as any)[\"__sv_created_properties\"].push(propertyName);\n  });\n}\n\nexport function prepareElementForVerticalAnimation(el: HTMLElement): void {\n  setPropertiesOnElementForAnimation(el, getVerticalDimensions(el));\n}\n\nexport function cleanHtmlElementAfterAnimation(el: HTMLElement): void {\n  if (Array.isArray((el as any)[\"__sv_created_properties\"])) {\n    (el as any)[\"__sv_created_properties\"].forEach((propertyName: string) => {\n      el.style.removeProperty(propertyName);\n    });\n    delete (el as any)[\"__sv_created_properties\"];\n  }\n}\nexport function floorTo2Decimals(number: number): number {\n  return Math.floor(number * 100) / 100;\n}\n\nexport {\n  mergeValues,\n  updateListCssValues,\n  getElementWidth,\n  isContainerVisible,\n  classesToSelector,\n  compareVersions,\n  confirmAction,\n  confirmActionAsync,\n  detectIEOrEdge,\n  detectIEBrowser,\n  loadFileFromBase64,\n  isMobile,\n  isShadowDOM,\n  getElement,\n  isElementVisible,\n  findScrollableParent,\n  activateLazyRenderingChecks,\n  navigateToUrl,\n  wrapUrlForBackgroundImage,\n  createSvg,\n  getIconNameFromProxy,\n  increaseHeightByContent,\n  getOriginalEvent,\n  preventDefaults,\n  findParentByClassNames,\n  getFirstVisibleChild,\n  chooseFiles,\n  isBase64URL,\n  renamedIcons\n};\n", "import { DomDocumentHelper } from \"./global_variables_utils\";\nimport { IDialogOptions } from \"./popup\";\nimport { IConfirmDialogOptions, showConfirmDialog } from \"./utils/utils\";\n\nexport type ISurveyEnvironment = {\n  root: Document | ShadowRoot,\n  rootElement: HTMLElement | ShadowRoot,\n  popupMountContainer: HTMLElement | string,\n  /**\n   * @deprecated\n   */\n  svgMountContainer: HTMLElement | string,\n  stylesSheetsMountContainer: HTMLElement,\n}\nexport interface IBeforeRequestChoicesOptions { request?: XMLHttpRequest, url: string, fetchOptions?: RequestInit }\n\nconst document = typeof globalThis !== \"undefined\" ? globalThis.document : (this as any).document;\nconst defaultEnvironment: ISurveyEnvironment = <ISurveyEnvironment>(!!document ? {\n  root: document,\n\n  _rootElement: DomDocumentHelper.getBody(),\n  get rootElement(): HTMLElement | ShadowRoot {\n    return this._rootElement ?? DomDocumentHelper.getBody();\n  },\n  set rootElement(rootElement: HTMLElement | ShadowRoot) {\n    (this._rootElement as any) = rootElement;\n  },\n\n  _popupMountContainer: DomDocumentHelper.getBody(),\n  get popupMountContainer(): HTMLElement | string {\n    return this._popupMountContainer ?? DomDocumentHelper.getBody();\n  },\n  set popupMountContainer(popupMountContainer: HTMLElement | string) {\n    (this._popupMountContainer as any) = popupMountContainer;\n  },\n  svgMountContainer: document.head,\n  stylesSheetsMountContainer: document.head,\n} : undefined);\nconst columnWidthsByType: { [index: string]: { minWidth?: string, width?: string } } = {\n  \"file\": { minWidth: \"240px\" },\n  \"comment\": { minWidth: \"200px\" }\n};\n/**\n * Global settings that apply to all surveys on the page. To specify one of the settings, use the code below:\n *\n * ```js\n * import { settings } from \"survey-core\";\n *\n * settings.settingName = \"value\";\n * ```\n */\n\nexport var settings = {\n  version: \"\",\n  /**\n   * An object that configures survey appearance when the survey is being designed in Survey Creator.\n   *\n   * Nested properties:\n   *\n   * - `showEmptyDescriptions`: `boolean`\\\n   * Specifies whether to display an empty description for pages and panels. Default value: `true`.\n   *\n   * - `showEmptyTitles`: `boolean`\\\n   * Specifies whether to display an empty title for pages and panels. Default value: `true`.\n   */\n  designMode: {\n    showEmptyDescriptions: true,\n    showEmptyTitles: true\n  },\n\n  //#region designMode section, Obsolete properties\n  get allowShowEmptyDescriptionInDesignMode(): boolean { return this.designMode.showEmptyDescriptions; },\n  set allowShowEmptyDescriptionInDesignMode(val: boolean) { this.designMode.showEmptyDescriptions = val; },\n  get allowShowEmptyTitleInDesignMode(): boolean { return this.designMode.showEmptyTitles; },\n  set allowShowEmptyTitleInDesignMode(val: boolean) { this.designMode.showEmptyTitles = val; },\n  //#endregion\n\n  /**\n   * An object that contains properties related to localization.\n   *\n   * Nested properties:\n   *\n   * - `defaultLocaleName`: `string`\\\n   * A property key that stores a translation for the default locale. Default value: `\"default\"`.\n   *\n   * - `storeDuplicatedTranslations`: `boolean`\\\n   * Specifies whether surveys should store translation strings that equal the translation strings in the default locale. Default value: `false`.\n   *\n   * - `useLocalTimeZone`: `boolean`\\\n   * Obsolete. Use the [`storeUtcDates`](https://surveyjs.io/form-library/documentation/api-reference/settings#storeUtcDates) setting instead.\n   */\n  localization: {\n    /**\n     * @deprecated Use the [`storeUtcDates`](https://surveyjs.io/form-library/documentation/api-reference/settings#storeUtcDates) property instead.\n     */\n    useLocalTimeZone: true,\n    storeDuplicatedTranslations: false,\n    defaultLocaleName: \"default\"\n  },\n\n  //#region localization section, obsolete properties\n  get useLocalTimeZone(): boolean { return this.localization.useLocalTimeZone; },\n  set useLocalTimeZone(val: boolean) { this.localization.useLocalTimeZone = val; },\n  get storeDuplicatedTranslations(): boolean { return this.localization.storeDuplicatedTranslations; },\n  set storeDuplicatedTranslations(val: boolean) { this.localization.storeDuplicatedTranslations = val; },\n  get defaultLocaleName(): string { return this.localization.defaultLocaleName; },\n  set defaultLocaleName(val: string) { this.localization.defaultLocaleName = val; },\n  //#endregion\n\n  /**\n   * An object with properties that configure surveys when they work with a web service.\n   *\n   * Nested properties:\n   *\n   * - `encodeUrlParams`: `boolean`\\\n   * Specifies whether to encode URL parameters when you access a web service. Default value: `true`.\n   *\n   * - `cacheLoadedChoices`: `boolean`\\\n   * Specifies whether to cache [choices loaded from a web service](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl). Default value: `true`.\n   *\n   * - `disableQuestionWhileLoadingChoices`: `boolean`\\\n   * Disables a question while its choices are being loaded from a web service. Default value: `false`.\n   *\n   * - `surveyServiceUrl`: `string`\\\n   * Obsolete. Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   *\n   * - `onBeforeRequestChoices`: `(sender: ChoicesRestful, options: { url: string, request?: XMLHttpRequest, fetchOptions?: RequestInit })`\\\n   * An event that is raised before a request for choices is sent. Applies to questions with a specified [`choiceByUrl`](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl) property. Use the `options` parameter to access and modify the request to be sent. The `options.fetchOptions` object is defined only when the Form Library is run on a Node.js server; `options.request` is defined in the rest of cases. The following example shows how you can add authentication headers to a request for choices:\n   *\n   *     ```js\n   *     import { settings } from \"survey-core\";\n   *\n   *     settings.web.onBeforeRequestChoices = (_, options) => {\n   *       if (options.request) {\n   *         options.request.setRequestHeader(\"RequestVerificationToken\", requestVerificationToken);\n   *       }\n   *       if (options.fetchOptions) {\n   *         options.fetchOptions.headers.append(\"RequestVerificationToken\", requestVerificationToken);\n   *       }\n   *     };\n   *     ```\n   */\n  web: {\n    onBeforeRequestChoices: (sender: any, options: IBeforeRequestChoicesOptions): void => { },\n    encodeUrlParams: true,\n    cacheLoadedChoices: true,\n    disableQuestionWhileLoadingChoices: false\n  },\n\n  //#region web section, obsolete properties\n  get webserviceEncodeParameters(): boolean { return this.web.encodeUrlParams; },\n  set webserviceEncodeParameters(val: boolean) { this.web.encodeUrlParams = val; },\n  get useCachingForChoicesRestful(): boolean { return this.web.cacheLoadedChoices; },\n  set useCachingForChoicesRestful(val: boolean) { this.web.cacheLoadedChoices = val; },\n  get useCachingForChoicesRestfull(): boolean { return this.web.cacheLoadedChoices; },\n  set useCachingForChoicesRestfull(val: boolean) { this.web.cacheLoadedChoices = val; },\n  get disableOnGettingChoicesFromWeb(): boolean { return this.web.disableQuestionWhileLoadingChoices; },\n  set disableOnGettingChoicesFromWeb(val: boolean) { this.web.disableQuestionWhileLoadingChoices = val; },\n  //#endregion\n\n  /**\n   * An object that contains properties related to [triggers](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers).\n   *\n   * Nested properties:\n   *\n   * - `changeNavigationButtonsOnComplete`: `boolean`\\\n   * Specifies whether to re-evaluate an expression associated with the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `false`.\\\n   * Keep this property set to `false` if you want to re-evaluate the Complete trigger's expression only when the respondents navigate to another page.\n   *\n   * - `executeCompleteOnValueChanged`: `boolean`\\\n   * Specifies whether to replace the Next button with the Complete button when the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) is going to be executed. Default value: `true`.\n   *\n   * - `executeSkipOnValueChanged`: `boolean`\\\n   * Specifies whether to re-evaluate an expression associated with the [Skip trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#skip) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `true`.\\\n   * Disable this property if you want to re-evaluate the Skip trigger's expression only when respondents navigate to another page.\n   */\n  triggers: {\n    changeNavigationButtonsOnComplete: true,\n    executeCompleteOnValueChanged: false,\n    executeSkipOnValueChanged: true\n  },\n\n  //#region triggers section, Obsolete properties\n  get executeCompleteTriggerOnValueChanged(): boolean { return this.triggers.executeCompleteOnValueChanged; },\n  set executeCompleteTriggerOnValueChanged(val: boolean) { this.triggers.executeCompleteOnValueChanged = val; },\n  get changeNavigationButtonsOnCompleteTrigger(): boolean { return this.triggers.changeNavigationButtonsOnComplete; },\n  set changeNavigationButtonsOnCompleteTrigger(val: boolean) { this.triggers.changeNavigationButtonsOnComplete = val; },\n  get executeSkipTriggerOnValueChanged(): boolean { return this.triggers.executeSkipOnValueChanged; },\n  set executeSkipTriggerOnValueChanged(val: boolean) { this.triggers.executeSkipOnValueChanged = val; },\n  //#endregion\n\n  /**\n   * An object that contains properties related to JSON serialization.\n   *\n   * Nested properties:\n   *\n   * - `itemValueSerializeAsObject`: `boolean`\\\n   * Enable this property if you want to serialize [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) instances (choice options, matrix rows, columns in a [Single-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model)) as objects even when they include only the `value` property. Default value: `false`.\n   *\n   * - `itemValueSerializeDisplayText`: `boolean`\\\n   * Enable this property if you want to serialize the `text` property of [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) objects even when it is empty or equal to the `value` property. Default value: `false`.\n   *\n   * - `localizableStringSerializeAsObject`: `boolean`\\\n   * Enable this property if you want to serialize [`LocalizableString`](https://surveyjs.io/form-library/documentation/api-reference/localizablestring) instances as objects even when they include only a translation string for the default locale. For example, `\"Custom String\"` will be serialized as `{ default: \"Custom String\" }`. Default value: `false`.\n   *\n   * - `matrixDropdownColumnSerializeTitle`: `boolean`\\\n   * Enable this property if you want to serialize the `title` property of [`MatrixDropdownColumn`](https://surveyjs.io/form-library/documentation/api-reference/multi-select-matrix-column-values) objects even when it is empty or equal to the `name` property. Default value: `false`.\n   * @see [settings.parseNumber](https://surveyjs.io/form-library/documentation/api-reference/settings#parseNumber)\n   */\n  serialization: {\n    itemValueSerializeAsObject: false,\n    itemValueSerializeDisplayText: false,\n    localizableStringSerializeAsObject: false,\n    matrixDropdownColumnSerializeTitle: false\n  },\n\n  //#region serialization section, Obsolete properties\n  get itemValueAlwaysSerializeAsObject(): boolean { return this.serialization.itemValueSerializeAsObject; },\n  set itemValueAlwaysSerializeAsObject(val: boolean) { this.serialization.itemValueSerializeAsObject = val; },\n  get itemValueAlwaysSerializeText(): boolean { return this.serialization.itemValueSerializeDisplayText; },\n  set itemValueAlwaysSerializeText(val: boolean) { this.serialization.itemValueSerializeDisplayText = val; },\n  get serializeLocalizableStringAsObject(): boolean { return this.serialization.localizableStringSerializeAsObject; },\n  set serializeLocalizableStringAsObject(val: boolean) { this.serialization.localizableStringSerializeAsObject = val; },\n  //#endregion\n\n  /**\n   * An object that configures lazy rendering.\n   *\n   * Nested properties:\n   *\n   * - `enabled`: `boolean`\\\n   * Specifies whether to add questions to the DOM only when they get into the viewport. Default value: `false`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-lazy/ (linkStyle))\n   * @see [SurveyModel.lazyRenderEnabled](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#lazyRenderEnabled)\n   */\n  lazyRender: {\n    enabled: false,\n    firstBatchSize: 3\n  },\n\n  //#region lazyRender section, Obsolete properties\n  get lazyRowsRendering(): boolean { return this.lazyRender.enabled; },\n  set lazyRowsRendering(val: boolean) { this.lazyRender.enabled = val; },\n  get lazyRowsRenderingStartRow(): number { return this.lazyRender.firstBatchSize; },\n  set lazyRowsRenderingStartRow(val: number) { this.lazyRender.firstBatchSize = val; },\n  //#endregion\n\n  /**\n   * An object with properties that apply to [Single-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model), [Multiple-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list), and [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model) questions.\n   *\n   * Nested properties:\n   *\n   * - `defaultRowName`: `string`\\\n   * A property key that stores an object with default cell values. Default value: \"default\".\n   *\n   * - `defaultCellType`: `string`\\\n   * The default type of matrix cells. Default value: `\"dropdown\"`.\\\n   * You can specify this setting for individual questions or matrix columns: [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#cellType). Refer to the `cellType` property description for information on possible values.\n   *\n   * - `totalsSuffix`: `string`\\\n   * A suffix added to the name of the property that stores total values. The resulting property name consists of the matrix name and the suffix. Default value: `\"-total\"`.\n   *\n   * - `maxRowCount`: `number`\\\n   * A maximum number of rows in a Dynamic Matrix. Default value: 1000.\\\n   * You can specify this setting for an individual Dynamic Matrix: [`maxRowCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#maxRowCount).\n   *\n   * - `maxRowCountInCondition`: `number`\\\n   * A maximum number of matrix rows included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n   * If you set this property to 0, the Condition menu does not include any matrix rows. Users still can specify conditions that use matrix rows but only with Manual Entry.\n   *\n   * - `renderRemoveAsIcon`: `boolean`\\\n   * Disable this property if you want to render the Remove action in Dynamic Matrix as a button. Otherwise, the action is rendered as an icon. Default value: `true`.\n   *\n   * - `columnWidthsByType`: `object`\\\n   * An object that specifies fixed and minimum column width based on the column type.\\\n   * Example: `settings.matrix.columnWidthsByType = { \"tagbox\": { minWidth: \"240px\", width: \"300px\" } }`\n   *\n   * - `rateSize`: `\"small\"` (default) | `\"normal\"`\\\n   * Specifies the size of rate values. Applies to [Rating Scale](https://surveyjs.io/form-library/examples/rating-scale/) questions within matrixes.\n   */\n  matrix: {\n    defaultCellType: \"dropdown\",\n    defaultRowName: \"default\",\n    totalsSuffix: \"-total\",\n    maxRowCount: 1000,\n    maxRowCountInCondition: 1,\n    renderRemoveAsIcon: true,\n    columnWidthsByType: columnWidthsByType,\n    rateSize: \"small\" as \"small\" | \"normal\",\n  },\n\n  //#region matrix section, Obsolete properties\n  get matrixDefaultRowName(): string { return this.matrix.defaultRowName; },\n  set matrixDefaultRowName(val: string) { this.matrix.defaultRowName = val; },\n  get matrixDefaultCellType(): string { return this.matrix.defaultCellType; },\n  set matrixDefaultCellType(val: string) { this.matrix.defaultCellType = val; },\n  get matrixTotalValuePostFix(): string { return this.matrix.totalsSuffix; },\n  set matrixTotalValuePostFix(val: string) { this.matrix.totalsSuffix = val; },\n  get matrixMaximumRowCount(): number { return this.matrix.maxRowCount; },\n  set matrixMaximumRowCount(val: number) { this.matrix.maxRowCount = val; },\n  get matrixMaxRowCountInCondition(): number { return this.matrix.maxRowCountInCondition; },\n  set matrixMaxRowCountInCondition(val: number) { this.matrix.maxRowCountInCondition = val; },\n  get matrixRenderRemoveAsIcon(): boolean { return this.matrix.renderRemoveAsIcon; },\n  set matrixRenderRemoveAsIcon(val: boolean) { this.matrix.renderRemoveAsIcon = val; },\n  //#endregion\n\n  /**\n   * An object with properties that apply to [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model) questions.\n   *\n   * Nested properties:\n   *\n   * - `maxPanelCount`: `number`\\\n   * A maximum number of panels in Dynamic Panel. Default value: 100.\\\n   * You can specify this setting for an individual Dynamic Panel: [`maxPanelCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#maxPanelCount).\n   *\n   * - `maxPanelCountInCondition`: `number`\\\n   * A maximum number of Dynamic Panel panels included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n   * If you set this property to 0, the Condition menu does not include any panel questions. Users still can specify conditions that use panel questions but only with Manual Entry.\n   */\n  panel: {\n    maxPanelCount: 100,\n    maxPanelCountInCondition: 1\n  },\n\n  //#region panel section, Obsolete properties\n  get panelDynamicMaxPanelCountInCondition(): number { return this.panel.maxPanelCountInCondition; },\n  set panelDynamicMaxPanelCountInCondition(val: number) { this.panel.maxPanelCountInCondition = val; },\n  get panelMaximumPanelCount(): number { return this.panel.maxPanelCount; },\n  set panelMaximumPanelCount(val: number) { this.panel.maxPanelCount = val; },\n  //#endregion\n\n  /**\n   * An object with properties that configure questions in read-only mode.\n   *\n   * Nested properties:\n   *\n   * - `commentRenderMode`: `\"textarea\"` (default) | `\"div\"`\\\n   * Specifies how to render the input field of [Comment](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#readOnly) mode: as a disabled `<textarea>` element or as a `<div>` element with a non-editable question value within it.\n   *\n   * - `textRenderMode`: `\"input\"` (default) | `\"div\"`\\\n   * Specifies how to render the input field of [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#readOnly) mode: as a disabled `<input>` element or as a `<div>` element with a non-editable question value within it.\n   */\n  readOnly: {\n    enableValidation: false,\n    commentRenderMode: \"textarea\",\n    textRenderMode: \"input\"\n  },\n\n  //#region readOnly section, Obsolete properties\n  get readOnlyCommentRenderMode(): string { return this.readOnly.commentRenderMode; },\n  set readOnlyCommentRenderMode(val: string) { this.readOnly.commentRenderMode = val; },\n  get readOnlyTextRenderMode(): string { return this.readOnly.textRenderMode; },\n  set readOnlyTextRenderMode(val: string) { this.readOnly.textRenderMode = val; },\n  //#endregion\n\n  /**\n   * An object with properties that configure question numbering.\n   *\n   * Nested properties:\n   *\n   * - `includeQuestionsWithHiddenNumber`: `boolean`\\\n   * Specifies whether to number questions whose [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property is disabled. Default value: `false`.\n   *\n   * - `includeQuestionsWithHiddenTitle`: `boolean`\\\n   * Specifies whether to number questions whose [`titleLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#titleLocation) property is set to `\"hidden\"`. Default value: `false`.\n   */\n  numbering: {\n    includeQuestionsWithHiddenNumber: false,\n    includeQuestionsWithHiddenTitle: false\n  },\n\n  //#region numbering section, Obsolete properties\n  get setQuestionVisibleIndexForHiddenTitle(): boolean { return this.numbering.includeQuestionsWithHiddenTitle; },\n  set setQuestionVisibleIndexForHiddenTitle(val: boolean) { this.numbering.includeQuestionsWithHiddenTitle = val; },\n  get setQuestionVisibleIndexForHiddenNumber(): boolean { return this.numbering.includeQuestionsWithHiddenNumber; },\n  set setQuestionVisibleIndexForHiddenNumber(val: boolean) { this.numbering.includeQuestionsWithHiddenNumber = val; },\n  //#endregion\n\n  /**\n   * Specifies an action to perform when users press the Enter key within a survey.\n   *\n   * Possible values:\n   *\n   * - `\"moveToNextEditor\"` - Moves focus to the next editor.\n   * - `\"loseFocus\"` - Removes focus from the current editor.\n   * - `\"default\"` - Behaves as a standard `<input>` element.\n   */\n  enterKeyAction: \"default\" as \"moveToNextEditor\" | \"loseFocus\" | \"default\",\n  /**\n   * An object that configures string comparison.\n   *\n   * Nested properties:\n   *\n   * - `trimStrings`: `boolean`\\\n   * Specifies whether to remove whitespace from both ends of a string before the comparison. Default value: `true`.\n   *\n   * - `caseSensitive`: `boolean`\\\n   * Specifies whether to differentiate between capital and lower-case letters. Default value: `false`.\n   */\n  comparator: {\n    trimStrings: true,\n    caseSensitive: false,\n    normalizeTextCallback: (str: string, reason: string): string => { return str; }\n  },\n  expressionDisableConversionChar: \"#\",\n  get commentPrefix(): string { return settings.commentSuffix; },\n  set commentPrefix(val: string) { settings.commentSuffix = val; },\n  /**\n   * A suffix added to the name of the property that stores comments.\n   *\n   * Default value: \"-Comment\"\n   *\n   * You can specify this setting for an individual survey: [`commentSuffix`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#commentSuffix).\n   */\n  commentSuffix: \"-Comment\",\n  /**\n   * A separator used in a shorthand notation that specifies a value and display text for an [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) object: `\"value|text\"`.\n   *\n   * Default value: `\"|\"`\n   * @see [settings.choicesSeparator](https://surveyjs.io/form-library/documentation/api-reference/settings#choicesSeparator)\n   */\n  itemValueSeparator: \"|\",\n  /**\n   * A maximum number of rate values in a [Rating](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) question.\n   *\n   * Default value: 20\n   */\n  ratingMaximumRateValueCount: 20,\n  /**\n   * Specifies whether to close the drop-down menu of a [Multi-Select Dropdown (Tag Box)](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) question after a user selects a value.\n   *\n   * This setting applies to all Multi-Select Dropdown questions on a web page. You can use the [`closeOnSelect`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model#closeOnSelect) property to specify the same setting for an individual Multi-Select Dropdown question.\n   */\n  tagboxCloseOnSelect: false,\n  /**\n   * A time interval in milliseconds between the last entered character and the beginning of search in [Single-](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/) and [Multi-Select Dropdown](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) questions. Applies only to questions with the [`choicesLazyLoadEnabled`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#choicesLazyLoadEnabled) property set to `true`.\n   *\n   * Default value: 500\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n   */\n  dropdownSearchDelay: 500,\n  /**\n   * A function used to display a custom confirmation dialog.\n   *\n   * This function is `undefined` by default. To enable a custom dialog, assign a function that returns `true` if the user confirms the action or `false` otherwise. For example, the following code uses the built-in `window.confirm()` method to open a confirmation dialog window:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.confirmActionAsync = (message) => {\n   *   return window.confirm(message);\n   * };\n   * ```\n   * @param message A message to display in the confirmation dialog.\n   */\n  confirmActionFunc: <(message: string)=> boolean>undefined,\n  /**\n   * A function that activates a proprietary SurveyJS confirmation dialog.\n   *\n   * Use the following code to execute this function:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.confirmActionAsync(\"Are you sure?\", (confirmed) => {\n   *   if (confirmed) {\n   *     // ...\n   *     // Proceed with the action\n   *     // ...\n   *   } else {\n   *     // ...\n   *     // Cancel the action\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * You can override the `confirmActionAsync` function if you want to display a custom dialog window asynchronously:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * async function confirmDialog(message) {\n   *   return new Promise((resolve) => {\n   *     // Implement an async dialog window here\n   *   });\n   * }\n   *\n   * settings.confirmActionAsync = (message, callback) => {\n   *   confirmDialog(message).then((result) => {\n   *     callback(result);\n   *   });\n   * };\n   * ```\n   * @param message A message to display in the confirmation dialog.\n   * @param callback A callback function that should be called with `true` if a user confirms an action or `false` otherwise.\n   */\n  confirmActionAsync: (message: string, callback: (res: boolean) => void, options?: IConfirmDialogOptions): void => {\n    showConfirmDialog(message, callback, options);\n  },\n  /**\n   * A minimum width value for all survey elements.\n   *\n   * Default value: `\"300px\"`\n   *\n   * You can override this setting for individual elements: [`minWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#minWidth).\n   */\n  minWidth: \"300px\",\n  /**\n   * A maximum width value for all survey elements.\n   *\n   * Default value: `\"100%\"`\n   *\n   * You can override this setting for individual elements: [`maxWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#maxWidth).\n   */\n  maxWidth: \"100%\",\n  /**\n   * Specifies how many times surveys can re-evaluate expressions when a question value changes. This limit helps avoid recursions in expressions.\n   *\n   * Default value: 10\n   */\n  maxConditionRunCountOnValueChanged: 10,\n  /**\n   * An object that configures notifications.\n   *\n   * Nested properties:\n   *\n   * - `lifetime`: `number`\\\n   * Specifies a time period during which a notification is displayed; measured in milliseconds. Default value: 2000.\n   */\n  notifications: {\n    lifetime: 2000\n  },\n  /**\n   * Specifies how many milliseconds a survey should wait before it automatically switches to the next page. Applies only when [auto-advance](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) is enabled.\n   *\n   * Default value: 300\n   */\n  autoAdvanceDelay: 300,\n  /**\n   * Specifies the direction in which to lay out Checkbox and Radio Button Group items. This setting affects the resulting UI when items are arranged in [more than one column](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#colCount).\n   *\n   * Possible values:\n   *\n   * - `\"column\"` (default) - Items fill the current column, then move on to the next column.\n   * - `\"row\"` - Items fill the current row, then move on to the next row.\n   */\n  itemFlowDirection: \"column\",\n  /**\n   * @deprecated Use the [`itemFlowDirection`](https://surveyjs.io/form-library/documentation/api-reference/settings#itemFlowDirection) property instead.\n   */\n  get showItemsInOrder(): string { return settings.itemFlowDirection; },\n  set showItemsInOrder(val: string) { settings.itemFlowDirection = val; },\n  /**\n   * A value to save in survey results when respondents select the \"None\" choice item.\n   *\n   * Default value: `\"none\"`\n   */\n  noneItemValue: \"none\",\n  /**\n   * A value to save in survey results when respondents select the \"Refuse to answer\" choice item.\n   *\n   * Default value: `\"refused\"`\n   */\n  refuseItemValue: \"refused\",\n  /**\n   * A value to save in survey results when respondents select the \"Don't know\" choice item.\n   *\n   * Default value: `\"dontknow\"`\n   */\n  dontKnowItemValue: \"dontknow\",\n  /**\n   * An object whose properties specify the order of the special choice items (\"None\", \"Other\", \"Select All\", \"Refuse to answer\", \"Don't know\") in select-based questions.\n   *\n   * Default value: `{ selectAllItem: [-1], noneItem: [1], refuseItem: [2], dontKnowItem: [3], otherItem: [4] }`\n   *\n   * Use this object to reorder special choices. Each property accepts an array of integer numbers. Negative numbers place a special choice item above regular choice items, positive numbers place it below them. For instance, the code below specifies the following order of choices: None, Select All, regular choices, Other.\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.specialChoicesOrder.noneItem = [-2];\n   * settings.specialChoicesOrder.selectAllItem = [-1];\n   * settings.specialChoicesOrder.otherItem = [1];\n   * ```\n   *\n   * If you want to duplicate a special choice item above and below other choices, add two numbers to the corresponding array:\n   *\n   * ```js\n   * settings.specialChoicesOrder.selectAllItem = [-1, 3] // Displays Select All above and below other choices\n   * ```\n   */\n  specialChoicesOrder: {\n    selectAllItem: [-1],\n    noneItem: [1],\n    refuseItem: [2],\n    dontKnowItem: [3],\n    otherItem: [4]\n  },\n  /**\n   * One or several characters used to separate choice options in a list.\n   *\n   * Default value: `\", \"`\n   * @see [settings.itemValueSeparator](https://surveyjs.io/form-library/documentation/api-reference/settings#itemValueSeparator)\n   */\n  choicesSeparator: \", \",\n  /**\n   * A list of supported validators by question type.\n   */\n  supportedValidators: {\n    question: [\"expression\"],\n    comment: [\"text\", \"regex\"],\n    text: [\"numeric\", \"text\", \"regex\", \"email\"],\n    checkbox: [\"answercount\"],\n    imagepicker: [\"answercount\"],\n  },\n  expressionVariables: {\n    question: \"self\",\n    matrix: \"matrix\",\n    composite: \"composite\",\n    item: \"item\",\n    choice: \"choice\",\n    row: \"row\",\n    totalRow: \"totalRow\",\n    rowIndex: \"rowIndex\",\n    visibleRowIndex: \"visibleRowIndex\",\n    rowValue: \"rowValue\",\n    rowName: \"rowName\",\n    rowTitle: \"rowTitle\",\n    panel: \"panel\",\n    parentPanel: \"parentPanel\",\n    panelIndex: \"panelIndex\",\n    visiblePanelIndex: \"visiblePanelIndex\",\n    unwrapPostfix: \"-unwrapped\"\n  },\n  /**\n   * Specifies a minimum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n   */\n  minDate: \"\",\n  /**\n   * Specifies a maximum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n   */\n  maxDate: \"\",\n  /**\n   * A method that displays a modal dialog.\n   *\n   * Parameters:\n   *\n   * - `options`: [`IDialogOptions`](https://surveyjs.io/form-library/documentation/api-reference/idialogoptions)\\\n   * An object that configures the dialog's content and behavior.\n   *\n   * - `rootElement?`: `HTMLElement`\\\n   * A DOM element where the dialog should be rendered. If not specified, the dialog is rendered into `document.body`.\n   *\n   * [View Demo](https://surveyjs.io/survey-creator/examples/add-modal-property-editor-to-property-grid/ (linkStyle))\n   */\n  showDialog: <(options: IDialogOptions, rootElement?: HTMLElement) => any>undefined,\n  showDefaultItemsInCreator: true,\n  /**\n   * An object that specifies icon replacements. Object keys are built-in icon names. To use a custom icon, assign its name to the key of the icon you want to replace:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.customIcons[\"icon-redo\"] = \"custom-redo-icon\";\n   * ```\n   *\n   * For more information about icons in SurveyJS, refer to the following help topic: [UI Icons](https://surveyjs.io/form-library/documentation/icons).\n   */\n  customIcons: {},\n  /**\n   * Specifies which part of a choice item responds to a drag gesture in Ranking questions.\n   *\n   * Possible values:\n   *\n   * - `\"entireItem\"` (default) - Users can use the entire choice item as a drag handle.\n   * - `\"icon\"` - Users can only use the choice item icon as a drag handle.\n   */\n  rankingDragHandleArea: \"entireItem\",\n\n  environment: defaultEnvironment,\n\n  /**\n   * Allows you to hide the maximum length indicator in text input questions.\n   *\n   * If you specify a question's [`maxLength`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maxLength) property or a survey's [`maxTextLength`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#maxTextLength) property, text input questions indicate the number of entered characters and the character limit. Assign `false` to the `settings.showMaxLengthIndicator` property if you want to hide this indicator.\n   *\n   * Default value: `true`\n   */\n  showMaxLengthIndicator: true,\n\n  /**\n   * Specifies whether to animate survey elements.\n   *\n   * Default value: `true`\n  */\n  animationEnabled: true,\n\n  /**\n   * An object that specifies HTML tags to use when rendering survey, page, panel, and question titles.\n   *\n   * Default value: `{ survey: \"div\", page: \"div\", panel: \"div\", question: \"div\" }`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-heading-levels/ (linkStyle))\n   *\n   * If you want to modify HTML tags for individual titles, handle `SurveyModel`'s [`onGetTitleTagName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetTitleTagName) event.\n   */\n  titleTags: {\n    survey: \"div\",\n    page: \"div\",\n    panel: \"div\",\n    question: \"div\",\n  },\n  questions: {\n    inputTypes: [\n      \"color\",\n      \"date\",\n      \"datetime-local\",\n      \"email\",\n      \"month\",\n      \"number\",\n      \"password\",\n      \"range\",\n      \"tel\",\n      \"text\",\n      \"time\",\n      \"url\",\n      \"week\",\n    ],\n    dataList: [\n      \"\",\n      \"name\",\n      \"honorific-prefix\",\n      \"given-name\",\n      \"additional-name\",\n      \"family-name\",\n      \"honorific-suffix\",\n      \"nickname\",\n      \"organization-title\",\n      \"username\",\n      \"new-password\",\n      \"current-password\",\n      \"organization\",\n      \"street-address\",\n      \"address-line1\",\n      \"address-line2\",\n      \"address-line3\",\n      \"address-level4\",\n      \"address-level3\",\n      \"address-level2\",\n      \"address-level1\",\n      \"country\",\n      \"country-name\",\n      \"postal-code\",\n      \"cc-name\",\n      \"cc-given-name\",\n      \"cc-additional-name\",\n      \"cc-family-name\",\n      \"cc-number\",\n      \"cc-exp\",\n      \"cc-exp-month\",\n      \"cc-exp-year\",\n      \"cc-csc\",\n      \"cc-type\",\n      \"transaction-currency\",\n      \"transaction-amount\",\n      \"language\",\n      \"bday\",\n      \"bday-day\",\n      \"bday-month\",\n      \"bday-year\",\n      \"sex\",\n      \"url\",\n      \"photo\",\n      \"tel\",\n      \"tel-country-code\",\n      \"tel-national\",\n      \"tel-area-code\",\n      \"tel-local\",\n      \"tel-local-prefix\",\n      \"tel-local-suffix\",\n      \"tel-extension\",\n      \"email\",\n      \"impp\",\n    ]\n  },\n  legacyProgressBarView: false,\n  /**\n   * An object with properties that configure input masks.\n   *\n   * Nested properties:\n   *\n   * - `patternPlaceholderChar`: `string`\\\n   * A symbol used as a placeholder for characters to be entered in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"_\"`.\n   *\n   * - `patternEscapeChar`: `string`\\\n   * A symbol used to insert literal representations of special characters in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"\\\\\"`.\n   *\n   * - `patternDefinitions`: `<{ [key: string]: RegExp }>`\\\n   * An object that maps placeholder symbols to regular expressions in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `{ \"9\": /[0-9]/, \"a\": /[a-zA-Z]/, \"#\": /[a-zA-Z0-9]/ }`.\n   */\n  maskSettings: {\n    patternPlaceholderChar: \"_\",\n    patternEscapeChar: \"\\\\\",\n    patternDefinitions: <{ [key: string]: RegExp }>{\n      \"9\": /[0-9]/,\n      \"a\": /[a-zA-Z]/,\n      \"#\": /[a-zA-Z0-9]/\n    }\n  },\n  /**\n   * Specifies whether to store date-time values in the following format: `\"YYYY-MM-DDThh:mm:ss.sssZ\"`. Applies only to form fields with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"datetime-local\"`.\n   *\n   * Default value: `false`\n   *\n   * If you enable this setting, date-time values are converted from local time to UTC when they are saved to the survey's [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) object, while the question values remain in local time. Therefore, when you specify default values using a question's [`defaultValue`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#defaultValue) property, you need to use local time, but if you specify them using the `data` object, use a UTC date-time value in the following format: `\"YYYY-MM-DDThh:mm:ss.sssZ\"`.\n   *\n   * ```js\n   * const surveyJson = {\n   *   \"elements\": [{\n   *     \"name\": \"datetime\",\n   *     \"type\": \"text\",\n   *     \"title\": \"Select a date and time\",\n   *     \"inputType\": \"datetime-local\",\n   *     \"defaultValue\": \"2024-07-16T12:15:00\" // Local date-time value\n   *   }]\n   * }\n   * ```\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   * const surveyJson = { ... }\n   * const survey = new Model(surveyJson);\n   *\n   * survey.data = {\n   *   datetime: \"2024-07-16T12:15:00.000Z\" // UTC date-time value\n   * }\n   * ```\n   */\n  storeUtcDates: false,\n  // @param reason \"function-[functionname]\", \"question-[questionname]\", \"expression-operand\"\n  onDateCreated: (newDate: Date, reason: string, val?: number | string | Date): Date => {\n    return newDate;\n  },\n  /**\n   * A function that allows you to define custom parsing rules for numbers represented as string values.\n   *\n   * The following code shows a template that you can use to implement the `parseNumber` function:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.parseNumber = (stringValue, numericValue) => {\n   *   if (typeof stringValue !== \"string\" || !stringValue)\n   *     return numericValue;\n   *   let parsedNumber = numericValue;\n   *   // ...\n   *   // Parsing the number according to custom parsing rules\n   *   // ...\n   *   return parsedNumber;\n   * };\n   * ```\n   * @param stringValue A number represented as a string value.\n   * @param numericValue A number parsed using a default parsing function. `NaN` if the original string is not a number.\n   * @returns A number that results from parsing the string value.\n   * @see [settings.serialization](https://surveyjs.io/form-library/documentation/api-reference/settings#serialization)\n   */\n  parseNumber: (stringValue: any, numericValue: number): number => { return numericValue; },\n};", "import { ISurveyErrorOwner } from \"./base-interfaces\";\r\nimport { LocalizableString } from \"./localizablestring\";\r\nimport { getLocaleString } from \"./surveyStrings\";\r\n\r\nexport class SurveyError {\r\n  private locTextValue: LocalizableString;\r\n  public visible: boolean = true;\r\n  constructor(\r\n    public text: string = null,\r\n    protected errorOwner: ISurveyErrorOwner = null\r\n  ) { }\r\n  public equals(error: SurveyError): boolean {\r\n    if (!error || !error.getErrorType) return false;\r\n    if (this.getErrorType() !== error.getErrorType()) return false;\r\n    return this.text === error.text && this.visible === error.visible;\r\n  }\r\n  public get locText(): LocalizableString {\r\n    if (!this.locTextValue) {\r\n      this.locTextValue = new LocalizableString(this.errorOwner, true);\r\n      this.locTextValue.storeDefaultText = true;\r\n      this.locTextValue.text = this.getText();\r\n    }\r\n    return this.locTextValue;\r\n  }\r\n\r\n  public getText(): string {\r\n    var res = this.text;\r\n    if (!res) res = this.getDefaultText();\r\n    if (!!this.errorOwner) {\r\n      res = this.errorOwner.getErrorCustomText(res, this);\r\n    }\r\n    return res;\r\n  }\r\n  public getErrorType(): string {\r\n    return \"base\";\r\n  }\r\n  protected getDefaultText(): string {\r\n    return \"\";\r\n  }\r\n  protected getLocale(): string {\r\n    return !!this.errorOwner ? this.errorOwner.getLocale() : \"\";\r\n  }\r\n  protected getLocalizationString(locStrName: string): string {\r\n    return getLocaleString(locStrName, this.getLocale());\r\n  }\r\n  public onUpdateErrorTextCallback: (error: SurveyError) => void = undefined;\r\n  public updateText(): void {\r\n    if (this.onUpdateErrorTextCallback) {\r\n      this.onUpdateErrorTextCallback(this);\r\n    }\r\n    this.locText.text = this.getText();\r\n  }\r\n}\r\n", "import { SurveyError } from \"./survey-error\";\nimport { ISurveyErrorOwner } from \"./base-interfaces\";\n\nexport class AnswerRequiredError extends SurveyError {\n  constructor(\n    public text: string = null,\n    errorOwner: ISurveyErrorOwner = null\n  ) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"required\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"requiredError\");\n  }\n}\nexport class OneAnswerRequiredError extends SurveyError {\n  constructor(\n    public text: string = null,\n    errorOwner: ISurveyErrorOwner = null\n  ) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"requireoneanswer\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"requiredErrorInPanel\");\n  }\n}\nexport class RequreNumericError extends SurveyError {\n  constructor(\n    public text: string = null,\n    errorOwner: ISurveyErrorOwner = null\n  ) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"requirenumeric\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"numericError\");\n  }\n}\nexport class ExceedSizeError extends SurveyError {\n  constructor(private maxSize: number, errorOwner: ISurveyErrorOwner = null) {\n    super(null, errorOwner);\n    this.locText.text = this.getText();\n  }\n  public getErrorType(): string {\n    return \"exceedsize\";\n  }\n  public getDefaultText(): string {\n    return (<any>this.getLocalizationString(\"exceedMaxSize\"))[\"format\"](this.getTextSize());\n  }\n  private getTextSize() {\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    var fixed = [0, 0, 2, 3, 3];\n    if (this.maxSize === 0) {\n      return \"0 Byte\";\n    }\n    var i = Math.floor(Math.log(this.maxSize) / Math.log(1024));\n    var value = this.maxSize / Math.pow(1024, i);\n    return value.toFixed(fixed[i]) + \" \" + sizes[i];\n  }\n}\nexport class WebRequestError extends SurveyError {\n  constructor(\n    public status: string,\n    public response: string,\n    errorOwner: ISurveyErrorOwner = null\n  ) {\n    super(null, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"webrequest\";\n  }\n  protected getDefaultText(): string {\n    const str: any = this.getLocalizationString(\"urlRequestError\");\n    return !!str ? str[\"format\"](this.status, this.response) : \"\";\n  }\n}\nexport class WebRequestEmptyError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"webrequestempty\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"urlGetChoicesError\");\n  }\n}\nexport class OtherEmptyError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"otherempty\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"otherRequiredError\");\n  }\n}\nexport class UploadingFileError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"uploadingfile\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"uploadingFile\");\n  }\n}\nexport class RequiredInAllRowsError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"requiredinallrowserror\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"requiredInAllRowsError\");\n  }\n}\nexport class EachRowUniqueError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"eachrowuniqueeerror\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"eachRowUniqueError\");\n  }\n}\nexport class MinRowCountError extends SurveyError {\n  constructor(\n    public minRowCount: number,\n    errorOwner: ISurveyErrorOwner = null\n  ) {\n    super(null, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"minrowcounterror\";\n  }\n  protected getDefaultText(): string {\n    return (<any>this.getLocalizationString(\"minRowCountError\"))[\"format\"](this.minRowCount);\n  }\n}\nexport class KeyDuplicationError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"keyduplicationerror\";\n  }\n  protected getDefaultText(): string {\n    return this.getLocalizationString(\"keyDuplicationError\");\n  }\n}\nexport class CustomError extends SurveyError {\n  constructor(public text: string, errorOwner: ISurveyErrorOwner = null) {\n    super(text, errorOwner);\n  }\n  public getErrorType(): string {\n    return \"custom\";\n  }\n}\n", "import { Base } from \"./base\";\nimport { ISurveyErrorOwner, ISurvey, IElement, IQuestion } from \"./base-interfaces\";\nimport { SurveyError } from \"./survey-error\";\nimport { CustomError, RequreNumericError } from \"./error\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { Serializer } from \"./jsonobject\";\nimport { ConditionRunner } from \"./conditions\";\nimport { HashTable, Helpers } from \"./helpers\";\nimport { IValueGetterContext } from \"./conditionProcessValue\";\n\nexport class AsyncElementsRunner {\n  private asyncElements: HashTable<boolean> = {};\n  private isRunningValue: boolean;\n  constructor (private onCompleted: () => void) {\n    this.isRunningValue = true;\n  }\n  public addElement(id: string) {\n    this.asyncElements[id] = true;\n  }\n  public removeElement(id: string) {\n    delete this.asyncElements[id];\n    this.tryComplete();\n  }\n  public finish(): void {\n    this.isRunningValue = false;\n    this.tryComplete();\n  }\n  public get isRunning(): boolean {\n    return this.isRunningValue || Object.keys(this.asyncElements).length > 0;\n  }\n  protected doCompleted() {\n    if (this.onCompleted) {\n      this.onCompleted();\n    }\n  }\n  private tryComplete(): void {\n    if (!this.isRunning) {\n      this.doCompleted();\n    }\n  }\n}\nexport class ValidatorResult {\n  constructor(public value: any, public error: SurveyError = null) {}\n}\n/**\n * A base class for all classes that implement validators.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class SurveyValidator extends Base {\n  private static idCounter = 0;\n  private idValue: string = \"svd\" + SurveyValidator.idCounter++;\n  public errorOwner: ISurveyErrorOwner;\n  constructor() {\n    super();\n    this.createLocalizableString(\"text\", this, true);\n  }\n  public get id(): string { return this.idValue; }\n  public get isValidator(): boolean { return true; }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.errorOwner && !!(<any>this.errorOwner)[\"getSurvey\"]\n      ? (<any>this.errorOwner).getSurvey()\n      : null;\n  }\n  /**\n   * An error message to display when a value fails validation.\n   */\n  public get text(): string {\n    return this.getLocalizableStringText(\"text\");\n  }\n  public set text(value: string) {\n    this.setLocalizableStringText(\"text\", value);\n  }\n  public get isValidateAllValues() {\n    return false;\n  }\n  get locText(): LocalizableString {\n    return this.getLocalizableString(\"text\");\n  }\n  protected getErrorText(name: string): string {\n    if (this.text) return this.text;\n    return this.getDefaultErrorText(name);\n  }\n  protected getDefaultErrorText(name: string): string {\n    return \"\";\n  }\n  public validateOnCallback(value: any, callback: (res: ValidatorResult) => void, name?: string, properties?: any): ValidatorResult {\n    const res = this.validate(value, name, properties);\n    if (res !== undefined && callback) callback(res);\n    return res;\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    return null;\n  }\n  getLocale(): string {\n    return !!this.errorOwner ? this.errorOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text: string, name: string, item?: any): string {\n    return !!this.errorOwner\n      ? this.errorOwner.getMarkdownHtml(text, name, item)\n      : undefined;\n  }\n  getRenderer(name: string): string {\n    return !!this.errorOwner ? this.errorOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr: LocalizableString): any {\n    return !!this.errorOwner ? this.errorOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text: string): string {\n    return !!this.errorOwner ? this.errorOwner.getProcessedText(text) : text;\n  }\n  protected createCustomError(name: string): SurveyError {\n    const err = new CustomError(this.getErrorText(name), this.errorOwner);\n    err.onUpdateErrorTextCallback = (err => err.text = this.getErrorText(name));\n    return err;\n  }\n  public toString(): string {\n    var res = this.getType().replace(\"validator\", \"\");\n    if (!!this.text) {\n      res += \", \" + this.text;\n    }\n    return res;\n  }\n}\nexport interface IValidatorOwner {\n  getValidators(): Array<SurveyValidator>;\n  validatedValue: any;\n  getValidatorTitle(): string;\n  getDataFilteredProperties(): any;\n}\nexport class ValidatorRunner {\n  public onAsyncCompleted: (errors: Array<SurveyError>) => void;\n\n  public run(owner: IValidatorOwner): Array<SurveyError> {\n    const validators = owner.getValidators();\n    const errors = new Array<SurveyError>();\n    const asyncRunner = new AsyncElementsRunner(() => {\n      if (this.onAsyncCompleted) {\n        this.onAsyncCompleted(errors);\n      }\n    });\n    if (validators.length > 0) {\n      const properties = owner.getDataFilteredProperties();\n      const value = owner.validatedValue;\n      const title = owner.getValidatorTitle();\n      validators.forEach(validator => {\n        asyncRunner.addElement(validator.id);\n        validator.validateOnCallback(value, (valRes: ValidatorResult): void => {\n          if (!!valRes && !!valRes.error) {\n            errors.push(valRes.error);\n          }\n          asyncRunner.removeElement(validator.id);\n        }, title, properties);\n      });\n    }\n    const res = [].concat(...errors);\n    errors.length = 0;\n    asyncRunner.finish();\n    return res;\n  }\n}\n/**\n * A class that implements a validator for numeric values.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class NumericValidator extends SurveyValidator {\n  constructor(minValue: number = null, maxValue: number = null) {\n    super();\n    this.minValue = minValue;\n    this.maxValue = maxValue;\n  }\n  public getType(): string {\n    return \"numericvalidator\";\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    if (this.isValueEmpty(value)) return null;\n    if (!Helpers.isNumber(value)) {\n      return new ValidatorResult(\n        null,\n        new RequreNumericError(this.text, this.errorOwner)\n      );\n    }\n    const result = new ValidatorResult(Helpers.getNumber(value));\n    if (this.minValue !== null && this.minValue > result.value) {\n      result.error = this.createCustomError(name);\n      return result;\n    }\n    if (this.maxValue !== null && this.maxValue < result.value) {\n      result.error = this.createCustomError(name);\n      return result;\n    }\n    return typeof value === \"number\" ? null : result;\n  }\n  protected getDefaultErrorText(name: string) {\n    var vName = name ? name : this.getLocalizationString(\"value\");\n    if (this.minValue !== null && this.maxValue !== null) {\n      return this.getLocalizationFormatString(\"numericMinMax\",\n        vName, this.minValue, this.maxValue);\n    } else {\n      if (this.minValue !== null) {\n        return this.getLocalizationFormatString(\"numericMin\", vName, this.minValue);\n      }\n      return this.getLocalizationFormatString(\"numericMax\", vName, this.maxValue);\n    }\n  }\n  /**\n   * A minimum allowed numeric value.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get minValue(): number {\n    return this.getPropertyValue(\"minValue\");\n  }\n  public set minValue(val: number) {\n    this.setPropertyValue(\"minValue\", val);\n  }\n  /**\n   * A maximum allowed numeric value.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get maxValue(): number {\n    return this.getPropertyValue(\"maxValue\");\n  }\n  public set maxValue(val: number) {\n    this.setPropertyValue(\"maxValue\", val);\n  }\n}\n/**\n * A class that implements a validator for text values.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class TextValidator extends SurveyValidator {\n  constructor(\n  ) {\n    super();\n  }\n  public getType(): string {\n    return \"textvalidator\";\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    if (this.isValueEmpty(value)) return null;\n    if (!this.allowDigits) {\n      var reg = /\\d+$/;\n      if (reg.test(value)) {\n        return new ValidatorResult(null, this.createCustomError(\"textNoDigitsAllow\"));\n      }\n    }\n    if (this.minLength > 0 && value.length < this.minLength) {\n      return new ValidatorResult(null, this.createCustomError(name));\n    }\n    if (this.maxLength > 0 && value.length > this.maxLength) {\n      return new ValidatorResult(null, this.createCustomError(name));\n    }\n    return null;\n  }\n  protected getDefaultErrorText(name: string): string {\n    if (name === \"textNoDigitsAllow\") return this.getLocalizationString(name);\n    if (this.minLength > 0 && this.maxLength > 0)\n      return this.getLocalizationFormatString(\"textMinMaxLength\", this.minLength, this.maxLength);\n    if (this.minLength > 0)\n      return this.getLocalizationFormatString(\"textMinLength\", this.minLength);\n    return this.getLocalizationFormatString(\"textMaxLength\", this.maxLength);\n  }\n  /**\n   * The minimum length of a text value measured in characters.\n   *\n   * Default value: 0\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get minLength(): number {\n    return this.getPropertyValue(\"minLength\");\n  }\n  public set minLength(val: number) {\n    this.setPropertyValue(\"minLength\", val);\n  }\n  /**\n   * The maximum length of a text value measured in characters.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get maxLength(): number {\n    return this.getPropertyValue(\"maxLength\");\n  }\n  public set maxLength(val: number) {\n    this.setPropertyValue(\"maxLength\", val);\n  }\n  /**\n   * Specifies whether a text value can include numerical digits.\n   *\n   * Default value: `true`\n   */\n  public get allowDigits(): boolean {\n    return this.getPropertyValue(\"allowDigits\");\n  }\n  public set allowDigits(val: boolean) {\n    this.setPropertyValue(\"allowDigits\", val);\n  }\n}\n\n/**\n * A class that implements answer count validation in the question types that can have multiple values (for instance, [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class AnswerCountValidator extends SurveyValidator {\n  constructor(minCount: number = null, maxCount: number = null) {\n    super();\n    this.minCount = minCount;\n    this.maxCount = maxCount;\n  }\n  public getType(): string {\n    return \"answercountvalidator\";\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    if (value == null || value.constructor != Array) return null;\n    var count = value.length;\n    if (count == 0) return null;\n    if (this.minCount && count < this.minCount) {\n      return new ValidatorResult(\n        null,\n        this.createCustomError(\n          this.getLocalizationFormatString(\"minSelectError\", this.minCount)));\n    }\n    if (this.maxCount && count > this.maxCount) {\n      return new ValidatorResult(\n        null,\n        this.createCustomError(\n          this.getLocalizationFormatString(\"maxSelectError\", this.maxCount)\n        )\n      );\n    }\n    return null;\n  }\n  protected getDefaultErrorText(name: string) {\n    return name;\n  }\n  /**\n   * A minimum number of selected answers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get minCount(): number {\n    return this.getPropertyValue(\"minCount\");\n  }\n  public set minCount(val: number) {\n    this.setPropertyValue(\"minCount\", val);\n  }\n  /**\n   * A maximum number of selected answers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get maxCount(): number {\n    return this.getPropertyValue(\"maxCount\");\n  }\n  public set maxCount(val: number) {\n    this.setPropertyValue(\"maxCount\", val);\n  }\n}\n/**\n * A class that implements validation using regular expressions.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class RegexValidator extends SurveyValidator {\n  constructor(regex: string = null) {\n    super();\n    this.regex = regex;\n  }\n  public getType(): string {\n    return \"regexvalidator\";\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    if (!this.regex || this.isValueEmpty(value)) return null;\n    const re = this.createRegExp();\n    if (Array.isArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        const res = this.hasError(re, value[i], name);\n        if (res) return res;\n      }\n    }\n    return this.hasError(re, value, name);\n  }\n  private hasError(re: RegExp, value: any, name: string): ValidatorResult {\n    if (re.test(value)) return null;\n    return new ValidatorResult(value, this.createCustomError(name));\n  }\n  /**\n   * A regular expression used to validate values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get regex(): string {\n    return this.getPropertyValue(\"regex\");\n  }\n  public set regex(val: string) {\n    this.setPropertyValue(\"regex\", val);\n  }\n  /**\n   * Specifies whether uppercase and lowercase letters must be treated as distinct or equivalent when validating values.\n   *\n   * Default value: `false` (uppercase and lowercase letters are treated as distinct)\n   */\n  public get caseInsensitive(): boolean {\n    return this.getPropertyValue(\"caseInsensitive\");\n  }\n  public set caseInsensitive(val: boolean) {\n    this.setPropertyValue(\"caseInsensitive\", val);\n  }\n  public get insensitive(): boolean { return this.caseInsensitive; }\n  public set insensitive(val: boolean) {\n    this.caseInsensitive = val;\n  }\n  private createRegExp(): RegExp {\n    return new RegExp(this.regex, this.caseInsensitive ? \"i\" : \"\");\n  }\n}\n/**\n * A class that implements a validator for e-mail addresses.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class EmailValidator extends SurveyValidator {\n  private re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()=[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()=[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"emailvalidator\";\n  }\n  public validate(value: any, name?: string, properties?: any): ValidatorResult {\n    if (!value) return null;\n    if (this.re.test(value)) return null;\n    return new ValidatorResult(value, this.createCustomError(name));\n  }\n  protected getDefaultErrorText(name: string): string {\n    return this.getLocalizationString(\"invalidEmail\");\n  }\n}\n\n/**\n * A class that implements validation using [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nexport class ExpressionValidator extends SurveyValidator {\n  private conditionRunner: ConditionRunner = null;\n  constructor(expression: string = null) {\n    super();\n    this.expression = expression;\n  }\n  public getType(): string {\n    return \"expressionvalidator\";\n  }\n  public get isValidateAllValues(): boolean {\n    return true;\n  }\n  public validateOnCallback(value: any, callback: (res: ValidatorResult) => void, name?: string, properties?: any): ValidatorResult {\n    if (!!this.conditionRunner) {\n      this.conditionRunner.onRunComplete = null;\n    }\n    if (!this.ensureConditionRunner()) return null;\n    let errorResult: ValidatorResult = null;\n    const doCallBack = (res: boolean) => {\n      errorResult = this.generateError(res, value, name);\n      !!callback && callback(errorResult);\n    };\n    this.conditionRunner.onRunComplete = (res) => {\n      doCallBack(res);\n    };\n    if (!this.conditionRunner.canRun()) {\n      doCallBack(res);\n      return errorResult;\n    }\n    var res = this.conditionRunner.runContext(this.getValueGetterContext(), this.getPropertiesCopy(properties, \"expression\"));\n    return errorResult || this.generateError(res, value, name);\n  }\n  protected generateError(res: boolean, value: any, name: string): ValidatorResult {\n    if (!res) {\n      return new ValidatorResult(value, this.createCustomError(name));\n    }\n    return null;\n  }\n  protected getDefaultErrorText(name: string): string {\n    return this.getLocalizationFormatString(\"invalidExpression\", this.expression);\n  }\n  private ensureConditionRunner(): boolean {\n    const expression = this.getExpressionFromSurvey(\"expression\");\n    if (!expression) return false;\n    this.conditionRunner = new ConditionRunner(expression);\n    return true;\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `false`, validation fails.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  public get expression(): string {\n    return this.getPropertyValue(\"expression\");\n  }\n  public set expression(val: string) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    const owner = <any>this.errorOwner;\n    if (!!owner && !!owner.getValueGetterContext) return owner.getValueGetterContext();\n    return super.getValueGetterContext();\n  }\n}\n\nSerializer.addClass(\"surveyvalidator\", [\n  { name: \"text\", serializationProperty: \"locText\" },\n]);\nSerializer.addClass(\n  \"numericvalidator\",\n  [\"minValue:number\", \"maxValue:number\"],\n  function() {\n    return new NumericValidator();\n  },\n  \"surveyvalidator\"\n);\nSerializer.addClass(\n  \"textvalidator\",\n  [{ name: \"minLength:number\", default: 0 },\n    { name: \"maxLength:number\", default: 0 },\n    { name: \"allowDigits:boolean\", default: true }],\n  function() {\n    return new TextValidator();\n  },\n  \"surveyvalidator\"\n);\nSerializer.addClass(\n  \"answercountvalidator\",\n  [\"minCount:number\", \"maxCount:number\"],\n  function() {\n    return new AnswerCountValidator();\n  },\n  \"surveyvalidator\"\n);\nSerializer.addClass(\n  \"regexvalidator\",\n  [\"regex\", { name: \"caseInsensitive:boolean\", alternativeName: \"insensitive\" }],\n  function() {\n    return new RegexValidator();\n  },\n  \"surveyvalidator\"\n);\nSerializer.addClass(\n  \"emailvalidator\",\n  [],\n  function() {\n    return new EmailValidator();\n  },\n  \"surveyvalidator\"\n);\n\nSerializer.addClass(\n  \"expressionvalidator\",\n  [\"expression:condition\"],\n  function() {\n    return new ExpressionValidator();\n  },\n  \"surveyvalidator\"\n);\n", "import { Base, Event } from \"./base\";\nimport { IQuestion } from \"./base-interfaces\";\n\nexport class QuestionCustomWidget {\n  public htmlTemplate: string;\n\n  constructor(public name: string, public widgetJson: any) {\n    this.htmlTemplate = widgetJson.htmlTemplate ? widgetJson.htmlTemplate : \"\";\n  }\n  public afterRender(question: IQuestion, el: any) {\n    if (!this.widgetJson.afterRender) return;\n    (<any>question).localeChangedCallback = () => {\n      if (this.widgetJson.willUnmount) {\n        this.widgetJson.willUnmount(question, el);\n      }\n      this.widgetJson.afterRender(question, el);\n    };\n    this.widgetJson.afterRender(question, el);\n  }\n  public willUnmount(question: IQuestion, el: any) {\n    if (this.widgetJson.willUnmount)this.widgetJson.willUnmount(question, el);\n  }\n  public getDisplayValue(question: IQuestion, value: any = undefined): string {\n    if (this.widgetJson.getDisplayValue)\n      return this.widgetJson.getDisplayValue(question, value);\n    return null;\n  }\n  public validate(question: IQuestion): string {\n    if (this.widgetJson.validate)\n      return this.widgetJson.validate(question);\n    return undefined;\n  }\n  public isFit(question: IQuestion): boolean {\n    if (this.isLibraryLoaded() && this.widgetJson.isFit)\n      return this.widgetJson.isFit(question);\n    return false;\n  }\n  public get canShowInToolbox(): boolean {\n    if (this.widgetJson.showInToolbox === false) return false;\n    if (\n      CustomWidgetCollection.Instance.getActivatedBy(this.name) != \"customtype\"\n    )\n      return false;\n    return !this.widgetJson.widgetIsLoaded || this.widgetJson.widgetIsLoaded();\n  }\n  public get showInToolbox(): boolean {\n    return this.widgetJson.showInToolbox !== false;\n  }\n  public set showInToolbox(val: boolean) {\n    this.widgetJson.showInToolbox = val;\n  }\n  public init() {\n    if (this.widgetJson.init) {\n      this.widgetJson.init();\n    }\n  }\n  public activatedByChanged(activatedBy: string) {\n    if (this.isLibraryLoaded() && this.widgetJson.activatedByChanged) {\n      this.widgetJson.activatedByChanged(activatedBy);\n    }\n  }\n  private isLibraryLoaded(): boolean {\n    if (this.widgetJson.widgetIsLoaded)\n      return this.widgetJson.widgetIsLoaded() == true;\n    return true;\n  }\n  public get isDefaultRender(): boolean {\n    return this.widgetJson.isDefaultRender;\n  }\n  public get pdfQuestionType(): string {\n    return this.widgetJson.pdfQuestionType;\n  }\n  public get pdfRender() {\n    return this.widgetJson.pdfRender;\n  }\n}\n\nexport class CustomWidgetCollection {\n  public static Instance: CustomWidgetCollection = new CustomWidgetCollection();\n  private widgetsValues: Array<QuestionCustomWidget> = [];\n  private widgetsActivatedBy = {};\n\n  public onCustomWidgetAdded: Event<\n    (customWidget: QuestionCustomWidget) => any,\n    QuestionCustomWidget,\n    any\n  > = new Event<(customWidget: QuestionCustomWidget) => any, QuestionCustomWidget, any>();\n\n  public get widgets(): Array<QuestionCustomWidget> {\n    return this.widgetsValues;\n  }\n  public add(widgetJson: any, activatedBy: string = \"property\") {\n    this.addCustomWidget(widgetJson, activatedBy);\n  }\n  public addCustomWidget(\n    widgetJson: any,\n    activatedBy: string = \"property\"\n  ): QuestionCustomWidget {\n    var name = widgetJson.name;\n    if (!name) {\n      name = \"widget_\" + this.widgets.length + 1;\n    }\n    var customWidget = new QuestionCustomWidget(name, widgetJson);\n    this.widgetsValues.push(customWidget);\n    customWidget.init();\n    (<any>this).widgetsActivatedBy[name] = activatedBy;\n    customWidget.activatedByChanged(activatedBy);\n    this.onCustomWidgetAdded.fire(customWidget, null);\n    return customWidget;\n  }\n  /**\n   * Returns the way the custom wiget is activated. It can be activated by a property (\"property\"), question type (\"type\") or by new/custom question type (\"customtype\").\n   * @param widgetName the custom widget name\n   * @see setActivatedBy\n   */\n  public getActivatedBy(widgetName: string): string {\n    var res = (<any>this).widgetsActivatedBy[widgetName];\n    return res ? res : \"property\";\n  }\n  /**\n   * Sets the way the custom wiget is activated. The activation types are: property (\"property\"), question type (\"type\") or new/custom question type (\"customtype\"). A custom wiget may support all or only some of this activation types.\n   * @param widgetName\n   * @param activatedBy there are three possible variants: \"property\", \"type\" and \"customtype\"\n   */\n  public setActivatedBy(widgetName: string, activatedBy: string) {\n    if (!widgetName || !activatedBy) return;\n    var widget = this.getCustomWidgetByName(widgetName);\n    if (!widget) return;\n    (<any>this).widgetsActivatedBy[widgetName] = activatedBy;\n    widget.activatedByChanged(activatedBy);\n  }\n  public clear() {\n    this.widgetsValues = [];\n  }\n  public getCustomWidgetByName(name: string): QuestionCustomWidget {\n    for (var i = 0; i < this.widgets.length; i++) {\n      if (this.widgets[i].name == name) return this.widgets[i];\n    }\n    return null;\n  }\n  public getCustomWidget(question: IQuestion): QuestionCustomWidget {\n    for (var i = 0; i < this.widgetsValues.length; i++) {\n      if (this.widgetsValues[i].isFit(question)) return this.widgetsValues[i];\n    }\n    return null;\n  }\n}\n", "import { Question } from \"./question\";\n\nexport class RendererFactory {\n  public static Instance: RendererFactory = new RendererFactory();\n\n  private renderersHash: {\n    [questionType: string]: { [renderAs: string]: any },\n  } = {};\n  private defaultHash: { [questionType: string]: string } = {};\n\n  public unregisterRenderer(questionType: string, rendererAs: string): void {\n    delete this.renderersHash[questionType][rendererAs];\n    if (this.defaultHash[questionType] === rendererAs) {\n      delete this.defaultHash[questionType];\n    }\n  }\n\n  public registerRenderer(questionType: string, renderAs: string, renderer: any, useAsDefault: boolean = false): void {\n    if (!this.renderersHash[questionType]) {\n      this.renderersHash[questionType] = {};\n    }\n    this.renderersHash[questionType][renderAs] = renderer;\n    if (useAsDefault) {\n      this.defaultHash[questionType] = renderAs;\n    }\n  }\n\n  public getRenderer(questionType: string, renderAs: string): string {\n    const qHash = this.renderersHash[questionType];\n    if (!!qHash) {\n      if (!!renderAs && qHash[renderAs]) return qHash[renderAs];\n      const dVal = this.defaultHash[questionType];\n      if (!!dVal && qHash[dVal]) return qHash[dVal];\n    }\n    return \"default\";\n  }\n\n  public getRendererByQuestion(question: Question): any {\n    return this.getRenderer(question.getType(), question.renderAs);\n  }\n  public clear(): void {\n    this.renderersHash = {};\n  }\n}\n", "import { increaseHeightByContent } from \"./utils\";\nimport { Question } from \"../question\";\n\nexport interface ITextArea {\n  question: any;\n  id: () => string;\n  propertyNames: Array<string>;\n  className: () => string;\n  isDisabledAttr: () => boolean;\n  isReadOnlyAttr?: () => boolean;\n  placeholder: () => string;\n  autoGrow: () => boolean;\n  maxLength: () => number;\n  rows: () => number;\n  cols?: () => number;\n  getTextValue?: () => any;\n  onTextAreaChange?: (event: any) => void;\n  onTextAreaInput?: (event: any) => void;\n  onTextAreaKeyDown?: (event: any) => void;\n  onTextAreaBlur?: (event: any) => void;\n  onTextAreaFocus?: (event: any) => void;\n\n  ariaRequired: () => \"true\" | \"false\";\n  ariaLabel: () => string;\n  ariaInvalid?: () => \"true\" | \"false\";\n  ariaLabelledBy?: () => string;\n  ariaDescribedBy?: () => string;\n  ariaErrormessage?: () => string;\n}\n\nexport class TextAreaModel {\n  private element: HTMLTextAreaElement;\n\n  public updateElement(): void {\n    if (this.element && this.autoGrow) {\n      setTimeout(() => increaseHeightByContent(this.element), 1);\n    }\n  }\n\n  private onPropertyChangedCallback = () => {\n    if (this.element) {\n      this.element.value = this.getTextValue();\n      this.updateElement();\n    }\n  };\n\n  constructor(private options: ITextArea) {\n    this.question.registerFunctionOnPropertiesValueChanged(this.options.propertyNames, this.onPropertyChangedCallback, \"__textarea\");\n  }\n\n  public setElement(element: HTMLTextAreaElement | null): void {\n    if (!!element) {\n      this.element = element;\n      this.updateElement();\n    }\n  }\n  public resetElement(): void {\n    this.element = undefined as any;\n  }\n\n  public getTextValue(): string {\n    if (!!this.options.getTextValue)\n      return this.options.getTextValue() || \"\";\n    return \"\";\n  }\n  public onTextAreaChange(event: any): void {\n    if (!!this.options.onTextAreaChange)\n      this.options.onTextAreaChange(event);\n  }\n  public onTextAreaInput(event: any): void {\n    if (!!this.options.onTextAreaInput)\n      this.options.onTextAreaInput(event);\n\n    if (this.element && this.autoGrow) {\n      increaseHeightByContent(this.element);\n    }\n  }\n  public onTextAreaKeyDown(event: any): void {\n    if (!!this.options.onTextAreaKeyDown)\n      this.options.onTextAreaKeyDown(event);\n  }\n  public onTextAreaBlur(event: any): void {\n    this.onTextAreaChange(event);\n    if (!!this.options.onTextAreaBlur)\n      this.options.onTextAreaBlur(event);\n  }\n  public onTextAreaFocus(event: any): void {\n    if (!!this.options.onTextAreaFocus)\n      this.options.onTextAreaFocus(event);\n    if (this.isReadOnlyAttr) {\n      event?.target?.select();\n    }\n  }\n  get question(): Question {\n    return this.options.question as Question;\n  }\n  get id(): string {\n    return this.options.id();\n  }\n  get placeholder(): string {\n    return this.options.placeholder();\n  }\n  get className(): string {\n    return this.options.className();\n  }\n  get maxLength(): number {\n    if (this.options.maxLength)\n      return this.options.maxLength();\n  }\n  get autoGrow(): boolean {\n    if (this.options.autoGrow)\n      return this.options.autoGrow();\n  }\n  get rows(): number {\n    if (this.options.rows)\n      return this.options.rows();\n  }\n  get cols(): number | undefined {\n    if (this.options.cols)\n      return this.options.cols();\n  }\n  get isDisabledAttr(): boolean {\n    return this.options.isDisabledAttr();\n  }\n  get isReadOnlyAttr(): boolean | undefined {\n    if (this.options.isReadOnlyAttr)\n      return this.options.isReadOnlyAttr();\n  }\n  get ariaRequired(): \"true\" | \"false\" {\n    if (this.options.ariaRequired)\n      return this.options.ariaRequired();\n  }\n  get ariaLabel(): string {\n    if (this.options.ariaLabel)\n      return this.options.ariaLabel();\n  }\n  get ariaInvalid(): \"true\" | \"false\" {\n    if (this.options.ariaInvalid)\n      return this.options.ariaInvalid();\n  }\n  get ariaLabelledBy(): string {\n    if (this.options.ariaLabelledBy)\n      return this.options.ariaLabelledBy();\n  }\n  get ariaDescribedBy(): string {\n    if (this.options.ariaDescribedBy)\n      return this.options.ariaDescribedBy();\n  }\n  get ariaErrormessage(): string {\n    if (this.options.ariaErrormessage)\n      return this.options.ariaErrormessage();\n  }\n  public dispose(): void {\n    if (this.question) {\n      this.question.unRegisterFunctionOnPropertiesValueChanged(this.options.propertyNames, \"__textarea\");\n    }\n    this.resetElement();\n  }\n}", "import { HashTable, Helpers } from \"./helpers\";\nimport { JsonObject, Serializer } from \"./jsonobject\";\nimport { Base, EventBase } from \"./base\";\nimport { IElement, IQuestion, IPanel, IConditionRunner, ISurveyImpl, IPage, ITitleOwner, IProgressInfo, ISurvey, IPlainDataOptions, IDropdownMenuOptions, ISurveyElement } from \"./base-interfaces\";\nimport { SurveyElement } from \"./survey-element\";\nimport { AnswerRequiredError, CustomError } from \"./error\";\nimport { SurveyValidator, IValidatorOwner, ValidatorRunner, AsyncElementsRunner } from \"./validator\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { ExpressionRunner } from \"./conditions\";\nimport { QuestionCustomWidget } from \"./questionCustomWidgets\";\nimport { CustomWidgetCollection } from \"./questionCustomWidgets\";\nimport { settings } from \"./settings\";\nimport { SurveyModel } from \"./survey\";\nimport { PanelModel } from \"./panel\";\nimport { RendererFactory } from \"./rendererFactory\";\nimport { SurveyError } from \"./survey-error\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { getElementWidth, isContainerVisible } from \"./utils/utils\";\nimport { PopupModel } from \"./popup\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, ProcessValue, ValueGetter, ValueGetterContextCore, VariableGetterContext } from \"./conditionProcessValue\";\nimport { ITheme } from \"./themes\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { ITextArea, TextAreaModel } from \"./utils/text-area\";\nimport { Action } from \"./actions/action\";\nimport { QuestionSingleInputSummary } from \"./questionSingleInputSummary\";\nimport { ActionContainer } from \"./actions/container\";\n\nexport interface IConditionObject {\n  name: string;\n  text: string;\n  question: Question;\n  context?: Question;\n}\n\nexport interface IQuestionPlainData {\n  name: string | number;\n  title: string;\n  value: any;\n  displayValue: any;\n  isNode: boolean;\n  isComment?: boolean;\n  questionType?: string;\n  data?: Array<IQuestionPlainData>;\n  getString: (val: any) => string;\n  [key: string]: any;\n}\n\ninterface ITriggerExpressionInfo {\n  name: string;\n  canRun: () => boolean;\n  doComplete: (res: any, properties: HashTable<any>) => void;\n  secondName?: string;\n}\n\nexport class QuestionValueGetterContext implements IValueGetterContext {\n  constructor (protected question: Question, protected isUnwrapped?: boolean) {}\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    const expVar = settings.expressionVariables;\n    if (path.length === 0 || (path.length === 1 && path[0].name === expVar.question)) return this.getQuestionValue(index);\n    if (path.length > 1 && path[0].name === expVar.panel) {\n      const panel: any = this.question.parent;\n      if (panel && panel.isPanel) {\n        path.shift();\n        return new QuestionArrayGetterContext(panel.questions).getValue(path, false, index, createObjects);\n      }\n    }\n    if (!this.question.isEmpty()) {\n      let val = this.question.value;\n      if (index >= 0) {\n        if (!Array.isArray(val || index >= val.length)) return undefined;\n        val = val[index];\n      }\n      return new VariableGetterContext(val).getValue(path, false, index, createObjects);\n    }\n    return undefined;\n  }\n  getTextValue(name: string, value: any, isDisplayValue: boolean): string {\n    if (!isDisplayValue) return value;\n    return this.question.getDisplayValue(true, value);\n  }\n  getRootObj(): IObjectValueContext { return <any>this.question.data; }\n  getQuestion(): IQuestion { return this.question; }\n  protected getSurveyValue(path: Array<IValueGetterItem>, index?: number): IValueGetterInfo {\n    const survey = this.question.getSurvey();\n    if (survey) return (<any>survey).getValueGetterContext().getValue(path, false, index, false);\n    return undefined;\n  }\n  private getQuestionValue(index: number): IValueGetterInfo {\n    const q = this.question;\n    let val = q.getFilteredValue(this.isUnwrapped);\n    if (index > -1 && Array.isArray(val)) {\n      val = index < val.length ? val[index] : undefined;\n    }\n    return { isFound: true, context: this, value: val, requireStrictCompare: q.requireStrictCompare };\n  }\n}\nexport abstract class QuestionItemValueGetterContext extends ValueGetterContextCore {\n  protected abstract getIndex(): number;\n  protected abstract getQuestionData(): Question;\n  protected getValueFromBindedQuestions(path: Array<IValueGetterItem>, objValue: any): IValueGetterInfo {\n    if (typeof objValue !== \"object\") {\n      objValue = undefined;\n    }\n    const name = path.length === 1 ? path[0].name : \"\";\n    const qs = this.getQuestionsBySameValueNames();\n    for (let i = 0; i < qs.length; i++) {\n      const q = qs[i];\n      //TODO valuePropertyName\n      if (!!name && q.valuePropertyName === name && !!objValue && objValue.hasOwnProperty(name)) {\n        return { isFound: true, value: objValue[name], context: q.getValueGetterContext() };\n      }\n      const res = q.getValueGetterContext().getValue(path, false, this.getIndex(), false);\n      if (!!res && res.isFound) return res;\n    }\n    return undefined;\n  }\n  private getQuestionsBySameValueNames(): Array<Question> {\n    const res = new Array<Question>();\n    const q = this.getQuestionData();\n    if (!q || !q.isQuestion) return res;\n    if (q.parent && q.parent.isPanel) {\n      this.fillQuestions((<PanelModel>q.parent).getQuestionsByValueName(q.getValueName()), q, res);\n    }\n    if (res.length === 0 && !!q.survey) {\n      this.fillQuestions((<any>q.survey).getQuestionsByValueName(q.getValueName()), q, res);\n    }\n    return res;\n  }\n  private fillQuestions(qs: Array<Question>, q: Question, res: Array<Question>): void {\n    if (Array.isArray(qs)) {\n      qs.forEach((question) => {\n        if (question !== q) {\n          res.push(question);\n        }\n      });\n    }\n  }\n  getRootObj(): any { return this.getQuestionData(); }\n}\nexport class QuestionArrayGetterContext extends ValueGetterContextCore {\n  constructor(private questions: Array<Question>) {\n    super();\n  }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const lowName = name.toLocaleLowerCase();\n    const unWrappedNameSuffix = settings.expressionVariables.unwrapPostfix;\n    for (let i = 0; i < this.questions.length; i++) {\n      const q = this.questions[i];\n      const qName = q.getFilteredName().toLocaleLowerCase();\n      if (qName.toLocaleLowerCase() === lowName) {\n        res.isFound = true;\n        res.context = q.getValueGetterContext(qName.endsWith(unWrappedNameSuffix));\n        break;\n      }\n    }\n  }\n}\n\nexport interface IValidationContextParams {\n  fireCallback: boolean;\n  isOnValueChanged?: boolean;\n  focusOnFirstError?: boolean;\n  firstErrorQuestion?: IQuestion;\n  changeCurrentPage?: boolean;\n  callbackResult?: (res: boolean, element: IElement) => void;\n}\n\nexport class ValidationContext extends AsyncElementsRunner {\n  private fireCallbackValue: boolean;\n  private focusOnFirstErrorValue: boolean;\n  private isOnValueChangedValue: boolean;\n  private changeCurrentPage: boolean;\n  private firstErrorQuestionValue: Question;\n  private res: boolean = true;\n  private errorCountValue: number = 0;\n  private isCallbackFired: boolean;\n  private callbackResult: (res: boolean, element: IElement) => void;\n  constructor(context?: IValidationContextParams) {\n    super(() => { this.setCallbackResult(); });\n    if (!context) {\n      context = { fireCallback: true };\n    }\n    this.fireCallbackValue = context.fireCallback || false;\n    this.isOnValueChangedValue = context.isOnValueChanged || false;\n    this.focusOnFirstErrorValue = context.focusOnFirstError || false;\n    this.callbackResult = context.callbackResult || null;\n    this.changeCurrentPage = context.changeCurrentPage || false;\n  }\n  public get fireCallback(): boolean { return this.fireCallbackValue; }\n  public get isOnValueChanged(): boolean { return this.isOnValueChangedValue; }\n  public get focusOnFirstError(): boolean { return this.focusOnFirstErrorValue; }\n  public get result(): boolean { return this.res; }\n  public get runningResult(): boolean {\n    return !this.res || !this.isRunning || !this.callbackResult ? this.res : undefined;\n  }\n  public setError(element: ISurveyElement): void {\n    this.errorCountValue ++;\n    this.res = false;\n    if (!element) return;\n    if (element.isQuestion) {\n      this.setQuestionError(<Question>element);\n    } else {\n      if (element.isCollapsed) {\n        element.expand();\n      }\n    }\n  }\n  public get firstErrorQuestion(): Question {\n    return this.firstErrorQuestionValue;\n  }\n  public get errorCount(): number { return this.errorCountValue; }\n  private setCallbackResult(): void {\n    if (this.callbackResult && !this.isCallbackFired) {\n      this.isCallbackFired = true;\n      this.callbackResult(this.res, this.firstErrorQuestion);\n    }\n  }\n  private setQuestionError(question: Question): void {\n    question.expandAllParents();\n    if (!this.firstErrorQuestionValue) {\n      this.firstErrorQuestionValue = question;\n      if (this.focusOnFirstError || this.changeCurrentPage) {\n        if (this.focusOnFirstError) {\n          question.focus(true);\n        } else {\n          const survey = question.getSurvey();\n          if (!!survey && !!question.page) {\n            survey.currentPage = question.page;\n          }\n        }\n      }\n      this.setCallbackResult();\n    }\n  }\n}\n\n/**\n * A base class for all questions.\n */\nexport class Question extends SurveyElement<Question>\n  implements IQuestion, IConditionRunner, IValidatorOwner, ITitleOwner {\n  [index: string]: any;\n  private static questionCounter = 100;\n  private static getQuestionId(): string {\n    return \"sq_\" + Question.questionCounter++;\n  }\n  private isCustomWidgetRequested: boolean;\n  private customWidgetValue: QuestionCustomWidget;\n  customWidgetData = { isNeedRender: true };\n  focusCallback: () => void;\n  surveyLoadCallback: () => void;\n  displayValueCallback: (text: string) => string;\n  hasCssErrorCallback: () => boolean = (): boolean => false;\n\n  private triggersInfo: Array<ITriggerExpressionInfo> = [];\n  private isChangingViaDefaultValue: boolean;\n  private isValueChangedDirectly: boolean;\n  valueChangedCallback: () => void;\n  commentChangedCallback: () => void;\n  localeChangedCallback: () => void;\n  validateValueCallback: () => SurveyError;\n  questionTitleTemplateCallback: () => string;\n  afterRenderQuestionCallback: (question: Question, element: any) => any;\n  valueFromDataCallback: (val: any) => any;\n  valueToDataCallback: (val: any) => any;\n  onUpdateCssClassesCallback: (css: any) => void;\n  setValueChangedDirectlyCallback: (val: boolean) => void;\n  onGetSurvey: () => ISurvey;\n  private locProcessedTitle: LocalizableString;\n  private isReadyValue: boolean = true;\n  private commentElements: Array<HTMLElement>;\n  private dependedQuestions: Array<Question> = [];\n  private commentTextAreaModelValue: TextAreaModel;\n\n  /**\n   * An event that is raised when the question's ready state has changed (expressions are evaluated, choices are loaded from a web resource specified by the `choicesByUrl` property, etc.).\n   *\n   * Parameters:\n   *\n   * - `sender`: `SurveyModel`\\\n   * A survey instance that contains the question whose ready state has changed.\n   * - `options.isReady`: `boolean`\\\n   * Indicates whether the question is ready.\n   * - `options.oldIsReady`: `boolean`\\\n   * Indicates the previous ready state.\n   */\n  public onReadyChanged: EventBase<Question> = this.addEvent<Question>();\n\n  public isReadOnlyRenderDiv(): boolean {\n    return this.isReadOnly && settings.readOnly.commentRenderMode === \"div\";\n  }\n\n  protected allowMobileInDesignMode() {\n    return false;\n  }\n  public updateIsMobileFromSurvey() {\n    this.setIsMobile((<SurveyModel>this.survey)._isMobile);\n  }\n  public setIsMobile(val: boolean): void {\n    const newVal = val && (this.allowMobileInDesignMode() || !this.isDesignMode);\n    this.isMobile = newVal;\n  }\n  protected getIsMobile(): boolean {\n    return this._isMobile;\n  }\n  public get isMobile(): boolean {\n    return this.getIsMobile();\n  }\n  public set isMobile(val: boolean) {\n    this._isMobile = val;\n  }\n  public themeChanged(theme: ITheme): void { }\n  private get _isMobile(): boolean { return this.getPropertyValue(\"_isMobile\", false); }\n  private set _isMobile(val: boolean) { this.setPropertyValue(\"_isMobile\", val); }\n  public get forceIsInputReadOnly(): boolean { return this.getPropertyValue(\"forceIsInputReadOnly\"); }\n  public set forceIsInputReadOnly(val: boolean) { this.setPropertyValue(\"forceIsInputReadOnly\", val); }\n  public get ariaExpanded(): \"true\" | \"false\" {\n    if (this.isNewA11yStructure) {\n      return null;\n    }\n    return this.getPropertyValue(\"ariaExpanded\");\n  }\n  public set ariaExpanded(val: \"true\" | \"false\") { this.setPropertyValue(\"ariaExpanded\", val); }\n\n  constructor(name: string) {\n    super(name);\n    this.setPropertyValueDirectly(\"id\", Question.getQuestionId());\n    this.onCreating();\n    this.createNewArray(\"validators\", (validator: any) => {\n      validator.errorOwner = this;\n    });\n\n    this.addExpressionProperty(\"visibleIf\", (obj: Base, res: any) => { this.visible = res === true; });\n    this.addExpressionProperty(\"enableIf\", (obj: Base, res: any) => { this.readOnly = res === false; });\n    this.addExpressionProperty(\"requiredIf\", (obj: Base, res: any) => { this.isRequired = res === true; });\n\n    this.createLocalizableString(\"commentText\", this, true, true);\n    this.createLocalizableString(\"requiredErrorText\", this);\n    this.createLocalizableString(\"commentPlaceholder\", this);\n    this.createLocalizableString(\"defaultDisplayValue\", this);\n    this.addTriggersInfo();\n    this.registerPropertyChangedHandlers([\"width\"], () => {\n      this.updateQuestionCss();\n      if (!!this.parent) {\n        this.parent.elementWidthChanged(this);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"isRequired\"], () => {\n      if (!this.isRequired && this.errors.length > 0) {\n        this.validate();\n      }\n      this.locTitle.strChanged();\n      this.clearCssClasses();\n    });\n    this.registerPropertyChangedHandlers(\n      [\"indent\", \"rightIndent\"],\n      () => {\n        this.resetIndents();\n      }\n    );\n\n    this.registerPropertyChangedHandlers(\n      [\"showCommentArea\", \"showOtherItem\"],\n      () => {\n        this.initCommentFromSurvey();\n      }\n    );\n    this.registerPropertyChangedHandlers([\"commentPlaceholder\"], () => {\n      this.resetRenderedCommentPlaceholder();\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"no\", \"readOnly\", \"hasVisibleErrors\", \"containsErrors\"], () => {\n      this.updateQuestionCss();\n    });\n    this.registerPropertyChangedHandlers([\"_isMobile\"], () => { this.onMobileChanged(); });\n    this.registerPropertyChangedHandlers([\"colSpan\"], () => { this.parent?.updateColumns(); });\n  }\n  protected getDefaultTitle(): string { return this.name; }\n  protected createLocTitleProperty(): LocalizableString {\n    const locTitleValue = super.createLocTitleProperty();\n    locTitleValue.storeDefaultText = true;\n    locTitleValue.onGetTextCallback = (text: string, nonProcessedText?: string): string => {\n      if (!text && !nonProcessedText) {\n        text = this.getDefaultTitle();\n      }\n      if (!this.survey) return text;\n      return this.survey.getUpdatedQuestionTitle(this, text);\n    };\n    this.locProcessedTitle = new LocalizableString(this, true);\n    this.locProcessedTitle.sharedData = locTitleValue;\n    return locTitleValue;\n  }\n  get locRenderedTitle(): LocalizableString {\n    if (this.isSingleInputActive && !!this.singleInputLocTitle) return this.singleInputLocTitle;\n    return this.locTitle;\n  }\n  public get commentTextAreaModel(): TextAreaModel {\n    if (!this.commentTextAreaModelValue) {\n      this.commentTextAreaModelValue = new TextAreaModel(this.getCommentTextAreaOptions());\n    }\n    return this.commentTextAreaModelValue;\n  }\n  private getCommentTextAreaOptions(): ITextArea {\n    const options: ITextArea = {\n      question: this,\n      id: () => this.commentId,\n      propertyNames: [\"comment\"],\n      className: () => this.cssClasses.comment,\n      placeholder: () => this.renderedCommentPlaceholder,\n      isDisabledAttr: () => this.isInputReadOnly || false,\n      rows: () => this.commentAreaRows,\n      autoGrow: () => this.autoGrowComment,\n      maxLength: () => this.getOthersMaxLength(),\n      ariaRequired: () => this.a11y_input_ariaRequired,\n      ariaLabel: () => this.a11y_input_ariaLabel,\n      getTextValue: () => { return this.comment; },\n      onTextAreaChange: (e) => { this.onCommentChange(e); },\n      onTextAreaInput: (e) => { this.onCommentInput(e); },\n    };\n    return options;\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    if (live) {\n      return !!this.parent ? (<Base>(<any>this.parent)).getSurvey(live) : null;\n    }\n    if (!!this.onGetSurvey) return this.onGetSurvey();\n    return super.getSurvey();\n  }\n  public getValueName(): string {\n    if (!!this.valueName) return this.valueName.toString();\n    return this.name;\n  }\n  /**\n   * Specifies an object property that should store the question value.\n   *\n   * Refer to the [Merge Question Values](https://surveyjs.io/form-library/documentation/design-survey-merge-question-values) help topic for more information.\n   */\n  public get valueName(): string {\n    return this.getPropertyValue(\"valueName\", \"\");\n  }\n  public set valueName(val: string) {\n    var oldValueName = this.getValueName();\n    this.setPropertyValue(\"valueName\", val);\n    this.onValueNameChanged(oldValueName);\n  }\n  protected onValueNameChanged(oldValue: string): void {\n    if (!this.survey) return;\n    this.survey.questionRenamed(\n      this,\n      this.name,\n      !!oldValue ? oldValue : this.name\n    );\n    this.initDataFromSurvey();\n  }\n  protected onNameChanged(oldValue: string): void {\n    this.locTitle.strChanged();\n    if (!this.survey) return;\n    this.survey.questionRenamed(\n      this,\n      oldValue,\n      this.valueName ? this.valueName : oldValue\n    );\n  }\n  public get isReady(): boolean {\n    return this.isReadyValue;\n  }\n  protected onAsyncRunningChanged(): void {\n    this.updateIsReady();\n  }\n  protected ensureQuestionIsReady(): void {\n    const _displayValue = this.displayValue;\n  }\n  public waitForQuestionIsReady(callback?: () => void): Promise<void> {\n    return new Promise((resolve: any) => {\n      this.ensureQuestionIsReady();\n      if (this.isReady) {\n        resolve();\n        if (!!callback) callback();\n      } else {\n        const readyCallback: (sender: Question, options: any) => void =\n                (_, options: any) => {\n                  if (options.isReady) {\n                    this.onReadyChanged.remove(readyCallback);\n                    resolve();\n                    if (!!callback) callback();\n                  }\n                };\n        this.onReadyChanged.add(readyCallback);\n      }\n    });\n  }\n  protected updateIsReady(): void {\n    let res = this.getIsQuestionReady();\n    if (res) {\n      const questions = this.getIsReadyDependsOn();\n      for (let i = 0; i < questions.length; i++) {\n        if (!questions[i].getIsQuestionReady()) {\n          res = false;\n          break;\n        }\n      }\n    }\n    this.setIsReady(res);\n  }\n  protected getIsQuestionReady(): boolean {\n    return !this.isAsyncExpressionRunning && this.getAreNestedQuestionsReady();\n  }\n  private getAreNestedQuestionsReady(): boolean {\n    const questions = this.getIsReadyNestedQuestions();\n    if (!Array.isArray(questions)) return true;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isReady) return false;\n    }\n    return true;\n  }\n  protected getIsReadyNestedQuestions(): Array<Question> {\n    return this.getNestedQuestions();\n  }\n  private setIsReady(val: boolean): void {\n    const oldIsReady = this.isReadyValue;\n    this.isReadyValue = val;\n    if (oldIsReady != val) {\n      this.getIsReadyDependends().forEach(q => q.updateIsReady());\n      this.onReadyChanged.fire(this, {\n        question: this,\n        isReady: val,\n        oldIsReady: oldIsReady,\n      });\n    }\n  }\n  protected getIsReadyDependsOn(): Array<Question> {\n    return this.getIsReadyDependendCore(true);\n  }\n  private getIsReadyDependends(): Array<Question> {\n    return this.getIsReadyDependendCore(false);\n  }\n  protected getDependedQuestionsByValueName(isDependOn: boolean): Array<IQuestion> {\n    return this.survey.questionsByValueName(this.getValueName());\n  }\n  private getIsReadyDependendCore(isDependOn: boolean): Array<Question> {\n    if (!this.survey) return [];\n    const questions = this.getDependedQuestionsByValueName(isDependOn);\n    const res = new Array<Question>();\n    questions.forEach(q => { if (q !== this) res.push(<Question>q); });\n    if (!isDependOn) {\n      if (this.parentQuestion) {\n        res.push(this.parentQuestion);\n      }\n      if (this.dependedQuestions.length > 0) {\n        this.dependedQuestions.forEach(q => res.push(q));\n      }\n    }\n    return res;\n  }\n  public choicesLoaded(): void { }\n  /**\n   * Returns a page to which the question belongs and allows you to move this question to a different page.\n   */\n  public get page(): IPage {\n    if (!!this.parentQuestion) return this.parentQuestion.page;\n    return this.getPage(this.parent);\n  }\n  public set page(val: IPage) {\n    this.setPage(this.parent, val);\n  }\n  public getPanel(): IPanel {\n    return null;\n  }\n  public delete(doDispose: boolean = true): void {\n    this.removeFromParent();\n    if (doDispose) {\n      this.dispose();\n    } else {\n      this.resetDependedQuestions();\n    }\n  }\n  protected removeFromParent(): void {\n    if (!!this.parent) {\n      this.removeSelfFromList(this.parent.elements);\n    }\n  }\n  protected addDependedQuestion(question: Question): void {\n    if (!question || this.dependedQuestions.indexOf(question) > -1) return;\n    this.dependedQuestions.push(question);\n  }\n  protected removeDependedQuestion(question: Question): void {\n    if (!question) return;\n    var index = this.dependedQuestions.indexOf(question);\n    if (index > -1) {\n      this.dependedQuestions.splice(index, 1);\n    }\n  }\n  protected updateDependedQuestions(): void {\n    for (var i = 0; i < this.dependedQuestions.length; i++) {\n      this.dependedQuestions[i].updateDependedQuestion();\n    }\n  }\n  protected updateDependedQuestion(): void { }\n  protected resetDependedQuestion(): void { }\n  public get isFlowLayout(): boolean {\n    return this.getLayoutType() === \"flow\";\n  }\n  public getLayoutType(): string {\n    if (!!this.parent) return this.parent.getChildrenLayoutType();\n    return \"row\";\n  }\n  isLayoutTypeSupported(layoutType: string): boolean {\n    return layoutType !== \"flow\";\n  }\n  /**\n   * Gets or sets question visibility.\n   *\n   * If you want to display or hide a question based on a condition, specify the [`visibleIf`](https://surveyjs.io/form-library/documentation/question#visibleIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isVisible\n   * @see visibleIf\n   */\n  public get visible(): boolean {\n    return this.getPropertyValue(\"visible\");\n  }\n  public set visible(val: boolean) {\n    if (val == this.visible) return;\n    this.setPropertyValue(\"visible\", val);\n    this.onVisibleChangedCore();\n    this.notifySurveyVisibilityChanged();\n  }\n  protected onVisibleChanged(): void {\n    const prevVal = this.getPropertyValue(\"isVisible\");\n    this.onVisibleChangedCore();\n    const newVal = this.getPropertyValue(\"isVisible\");\n    if (prevVal !== undefined && prevVal !== newVal) {\n      this.notifySurveyVisibilityChanged();\n    }\n  }\n  private onVisibleChangedCore(): void {\n    this.updateIsVisibleProp();\n    if (!this.isVisible && this.errors && this.errors.length > 0) {\n      this.errors = [];\n    }\n  }\n  protected notifyStateChanged(prevState: string): void {\n    super.notifyStateChanged(prevState);\n    if (this.isCollapsed) {\n      this.onHidingContent();\n    }\n  }\n  public updateElementVisibility(): void {\n    this.updateIsVisibleProp();\n  }\n  private updateIsVisibleProp(): void {\n    const prev = this.getPropertyValue(\"isVisible\");\n    const val = this.isVisible;\n    if (prev !== val) {\n      this.setPropertyValue(\"isVisible\", val);\n      if (!val) {\n        this.onHidingContent();\n      }\n    }\n    if (val !== this.visible && this.areInvisibleElementsShowing) {\n      this.updateQuestionCss(true);\n    }\n  }\n  /**\n   * Specifies whether to use display names for question values in placeholders.\n   *\n   * Default value: `true`\n   *\n   * This property applies to questions whose values are defined as objects with the `value` and `text` properties (for example, [choice items](https://surveyjs.io/form-library/documentation/questionradiogroupmodel#choices) in Radiogroup, Checkbox, and Dropdown questions).\n   *\n   * You can use question values as placeholders in the following places:\n   *\n   * - Survey element titles and descriptions\n   * - The [`html`](https://surveyjs.io/form-library/documentation/questionhtmlmodel#html) property of the [HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel) question\n   *\n   * To use a question value as a placeholder, specify the question `name` in curly brackets: `{questionName}`. Refer to the following help topic for more information: [Dynamic Texts - Question Values](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#question-values).\n   */\n  public get useDisplayValuesInDynamicTexts(): boolean {\n    return this.getPropertyValue(\"useDisplayValuesInDynamicTexts\");\n  }\n  public set useDisplayValuesInDynamicTexts(val: boolean) {\n    this.setPropertyValue(\"useDisplayValuesInDynamicTexts\", val);\n  }\n  protected getUseDisplayValuesInDynamicTexts(): boolean { return this.useDisplayValuesInDynamicTexts; }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this question becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/implement-conditional-logic-to-change-question-visibility/ (linkStyle))\n   * @see visible\n   * @see isVisible\n   */\n  public get visibleIf(): string {\n    return this.getPropertyValue(\"visibleIf\", \"\");\n  }\n  public set visibleIf(val: string) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  /**\n   * Returns `true` if the question is visible or the survey is currently in design mode.\n   *\n   * If you want to display or hide a question based on a condition, specify the [`visibleIf`](https://surveyjs.io/form-library/documentation/question#visibleIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visible\n   * @see isParentVisible\n   */\n  public get isVisible(): boolean {\n    if (this.survey && this.survey.areEmptyElementsHidden && this.isEmpty())\n      return false;\n    if (this.areInvisibleElementsShowing) return true;\n    return this.isVisibleCore();\n  }\n  public get isVisibleInSurvey(): boolean {\n    return this.isVisible && this.isParentVisible;\n  }\n  protected isVisibleCore(): boolean {\n    return this.visible;\n  }\n  /**\n   * Returns the visible index of the question in the survey. It can be from 0 to all visible questions count - 1\n   * The visibleIndex is -1 if the title is 'hidden' or showNumber is false\n   * @see titleLocation\n   * @see showNumber\n   */\n  public get visibleIndex(): number {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  public onHidingContent(): void { }\n  /**\n   * Specifies whether to show a number for this question. Setting this property to `false` hides the question number from the title and excludes the question from numbering.\n   *\n   * Default value: `false` (inherited from the `SurveyModel`'s [`showQuestionNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers) property)\n   * @see no\n   */\n  public get showNumber(): boolean {\n    return this.getPropertyValue(\"showNumber\");\n  }\n  public set showNumber(val: boolean) {\n    this.setPropertyValue(\"showNumber\", val);\n    this.notifySurveyVisibilityChanged();\n  }\n  /**\n   * @deprecated Use the [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property instead.\n   */\n  public get hideNumber(): boolean {\n    return !this.showNumber;\n  }\n  public set hideNumber(val: boolean) {\n    this.showNumber = !val;\n  }\n  /**\n   * Returns `true` if the question can display its title to the left of the input field.\n   * @see titleLocation\n   * @see getTitleLocation\n   * @see hasTitle\n   */\n  public get isAllowTitleLeft(): boolean {\n    return true;\n  }\n  /**\n   * Returns the question type.\n   * Possible values:\n   * - [*\"boolean\"*](https://surveyjs.io/Documentation/Library?id=questionbooleanmodel)\n   * - [*\"checkbox\"*](https://surveyjs.io/Documentation/Library?id=questioncheckboxmodel)\n   * - [*\"comment\"*](https://surveyjs.io/Documentation/Library?id=questioncommentmodel)\n   * - [*\"dropdown\"*](https://surveyjs.io/Documentation/Library?id=questiondropdownmodel)\n   * - [*\"tagbox\"*](https://surveyjs.io/form-library/documentation/questiontagboxmodel)\n   * - [*\"expression\"*](https://surveyjs.io/Documentation/Library?id=questionexpressionmodel)\n   * - [*\"file\"*](https://surveyjs.io/Documentation/Library?id=questionfilemodel)\n   * - [*\"html\"*](https://surveyjs.io/Documentation/Library?id=questionhtmlmodel)\n   * - [*\"image\"*](https://surveyjs.io/Documentation/Library?id=questionimagemodel)\n   * - [*\"imagepicker\"*](https://surveyjs.io/Documentation/Library?id=questionimagepickermodel)\n   * - [*\"matrix\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixmodel)\n   * - [*\"matrixdropdown\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixdropdownmodel)\n   * - [*\"matrixdynamic\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixdynamicmodel)\n   * - [*\"multipletext\"*](https://surveyjs.io/Documentation/Library?id=questionmultipletextmodel)\n   * - [*\"panel\"*](https://surveyjs.io/Documentation/Library?id=panelmodel)\n   * - [*\"paneldynamic\"*](https://surveyjs.io/Documentation/Library?id=questionpaneldynamicmodel)\n   * - [*\"radiogroup\"*](https://surveyjs.io/Documentation/Library?id=questionradiogroupmodel)\n   * - [*\"rating\"*](https://surveyjs.io/Documentation/Library?id=questionratingmodel)\n   * - [*\"ranking\"*](https://surveyjs.io/Documentation/Library?id=questionrankingmodel)\n   * - [*\"signaturepad\"*](https://surveyjs.io/Documentation/Library?id=questionsignaturepadmodel)\n   * - [*\"text\"*](https://surveyjs.io/Documentation/Library?id=questiontextmodel)\n   */\n  public getType(): string {\n    return \"question\";\n  }\n  public get isQuestion(): boolean {\n    return true;\n  }\n  public moveTo(container: IPanel, insertBefore: any = null): boolean {\n    return this.moveToBase(this.parent, container, insertBefore);\n  }\n  public getProgressInfo(): IProgressInfo {\n    if (!this.hasInput) return super.getProgressInfo();\n    return {\n      questionCount: 1,\n      answeredQuestionCount: !this.isEmpty() ? 1 : 0,\n      requiredQuestionCount: this.isRequired ? 1 : 0,\n      requiredAnsweredQuestionCount: !this.isEmpty() && this.isRequired ? 1 : 0,\n    };\n  }\n  private runTriggerInfo(info: ITriggerExpressionInfo, keys: any, properties: any): void {\n    this.runExpressionByProperty(info.name, properties, (value: any) => {\n      info.doComplete(value, properties);\n    }, (runner: ExpressionRunner): boolean => {\n      if (!info.canRun()) return false;\n      return !keys || this.canExecuteTriggerByKeys(keys, runner, this.getExpressionByProperty(info.secondName));\n    });\n  }\n  private canExecuteTriggerByKeys(keys: any, runner: ExpressionRunner, secondRunner?: ExpressionRunner): boolean {\n    if (!runner && !!secondRunner) {\n      runner = secondRunner;\n      secondRunner = undefined;\n    }\n    const run1 = this.canExecuteTriggerByKeysCore(keys, runner);\n    if (run1 === \"var\") return true;\n    if (!secondRunner) return run1 === \"func\" || run1 === \"const\";\n    const run2 = this.canExecuteTriggerByKeysCore(keys, secondRunner);\n    return run2 !== \"\";\n  }\n  private canExecuteTriggerByKeysCore(keys: any, runner: ExpressionRunner): string {\n    if (!runner.expression) return \"\";\n    const vars = runner.getVariables();\n    if ((!Array.isArray(vars) || vars.length === 0)) {\n      if (runner.hasFunction()) return \"func\";\n      return \"const\";\n    }\n    return new ValueGetter().isAnyKeyChanged(keys, vars) ? \"var\" : \"\";\n  }\n  public getValueGetterContext(isUnwrapped?: boolean): IValueGetterContext {\n    return new QuestionValueGetterContext(this, isUnwrapped);\n  }\n  private addTriggersInfo(): void {\n    this.addTriggerInfo({\n      name: \"resetValueIf\",\n      canRun: (): boolean => !this.isEmpty(),\n      doComplete: (res: any, properties: HashTable<any>): void => {\n        if (res === true) {\n          this.startSetValueOnExpression();\n          this.updateValueWithDefaultsOrClear();\n          this.finishSetValueOnExpression();\n        }\n      }\n    });\n    this.addTriggerInfo({\n      name: \"setValueIf\",\n      secondName: \"setValueExpression\",\n      canRun: (): boolean => true,\n      doComplete: (res: any, properties: HashTable<any>): void => {\n        if (res) {\n          if (!this.setValueExpression) {\n            this.clearValue();\n          } else {\n            const info = {\n              name: \"setValueExpression\",\n              canRun: (): boolean => true,\n              doComplete: (res: any, properties: HashTable<any>): void => this.runExpressionSetValue(res)\n            };\n            this.runTriggerInfo(info, undefined, properties);\n          }\n        }\n      }\n    });\n    this.addTriggerInfo({\n      name: \"setValueExpression\",\n      canRun: (): boolean => !this.setValueIf,\n      doComplete: (res: any, properties: HashTable<any>): void => this.runExpressionSetValue(res)\n    });\n  }\n  protected addTriggerInfo(info: ITriggerExpressionInfo): void {\n    this.triggersInfo.push(info);\n  }\n  public runTriggers(name: string, value: any, keys?: any): void {\n    if (this.isSettingQuestionValue || (this.parentQuestion && this.parentQuestion.getValueName() === name)) return;\n    if (!keys) {\n      keys = {};\n      keys[name] = value;\n    }\n    const properties = this.getDataFilteredProperties();\n    this.triggersInfo.forEach(info => {\n      this.runTriggerInfo(info, keys, properties);\n    });\n  }\n  private runConditions() {\n    if (this.data && !this.isLoadingFromJson) {\n      if (!this.isDesignMode) {\n        this.runCondition(this.getDataFilteredProperties());\n      }\n      this.locStrsChanged();\n    }\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    super.setSurveyImpl(value);\n    if (!this.survey) return;\n    this.survey.questionCreated(this);\n    if (isLight !== true) {\n      this.runConditions();\n    }\n    if (!this.visible) {\n      this.updateIsVisibleProp();\n    }\n    this.updateIsMobileFromSurvey();\n  }\n  /**\n   * Returns a survey element (panel or page) that contains the question and allows you to move this question to a different survey element.\n   */\n  public get parent(): IPanel {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  public set parent(val: IPanel) {\n    if (this.parent === val) return;\n    this.removeFromParent();\n    this.setPropertyValue(\"parent\", val);\n    if (!!val) {\n      this.updateQuestionCss();\n    }\n    this.onParentChanged();\n  }\n  protected onParentChanged(): void { }\n  private calculateSingleInputQuestion(): Question {\n    if (!this.isSingleInputActive) {\n      return undefined;\n    }\n    const questions = this.getSingleInputQuestions();\n    if (Array.isArray(questions) && questions.length > 0) {\n      const q = questions[0];\n      this.onBeforeSetSingleInputQuestion(q);\n      return q;\n    }\n    return undefined;\n  }\n  public get singleInputQuestion(): Question {\n    const survey = this.survey;\n    if (!survey || !survey.isSingleVisibleInput) return undefined;\n    return this.getPropertyValue(\"singleInputQuestion\", undefined, () => this.calculateSingleInputQuestion());\n  }\n  private get currentSingleInputQuestion(): Question {\n    let res = this.singleInputQuestion;\n    while(!!res && !!res.singleInputQuestion && res.singleInputQuestion !== res) {\n      res = res.singleInputQuestion;\n    }\n    return res;\n  }\n  private get currentSingleInputParentQuestion(): Question {\n    const q = this.currentSingleInputQuestion;\n    if (!q) return this;\n    if (q.singleInputQuestion === q) return q;\n    return q.parentQuestion || this;\n  }\n  public get singleInputSummary(): QuestionSingleInputSummary {\n    return this.getPropertyValue(\"singleInputSummary\", undefined, () => {\n      if (!this.supportNestedSingleInput()) return undefined;\n      const q = this.singleInputQuestion;\n      if (!q || q !== this) return undefined;\n      const res = this.createSingleInputSummary();\n      if (!!res) {\n        this.calcSingleInputActions();\n        this.resetPropertyValue(\"singleInputLocTitle\");\n      }\n      return res;\n    });\n  }\n  protected createSingleInputSummary(): QuestionSingleInputSummary {\n    return undefined;\n  }\n  private get rootParentQuestion(): Question {\n    let res: Question = this;\n    while(!!res.parentQuestion) {\n      res = res.parentQuestion;\n    }\n    return res;\n  }\n  private getParentQuestions(): Array<Question> {\n    const res = new Array<Question>();\n    let q: Question = this;\n    while(!!q.parentQuestion) {\n      res.push(q.parentQuestion);\n      q = q.parentQuestion;\n    }\n    return res;\n  }\n  public resetSingleInput(): void {\n    this.resetSingleInputCore();\n  }\n  private resetSingleInputCore(): void {\n    const prev = this.getPropertyValue(\"singleInputQuestion\");\n    this.resetPropertyValue(\"singleInputQuestion\");\n    if (!!prev) {\n      this.onSingleInputChanged();\n    }\n  }\n  private onSingleInputChanged(resetSummary: boolean = true): void {\n    if (resetSummary) {\n      this.resetSingleInputSummary();\n    }\n    this.singleInputLocTitle?.strChanged();\n    this.resetPropertyValue(\"singleInputLocTitle\");\n    this.calcSingleInputActions();\n    this.survey?.updateNavigationElements();\n  }\n  private resetSingleInputSummary(): void {\n    this.singleInputSummary?.dispose();\n    this.resetPropertyValue(\"singleInputSummary\");\n  }\n  public validateSingleInput(): boolean {\n    const q = this.currentSingleInputQuestion;\n    if (!q) return true;\n    return q.validate(true, true);\n  }\n  public getSingleInputElementPos(): number {\n    if (this.singleInputQuestion === this) return 0;\n    const pQ = this.currentSingleInputParentQuestion;\n    if (pQ !== this) {\n      let res = pQ.getSingleInputElementPos();\n      if (res === 2) return 2;\n    }\n    const q = this.singleInputQuestion;\n    const questions = this.getSingleInputQuestions();\n    if (questions.length < 2) return 0;\n    let index = questions.indexOf(q);\n    return index === 0 ? -1 : (index >= questions.length - 1 ? 1 : 2);\n  }\n  protected get isSingleInputActive(): boolean {\n    const sv = this.survey;\n    if (!sv || !sv.isSingleVisibleInput) return false;\n    const ssQ = sv.currentSingleQuestion;\n    return !!ssQ && ssQ === this.rootParentQuestion;\n  }\n  protected singleInputOnAddItem(isOnDataChanging: boolean): void {\n    if (this.isSingleInputActive) {\n      if (isOnDataChanging && this.singleInputSummary) {\n        this.resetSingleInputSummary();\n      } else {\n        this.setSingleQuestionOnChange(Number.MAX_VALUE);\n      }\n    }\n  }\n  protected singleInputOnRemoveItem(index: number): void {\n    if (this.isSingleInputActive) {\n      if (!this.singleInputSummary) {\n        this.setSingleQuestionOnChange(index);\n      } else {\n        this.onSingleInputChanged();\n      }\n    }\n  }\n  protected getSingleQuestionOnChange(index: number): Question { return null; }\n  private setSingleQuestionOnChange(index: number): void {\n    const q = this.getSingleQuestionOnChange(index);\n    if (!!q) {\n      this.setSingleInputQuestion(q);\n    } else {\n      this.resetSingleInput();\n    }\n  }\n  private isSingleInputSummaryShown: boolean;\n  public onSetAsSingleInput(): void {\n    this.isSingleInputSummaryShown = false;\n    const needReset = !this.wasRendered || this.singleInputSummary;\n    this.onFirstRendering();\n    if (needReset) {\n      this.resetSingleInputSummary();\n      this.resetPropertyValue(\"singleInputQuestion\");\n      this.resetPropertyValue(\"singleInputLocTitle\");\n    }\n  }\n  public nextSingleInput(): boolean {\n    return this.nextPrevSingleInput(1);\n  }\n  public prevSingleInput(): boolean {\n    return this.nextPrevSingleInput(-1);\n  }\n  public getSingleInputAddText(): string {\n    const q = this.currentSingleInputQuestion;\n    return !!q && !!q.singleInputSummary ? q.getSingleInputAddTextCore() : undefined;\n  }\n  public singleInputAddItem(checkErrors?: boolean): void {\n    if (!checkErrors || this.validateSingleInput()) {\n      this.currentSingleInputQuestion.singleInputAddItemCore();\n    }\n  }\n  public singleInputRemoveItem(): void {\n    const q = this.singleInputQuestion;\n    if (q && q !== this.singleInputParentQuestion) {\n      this.singleInputRemoveItemCore(q);\n    }\n  }\n  public get singleInputLocTitle(): LocalizableString {\n    return this.getPropertyValue(\"singleInputLocTitle\", undefined, () => {\n      return this.getSingleQuestionLocTitle();\n    });\n  }\n\n  public get singleInputActions(): ActionContainer {\n    return this.getPropertyValue(\"singleInputActions\", undefined, () => {\n      return this.createSingleInputActions();\n    });\n  }\n\n  public get singleInputHasActions(): boolean {\n    return this.getPropertyValue(\"singleInputHasActions\", undefined, () => {\n      return this.createSingleInputActions();\n    });\n  }\n  public get singleInputHideHeader(): boolean {\n    const childQ = this.singleInputQuestion?.singleInputQuestion;\n    return !!childQ && this.singleInputQuestion !== this;\n  }\n  private set sinleInputHasActions(val: boolean) {\n    this.setPropertyValue(\"singleInputHasActions\", val);\n  }\n  private get singleInputParentQuestion(): Question {\n    return this.singleInputQuestion?.parentQuestion || this;\n  }\n  private createSingleInputActions() {\n    if (this.survey?.currentSingleQuestion !== this) return undefined;\n    const singleInputActions = new ActionContainer();\n    singleInputActions.actions = this.getSingleQuestionActions();\n    return singleInputActions;\n  }\n  private calcSingleInputActions(): void {\n    if (!!this.parentQuestion) {\n      this.parentQuestion.calcSingleInputActions();\n    } else {\n      const actions = this.getSingleQuestionActions();\n      if (this.singleInputActions) {\n        this.singleInputActions.actions = actions;\n      }\n      this.sinleInputHasActions = actions.length > 0 ? true : undefined;\n    }\n  }\n  private getSingleQuestionActions(): Array<Action> {\n    const res = new Array<Action>();\n    const p = this.currentSingleInputParentQuestion;\n    if (!p || p === this) return res;\n    const pSQs = p.getSingleInputQuestions();\n    const qs = new Array<Question>();\n    let summaryQ = undefined;\n    if (pSQs.length > 1 && pSQs[0] === p) {\n      summaryQ = p;\n      qs.push(p);\n    }\n    let pQ = p.parentQuestion;\n    while(!!pQ) {\n      qs.push(pQ);\n      pQ = pQ.parentQuestion;\n    }\n    for (let i = qs.length - 1; i >= 0; i--) {\n      const q = qs[i];\n      if (q !== summaryQ) {\n        //const title = q == summaryQ ? q.locTitle : q.singleInputLocTitle;\n        const title = q.singleInputLocTitle;\n        const action = new Action({ id: \"single-action\" + q.id, locTitle: title,\n          css: this.cssClasses.breadcrumbsItem,\n          innerCss: this.cssClasses.breadcrumbsItemButton,\n          action: () => {\n            q.singleInputMoveToFirst();\n            /*\n            if (q == summaryQ) {\n              q.setSingleInputQuestion(q);\n            } else {\n              q.singleInputMoveToFirst();\n            }\n            */\n          }\n        });\n\n        action.cssClasses = {};\n        res.push(action);\n      }\n    }\n    return res;\n  }\n  protected singleInputMoveToFirst(): void {\n    const q = this.singleInputQuestion;\n    if (!!q && q !== this) {\n      q.singleInputMoveToFirst();\n    }\n    this.singleInputMoveToFirstCore();\n  }\n  protected singleInputMoveToFirstCore(): void {}\n  private getSingleQuestionLocTitle(): LocalizableString {\n    return !this.singleInputSummary ? this.getSingleQuestionLocTitleCore() : undefined;\n  }\n  protected getSingleQuestionLocTitleCore(): LocalizableString {\n    return undefined;\n  }\n  private supportNestedSingleInput(): boolean {\n    return this.survey?.supportsNestedSingleInput(this);\n  }\n  private getSingleInputQuestions(): Array<Question> {\n    if (!this.supportNestedSingleInput()) return [];\n    const question = this.getPropertyValue(\"singleInputQuestion\");\n    if (question === this) return [this];\n    const res = this.getSingleInputQuestionsCore(question, !question || !this.isSingleInputSummaryShown);\n    res.forEach(q => { if (q !== this)this.onSingleInputQuestionAdded(q); });\n    return res;\n  }\n  protected getSingleInputQuestionsCore(question: Question, checkDynamic: boolean): Array<Question> {\n    return this.getNestedQuestions(true, false);\n  }\n  protected onSingleInputQuestionAdded(question: Question): void {}\n  protected fillSingleInputQuestionsInContainer(res: Array<Question>, innerQuestion: Question): void {}\n  protected getSingleInputQuestionsForDynamic(question: Question, arr: Array<Question>): Array<Question> {\n    const res = new Array<Question>();\n    if (!!question && question !== this && arr.indexOf(question) < 0) {\n      this.fillSingleInputQuestionsInContainer(res, question);\n    }\n    arr.forEach(q => res.push(q));\n    if (this.isSingleInputSummaryShown && res.length > 0) {\n      res.unshift(this);\n    }\n    res.push(this);\n    return res;\n  }\n  protected getSingleInputAddTextCore(): string { return undefined; }\n  protected singleInputAddItemCore(): void {}\n  protected singleInputRemoveItemCore(question: Question): void {}\n  private setSingleInputQuestionCore(question: Question): void {\n    this.onBeforeSetSingleInputQuestion(question);\n    this.setPropertyValue(\"singleInputQuestion\", question);\n  }\n  private onBeforeSetSingleInputQuestion(question: Question): void {\n    question.onFirstRendering();\n    if (question === this) {\n      this.isSingleInputSummaryShown = true;\n    }\n  }\n  protected setSingleInputQuestion(question: Question, onPrev?: boolean): void {\n    if (this.singleInputQuestion !== question) {\n      this.setSingleInputQuestionCore(question);\n      this.onSingleInputChanged(!onPrev || question !== this);\n    }\n  }\n  private nextPrevSingleInput(skip: number): boolean {\n    let pQ = this.currentSingleInputParentQuestion;\n    while(!!pQ && pQ !== this) {\n      const res = pQ.nextPrevSingleInput(skip);\n      if (res) return true;\n      pQ = pQ.parentQuestion;\n    }\n    const q = this.singleInputQuestion;\n    if (!q) return false;\n    const questions = this.getSingleInputQuestions();\n    let index = questions.indexOf(q);\n    if (index < 0) {\n      if (questions.length === 0) return false;\n      index = 0;\n      skip = 0;\n    }\n    index += skip;\n    if (index < 0 || index >= questions.length) return false;\n    this.setSingleInputQuestion(questions[index], skip < 0);\n    return true;\n  }\n  /**\n   * Returns `false` if the `titleLocation` property is set to `\"hidden\"` or if the question cannot have a title (for example, an [HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel) question).\n   *\n   * If the `title` property is `undefined` or set to an empty string, the `hasTitle` property returns `true`, because the question uses its `name` as a title in this case.\n   * @see title\n   * @see titleLocation\n   */\n  public get hasTitle(): boolean {\n    return this.getTitleLocation() !== \"hidden\";\n  }\n  /**\n   * Sets question title location relative to the input field. Overrides the `questionTitleLocation` property specified for the question's container (survey, page, or panel).\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionTitleLocation` property specified for the question's container.\n   * - `\"top\"` - Displays the title above the input field.\n   * - `\"bottom\"` - Displays the title below the input field.\n   * - `\"left\"` - Displays the title to the left of the input field.\n   * - `\"hidden\"` - Hides the question title.\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   * @see SurveyModel.questionTitleLocation\n   * @see getTitleLocation\n   * @see isAllowTitleLeft\n   */\n  public get titleLocation(): string {\n    return this.getPropertyValue(\"titleLocation\");\n  }\n  public set titleLocation(value: string) {\n    var isVisibilityChanged =\n      this.titleLocation == \"hidden\" || value == \"hidden\";\n    this.setPropertyValue(\"titleLocation\", value.toLowerCase());\n    this.updateQuestionCss();\n    if (isVisibilityChanged) {\n      this.notifySurveyVisibilityChanged();\n    }\n  }\n  get showTitle(): boolean {\n    return this.getTitleLocation() !== \"hidden\";\n  }\n  set showTitle(newValue: boolean) {\n    this.titleLocation = newValue ? \"default\" : \"hidden\";\n  }\n  public getTitleOwner(): ITitleOwner { return this; }\n  protected getIsTitleRenderedAsString(): boolean { return this.titleLocation === \"hidden\"; }\n  protected notifySurveyOnChildrenVisibilityChanged(): boolean { return false; }\n  private notifySurveyVisibilityChanged(): void {\n    if (!this.canUpdateValueOnVisibleChanged()) return;\n    this.survey.questionVisibilityChanged(this, this.isVisible,\n      !this.parentQuestion || this.parentQuestion.notifySurveyOnChildrenVisibilityChanged());\n    const isClearOnHidden = this.isClearValueOnHidden;\n    if (!this.visible) {\n      this.clearValueOnHidding(isClearOnHidden);\n    }\n    if (isClearOnHidden && this.isVisibleInSurvey) {\n      this.updateValueWithDefaults();\n    }\n  }\n  protected clearValueOnHidding(isClearOnHidden: boolean): void {\n    if (isClearOnHidden) {\n      this.clearValueIfInvisible();\n    }\n  }\n  public get titleWidth(): string {\n    if (this.parent && this.getTitleLocation() === \"left\") {\n      const columns = this.parent.getColumsForElement(this as any);\n      const columnCount = columns.length;\n      if (columnCount !== 0 && !!columns[0].questionTitleWidth) return columns[0].questionTitleWidth;\n      const questionWidth = this.getQuestionParentTitleWidth();\n      const percentWidth = this.getPercentQuestionTitleWidth(questionWidth);\n      if (!percentWidth && !!this.parent) {\n        let width = questionWidth;\n        if (width && !isNaN(width)) width = width + \"px\";\n        return width;\n      }\n      return (percentWidth / (columnCount || 1)) + \"%\";\n    }\n    return undefined;\n  }\n  private getQuestionParentTitleWidth(): any {\n    if (!this.parent) return undefined;\n    const res = this.parent.getQuestionTitleWidth();\n    if (!res && !!this.parentQuestion) return this.parentQuestion.getQuestionParentTitleWidth();\n    return res;\n  }\n  private getPercentQuestionTitleWidth(width: any): number {\n    if (!!width && width[width.length - 1] === \"%\") {\n      return parseInt(width);\n\n    }\n    return undefined;\n  }\n  /**\n   * Returns title location calculated based on the question's `titleLocation` property and the `questionTitleLocation` property of the question's containers (survey, page, or panel).\n   * @see titleLocation\n   * @see SurveyModel.questionTitleLocation\n   */\n  public getTitleLocation(): string {\n    if (this.isFlowLayout) return \"hidden\";\n    var location = this.getTitleLocationCore();\n    if (location === \"left\" && !this.isAllowTitleLeft) location = \"top\";\n    return location;\n  }\n  protected getTitleLocationCore(): string {\n    if (this.titleLocation !== \"default\") return this.titleLocation;\n    if (!!this.parent) return this.parent.getQuestionTitleLocation();\n    if (!!this.survey) return this.survey.questionTitleLocation;\n    return \"top\";\n  }\n  get hasTitleOnLeft(): boolean {\n    return this.hasTitle && this.getTitleLocation() === \"left\";\n  }\n  get hasTitleOnTop(): boolean {\n    return this.hasTitle && this.getTitleLocation() === \"top\";\n  }\n  get hasTitleOnBottom(): boolean {\n    return this.hasTitle && this.getTitleLocation() === \"bottom\";\n  }\n  get hasTitleOnLeftTop(): boolean {\n    if (!this.hasTitle) return false;\n    const location = this.getTitleLocation();\n    return location === \"left\" || location === \"top\";\n  }\n  /**\n   * Specifies the error message position. Overrides the `questionErrorLocation` property specified for the question's container ([survey](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionErrorLocation), [page](https://surveyjs.io/form-library/documentation/api-reference/page-model#questionErrorLocation), or [panel](https://surveyjs.io/form-library/documentation/api-reference/panel-model#questionErrorLocation)).\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionErrorLocation` property specified for the question's container.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   */\n  public get errorLocation(): string {\n    return this.getPropertyValue(\"errorLocation\");\n  }\n  public set errorLocation(val: string) {\n    this.setPropertyValue(\"errorLocation\", val);\n  }\n  public getErrorLocation(): string {\n    if (this.errorLocation !== \"default\") return this.errorLocation;\n    if (this.parentQuestion) return this.parentQuestion.getChildErrorLocation(this);\n    if (this.parent) return this.parent.getQuestionErrorLocation();\n    return this.survey ? this.survey.questionErrorLocation : \"top\";\n  }\n  public getChildErrorLocation(child: Question): string {\n    return this.getErrorLocation();\n  }\n  /**\n   * Returns `false` if the question has no input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel), and similar question types).\n   * @see hasSingleInput\n   */\n  public get hasInput(): boolean {\n    return true;\n  }\n  /**\n   * Returns `false` if the question has no input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)) or has multiple input fields ([Matrix](https://surveyjs.io/form-library/documentation/questionmatrixmodel), [Multiple Text](https://surveyjs.io/form-library/documentation/questionmultipletextmodel)).\n   * @see hasInput\n   */\n  public get hasSingleInput(): boolean {\n    return this.hasInput;\n  }\n  public get inputId(): string {\n    return this.id + \"i\";\n  }\n  protected getDefaultTitleValue(): string { return this.name; }\n  protected getDefaultTitleTagName(): string {\n    return settings.titleTags.question;\n  }\n  /**\n   * Specifies where to display a question description.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Survey's [`questionDescriptionLocation`](https://surveyjs.io/form-library/documentation/surveymodel#questionDescriptionLocation) property.\n   * - `\"underTitle\"` - Displays the description under the question title.\n   * - `\"underInput\"` - Displays the description under the interactive area.\n   * @see description\n   * @see hasDescription\n   */\n  public get descriptionLocation(): string {\n    return this.getPropertyValue(\"descriptionLocation\");\n  }\n  public set descriptionLocation(val: string) {\n    this.setPropertyValue(\"descriptionLocation\", val);\n    this.updateQuestionCss();\n  }\n  get hasDescriptionUnderTitle(): boolean {\n    return this.getDescriptionLocation() == \"underTitle\" && this.hasDescription;\n  }\n  get hasDescriptionUnderInput(): boolean {\n    return this.getDescriptionLocation() == \"underInput\" && this.hasDescription;\n  }\n  private getDescriptionLocation() {\n    if (this.descriptionLocation !== \"default\") return this.descriptionLocation;\n    return !!this.survey\n      ? this.survey.questionDescriptionLocation\n      : \"underTitle\";\n  }\n  protected needClickTitleFunction(): boolean {\n    return super.needClickTitleFunction() || this.hasInput;\n  }\n  protected processTitleClick() {\n    super.processTitleClick();\n    if (this.isCollapsed) return;\n    setTimeout(() => {\n      this.focus();\n    }, 1);\n    return true;\n  }\n  /**\n   * Specifies a custom error message for a required form field.\n   * @see isRequired\n   */\n  public get requiredErrorText(): string {\n    return this.getLocalizableStringText(\"requiredErrorText\");\n  }\n  public set requiredErrorText(val: string) {\n    this.setLocalizableStringText(\"requiredErrorText\", val);\n  }\n  get locRequiredErrorText(): LocalizableString {\n    return this.getLocalizableString(\"requiredErrorText\");\n  }\n  /**\n   * Specifies a caption displayed above the comment area. Applies when the `showCommentArea` property is `true`.\n   * @see showCommentArea\n   * @see comment\n   */\n  public get commentText(): string {\n    return this.getLocalizableStringText(\"commentText\");\n  }\n  public set commentText(val: string) {\n    this.setLocalizableStringText(\"commentText\", val);\n  }\n  get locCommentText(): LocalizableString {\n    return this.getLocalizableString(\"commentText\");\n  }\n  /**\n   * A placeholder for the comment area. Applies when the `showCommentArea` property is `true`.\n   * @see showCommentArea\n   * @see comment\n   * @see commentText\n   */\n  public get commentPlaceholder(): string { return this.getLocalizableStringText(\"commentPlaceholder\"); }\n  public set commentPlaceholder(val: string) { this.setLocalizableStringText(\"commentPlaceholder\", val); }\n  public get locCommentPlaceholder(): LocalizableString { return this.getLocalizableString(\"commentPlaceholder\"); }\n\n  public get commentPlaceHolder(): string {\n    return this.commentPlaceholder;\n  }\n  public set commentPlaceHolder(newValue: string) {\n    this.commentPlaceholder = newValue;\n  }\n  public get renderedCommentPlaceholder(): string {\n    return this.getPropertyValue(\"renderedCommentPlaceholder\") ?? (!this.isReadOnly ? this.commentPlaceHolder : undefined);\n  }\n  private resetRenderedCommentPlaceholder() {\n    this.resetPropertyValue(\"renderedCommentPlaceholder\");\n  }\n  /**\n   * A value to show in HTML questions and in the dynamic titles and descriptions of survey elements when the question value is [empty](#isValueEmpty).\n   *\n   * Default value: `\"\"`\n   *\n   * [Dynamic Texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts (linkStyle))\n   */\n  public get defaultDisplayValue(): string { return this.getLocalizableStringText(\"defaultDisplayValue\"); }\n  public set defaultDisplayValue(val: string) { this.setLocalizableStringText(\"defaultDisplayValue\", val); }\n  public get locDefaultDisplayValue(): LocalizableString { return this.getLocalizableString(\"defaultDisplayValue\"); }\n  public getAllErrors(): Array<SurveyError> {\n    return this.errors.slice();\n  }\n  public getErrorByType(errorType: string): SurveyError {\n    for (let i = 0; i < this.errors.length; i++) {\n      if (this.errors[i].getErrorType() === errorType) return this.errors[i];\n    }\n    return null;\n  }\n  public get customWidget(): QuestionCustomWidget {\n    if (!this.isCustomWidgetRequested && !this.customWidgetValue) {\n      this.isCustomWidgetRequested = true;\n      this.updateCustomWidget();\n    }\n    return this.customWidgetValue;\n  }\n  public updateCustomWidget(): void {\n    this.customWidgetValue = CustomWidgetCollection.Instance.getCustomWidget(this);\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    this.resetRenderedCommentPlaceholder();\n    if (!!this.localeChangedCallback) {\n      this.localeChangedCallback();\n    }\n  }\n  public get isCompositeQuestion(): boolean {\n    return false;\n  }\n  public get isContainer(): boolean { return false; }\n  public onCommentInput(event: any): void {\n    if (this.isInputTextUpdate) {\n      if (event.target) {\n        this.comment = event.target.value;\n      }\n    }\n  }\n  public onCommentChange(event: any): void {\n    this.comment = event.target.value;\n    if (this.comment !== event.target.value) {\n      event.target.value = this.comment;\n    }\n  }\n  public afterRenderQuestionElement(el: HTMLElement): void {\n    if (!this.survey || !this.hasSingleInput) return;\n    this.survey.afterRenderQuestionInput(this, el);\n  }\n  public afterRender(el: HTMLElement): void {\n    this.afterRenderCore(el);\n    if (!this.survey) return;\n    this.survey.afterRenderQuestion(this, el);\n    if (!!this.afterRenderQuestionCallback) {\n      this.afterRenderQuestionCallback(this, el);\n    }\n\n    if (this.supportComment() || this.supportOther()) {\n      this.commentElements = [];\n      this.getCommentElementsId().forEach(id => {\n        const commentEl = el?.querySelector(`#${id}`);\n        if (commentEl)this.commentElements.push(commentEl as HTMLElement);\n      });\n    }\n    this.checkForResponsiveness(el);\n  }\n  public afterRenderCore(element: HTMLElement): void {\n    super.afterRenderCore(element);\n  }\n  protected getCommentElementsId(): Array<string> {\n    return [this.commentId];\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    this.commentElements = undefined;\n  }\n  public get processedTitle(): string {\n    var res = this.locProcessedTitle.textOrHtml;\n    return res ? res : this.name;\n  }\n  public get fullTitle(): string {\n    return this.locTitle.renderedHtml;\n  }\n  protected get titlePattern(): string {\n    return !!this.survey ? this.survey.questionTitlePattern : \"numTitleRequire\";\n  }\n  public get isRequireTextOnStart(): boolean {\n    return this.isRequired && this.titlePattern == \"requireNumTitle\";\n  }\n  public get isRequireTextBeforeTitle(): boolean {\n    return this.isRequired && this.titlePattern == \"numRequireTitle\" && this.requiredMark !== \"\";\n  }\n  public get isRequireTextAfterTitle(): boolean {\n    return this.isRequired && this.titlePattern == \"numTitleRequire\" && this.requiredMark !== \"\";\n  }\n  /**\n   * Disable this property if you want to render the current question on the same line or row with the previous question or panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/arrange-multiple-questions-in-single-line/ (linkStyle))\n   */\n  public get startWithNewLine(): boolean {\n    return this.getPropertyValue(\"startWithNewLine\");\n  }\n  public set startWithNewLine(val: boolean) {\n    if (this.startWithNewLine == val) return;\n    this.setPropertyValue(\"startWithNewLine\", val);\n  }\n  protected calcCssClasses(css: any): any {\n    const classes = { error: {} };\n    this.copyCssClasses(classes, css.question);\n    this.copyCssClasses(classes.error, css.error);\n    this.updateCssClasses(classes, css);\n    return classes;\n  }\n  protected onCalcCssClasses(classes: any): void {\n    super.onCalcCssClasses(classes);\n    if (this.survey) {\n      this.survey.updateQuestionCssClasses(this, classes);\n    }\n    if (this.onUpdateCssClassesCallback) {\n      this.onUpdateCssClassesCallback(classes);\n    }\n  }\n  public get cssRoot(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssRoot\", \"\");\n  }\n  protected setCssRoot(val: string): void {\n    this.setPropertyValue(\"cssRoot\", val);\n  }\n  protected getCssRoot(cssClasses: { [index: string]: string }): string {\n    const hasError = this.hasCssError();\n    return new CssClassBuilder()\n      .append(super.getCssRoot(cssClasses))\n      .append(this.isFlowLayout && !this.isDesignMode\n        ? cssClasses.flowRoot\n        : cssClasses.mainRoot)\n      .append(cssClasses.titleLeftRoot, !this.isFlowLayout && this.hasTitleOnLeft)\n      .append(cssClasses.titleTopRoot, !this.isFlowLayout && this.hasTitleOnTop)\n      .append(cssClasses.titleBottomRoot, !this.isFlowLayout && this.hasTitleOnBottom)\n      .append(cssClasses.descriptionUnderInputRoot, !this.isFlowLayout && this.hasDescriptionUnderInput)\n      .append(cssClasses.hasError, hasError)\n      .append(cssClasses.hasErrorTop, hasError && this.getErrorLocation() == \"top\")\n      .append(cssClasses.hasErrorBottom, hasError && this.getErrorLocation() == \"bottom\")\n      .append(cssClasses.small, !this.width)\n      .append(cssClasses.answered, this.isAnswered)\n      .append(cssClasses.noPointerEventsMode, this.isReadOnlyAttr)\n      .toString();\n  }\n  public get cssHeader(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssHeader\", \"\");\n  }\n  protected setCssHeader(val: string): void {\n    this.setPropertyValue(\"cssHeader\", val);\n  }\n  protected getCssHeader(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(cssClasses.header)\n      .append(cssClasses.headerTop, this.hasTitleOnTop)\n      .append(cssClasses.headerLeft, this.hasTitleOnLeft)\n      .append(cssClasses.headerBottom, this.hasTitleOnBottom)\n      .toString();\n  }\n  protected supportContainerQueries() {\n    return false;\n  }\n  public get cssContent(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssContent\", \"\");\n  }\n  protected setCssContent(val: string): void {\n    this.setPropertyValue(\"cssContent\", val);\n  }\n  protected getCssContent(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(cssClasses.content)\n      .append(cssClasses.contentSupportContainerQueries, this.supportContainerQueries())\n      .append(cssClasses.contentLeft, this.hasTitleOnLeft)\n      .toString();\n  }\n  public get cssTitle(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssTitle\", \"\");\n  }\n  protected setCssTitle(val: string): void {\n    this.setPropertyValue(\"cssTitle\", val);\n  }\n  protected getCssTitle(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(super.getCssTitle(cssClasses))\n      .append(cssClasses.singleInputTitle, !!this.singleInputQuestion)\n      .append(cssClasses.titleOnAnswer, !this.containsErrors && this.isAnswered)\n      .append(cssClasses.titleEmpty, !this.title.trim())\n      .toString();\n  }\n  public get cssDescription(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssDescription\", \"\");\n  }\n  protected setCssDescription(val: string): void {\n    this.setPropertyValue(\"cssDescription\", val);\n  }\n  protected getCssDescription(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(cssClasses.description)\n      .append(cssClasses.descriptionUnderInput, this.getDescriptionLocation() == \"underInput\")\n      .toString();\n  }\n  public get showErrorsAboveQuestion(): boolean {\n    return this.getErrorLocation() === \"top\";\n  }\n  public get showErrorsBelowQuestion(): boolean {\n    return this.getErrorLocation() === \"bottom\";\n  }\n\n  public get cssError(): string {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssError\", \"\");\n  }\n  protected setCssError(val: string): void {\n    this.setPropertyValue(\"cssError\", val);\n  }\n  protected getCssError(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(cssClasses.error.root)\n      .append(cssClasses.errorsContainer)\n      .append(cssClasses.errorsContainerTop, this.showErrorsAboveQuestion)\n      .append(cssClasses.errorsContainerBottom, this.showErrorsBelowQuestion)\n      .toString();\n  }\n  protected hasCssError(): boolean {\n    return this.errors.length > 0 || this.hasCssErrorCallback();\n  }\n  private get isSingleInputQuestionMode(): boolean {\n    return !!this.parentQuestion && this.survey?.isSingleVisibleInput;\n  }\n  protected getIsNested(): boolean {\n    if (!!this.isSingleInputQuestionMode) return false;\n    return super.getIsNested();\n  }\n  protected getHasFrameV2(): boolean {\n    if (this.isSingleInputQuestionMode) return true;\n    return super.getHasFrameV2();\n  }\n  public getRootCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssRoot, !this.singleInputQuestion)\n      .append(this.cssClasses.mobile, this.isMobile)\n      .append(this.cssClasses.readOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.disabled, this.isDisabledStyle)\n      .append(this.cssClasses.preview, this.isPreviewStyle)\n      .append(this.cssClasses.invisible, !this.isDesignMode && this.areInvisibleElementsShowing && !this.visible)\n      .toString();\n  }\n\n  public getQuestionRootCss() {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootMobile, this.isMobile)\n      .toString();\n  }\n  public updateElementCss(reNew?: boolean): void {\n    if (this.wasRendered) {\n      super.updateElementCss(reNew);\n      if (reNew) {\n        this.updateQuestionCss(true);\n      }\n    } else {\n      this.clearCssClasses();\n    }\n    this.resetIndents();\n  }\n  protected updateQuestionCss(reNew?: boolean): void {\n    if (this.isLoadingFromJson || !this.survey) return;\n    if (this.wasRendered) {\n      this.updateElementCssCore(this.cssClasses);\n    } else {\n      this.isRequireUpdateElements = true;\n    }\n  }\n  private ensureElementCss() {\n    if (!this.cssClassesValue) {\n      this.updateQuestionCss(true);\n    }\n  }\n  protected updateElementCssCore(cssClasses: any): void {\n    this.setCssRoot(this.getCssRoot(cssClasses));\n    this.setCssHeader(this.getCssHeader(cssClasses));\n    this.setCssContent(this.getCssContent(cssClasses));\n    this.setCssTitle(this.getCssTitle(cssClasses));\n    this.setCssDescription(this.getCssDescription(cssClasses));\n    this.setCssError(this.getCssError(cssClasses));\n  }\n  protected updateCssClasses(res: any, css: any): void {\n    if (!css.question) return;\n    const objCss = css[this.getCssType()];\n    const titleBuilder = new CssClassBuilder().append(res.title)\n      .append(css.question.titleRequired, this.isRequired);\n    res.title = titleBuilder.toString();\n\n    const rootBuilder = new CssClassBuilder().append(res.root)\n      .append(objCss, this.isRequired && !!css.question.required);\n    if (objCss === undefined || objCss === null) {\n      res.root = rootBuilder.toString();\n    } else if (typeof objCss === \"string\" || objCss instanceof String) {\n      res.root = rootBuilder.append(objCss.toString()).toString();\n    } else {\n      res.root = rootBuilder.toString();\n      for (const key in objCss) {\n        res[key] = objCss[key];\n      }\n    }\n  }\n  protected getCssType(): string {\n    return this.getType();\n  }\n\n  public get renderCssRoot(): string {\n    return this.cssClasses.root || undefined;\n  }\n  protected calcPaddingLeft(): string {\n    return this.getIndentSize(this.indent);\n  }\n  protected calcPaddingRight(): string {\n    return this.getIndentSize(this.rightIndent);\n  }\n  private getIndentSize(indent: number): string {\n    if (indent < 1 || !this.getSurvey() || !this.cssClasses || !this.cssClasses.indent) return \"\";\n    return indent * this.cssClasses.indent + \"px\";\n  }\n  /**\n   * Moves focus to the input field of this question.\n   * @param onError Pass `true` if you want to focus an input field with the first validation error. Default value: `false` (focuses the first input field). Applies to question types with multiple input fields.\n   */\n  public focus(onError: boolean = false, scrollIfVisible?: boolean): void {\n    if (this.isDesignMode || !this.isVisible || !this.survey) return;\n    let page = this.page;\n    const shouldChangePage = !!page && this.survey.activePage !== page;\n    const isSingleInput = this.survey.isSingleVisibleInput;\n    if (shouldChangePage && !isSingleInput) {\n      this.survey.focusQuestionByInstance(this, onError);\n    } else {\n      if (isSingleInput) {\n        this.survey.currentSingleQuestion = this.rootParentQuestion;\n        const parents = this.getParentQuestions();\n        for (let i = parents.length - 1; i >= 1; i--) {\n          if (i === parents.length - 1) {\n            parents[i].setSingleInputQuestion(parents[i - 1]);\n          }\n        }\n        if (parents.length > 0) {\n          parents[0].setSingleInputQuestion(this);\n        }\n        this.focusInputElement(onError);\n      } else {\n        this.expandAllParents();\n        const scrollOptions: ScrollIntoViewOptions = (this.survey as SurveyModel)[\"isSmoothScrollEnabled\"] ? { behavior: \"smooth\" } : undefined;\n        this.survey.scrollElementToTop(this, this, null, this.id, scrollIfVisible, scrollOptions, undefined, () => {\n          this.focusInputElement(onError);\n        });\n      }\n    }\n  }\n  focusInputElement(onError: boolean): void {\n    const id = !onError ? this.getFirstInputElementId() : this.getFirstErrorInputElementId();\n    const surveyRoot = (this.survey as SurveyModel)?.rootElement;\n    if (SurveyElement.FocusElement(id, false, surveyRoot)) {\n      this.fireCallback(this.focusCallback);\n    }\n  }\n  private get isValidateVisitedEmptyFields(): boolean {\n    return this.supportEmptyValidation() && !!this.survey && this.survey.getValidateVisitedEmptyFields() && this.isEmpty();\n  }\n  private isFocusEmpty: boolean;\n  protected supportEmptyValidation(): boolean { return false; }\n  onBlur(event: any): void {\n    this.onBlurCore(event);\n  }\n  onFocus(event: any): void {\n    this.onFocusCore(event);\n  }\n  protected onBlurCore(event: any): void {\n    if (this.isFocusEmpty && this.isEmpty()) {\n      this.validate(true);\n    }\n  }\n  protected onFocusCore(event: any): void {\n    this.isFocusEmpty = this.isValidateVisitedEmptyFields;\n  }\n  public expandAllParents(): void {\n    this.expandAllParentsCore(this);\n  }\n  private expandAllParentsCore(element: IElement) {\n    if (!element) return;\n    if (element.isCollapsed) {\n      element.expand();\n    }\n    this.expandAllParentsCore((<any>element).parent);\n    this.expandAllParentsCore((<any>element).parentQuestion);\n  }\n  public focusIn(): void {\n    if (!this.survey || this.isDisposed || this.isContainer) return;\n    (this.survey as SurveyModel).whenQuestionFocusIn(this);\n  }\n  protected fireCallback(callback: () => void): void {\n    if (callback) callback();\n  }\n  public getOthersMaxLength(): any {\n    if (!this.survey) return null;\n    return this.survey.maxCommentLength > 0 ? this.survey.maxCommentLength : null;\n  }\n  protected onCreating(): void { }\n  public getFirstQuestionToFocus(withError: boolean): Question {\n    return this.hasInput && (!withError || this.currentErrorCount > 0) ? this : null;\n  }\n  protected getFirstInputElementId(): string {\n    return this.inputId;\n  }\n  protected getFirstErrorInputElementId(): string {\n    return this.getFirstInputElementId();\n  }\n  public supportComment(): boolean {\n    const prop = this.getPropertyByName(\"showCommentArea\");\n    return !prop || prop.visible;\n  }\n  public supportOther(): boolean {\n    return false;\n  }\n  /**\n   * Makes the question required. If a respondent skips a required question, the survey displays a validation error.\n   * @see requiredIf\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  public get isRequired(): boolean {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  public set isRequired(val: boolean) {\n    this.setPropertyValue(\"isRequired\", val);\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this question becomes required.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  public get requiredIf(): string {\n    return this.getPropertyValue(\"requiredIf\", \"\");\n  }\n  public set requiredIf(val: string) {\n    this.setPropertyValue(\"requiredIf\", val);\n  }\n  /**\n   * Specifies whether to display a comment area.\n   * @see comment\n   * @see commentText\n   * @see showOtherItem\n   */\n  public get showCommentArea(): boolean {\n    return this.getPropertyValue(\"showCommentArea\", false);\n  }\n  public set showCommentArea(val: boolean) {\n    if (!this.supportComment()) return;\n    this.setPropertyValue(\"showCommentArea\", val);\n  }\n\n  public get hasComment(): boolean {\n    return this.showCommentArea;\n  }\n  public set hasComment(val: boolean) {\n    this.showCommentArea = val;\n  }\n\n  /**\n   * A value to assign to the `id` attribute of the rendered HTML element. A default `id` is generated automatically.\n   */\n  public get id(): string {\n    return this.getPropertyValue(\"id\");\n  }\n  public set id(val: string) {\n    this.setPropertyValue(\"id\", val);\n  }\n  public get ariaTitleId(): string {\n    return this.id + \"_ariaTitle\";\n  }\n  public get ariaDescriptionId(): string {\n    return this.id + \"_ariaDescription\";\n  }\n  public get commentId(): string {\n    return this.id + \"_comment\";\n  }\n  public get requireUpdateCommentValue(): boolean { return this.hasComment; }\n  public readOnlyCallback: () => boolean;\n  public get isReadOnly(): boolean {\n    const isParentReadOnly = !!this.parent && this.parent.isReadOnly;\n    const isPareQuestionReadOnly = !!this.parentQuestion && this.parentQuestion.isReadOnly;\n    const isSurveyReadOnly = !!this.survey && this.survey.isDisplayMode;\n    const callbackVal = !!this.readOnlyCallback && this.readOnlyCallback();\n    return this.readOnly || isParentReadOnly || isSurveyReadOnly || isPareQuestionReadOnly || callbackVal;\n  }\n  public get isInputReadOnly(): boolean {\n    if (this.forceIsInputReadOnly !== undefined) {\n      return this.forceIsInputReadOnly;\n    }\n    return this.isReadOnly || this.isDesignMode;\n  }\n  public get renderedInputReadOnly(): string {\n    return this.isInputReadOnly ? \"\" : undefined;\n  }\n  public get renderedInputDisabled(): string {\n    return this.isInputReadOnly ? \"\" : undefined;\n  }\n  public get isReadOnlyAttr(): boolean {\n    return this.isReadOnly;\n  }\n  public get isDisabledAttr(): boolean {\n    return this.isDesignMode || (!!this.readOnlyCallback && this.readOnlyCallback());\n  }\n  protected onReadOnlyChanged(): void {\n    this.setPropertyValue(\"isInputReadOnly\", this.isInputReadOnly);\n    super.onReadOnlyChanged();\n    if (this.isReadOnly) {\n      this.clearErrors();\n    }\n    this.updateQuestionCss();\n    this.resetRenderedCommentPlaceholder();\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this question becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-conditionally-make-input-field-read-only/ (linkStyle))\n   * @see readOnly\n   * @see isReadOnly\n   */\n  public get enableIf(): string {\n    return this.getPropertyValue(\"enableIf\", \"\");\n  }\n  public set enableIf(val: string) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  public surveyChoiceItemVisibilityChange(): void { }\n  public runCondition(properties: HashTable<any>): void {\n    if (this.isDesignMode) return;\n    if (!properties) properties = {};\n    properties[\"question\"] = this;\n    this.runConditionCore(properties);\n    if (!this.isValueChangedDirectly && (!this.isClearValueOnHidden || this.isVisibleInSurvey)) {\n      this.runDefaultValueExpression(properties);\n    }\n  }\n  public get isInDesignMode(): boolean {\n    return !this.isContentElement && this.isDesignMode;\n  }\n  /**\n   * A question number or letter (depends on the `questionStartIndex` property of the question container (panel, page, or survey)).\n   *\n   * When the question number, title, or the entire question is invisible, this property returns an empty string.\n   * @see SurveyModel.questionStartIndex\n   * @see showNumber\n   * @see titleLocation\n   * @see visibleIf\n   */\n  public get no(): string {\n    return this.getPropertyValue(\"no\");\n  }\n  private calcNo(): string {\n    if (!this.hasTitle || !this.showNumber) return \"\";\n    let parentIndex: number | undefined;\n    if (!!this.parent) {\n      parentIndex = (<any>this.parent).visibleIndex;\n    }\n    let no = Helpers.getNumberByIndex(this.visibleIndex, this.getStartIndex(), parentIndex);\n    if (!!this.parent) {\n      no = (<any>this.parent).addNoFromChild(no);\n    }\n    if (!!this.survey) {\n      no = this.survey.getUpdatedQuestionNo(this, no);\n    }\n    return no;\n  }\n  protected getStartIndex(): string {\n    if (!!this.parent) return this.parent.getQuestionStartIndex();\n    if (!!this.survey) return this.survey.questionStartIndex;\n    return \"\";\n  }\n  public onSurveyLoad(): void {\n    this.isCustomWidgetRequested = false;\n    this.fireCallback(this.surveyLoadCallback);\n    this.updateValueWithDefaults();\n    if (this.isEmpty()) {\n      this.initDataFromSurvey();\n    }\n  }\n  protected onSetData(): void {\n    super.onSetData();\n    if (!this.isDesignMode && !!this.survey && !this.isLoadingFromJson) {\n      this.initDataFromSurvey();\n      this.onSurveyValueChanged(this.value);\n      this.updateValueWithDefaults();\n      this.updateIsAnswered();\n    }\n  }\n  protected initDataFromSurvey(): void {\n    if (!!this.data) {\n      const val = this.data.getValue(this.getValueName());\n      if (!Helpers.isValueEmpty(val) || !this.isLoadingFromJson) {\n        this.updateValueFromSurvey(val);\n      }\n      this.initCommentFromSurvey();\n    }\n  }\n  protected initCommentFromSurvey(): void {\n    if (!!this.data && this.requireUpdateCommentValue) {\n      this.updateCommentFromSurvey(this.data.getComment(this.getValueName()));\n    } else {\n      this.updateCommentFromSurvey(\"\");\n    }\n  }\n  protected runExpression(expression: string): any {\n    if (!this.survey || !expression) return undefined;\n    return this.survey.runExpression(expression);\n  }\n  get commentAreaRows(): number {\n    return this.survey && this.survey.commentAreaRows;\n  }\n  private get autoGrowComment(): boolean {\n    return this.survey && this.survey.autoGrowComment;\n  }\n  private get allowResizeComment(): boolean {\n    return this.survey && this.survey.allowResizeComment;\n  }\n  private get questionValue(): any {\n    return this.getPropertyValueWithoutDefault(\"value\");\n  }\n  private set questionValue(val: any) {\n    this.setPropertyValue(\"value\", val);\n  }\n  private get questionComment(): string {\n    return this.getPropertyValueWithoutDefault(\"comment\");\n  }\n  private set questionComment(val: string) {\n    this.setPropertyValue(\"comment\", val);\n    this.fireCallback(this.commentChangedCallback);\n  }\n  public get isValueArray(): boolean { return false; }\n  /**\n   * Gets or sets the question value.\n   *\n   * The following table illustrates how the value type depends on the question type:\n   *\n   * | Question type | Value type(s) |\n   * | ------------- | ------------- |\n   * | Checkboxes | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Dropdown | `string` \\| `number` |\n   * | Dynamic Matrix | `Array<object>` |\n   * | Dynamic Panel | `Array<object>` |\n   * | Expression | `string` \\| `number` \\| `boolean` |\n   * | File Upload | `File` \\| `Array<File>` |\n   * | HTML | (no value) |\n   * | Image | (no value) |\n   * | Image Picker | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Long Text | `string` |\n   * | Multi-Select Dropdown | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Multi-Select Matrix | `object` |\n   * | Multiple Textboxes | `Array<string>` |\n   * | Panel | (no value) |\n   * | Radio Button Group | `string` \\| `number` |\n   * | Ranking | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Rating Scale | `number` \\| `string` |\n   * | Slider | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Signature | `string` (base64-encoded image) |\n   * | Single-Line Input | `string` \\| `number` \\| `Date` |\n   * | Single-Select Matrix | `object` |\n   * | Yes/No (Boolean) | `boolean` \\| `string` |\n   */\n  public get value(): any {\n    return this.getValueCore();\n  }\n  public set value(newValue: any) {\n    this.setNewValue(newValue);\n  }\n  public getStructuredValue(level: number = -1): any {\n    return this.value;\n  }\n  public get hasFilteredValue(): boolean { return false; }\n  public getFilteredValue(isUnwrapped?: boolean): any { return this.value; }\n  public getFilteredName(): any { return this.getValueName(); }\n  public get valueForSurvey(): any {\n    return this.valueForSurveyCore(this.value);\n  }\n  protected valueForSurveyCore(val: any): any {\n    if (!!this.valueToDataCallback) {\n      return this.valueToDataCallback(val);\n    }\n    return val;\n  }\n  protected valueFromDataCore(val: any): any {\n    if (!!this.valueFromDataCallback) {\n      return this.valueFromDataCallback(val);\n    }\n    return val;\n  }\n  /**\n   * Sets the question's `value` and `comment` properties to `undefined`.\n   * @see value\n   * @see comment\n   */\n  public clearValue(keepComment?: boolean): void {\n    if (this.value !== undefined) {\n      this.value = undefined;\n    }\n    if (!!this.comment && keepComment !== true) {\n      this.comment = undefined;\n    }\n    this.setValueChangedDirectly(false);\n  }\n  clearValueOnly(): void {\n    this.clearValue(true);\n  }\n  public unbindValue(): void {\n    this.clearValue();\n  }\n  public createValueCopy(): any {\n    return this.getUnbindValue(this.value);\n  }\n  initDataUI(): void { }\n  protected getUnbindValue(value: any): any {\n    if (this.isValueSurveyElement(value)) return value;\n    return Helpers.getUnbindValue(value);\n  }\n  protected isValueSurveyElement(val: any): boolean {\n    if (!val) return false;\n    if (Array.isArray(val))\n      return val.length > 0 ? this.isValueSurveyElement(val[0]) : false;\n    return val.isSurveyObj === true;\n  }\n  private canClearValueAsInvisible(reason: string): boolean {\n    if (reason === \"onHiddenContainer\" && !this.isParentVisible) return true;\n    if (this.isVisibleInSurvey) return false;\n    if (!!this.page && this.page.isStartPage) return false;\n    if (!this.survey) return true;\n    return !this.survey.hasVisibleQuestionByValueName(this);\n  }\n  /**\n   * Returns `true` if a parent element (page or panel) is visible.\n   */\n  public get isParentVisible(): boolean {\n    if (this.parentQuestion && !this.parentQuestion.isVisible) return false;\n    var parent = this.parent;\n    while(parent) {\n      if (!parent.isVisible) return false;\n      parent = parent.parent;\n    }\n    return true;\n  }\n  public clearValueIfInvisible(reason: string = \"onHidden\"): void {\n    const clearIf = this.getClearIfInvisible();\n    if (clearIf === \"none\") return;\n    if (reason === \"onHidden\" && clearIf === \"onComplete\") return;\n    if (reason === \"onHiddenContainer\" && clearIf !== reason) return;\n    this.clearValueIfInvisibleCore(reason);\n  }\n  protected clearValueIfInvisibleCore(reason: string): void {\n    if (this.canClearValueAsInvisible(reason)) {\n      this.clearValue();\n    }\n  }\n  /**\n   * Specifies when to clear the question value if the question becomes invisible.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Survey's [`clearInvisibleValues`](https://surveyjs.io/form-library/documentation/surveymodel#clearInvisibleValues) property.\n   * - `\"onHidden\"` - Clears the value when the question becomes invisible. If a question is invisible on startup and has an initial value, this value will be cleared when the survey is complete.\n   * - `\"onHiddenContainer\"` - Clears the value when the question or its container (page or panel) becomes invisible. If a question is invisible on startup and has an initial value, this value will be cleared when the survey is complete.\n   * - `\"onComplete\"` - Clears the value when the survey is complete.\n   * - `\"none\"` - Never clears the value of an invisible question.\n   * @see SurveyModel.clearInvisibleValues\n   * @see visible\n   * @see SurveyModel.onComplete\n   */\n  public get clearIfInvisible(): string {\n    return this.getPropertyValue(\"clearIfInvisible\");\n  }\n  public set clearIfInvisible(val: string) {\n    this.setPropertyValue(\"clearIfInvisible\", val);\n  }\n  protected getClearIfInvisible(): string {\n    const res = this.clearIfInvisible;\n    if (!!this.survey) return this.survey.getQuestionClearIfInvisible(res);\n    return res !== \"default\" ? res : \"onComplete\";\n  }\n  public get displayValue(): any {\n    if (this.isLoadingFromJson) return \"\";\n    return this.getDisplayValue(true);\n  }\n  /**\n   * Returns a display text that corresponds to the question value. For example, if you call this method for a Dropdown question, it returns an item text instead of an item value.\n   * @param keysAsText Applies when the question value is an object (in Matrix, Multiple Text, and similar questions). Pass `true` if not only values in the object should be display texts, but also keys. Default value: `false`.\n   * @param value Specify this parameter to get a display text for a specific value, not for the current question value. If the question value is an object, this parameter should be a similar object.\n   */\n  public getDisplayValue(keysAsText: boolean, value: any = undefined): any {\n    var res = this.calcDisplayValue(keysAsText, value);\n    if (this.survey) {\n      res = this.survey.getQuestionDisplayValue(this, res);\n    }\n    return !!this.displayValueCallback ? this.displayValueCallback(res) : res;\n  }\n  private calcDisplayValue(keysAsText: boolean, value: any = undefined): any {\n    if (this.customWidget) {\n      var res = this.customWidget.getDisplayValue(this, value);\n      if (res) return res;\n    }\n    value = value == undefined ? this.createValueCopy() : value;\n    if (this.isValueEmpty(value) && !this.locDefaultDisplayValue.isEmpty) {\n      value = this.defaultDisplayValue;\n    }\n    if (this.isValueEmpty(value, !this.allowSpaceAsAnswer)) return this.getDisplayValueEmpty();\n    return this.getDisplayValueCore(keysAsText, value);\n  }\n  protected getDisplayValueCore(keyAsText: boolean, value: any): any {\n    return value;\n  }\n  protected getDisplayValueEmpty(): string {\n    return \"\";\n  }\n  /**\n   * A default value for the question. Ignored for question types that cannot have a [value](https://surveyjs.io/form-library/documentation/question#value) (for example, HTML).\n   *\n   * The default value is used as a question value in the following cases:\n   *\n   * - While the survey is being loaded from JSON.\n   * - The question is just added to the survey and does not yet have an answer.\n   * - The respondent left the answer empty.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/specify-default-question-value-dynamically (linkStyle))\n   * @see defaultValueExpression\n   */\n  public get defaultValue(): any {\n    return this.getPropertyValue(\"defaultValue\");\n  }\n  public set defaultValue(val: any) {\n    if (this.isValueExpression(val)) {\n      this.defaultValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"defaultValue\", this.valueToData(val));\n    this.updateValueWithDefaults();\n  }\n  /**\n   * An expression used to calculate the [`defaultValue`](https://surveyjs.io/form-library/documentation/question#defaultValue).\n   *\n   * This expression applies until the question [`value`](https://surveyjs.io/form-library/documentation/question#value) is specified by an end user or programmatically.\n   *\n   * An expression can reference other questions as follows:\n   *\n   * - `{other_question_name}`\n   * - `{panel.other_question_name}` (to access questions inside the same dynamic panel)\n   * - `{row.other_question_name}` (to access questions inside the same dynamic matrix or multi-column dropdown)\n   *\n   * An expression can also include built-in and custom functions for advanced calculations. For example, if the `defaultValue` should be today's date, set the `defaultValueExpression` to `\"today()\"`, and the corresponding built-in function will be executed each time the survey is loaded. Refer to the following help topic for more information: [Built-In Functions](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#built-in-functions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/specify-default-question-value-dynamically (linkStyle))\n   * @see defaultValue\n   * @see setValueExpression\n   */\n  public get defaultValueExpression(): any {\n    return this.getPropertyValue(\"defaultValueExpression\");\n  }\n  public set defaultValueExpression(val: any) {\n    this.setPropertyValue(\"defaultValueExpression\", val);\n    this.defaultValueRunner = undefined;\n    this.updateValueWithDefaults();\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `true`, the question value is reset to [default](#defaultValue).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see setValueIf\n   */\n  public get resetValueIf(): string {\n    return this.getPropertyValue(\"resetValueIf\");\n  }\n  public set resetValueIf(val: string) {\n    this.setPropertyValue(\"resetValueIf\", val);\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `true`, the question value is set to a value calculated using the [`setValueExpression`](#setValueExpression).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see resetValueIf\n   */\n  public get setValueIf(): string {\n    return this.getPropertyValue(\"setValueIf\");\n  }\n  public set setValueIf(val: string) {\n    this.setPropertyValue(\"setValueIf\", val);\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) that calculates the question value.\n   *\n   * The `setValueExpression` is re-evaluated whenever a referenced question's value changes. If you also specify the [`setValueIf`](#setValueIf) expression, re-evaluation occurs only when it returns `true`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see defaultValueExpression\n   * @see resetValueIf\n   */\n  public get setValueExpression(): string {\n    return this.getPropertyValue(\"setValueExpression\");\n  }\n  public set setValueExpression(val: string) {\n    this.setPropertyValue(\"setValueExpression\", val);\n  }\n  public get resizeStyle() {\n    return this.allowResizeComment ? \"both\" : \"none\";\n  }\n  /**\n   * Returns the question value as an object in which the question name, title, value, and other parameters are stored as individual properties.\n   *\n   * If the question can have more than one value (Matrix, Multiple Text), the object enables the `isNode` flag and stores information about these values in the `data` property. Refer to the following help topic for more information: [Access Full Survey Results](https://surveyjs.io/form-library/documentation/handle-survey-results-access#access-full-survey-results).\n   *\n   * Pass an object with the `includeEmpty` property set to `false` if you want to skip empty answers.\n   */\n  public getPlainData(options?: IPlainDataOptions): IQuestionPlainData {\n    if (!options) {\n      options = { includeEmpty: true, includeQuestionTypes: false };\n    }\n    if (options.includeEmpty || !this.isEmpty()) {\n      var questionPlainData: IQuestionPlainData = {\n        name: this.name,\n        title: this.locTitle.renderedHtml,\n        value: this.value,\n        displayValue: this.displayValue,\n        isNode: false,\n        getString: (val: any) =>\n          typeof val === \"object\" ? JSON.stringify(val) : val,\n      };\n      if (options.includeQuestionTypes === true) {\n        questionPlainData.questionType = this.getType();\n      }\n      (options.calculations || []).forEach((calculation) => {\n        questionPlainData[calculation.propertyName] = this.getPlainDataCalculatedValue(calculation.propertyName);\n      });\n      if (this.hasComment) {\n        questionPlainData.isNode = true;\n        questionPlainData.data = [\n          {\n            name: 0,\n            isComment: true,\n            title: \"Comment\",\n            value: settings.commentSuffix,\n            displayValue: this.comment,\n            getString: (val: any) =>\n              typeof val === \"object\" ? JSON.stringify(val) : val,\n            isNode: false,\n          },\n        ];\n      }\n      return questionPlainData;\n    }\n    return undefined;\n  }\n  protected getPlainDataCalculatedValue(propName: string): any {\n    return this[propName];\n  }\n  /**\n   * A correct answer to this question. Specify this property if you want to [create a quiz](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see SurveyModel.getCorrectAnswerCount\n   * @see SurveyModel.getIncorrectAnswerCount\n   */\n  public get correctAnswer(): any {\n    return this.getPropertyValue(\"correctAnswer\");\n  }\n  public set correctAnswer(val: any) {\n    this.setPropertyValue(\"correctAnswer\", this.valueToData(val));\n  }\n  /**\n   * The number of quiz questions. A question counts if it is visible, has an input field, and specifies `correctAnswer`.\n   * @see [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz)\n   * @see correctAnswer\n   * @see SurveyModel.getQuizQuestions\n   */\n  public get quizQuestionCount(): number {\n    if (\n      this.isVisible &&\n      this.hasInput &&\n      !this.isValueEmpty(this.correctAnswer)\n    )\n      return this.getQuizQuestionCount();\n    return 0;\n  }\n  public get correctAnswerCount(): number {\n    if (!this.isEmpty() && !this.isValueEmpty(this.correctAnswer))\n      return this.getCorrectAnswerCount();\n    return 0;\n  }\n  protected getQuizQuestionCount(): number {\n    return 1;\n  }\n  protected getCorrectAnswerCount(): number {\n    return this.checkIfAnswerCorrect() ? 1 : 0;\n  }\n  protected checkIfAnswerCorrect(): boolean {\n    const isEqual = Helpers.isTwoValueEquals(this.value, this.correctAnswer, this.getAnswerCorrectIgnoreOrder(), settings.comparator.caseSensitive, true);\n    const correct = isEqual ? 1 : 0;\n    const incorrect = this.quizQuestionCount - correct;\n    const options = {\n      result: isEqual,\n      correctAnswers: correct,\n      correctAnswerCount: correct,\n      incorrectAnswers: incorrect,\n      incorrectAnswerCount: incorrect,\n    };\n    if (!!this.survey) {\n      this.survey.onCorrectQuestionAnswer(this, options);\n    }\n    return options.result;\n  }\n  protected getAnswerCorrectIgnoreOrder(): boolean { return false; }\n  /**\n  * Returns `true` if a question answer matches the [`correctAnswer`](#correctAnswer) property value.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/create-a-scored-quiz (linkStyle))\n  * @see SurveyModel.getQuizQuestions\n  */\n  public isAnswerCorrect(): boolean {\n    return this.correctAnswerCount == this.quizQuestionCount;\n  }\n  public updateValueWithDefaults(): void {\n    if (this.isLoadingFromJson || (!this.isDesignMode && this.isDefaultValueEmpty())) return;\n    const isEmpty = this.isEmpty();\n    if (!this.isDesignMode && !isEmpty) return;\n    if (isEmpty && this.isDefaultValueEmpty()) return;\n    if (this.isClearValueOnHidden && !this.isVisible) return;\n    if (this.isDesignMode && this.isContentElement && this.isDefaultValueEmpty()) return;\n    this.setDefaultValue();\n  }\n  public get isValueDefault(): boolean {\n    return !this.isEmpty() && (this.isTwoValueEquals(this.defaultValue, this.value) || !this.isValueChangedDirectly && !!this.defaultValueExpression);\n  }\n  protected get isClearValueOnHidden(): boolean {\n    const clearIf = this.getClearIfInvisible();\n    if (clearIf === \"none\" || clearIf === \"onComplete\") return false;\n    return clearIf === \"onHidden\" || clearIf === \"onHiddenContainer\";\n  }\n  getQuestionFromArray(name: string, index: number): IQuestion {\n    return null;\n  }\n  public getDefaultValue(): any {\n    return this.defaultValue;\n  }\n  protected isDefaultValueEmpty(): boolean {\n    return !this.defaultValueExpression && this.isValueEmpty(this.defaultValue, !this.allowSpaceAsAnswer);\n  }\n  protected setDefaultValue(): void {\n    this.setDefaultValueCore((val: any): void => {\n      val = this.convertToCorrectValue(val);\n      if (!this.isTwoValueEquals(this.value, val)) {\n        this.setDefaultIntoValue(val);\n      }\n    });\n  }\n  protected setDefaultIntoValue(val: any): void {\n    this.value = val;\n  }\n  private setDefaultValueCore(setFunc: (val: any) => void): void {\n    const func = (val: any) => {\n      this.runExpressionSetValueCore(val, setFunc);\n    };\n    if (!this.runDefaultValueExpression(undefined, func)) {\n      func(this.getUnbindValue(this.defaultValue));\n    }\n  }\n  protected updateValueWithDefaultsOrClear(): void {\n    if (this.isDesignMode || this.isLoadingFromJson) return;\n    if (this.isDefaultValueEmpty()) {\n      this.clearValue();\n    } else {\n      this.setDefaultValue();\n    }\n  }\n  protected isValueExpression(val: any): boolean {\n    return !!val && typeof val == \"string\" && val.length > 0 && val[0] == \"=\";\n  }\n  protected convertFuncValuetoQuestionValue(val: any): any {\n    return Helpers.convertValToQuestionVal(val);\n  }\n  private runExpressionSetValueCore(val: any, setFunc?: (val: any) => void): void {\n    setFunc(this.convertFuncValuetoQuestionValue(val));\n  }\n  private runExpressionSetValue(val: any): void {\n    this.runExpressionSetValueCore(val, (val: any): void => {\n      if (!this.isTwoValueEquals(this.value, val)) {\n        this.startSetValueOnExpression();\n        this.value = val;\n        this.finishSetValueOnExpression();\n      }\n    });\n  }\n  protected startSetValueOnExpression(): void {\n    this.survey?.startSetValueOnExpression();\n  }\n  protected finishSetValueOnExpression(): void {\n    this.survey?.finishSetValueOnExpression();\n  }\n  private runDefaultValueExpression(properties: HashTable<any> = null, setFunc?: (val: any) => void): boolean {\n    if (!this.data) return false;\n    if (!setFunc) {\n      setFunc = (val: any): void => {\n        this.runExpressionSetValue(val);\n      };\n    }\n    if (!properties) {\n      properties = this.defaultValueExpression ? this.data.getFilteredProperties() : {};\n      properties[\"question\"] = this;\n    }\n    return this.runExpressionByProperty(\"defaultValueExpression\", properties, (res: any) => {\n      if (res == undefined) res = this.defaultValue;\n      this.isChangingViaDefaultValue = true;\n      setFunc(res);\n      this.isChangingViaDefaultValue = false;\n    });\n  }\n  /**\n   * A comment to the selected question value. Enable the `showCommentArea` property to allow users to leave comments.\n   * @see showCommentArea\n   * @see commentText\n   */\n  public get comment(): string {\n    return this.getQuestionComment();\n  }\n  public set comment(newValue: string) {\n    if (!!newValue) {\n      const trimmedValue = newValue.toString().trim();\n      if (trimmedValue !== newValue) {\n        newValue = trimmedValue;\n        if (newValue === this.comment) {\n          this.setPropertyValueDirectly(\"comment\", newValue);\n        }\n      }\n    }\n    if (this.comment == newValue) return;\n    this.setNewComment(newValue);\n  }\n\n  public getCommentAreaCss(isOther: boolean = false): string {\n    return new CssClassBuilder()\n      .append(\"form-group\", isOther)\n      .append(this.cssClasses.formGroup, !isOther)\n      .append(this.cssClasses.commentArea)\n      .append(this.cssClasses.otherArea, isOther)\n      .toString();\n  }\n\n  protected getQuestionComment(): string {\n    return this.questionComment;\n  }\n  /**\n   * Returns `true` if the question value is an empty string, array, or object or if it equals `undefined` or `null`.\n   */\n  public isEmpty(): boolean {\n    return this.isValueEmpty(this.value, !this.allowSpaceAsAnswer);\n  }\n  public get isAnswered(): boolean {\n    return this.getPropertyValue(\"isAnswered\") || false;\n  }\n  public set isAnswered(val: boolean) {\n    this.setPropertyValue(\"isAnswered\", val);\n  }\n  protected updateIsAnswered(): void {\n    const oldVal = this.isAnswered;\n    this.setPropertyValue(\"isAnswered\", this.getIsAnswered());\n    if (oldVal !== this.isAnswered) {\n      this.updateQuestionCss();\n    }\n  }\n  protected getIsAnswered(): boolean {\n    return !this.isEmpty();\n  }\n  /**\n   * Question validators.\n   *\n   * [Data Validation](https://surveyjs.io/form-library/documentation/data-validation (linkStyle))\n   */\n  public get validators(): Array<SurveyValidator> {\n    return this.getPropertyValue(\"validators\");\n  }\n  public set validators(val: Array<SurveyValidator>) {\n    this.setPropertyValue(\"validators\", val);\n  }\n  public getValidators(): Array<SurveyValidator> {\n    return this.validators;\n  }\n  public getSupportedValidators(): Array<string> {\n    var res: Array<string> = [];\n    var className = this.getType();\n    while(!!className) {\n      var classValidators = (<any>settings.supportedValidators)[className];\n      if (!!classValidators) {\n        for (var i = classValidators.length - 1; i >= 0; i--) {\n          res.splice(0, 0, classValidators[i]);\n        }\n      }\n      var classInfo = Serializer.findClass(className);\n      className = classInfo.parentName;\n    }\n    return res;\n  }\n  public addConditionObjectsByContext(objects: Array<IConditionObject>, context: any): void {\n    objects.push({\n      name: this.getFilteredName(),\n      text: this.processedTitle,\n      question: this,\n    });\n  }\n  /**\n   * Returns an array of questions nested within the current question. Use this method to obtain questions within [Multiple Text](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model), [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), and [Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model)-like questions.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible nested questions.\n   * @returns An array of nested questions.\n   */\n  public getNestedQuestions(visibleOnly: boolean = false, includeNested: boolean = true, includeItSelf: boolean = false): Array<Question> {\n    const res: Array<Question> = [];\n    this.collectNestedQuestions(res, visibleOnly, includeNested, includeItSelf);\n    if (!includeItSelf && res.length === 1 && res[0] === this) return [];\n    return res;\n  }\n  public collectNestedQuestions(questions: Array<Question>, visibleOnly: boolean = false, includeNested: boolean = true, includeItSelf: boolean = false): void {\n    if (visibleOnly && !this.isVisible) return;\n    this.collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf);\n  }\n  protected collectNestedQuestionsCore(questions: Array<Question>, visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    questions.push(this);\n  }\n  addNestedQuestion(questions: Array<Question>, visibleOnly: boolean, includeNested: boolean, includeItSelf?: boolean): void {\n    if (includeNested) {\n      this.collectNestedQuestions(questions, visibleOnly, includeNested, includeItSelf);\n    } else {\n      if (!visibleOnly || this.isVisible) {\n        questions.push(this);\n      }\n    }\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    const json = new JsonObject().toJsonObject(this);\n    json[\"type\"] = this.getType();\n    return json;\n  }\n  public hasErrors(fireCallback: boolean = true, focusOnFirstError: boolean = false): boolean {\n    return !this.validateCore(fireCallback, false, focusOnFirstError);\n  }\n  /**\n   * Validates this question and returns `false` if the validation fails.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  public validate(fireCallback: boolean = true, focusOnFirstError: boolean = false, isOnValueChanged: boolean = false, callbackResult?: (res: boolean, question: Question) => void): boolean {\n    return this.validateCore(fireCallback, true, focusOnFirstError, isOnValueChanged, callbackResult);\n  }\n  private validateCore(fireCallback: boolean, isRoot: boolean, focusOnFirstError: boolean = false, isOnValueChanged: boolean = false, callbackResult?: (res: boolean, question: Question) => void): boolean {\n    if (isRoot && isOnValueChanged && !!this.parent) {\n      this.parent.validateContainerOnly();\n    }\n    const context = new ValidationContext({\n      isOnValueChanged: isOnValueChanged,\n      focusOnFirstError: focusOnFirstError,\n      fireCallback: fireCallback,\n      callbackResult: callbackResult\n    });\n    this.validateElement(context);\n    context.finish();\n    return context.runningResult;\n  }\n  public validateElement(context: ValidationContext): boolean {\n    return this.validateElementCore(context);\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    const errors = this.checkForErrors(context);\n    if (context.fireCallback) {\n      this.errors = errors;\n      if (this.errors !== errors) {\n        this.errors.forEach(er => er.locText.strChanged());\n      }\n    }\n    if (errors.length > 0) {\n      context.setError(this);\n    }\n    this.updateContainsErrors();\n    if (this.isCollapsed && context.fireCallback && errors.length > 0) {\n      this.expand();\n    }\n    return errors.length === 0;\n  }\n  public get currentErrorCount(): number {\n    return this.errors.length;\n  }\n  /**\n   * Returns a character or text string that indicates a required question.\n   * @see SurveyModel.requiredMark\n   * @see isRequired\n   */\n  public get requiredMark(): string {\n    return this.survey != null && this.isRequired\n      ? this.survey.requiredMark\n      : \"\";\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/question#requiredMark) property instead.\n   */\n  public get requiredText(): string {\n    return this.requiredMark;\n  }\n  public addError(error: SurveyError | string): void {\n    if (!error) return;\n    let newError: SurveyError = null;\n    if (typeof error === \"string\" || error instanceof String) {\n      newError = this.addCustomError(<string>error);\n    } else {\n      newError = <SurveyError>error;\n    }\n    this.errors.push(newError);\n  }\n  private addCustomError(error: string): SurveyError {\n    return new CustomError(error, this.survey);\n  }\n  public removeError(error: SurveyError): boolean {\n    if (!error) return false;\n    const errors = this.errors;\n    const index = errors.indexOf(error);\n    if (index !== -1) errors.splice(index, 1);\n    return index !== -1;\n  }\n  private checkForErrors(context: ValidationContext): Array<SurveyError> {\n    var qErrors = new Array<SurveyError>();\n    if (this.isVisible && this.canCollectErrors()) {\n      this.collectErrors(qErrors, context);\n    }\n    if (!!this.survey) {\n      if (this.validateValueCallback && qErrors.length === 0) {\n        const error = this.validateValueCallback();\n        if (error) {\n          qErrors.push(error);\n        }\n      }\n      this.survey.validateQuestion(this, qErrors, context.fireCallback);\n    }\n    return qErrors;\n  }\n  protected canCollectErrors(): boolean {\n    return !this.isReadOnly || settings.readOnly.enableValidation;\n  }\n  private collectErrors(qErrors: Array<SurveyError>, context: ValidationContext): void {\n    this.onCheckForErrors(qErrors, context.isOnValueChanged, context.fireCallback);\n    if (qErrors.length > 0 || !this.canRunValidators(context.isOnValueChanged)) return;\n    const errors = this.runValidators(context);\n    if (errors.length > 0) {\n      //validators may change the question value.\n      qErrors.length = 0;\n      for (var i = 0; i < errors.length; i++) {\n        qErrors.push(errors[i]);\n      }\n    }\n  }\n  protected canRunValidators(isOnValueChanged: boolean): boolean {\n    return true;\n  }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    if ((!isOnValueChanged || this.isOldAnswered) && this.hasRequiredError()) {\n      const err = new AnswerRequiredError(this.requiredErrorText, this);\n      err.onUpdateErrorTextCallback = (err) => { err.text = this.requiredErrorText; };\n      errors.push(err);\n    }\n    if (!this.isEmpty() && this.customWidget) {\n      const text = this.customWidget.validate(this);\n      if (!!text) {\n        errors.push(this.addCustomError(text));\n      }\n    }\n  }\n  public hasRequiredError(): boolean {\n    return this.isRequired && this.isEmpty();\n  }\n  private validatorRunner: ValidatorRunner;\n  public get isRunningValidators(): boolean {\n    return this.getIsRunningValidators();\n  }\n  protected getIsRunningValidators(): boolean {\n    return !!this.validatorRunner;\n  }\n  private runValidators(context: ValidationContext): Array<SurveyError> {\n    if (!!this.validatorRunner) {\n      this.validatorRunner.onAsyncCompleted = null;\n    }\n    this.validatorRunner = new ValidatorRunner();\n    this.validatorRunner.onAsyncCompleted = (errors: Array<SurveyError>) => {\n      this.doOnAsyncCompleted(context.fireCallback, errors);\n      if (errors.length > 0) {\n        context.setError(this);\n      }\n      context.removeElement(this.id);\n    };\n    context.addElement(this.id);\n    return this.validatorRunner.run(this);\n  }\n  private doOnAsyncCompleted(fireCallback: boolean, errors: Array<SurveyError>): void {\n    if (fireCallback) {\n      errors.forEach(er => {\n        if (this.errors.indexOf(er) < 0) {\n          this.errors.push(er);\n        }\n      });\n    }\n    this.validatorRunner = null;\n  }\n  public allowSpaceAsAnswer: boolean;\n  private isValueChangedInSurvey = false;\n  private isOldAnswered: boolean;\n  private isSettingQuestionValue: boolean;\n  protected allowNotifyValueChanged = true;\n  protected setNewValue(newValue: any): void {\n    if (this.survey) {\n      newValue = this.survey.questionValueChanging(this, newValue);\n    }\n    if (this.isNewValueEqualsToValue(newValue)) return;\n    if (!this.checkIsValueCorrect(newValue)) return;\n    const oldValue = this.getUnbindValue(this.value);\n    this.isOldAnswered = this.isAnswered;\n    this.isSettingQuestionValue = true;\n    this.setNewValueInData(newValue);\n    this.allowNotifyValueChanged && this.onValueChanged();\n    this.isSettingQuestionValue = false;\n    if (this.isAnswered !== this.isOldAnswered) {\n      this.updateQuestionCss();\n    }\n    this.isOldAnswered = undefined;\n    if (this.parent) {\n      this.parent.onQuestionValueChanged(this);\n    }\n    if (this.survey) {\n      this.survey.questionValueChanged(this, oldValue);\n    }\n  }\n  public getValueChangingOptions(childQuestion: Question): any { return undefined; }\n  private checkIsValueCorrect(val: any): boolean {\n    const res = this.isValueEmpty(val, !this.allowSpaceAsAnswer) || this.isNewValueCorrect(val);\n    if (!res) {\n      ConsoleWarnings.inCorrectQuestionValue(this.name, val);\n    }\n    return res;\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return true;\n  }\n  protected isNewValueEqualsToValue(newValue: any): boolean {\n    const val = this.value;\n    if (!this.isTwoValueEquals(newValue, val, false, false)) return false;\n    const isObj = newValue === val && !!val && (Array.isArray(val) || typeof val === \"object\");\n    return !isObj;\n  }\n  protected isTextValue(): boolean {\n    return false;\n  }\n  protected getIsInputTextUpdate(): boolean {\n    return !!this.survey ? this.survey.isUpdateValueTextOnTyping : false;\n  }\n  get requireStrictCompare(): boolean { return false; }\n  getExpressionValue(val: any): any { return val; }\n  private getDataLocNotification(): any {\n    return this.isInputTextUpdate ? \"text\" : false;\n  }\n  public get isInputTextUpdate(): boolean {\n    return this.getIsInputTextUpdate() && this.isTextValue();\n  }\n  protected setNewValueInData(newValue: any): void {\n    newValue = this.valueToData(newValue);\n    if (!this.isValueChangedInSurvey) {\n      this.setValueCore(newValue);\n    }\n  }\n  protected getValueCore(): any {\n    return this.questionValue;\n  }\n  protected setValueCore(newValue: any): void {\n    this.setQuestionValue(newValue);\n    if (this.data != null && this.canSetValueToSurvey()) {\n      newValue = this.valueForSurvey;\n      this.data.setValue(\n        this.getValueName(),\n        newValue,\n        this.getDataLocNotification(),\n        this.allowNotifyValueChanged,\n        this.name\n      );\n    }\n    this.isMouseDown = false;\n  }\n  protected canSetValueToSurvey(): boolean {\n    return true;\n  }\n  protected valueFromData(val: any): any { return val; }\n  protected valueToData(val: any): any { return val; }\n  protected convertToCorrectValue(val: any): any { return val; }\n  protected onValueChanged(): void { }\n  protected isMouseDown: boolean;\n  onMouseDown(): void {\n    this.isMouseDown = true;\n  }\n  protected setNewComment(newValue: string): void {\n    if (this.questionComment === newValue) return;\n    this.questionComment = newValue;\n    this.setCommentIntoData(newValue);\n  }\n  protected setCommentIntoData(newValue: string): void {\n    if (this.data != null) {\n      this.data.setComment(\n        this.getValueName(),\n        newValue,\n        this.getIsInputTextUpdate() ? \"text\" : false\n      );\n    }\n  }\n  protected getValidName(name: string): string {\n    return makeNameValid(name);\n  }\n  //IQuestion\n  updateValueFromSurvey(newValue: any, clearData: boolean = false): void {\n    newValue = this.getUnbindValue(newValue);\n    newValue = this.valueFromDataCore(newValue);\n    if (!this.checkIsValueCorrect(newValue)) return;\n    const isEmpty = this.isValueEmpty(newValue);\n    if (!isEmpty && this.defaultValueExpression) {\n      this.setDefaultValueCore((val: any): void => {\n        this.updateValueFromSurveyCore(newValue, this.isTwoValueEquals(newValue, val));\n      });\n    } else {\n      this.updateValueFromSurveyCore(newValue, <any>this.data !== <any>this.getSurvey());\n      if (clearData && isEmpty) {\n        this.isValueChangedDirectly = false;\n      }\n    }\n    this.updateDependedQuestions();\n    this.updateIsAnswered();\n  }\n  private updateValueFromSurveyCore(newValue: any, viaDefaultVal: boolean): void {\n    this.isChangingViaDefaultValue = viaDefaultVal;\n    newValue = this.valueFromData(newValue);\n    const isEqual = this.isTwoValueEquals(this.questionValue, this.convertToCorrectValue(newValue));\n    this.setQuestionValue(newValue);\n    if (!isEqual) {\n      this.resetSingleInput();\n    }\n    this.isChangingViaDefaultValue = false;\n  }\n  updateCommentFromSurvey(newValue: any): any {\n    this.questionComment = newValue;\n  }\n  protected onChangeQuestionValue(newValue: any): void { }\n  protected setValueChangedDirectly(val: boolean): void {\n    this.isValueChangedDirectly = val;\n    if (!!this.setValueChangedDirectlyCallback) {\n      this.setValueChangedDirectlyCallback(val);\n    }\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered: boolean = true): void {\n    newValue = this.convertToCorrectValue(newValue);\n    const isEqual = this.isTwoValueEquals(this.questionValue, newValue);\n    if (!isEqual && !this.isChangingViaDefaultValue && !this.isParentChangingViaDefaultValue) {\n      this.setValueChangedDirectly(true);\n    }\n    this.questionValue = newValue;\n    if (!isEqual) {\n      this.onChangeQuestionValue(newValue);\n    }\n    !isEqual && this.allowNotifyValueChanged &&\n      this.fireCallback(this.valueChangedCallback);\n    if (updateIsAnswered)this.updateIsAnswered();\n  }\n  private get isParentChangingViaDefaultValue(): boolean {\n    return (<any>this.data)?.isChangingViaDefaultValue === true;\n  }\n  onSurveyValueChanged(newValue: any): void { }\n  public setVisibleIndex(val: number): number {\n    if (val > -1 && (!this.isVisible ||\n      (!this.hasTitle && !settings.numbering.includeQuestionsWithHiddenTitle) ||\n      (!this.showNumber && !settings.numbering.includeQuestionsWithHiddenNumber))\n    ) {\n      val = -1;\n    }\n    this.setPropertyValue(\"visibleIndex\", val);\n    this.setPropertyValue(\"no\", this.calcNo());\n    return val < 0 ? 0 : 1;\n  }\n  public removeElement(element: IElement): boolean {\n    return false;\n  }\n  // Obsolete\n  supportGoNextPageAutomatic(): boolean { return this.supportAutoAdvance(); }\n  public supportAutoAdvance(): boolean {\n    return false;\n  }\n  public supportGoNextPageError(): boolean {\n    return true;\n  }\n  /**\n   * Removes values that cannot be assigned to this question, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values that fail validation. Call the `validate()` method to validate newly assigned values.\n   *\n   * @see validate\n   */\n  public clearIncorrectValues(): void { }\n  public clearOnDeletingContainer(): void { }\n  /**\n   * Empties the `errors` array.\n   * @see errors\n   */\n  public clearErrors(): void {\n    this.errors = [];\n  }\n  public clearUnusedValues(): void { }\n  onAnyValueChanged(name: string, questionName: string): void { }\n  checkBindings(valueName: string, value: any): void {\n    if (this.bindings.isEmpty() || !this.data) return;\n    var props = this.bindings.getPropertiesByValueName(valueName);\n    for (var i = 0; i < props.length; i++) {\n      const propName = props[i];\n      if (this.isValueEmpty(value) && Helpers.isNumber(this[propName])) {\n        value = 0;\n      }\n      this.updateBindingProp(propName, value);\n    }\n  }\n  protected updateBindingProp(propName: string, value: any): void {\n    this[propName] = value;\n  }\n  public getComponentName(): string {\n    return RendererFactory.Instance.getRendererByQuestion(this);\n  }\n\n  public isDefaultRendering(): boolean {\n    return (\n      !!this.customWidget ||\n      this.getComponentName() === \"default\"\n    );\n  }\n  public get renderAs(): string { return this.getPropertyValue(\"renderAs\"); }\n  public set renderAs(val: string) { this.setPropertyValue(\"renderAs\", val); }\n\n  public get inMatrixMode(): boolean { return this.getPropertyValue(\"inMatrixMode\", false); }\n  public set inMatrixMode(val: boolean) { this.setPropertyValue(\"inMatrixMode\", val); }\n\n  //ISurveyErrorOwner\n  getErrorCustomText(text: string, error: SurveyError): string {\n    if (!!this.survey) return this.survey.getSurveyErrorCustomText(this, text, error);\n    return text;\n  }\n  //IValidatorOwner\n  getValidatorTitle(): string {\n    return null;\n  }\n  get validatedValue(): any {\n    return this.value;\n  }\n  set validatedValue(val: any) {\n    this.value = val;\n  }\n  getAllValues(): any {\n    return !!this.data ? this.data.getAllValues() : null;\n  }\n\n  public processPopupVisiblilityChanged(popupModel: PopupModel, visible: boolean): void {\n    this.survey.processPopupVisiblityChanged(this, popupModel, visible);\n  }\n  public processOpenDropdownMenu(options: IDropdownMenuOptions): void {\n    this.survey.processOpenDropdownMenu(this, options);\n  }\n\n  protected onTextKeyDownHandler(event: any) {\n    if (event.keyCode === 13) {\n      (this.survey as SurveyModel).questionEditFinishCallback(this, event);\n    }\n  }\n\n  public transformToMobileView(): void { }\n  public transformToDesktopView(): void { }\n  public needResponsiveWidth() {\n    return false;\n  }\n  //responsiveness methods\n  protected supportResponsiveness(): boolean {\n    return false;\n  }\n\n  protected needResponsiveness(): boolean {\n    return this.supportResponsiveness() && !this.isDesignMode;\n  }\n\n  protected checkForResponsiveness(el: HTMLElement): void {\n    if (this.needResponsiveness()) {\n      if (this.isCollapsed) {\n        const onStateChanged = () => {\n          if (this.isExpanded) {\n            this.initResponsiveness(el);\n            this.unregisterPropertyChangedHandlers([\"state\"], \"for-responsiveness\");\n          }\n        };\n        this.registerPropertyChangedHandlers([\"state\"], onStateChanged, \"for-responsiveness\");\n      } else {\n        this.initResponsiveness(el);\n      }\n    }\n  }\n  private resizeObserver: ResizeObserver;\n\n  protected getObservedElementSelector(): string {\n    return \".sd-scrollable-container\";\n  }\n\n  protected onMobileChanged() {\n    this.onMobileChangedCallback && this.onMobileChangedCallback();\n  }\n\n  private onMobileChangedCallback: () => void;\n\n  public triggerResponsiveness(hard: boolean = true): void {\n    if (this.triggerResponsivenessCallback) {\n      this.triggerResponsivenessCallback(hard);\n    }\n  }\n  private triggerResponsivenessCallback: (hard: boolean) => void;\n  private initResponsiveness(el: HTMLElement) {\n    if (!DomDocumentHelper.isAvailable()) { return; }\n    this.destroyResizeObserver();\n    if (!!el && this.isDefaultRendering()) {\n      const scrollableSelector = this.getObservedElementSelector();\n      if (!scrollableSelector) return;\n      const defaultRootEl = el.querySelector(scrollableSelector);\n      if (!defaultRootEl) return;\n      let isProcessed = false;\n      let requiredWidth: number = undefined;\n      this.triggerResponsivenessCallback = (hard: boolean) => {\n        if (hard) {\n          requiredWidth = undefined;\n          this.renderAs = \"default\";\n          isProcessed = false;\n        }\n        const callback = () => {\n          const rootEl = <HTMLElement>el.querySelector(scrollableSelector);\n          if (this.isDefaultRendering()) {\n            requiredWidth = rootEl.scrollWidth;\n          }\n          if (isProcessed || !isContainerVisible(rootEl)) {\n            isProcessed = false;\n          } else {\n            const availableWidth = getElementWidth(rootEl);\n            isProcessed = this.processResponsiveness(requiredWidth, availableWidth);\n          }\n        };\n        if (hard) {\n          setTimeout(callback, 1);\n        } else {\n          callback();\n        }\n\n      };\n      this.resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n        DomWindowHelper.requestAnimationFrame((): void | undefined => {\n          this.triggerResponsiveness(false);\n        });\n      });\n      this.onMobileChangedCallback = () => {\n        setTimeout(() => {\n          const rootEl = <HTMLElement>el.querySelector(scrollableSelector);\n          this.processResponsiveness(requiredWidth, getElementWidth(rootEl));\n        }, 0);\n      };\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  protected getCompactRenderAs(): string {\n    return \"default\";\n  }\n  protected getDesktopRenderAs(): string {\n    return \"default\";\n  }\n  protected onBeforeSetCompactRenderer(): void { }\n  protected onBeforeSetDesktopRenderer(): void { }\n  protected processResponsiveness(requiredWidth: number, availableWidth: number): any {\n    availableWidth = Math.round(availableWidth);\n    if (Math.abs(requiredWidth - availableWidth) > 2) {\n      const oldRenderAs = this.renderAs;\n      if (requiredWidth > availableWidth) {\n        this.onBeforeSetCompactRenderer();\n        this.renderAs = this.getCompactRenderAs();\n      } else {\n        this.onBeforeSetDesktopRenderer();\n        this.renderAs = this.getDesktopRenderAs();\n      }\n      return oldRenderAs !== this.renderAs;\n    }\n    return false;\n  }\n  public destroyResizeObserver(): void {\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = undefined;\n      this.onMobileChangedCallback = undefined;\n      this.triggerResponsivenessCallback = undefined;\n      this.renderAs = this.getDesktopRenderAs();\n    }\n  }\n  public dispose(): void {\n    super.dispose();\n    this.resetDependedQuestions();\n    this.destroyResizeObserver();\n  }\n  private resetDependedQuestions(): void {\n    for (var i = 0; i < this.dependedQuestions.length; i++) {\n      this.dependedQuestions[i].resetDependedQuestion();\n    }\n  }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return false;\n  }\n  public get ariaLabel(): string {\n    if (this.isNewA11yStructure || (this.hasTitle && !this.parentQuestion)) return null;\n    return this.locTitle.renderedHtml;\n  }\n  public get ariaRole(): string {\n    if (this.isNewA11yStructure) return null;\n\n    return \"textbox\";\n  }\n  public get ariaRequired() {\n    if (this.isNewA11yStructure) return null;\n\n    return this.isRequired ? \"true\" : \"false\";\n  }\n  public get ariaInvalid() {\n    if (this.isNewA11yStructure) return null;\n\n    return this.hasCssError() ? \"true\" : \"false\";\n  }\n  public get ariaLabelledBy(): string {\n    if (this.isNewA11yStructure || !this.hasTitle || this.parentQuestion) return null;\n    return this.ariaTitleId;\n  }\n  public get ariaDescribedBy(): string {\n    if (this.isNewA11yStructure) return null;\n\n    if (this.hasTitle && this.hasDescription) {\n      return this.ariaDescriptionId;\n    } else {\n      return null;\n    }\n  }\n\n  protected getContentAriaHidden(): boolean {\n    return null;\n  }\n  public get contentAriaHidden(): boolean {\n    return this.getContentAriaHidden();\n  }\n\n  public get ariaErrormessage(): string {\n    if (this.isNewA11yStructure) return null;\n\n    return this.hasCssError() ? this.id + \"_errors\" : null;\n  }\n  //EO a11y\n\n  //new a11y\n  public get a11y_input_ariaRole(): string {\n    return null;\n  }\n  public get a11y_input_ariaRequired(): \"true\" | \"false\" {\n    return this.isRequired ? \"true\" : \"false\";\n  }\n  public get a11y_input_ariaInvalid(): \"true\" | \"false\" {\n    return this.hasCssError() ? \"true\" : \"false\";\n  }\n  public get a11y_input_ariaLabel(): string {\n    if (this.hasTitle && !this.parentQuestion) {\n      return null;\n    } else {\n      return this.locTitle.renderedHtml;\n    }\n  }\n  public get a11y_input_ariaLabelledBy(): string {\n    if (this.hasTitle && !this.parentQuestion) {\n      return this.ariaTitleId;\n    } else {\n      return null;\n    }\n  }\n  public get a11y_input_ariaDescribedBy(): string {\n    let result = null;\n\n    if (this.hasCssError()) {\n      result = this.id + \"_errors\";\n    } else if (this.hasTitle && !this.parentQuestion && this.hasDescription && this.descriptionLocation !== \"hidden\") {\n      result = this.ariaDescriptionId;\n    }\n\n    return result;\n  }\n  public get a11y_input_ariaErrormessage(): string {\n    return null;\n    //return this.hasCssError() ? this.id + \"_errors\" : null; // due to https://cerovac.com/a11y/2024/06/support-for-aria-errormessage-is-getting-better-but-still-not-there-yet/\n  }\n  public get a11y_input_ariaExpanded(): \"true\" | \"false\" {\n    return this.getPropertyValue(\"ariaExpanded\");\n  }\n  //EO new a11y\n\n  private _syncPropertiesChanging: boolean = false;\n  protected registerSychProperties(names: Array<string>, func: any) {\n    this.registerFunctionOnPropertiesValueChanged(names,\n      () => {\n        if (!this._syncPropertiesChanging) {\n          this._syncPropertiesChanging = true;\n          func();\n          this._syncPropertiesChanging = false;\n        }\n      });\n  }\n}\nfunction makeNameValid(str: string): string {\n  if (!str) return str;\n  str = str.trim().replace(/[\\{\\}]+/g, \"\");\n  while(!!str && str[0] === settings.expressionDisableConversionChar) {\n    str = str.substring(1);\n  }\n  return str;\n}\n\nSerializer.addClass(\"question\", [\n  { name: \"!name\", onSettingValue: (obj: any, val: any): any => { return makeNameValid(val); } },\n  {\n    name: \"state\",\n    default: \"default\",\n    choices: [\"default\", \"collapsed\", \"expanded\"],\n  },\n  { name: \"visible:switch\", default: true, overridingProperty: \"visibleIf\" },\n  { name: \"useDisplayValuesInDynamicTexts:boolean\", alternativeName: \"useDisplayValuesInTitle\", default: true, layout: \"row\" },\n  \"visibleIf:condition\",\n  { name: \"width\" },\n  { name: \"minWidth\", defaultFunc: () => settings.minWidth },\n  { name: \"maxWidth\", defaultFunc: () => settings.maxWidth },\n  {\n    name: \"colSpan:number\", visible: false,\n    onSerializeValue: (obj) => { return obj.getPropertyValue(\"colSpan\"); },\n  },\n  {\n    name: \"effectiveColSpan:number\", minValue: 1, isSerializable: false,\n    visibleIf: function (obj: any) { return !!obj && !!obj.survey && obj.survey.gridLayoutEnabled; }\n  },\n  { name: \"startWithNewLine:boolean\", default: true, layout: \"row\" },\n  { name: \"indent:number\", default: 0, choices: [0, 1, 2, 3], layout: \"row\" },\n  {\n    name: \"page\",\n    isSerializable: false,\n    visibleIf: function (obj: any) {\n      var survey = obj ? obj.survey : null;\n      return !survey || !survey.pages || survey.pages.length > 1;\n    },\n    choices: function (obj: any) {\n      var survey = obj ? obj.survey : null;\n      return survey\n        ? survey.pages.map((p: any) => {\n          return { value: p.name, text: p.title };\n        })\n        : [];\n    },\n  },\n  {\n    name: \"title:text\", serializationProperty: \"locTitle\", layout: \"row\", dependsOn: \"name\",\n    onPropertyEditorUpdate: function (obj: any, editor: any) {\n      if (!!obj && !!editor) {\n        editor.placeholder = obj.locTitle.getPlaceholder();\n      }\n    }\n  },\n  {\n    name: \"titleLocation\",\n    default: \"default\",\n    choices: [\"default\", \"top\", \"bottom\", \"left\", \"hidden\"],\n    layout: \"row\",\n  },\n  {\n    name: \"showTitle:boolean\",\n    isSerializable: false,\n    dependsOn: \"titleLocation\"\n  },\n  {\n    name: \"description:text\",\n    serializationProperty: \"locDescription\",\n    layout: \"row\",\n  },\n  {\n    name: \"descriptionLocation\",\n    default: \"default\",\n    choices: [\"default\", \"underInput\", \"underTitle\"],\n  },\n  {\n    name: \"showNumber:boolean\",\n    dependsOn: \"titleLocation\",\n    default: true,\n    visibleIf: function (obj: any) {\n      if (!obj) {\n        return true;\n      }\n      if ((<Question>obj).titleLocation === \"hidden\") {\n        return false;\n      }\n      var parent: PanelModel = obj ? obj.parent : null;\n      var numberingAllowedByParent =\n        !parent || parent.showQuestionNumbers !== \"off\";\n      if (!numberingAllowedByParent) {\n        return false;\n      }\n      var survey: SurveyModel = obj ? obj.survey : null;\n      return (\n        !survey ||\n        survey.showQuestionNumbers !== \"off\" ||\n        (!!parent && parent.showQuestionNumbers === \"onpanel\")\n      );\n    },\n  },\n  { name: \"hideNumber:boolean\", visible: false, isSerializable: false },\n  { name: \"valueName\", onSettingValue: (obj: any, val: any): any => { return makeNameValid(val); } },\n  \"enableIf:condition\",\n  \"resetValueIf:condition\",\n  \"setValueIf:condition\",\n  \"setValueExpression:expression\",\n  \"defaultValue:value\",\n  {\n    name: \"defaultValueExpression:expression\",\n    category: \"logic\",\n  },\n  \"correctAnswer:value\",\n  {\n    name: \"clearIfInvisible\",\n    default: \"default\",\n    choices: [\"default\", \"none\", \"onComplete\", \"onHidden\", \"onHiddenContainer\"],\n  },\n  { name: \"isRequired:switch\", overridingProperty: \"requiredIf\" },\n  \"requiredIf:condition\",\n  {\n    name: \"requiredErrorText:text\",\n    serializationProperty: \"locRequiredErrorText\",\n  },\n  { name: \"errorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"] },\n  { name: \"readOnly:switch\", overridingProperty: \"enableIf\" },\n  {\n    name: \"validators:validators\",\n    baseClassName: \"surveyvalidator\",\n    classNamePart: \"validator\",\n  },\n  {\n    name: \"bindings:bindings\",\n    serializationProperty: \"bindings\",\n    isSerializableFunc: (obj: any) => !obj.isBindingEmpty(),\n    visibleIf: function (obj: any) {\n      return obj.bindings.getNames().length > 0;\n    },\n  },\n  { name: \"renderAs\", default: \"default\", visible: false },\n  { name: \"showCommentArea:switch\", visible: false, default: false, alternativeName: \"hasComment\", category: \"general\" },\n  {\n    name: \"commentText\",\n    dependsOn: \"showCommentArea\",\n    visibleIf: function (obj: any) {\n      return obj.showCommentArea;\n    },\n    serializationProperty: \"locCommentText\"\n  },\n  {\n    name: \"commentPlaceholder\",\n    alternativeName: \"commentPlaceHolder\",\n    serializationProperty: \"locCommentPlaceholder\",\n    dependsOn: \"showCommentArea\",\n    visibleIf: function (obj: any) {\n      return obj.hasComment;\n    }\n  },\n  { name: \"defaultDisplayValue\", serializationProperty: \"locDefaultDisplayValue\" }\n]);\nSerializer.addAlterNativeClassName(\"question\", \"questionbase\");\n", "import { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport {\n  JsonObject,\n  JsonObjectProperty,\n  Serializer,\n  CustomPropertiesCollection,\n  property,\n} from \"./jsonobject\";\nimport { Helpers } from \"./helpers\";\nimport { ConditionRunner } from \"./conditions\";\nimport { Base, ComputedUpdater } from \"./base\";\nimport { IShortcutText, ISurvey } from \"./base-interfaces\";\nimport { settings } from \"./settings\";\nimport { BaseAction } from \"./actions/action\";\nimport { Question } from \"./question\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem } from \"./conditionProcessValue\";\n\nexport class ItemValueGetterContext implements IValueGetterContext {\n  constructor (protected item: ItemValue) {}\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length === 1) {\n      const name = path[0].name;\n      if (name === \"item\" || name === \"choice\") return { isFound: true, value: this.item.value, context: this };\n    }\n    const owner: any = this.item.locOwner;\n    if (owner && owner.getValueGetterContext) {\n      return owner.getValueGetterContext().getValue(path, isRoot, index, createObjects);\n    }\n    return undefined;\n  }\n  getRootObj(): IObjectValueContext {\n    const owner: any = this.item.locOwner;\n    if (owner && owner.getValueGetterContext) return owner;\n    return <any>this.item.getSurvey();\n  }\n  getTextValue(name: string, value: any, isDisplayValue: boolean): string {\n    if (isDisplayValue && value === this.item.value) return this.item.textOrHtml;\n    return value !== undefined && value !== null ? value.toString() : \"\";\n  }\n}\n\n/**\n * Array of ItemValue is used in checkbox, dropdown and radiogroup choices, matrix columns and rows.\n * It has two main properties: value and text. If text is empty, value is used for displaying.\n * The text property is localizable and support markdown.\n */\nexport class ItemValue extends BaseAction implements ILocalizableOwner, IShortcutText {\n  [index: string]: any;\n\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item || this) : undefined;\n  }\n  public getRenderer(name: string): string {\n    return !!this.locOwner ? this.locOwner.getRenderer(name, this) : null;\n  }\n  public getRendererContext(locStr: LocalizableString): any {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr, this) : locStr;\n  }\n  public getProcessedText(text: string): string {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n\n  public static get Separator() {\n    return settings.itemValueSeparator;\n  }\n  public static set Separator(val: string) {\n    settings.itemValueSeparator = val;\n  }\n  /**\n   * Resets the input array and fills it with values from the values array\n   */\n  public static setData(items: Array<ItemValue>, values: Array<any>, type?: string): void {\n    items.length = 0;\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i];\n      const itemType = !!value && typeof value.getType === \"function\" ? value.getType() : (type ?? \"itemvalue\");\n      const item = Serializer.createClass(itemType);\n      item.setData(value);\n      if (!!value.originalItem) {\n        item.originalItem = value.originalItem;\n      }\n      if (!!value.data) {\n        item.data = value.data;\n      }\n      items.push(item);\n    }\n  }\n  public static getData(items: Array<ItemValue>): any {\n    var result = [];\n    for (var i = 0; i < items.length; i++) {\n      result.push(items[i].getData());\n    }\n    return result;\n  }\n  public static getItemByValue(items: Array<ItemValue>, val: any): ItemValue {\n    if (!Array.isArray(items)) return null;\n    const valIsEmpty = Helpers.isValueEmpty(val);\n    for (var i = 0; i < items.length; i++) {\n      if (valIsEmpty && Helpers.isValueEmpty(items[i].value)) return items[i];\n      if (Helpers.isTwoValueEquals(items[i].value, val, false, true, false)) return items[i];\n    }\n    return null;\n  }\n  public static getTextOrHtmlByValue(\n    items: Array<ItemValue>,\n    val: any\n  ): string {\n    var item = ItemValue.getItemByValue(items, val);\n    return item !== null ? item.textOrHtml : \"\";\n  }\n  public static locStrsChanged(items: Array<ItemValue>) {\n    for (var i = 0; i < items.length; i++) {\n      items[i].locStrsChanged();\n    }\n  }\n  public static runConditionsForItems(\n    items: Array<ItemValue>,\n    filteredItems: Array<ItemValue>,\n    runner: ConditionRunner,\n    properties: any,\n    useItemExpression: boolean = true,\n    onItemCallBack?: (item: ItemValue, val: boolean) => boolean\n  ): boolean {\n    return ItemValue.runConditionsForItemsCore(\n      items,\n      filteredItems,\n      runner,\n      properties,\n      true,\n      useItemExpression,\n      onItemCallBack\n    );\n  }\n  public static runEnabledConditionsForItems(\n    items: Array<ItemValue>,\n    runner: ConditionRunner,\n    properties: any,\n    onItemCallBack?: (item: ItemValue, val: boolean) => boolean\n  ): boolean {\n    return ItemValue.runConditionsForItemsCore(\n      items,\n      null,\n      runner,\n      properties,\n      false,\n      true,\n      onItemCallBack\n    );\n  }\n  private static runConditionsForItemsCore(\n    items: Array<ItemValue>,\n    filteredItems: Array<ItemValue>,\n    runner: ConditionRunner,\n    properties: any,\n    isVisible: boolean,\n    useItemExpression: boolean = true,\n    onItemCallBack?: (item: ItemValue, val: boolean) => boolean\n  ): boolean {\n    var hasChanded = false;\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var itemRunner =\n        useItemExpression && !!item.getConditionRunner\n          ? item.getConditionRunner(isVisible)\n          : false;\n      if (!itemRunner) {\n        itemRunner = runner;\n      }\n      var newValue = true;\n      if (itemRunner) {\n        newValue = itemRunner.runContext(item.getValueGetterContext(), properties);\n      }\n      if (!!onItemCallBack) {\n        newValue = onItemCallBack(item, newValue);\n      }\n      if (!!filteredItems && newValue) {\n        filteredItems.push(item);\n      }\n      var oldValue = isVisible ? item.isVisible : item.isEnabled;\n      if (newValue != oldValue) {\n        hasChanded = true;\n        if (isVisible) {\n          if (!!item.setIsVisible) item.setIsVisible(newValue);\n        } else {\n          if (!!item.setIsEnabled) item.setIsEnabled(newValue);\n        }\n      }\n    }\n    return hasChanded;\n  }\n  public ownerPropertyName: string = \"\";\n  private locTextValue: LocalizableString;\n  private visibleConditionRunner: ConditionRunner;\n  private enableConditionRunner: ConditionRunner;\n\n  constructor(value: any, text?: string, protected typeName?: string) {\n    super();\n    if (text)this.locText.text = text;\n    if (!!value && typeof value === \"object\") {\n      this.setData(value, true);\n    } else {\n      this.setValue(value, true);\n    }\n    if (this.getType() != this.getBaseType()) {\n      CustomPropertiesCollection.createProperties(this);\n    }\n    this.onCreating();\n  }\n\n  public onCreating(): any { }\n  public getType(): string {\n    return this.typeName || this.getBaseType();\n  }\n  protected getBaseType(): string { return \"itemvalue\"; }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.locOwner && !!(<any>this.locOwner)[\"getSurvey\"]\n      ? (<any>this.locOwner).getSurvey()\n      : null;\n  }\n  public getLocale(): string {\n    return !!this.locOwner && this.locOwner.getLocale ? this.locOwner.getLocale() : \"\";\n  }\n  public getLocalizableString(name: string): LocalizableString {\n    if (name === \"text\") return this.locText;\n    return super.getLocalizableString(name);\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new ItemValueGetterContext(this);\n  }\n  public isGhost: boolean;\n  protected get isInternal(): boolean {\n    return this.isGhost === true;\n  }\n  private createLocText(): LocalizableString {\n    const res = new LocalizableString(this, true, \"text\");\n    res.onStrChanged = (oldValue: string, newValue: string) => {\n      this.propertyValueChanged(\"text\", oldValue, newValue);\n    };\n    res.onGetTextCallback = (txt) => {\n      return this.onGetText(txt);\n    };\n    return res;\n  }\n  protected onGetText(text:string):string {\n    return text || this.getValueText();\n  }\n  private getValueText(): string {\n    const val = this.value;\n    return !Helpers.isValueEmpty(val) ? val.toString() : null;\n  }\n  public get locText(): LocalizableString {\n    if (!this.locTextValue) {\n      this.locTextValue = this.createLocText();\n    }\n    return this.locTextValue;\n  }\n  setLocText(locText: LocalizableString): void {\n    this.locTextValue = locText;\n  }\n  private _locOwner: ILocalizableOwner;\n\n  public get locOwner(): ILocalizableOwner {\n    return this._locOwner;\n  }\n  public set locOwner(value: ILocalizableOwner) {\n    this._locOwner = value;\n    this.onLocOwnerChanged();\n  }\n  protected onLocOwnerChanged(): void {}\n  public get value(): any {\n    return this.getPropertyValue(\"value\");\n  }\n  public set value(newValue: any) {\n    this.setValue(newValue, false);\n  }\n  private setValue(newValue: any, newItem: boolean): void {\n    let text: string = undefined;\n    newValue = this.getCorrectValue(newValue);\n    if (!Helpers.isValueEmpty(newValue)) {\n      var str: string = newValue.toString();\n      var index = str.indexOf(settings.itemValueSeparator);\n      if (index > -1) {\n        newValue = str.slice(0, index);\n        text = str.slice(index + 1);\n      }\n    }\n    if (newItem) {\n      this.setPropertyValueDirectly(\"value\", newValue);\n    } else {\n      this.setPropertyValue(\"value\", newValue);\n    }\n    if (!!text) {\n      this.text = text;\n    }\n    this.id = this.value;\n  }\n  protected getCorrectValue(value: any): any {\n    return value;\n  }\n  public get normalizedId(): string {\n    const val = !Helpers.isValueEmpty(this.value) ? this.value.toString() : \"\";\n    return val.replace(/[^a-zA-Z0-9_]/g, \"_\");\n  }\n  public get hasText(): boolean {\n    return this.pureText ? true : false;\n  }\n  public get pureText(): string {\n    return this.locTextValue?.pureText || \"\";\n  }\n  public set pureText(val: string) {\n    this.text = val;\n  }\n  public get text(): string {\n    return this.calculatedText; //TODO: it will be correct to use this.locText.text, however it would require a lot of rewriting in Creator\n  }\n  public set text(newText: string) {\n    this.locText.text = newText;\n  }\n  public get textOrHtml(): string {\n    if (this.locTextValue) return this.locText.textOrHtml;\n    return this.getValueText();\n  }\n  public get calculatedText(): string {\n    if (this.locTextValue) return this.locText.calculatedText;\n    return this.getValueText();\n  }\n  public get shortcutText(): string {\n    return this.text;\n  }\n  private canSerializeValue(): boolean {\n    const val = this.value;\n    if (val === undefined || val === null) return false;\n    return !Array.isArray(val) && typeof val !== \"object\";\n  }\n  public getData(): any {\n    var json = this.toJSON();\n    if (!!json[\"value\"] && !!json[\"value\"][\"pos\"]) {\n      delete json[\"value\"][\"pos\"];\n    }\n    if (Helpers.isValueEmpty(json.value)) return json;\n    const canSerializeVal = this.canSerializeValue();\n    const canSerializeAsContant = !canSerializeVal || !settings.serialization.itemValueSerializeAsObject && !settings.serialization.itemValueSerializeDisplayText;\n    if (canSerializeAsContant && Object.keys(json).length == 1)\n      return this.value;\n    if (settings.serialization.itemValueSerializeDisplayText && json.text === undefined && canSerializeVal) {\n      json.text = this.value.toString();\n    }\n    return json;\n  }\n  public toJSON(): any {\n    var res = {};\n    var properties = Serializer.getProperties(this.getType());\n    if (!properties || properties.length == 0) {\n      properties = Serializer.getProperties(this.getBaseType());\n    }\n    var jsoObj = new JsonObject();\n    for (var i = 0; i < properties.length; i++) {\n      const prop = properties[i];\n      if (this.canAddPpropertyToJSON(prop)) {\n        jsoObj.valueToJson(this, res, prop);\n      }\n    }\n    return res;\n  }\n  protected canAddPpropertyToJSON(prop: JsonObjectProperty): boolean {\n    if (prop.name === \"text\" && (!this.locTextValue || !this.locTextValue.hasNonDefaultText() &&\n      Helpers.isTwoValueEquals(this.value, this.locTextValue.getLocaleText(\"\"), false, true, false))) {\n      return false;\n    }\n    return true;\n  }\n  public setData(value: any, isNewItem?: boolean): void {\n    if (Helpers.isValueEmpty(value)) return;\n    if (typeof value.value === \"undefined\" && typeof value.text !== \"undefined\" && Object.keys(value).length === 1) {\n      value.value = value.text;\n    }\n    if (typeof value.value !== \"undefined\") {\n      let json;\n      if (typeof value.toJSON === \"function\") {\n        json = (<Base>value).toJSON();\n      } else {\n        json = value;\n      }\n      new JsonObject().toObject(json, this);\n    } else {\n      this.setValue(value, isNewItem);\n    }\n    if (!isNewItem) {\n      this.locTextValue?.strChanged();\n    }\n  }\n  public get visibleIf(): string {\n    return this.getPropertyValueWithoutDefault(\"visibleIf\") || \"\";\n  }\n  public set visibleIf(val: string) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  public get enableIf(): string {\n    return this.getPropertyValueWithoutDefault(\"enableIf\") || \"\";\n  }\n  public set enableIf(val: string) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  public get isVisible(): boolean {\n    const res = this.getPropertyValueWithoutDefault(\"isVisible\");\n    return res !== undefined ? res : true;\n  }\n  public setIsVisible(val: boolean): void {\n    this.setPropertyValue(\"isVisible\", val);\n  }\n  public get isEnabled(): boolean {\n    const res = this.getPropertyValueWithoutDefault(\"isEnabled\");\n    return res !== undefined ? res : true;\n  }\n  public setIsEnabled(val: boolean): void {\n    this.setPropertyValue(\"isEnabled\", val);\n  }\n  public addUsedLocales(locales: Array<string>): void {\n    if (this.locTextValue) {\n      this.AddLocStringToUsedLocales(this.locTextValue, locales);\n    }\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.locTextValue?.strChanged();\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void {\n    if (name === \"value\" && !this.hasText) {\n      this.locTextValue?.strChanged();\n    }\n    var funcName = \"itemValuePropertyChanged\";\n    if (!this.locOwner || !(<any>this.locOwner)[funcName]) return;\n    (<any>this.locOwner)[funcName](this, name, oldValue, newValue);\n  }\n  protected getConditionRunner(isVisible: boolean): ConditionRunner {\n    if (isVisible) return this.getVisibleConditionRunner();\n    return this.getEnableConditionRunner();\n  }\n  private getVisibleConditionRunner(): ConditionRunner {\n    const expression = this.getExpressionFromSurvey(\"visibleIf\");\n    if (!expression) return null;\n    if (!this.visibleConditionRunner)\n      this.visibleConditionRunner = new ConditionRunner(expression);\n    this.visibleConditionRunner.expression = expression;\n    return this.visibleConditionRunner;\n  }\n  private getEnableConditionRunner(): ConditionRunner {\n    const expression = this.getExpressionFromSurvey(\"enableIf\");\n    if (!expression) return null;\n    if (!this.enableConditionRunner)\n      this.enableConditionRunner = new ConditionRunner(expression);\n    this.enableConditionRunner.expression = expression;\n    return this.enableConditionRunner;\n  }\n  public originalItem: any;\n\n  //base action\n  @property() selectedValue: boolean;\n  public get selected(): boolean {\n    const locOwner = this._locOwner;\n    if (locOwner instanceof Question && locOwner.isItemSelected && this.selectedValue === undefined) {\n      this.selectedValue = <boolean><unknown>(new ComputedUpdater<boolean>(() => locOwner.isItemSelected(this)));\n    }\n    return this.selectedValue;\n  }\n  private componentValue: string;\n  public getComponent(): string {\n    if (this._locOwner instanceof Question) {\n      return this.componentValue || this._locOwner.itemComponent;\n    }\n    return this.componentValue;\n  }\n  public setComponent(val: string): void {\n    this.componentValue = val;\n  }\n  private _htmlElement: HTMLElement;\n  public setRootElement(val: HTMLElement): void {\n    this._htmlElement = val;\n  }\n  public getRootElement(): HTMLElement {\n    return this._htmlElement;\n  }\n\n  protected getEnabled(): boolean {\n    return this.isEnabled;\n  }\n  protected setEnabled(val: boolean): void {\n    this.setIsEnabled(val);\n  }\n  protected getVisible(): boolean {\n    const isVisible = this.isVisible === undefined ? true : this.isVisible;\n    const visible = this._visible === undefined ? true : this._visible;\n    return isVisible && visible;\n  }\n  protected setVisible(val: boolean): void {\n    if (this.visible !== val) {\n      this._visible = val;\n    }\n  }\n  private get _visible(): boolean { return this.getPropertyValue(\"visible\", true); }\n  private set _visible(val: boolean) { this.setPropertyValue(\"visible\", val); }\n\n  protected getLocTitle(): LocalizableString {\n    return this.locText;\n  }\n  protected getTitle(): string {\n    return this.text;\n  }\n  protected setLocTitle(val: LocalizableString): void {}\n  protected setTitle(val: string): void {}\n  public get icon(): string { return this.getPropertyValue(\"icon\", \"\"); }\n  public set icon(val: string) { this.setPropertyValue(\"icon\", val); }\n}\n\nBase.createItemValue = function (source: any, type?: string): any {\n  var item = null;\n  if (!!type) {\n    item = JsonObject.metaData.createClass(type, {});\n  } else if (typeof source.getType === \"function\") {\n    item = new ItemValue(null, undefined, source.getType());\n  } else {\n    item = new ItemValue(null);\n  }\n  item.setData(source);\n  return item;\n};\nBase.itemValueLocStrChanged = function (arr: Array<any>): void {\n  ItemValue.locStrsChanged(arr);\n};\n\nJsonObjectProperty.getItemValuesDefaultValue = (val: any, type: string): Array<ItemValue> => {\n  const res = new Array<ItemValue>();\n  ItemValue.setData(res, Array.isArray(val) ? val : [], type);\n  return res;\n};\n\nSerializer.addClass(\n  \"itemvalue\",\n  [\n    { name: \"!value\", isUnique: true },\n    {\n      name: \"text\",\n      serializationProperty: \"locText\",\n    },\n    { name: \"visibleIf:condition\", locationInTable: \"detail\" },\n    {\n      name: \"enableIf:condition\", locationInTable: \"detail\",\n      visibleIf: (obj: ItemValue): boolean => {\n        return !obj || obj.ownerPropertyName !== \"rateValues\";\n      },\n    }\n  ],\n  (value: any) => new ItemValue(value)\n);", "import { HashTable, Helpers } from \"./helpers\";\nimport { Base } from \"./base\";\nimport { ISurvey, ISurveyData } from \"./base-interfaces\";\nimport { ExpressionRunner } from \"./conditions\";\nimport { Serializer } from \"./jsonobject\";\n\n/**\n * The calculated value is a way to define the variable in Survey Creator.\n * It has two main properties: name and expression. Based on expression the value read-only property is automatically calculated.\n * The name property should be unique though all calculated values.\n * It uses survey.getVariable/seruvey.setVariable functions to get/set its value. The class do not store its value internally.\n * You may set includeIntoResult property to true to store this calculated value into survey result.\n */\nexport class CalculatedValue extends Base {\n  private data: ISurveyData;\n  private expressionIsRunning: boolean = false;\n  private expressionRunner: ExpressionRunner;\n  constructor(name: string = null, expression: string = null) {\n    super();\n    if (!!name) {\n      this.name = name;\n    }\n    if (!!expression) {\n      this.expression = expression;\n    }\n  }\n  public setOwner(data: ISurveyData) {\n    this.data = data;\n    this.rerunExpression();\n  }\n  public getType(): string {\n    return \"calculatedvalue\";\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.data && !!(<any>this.data)[\"getSurvey\"]\n      ? (<any>this.data).getSurvey()\n      : null;\n  }\n  public get owner(): ISurveyData {\n    return this.data;\n  }\n  /**\n   * The calculated value name. It should be non empty and unique.\n   */\n  public get name(): string {\n    return this.getPropertyValue(\"name\") || \"\";\n  }\n  public set name(val: string) {\n    this.setPropertyValue(\"name\", val);\n  }\n  /**\n   * Set this property to true to include the non-empty calculated value into survey result, survey.data property.\n   */\n  public get includeIntoResult(): boolean {\n    return this.getPropertyValue(\"includeIntoResult\");\n  }\n  public set includeIntoResult(val: boolean) {\n    this.setPropertyValue(\"includeIntoResult\", val);\n  }\n  /**\n   * The Expression that used to calculate the value. You may use standard operators like +, -, * and /, squares (). Here is the example of accessing the question value {questionname}.\n   * Example: \"({quantity} * {price}) * (100 - {discount}) / 100\"\n   */\n  public get expression(): string {\n    return this.getPropertyValue(\"expression\") || \"\";\n  }\n  public set expression(val: string) {\n    this.setPropertyValue(\"expression\", val);\n    this.rerunExpression();\n  }\n  public locCalculation() {\n    this.expressionIsRunning = true;\n  }\n  public unlocCalculation() {\n    this.expressionIsRunning = false;\n  }\n  private isCalculated = false;\n  public resetCalculation() {\n    this.isCalculated = false;\n  }\n  public doCalculation(calculatedValues: Array<CalculatedValue>, properties: HashTable<any>\n  ) {\n    if (this.isCalculated) return;\n    this.runExpressionCore(calculatedValues, properties);\n    this.isCalculated = true;\n  }\n  public runExpression(properties: HashTable<any>) {\n    this.runExpressionCore(null, properties);\n  }\n  public get value(): any {\n    if (!this.data) return undefined;\n    return this.data.getVariable(this.name);\n  }\n  protected setValue(val: any) {\n    if (!this.data) return;\n    this.data.setVariable(this.name, val);\n  }\n  private get canRunExpression(): boolean {\n    return (\n      !!this.data &&\n      !this.isLoadingFromJson &&\n      !!this.expression &&\n      !this.expressionIsRunning &&\n      !!this.name\n    );\n  }\n  private rerunExpression() {\n    if (!this.canRunExpression) return;\n    this.runExpression(this.data.getFilteredProperties());\n  }\n  private runExpressionCore(calculatedValues: Array<CalculatedValue>, properties: HashTable<any>) {\n    if (!this.canRunExpression || !this.ensureExpression()) return;\n    this.locCalculation();\n    if (!!calculatedValues) {\n      this.runDependentExpressions(calculatedValues, properties);\n    }\n    this.expressionRunner.runContext(this.getValueGetterContext(), this.getPropertiesCopy(properties, \"expression\"));\n  }\n  private runDependentExpressions(calculatedValues: Array<CalculatedValue>, properties: HashTable<any>) {\n    var variables = this.expressionRunner.getVariables();\n    if (!variables) return;\n    for (var i = 0; i < calculatedValues.length; i++) {\n      var calcItem = calculatedValues[i];\n      if (calcItem === this || variables.indexOf(calcItem.name) < 0) continue;\n      calcItem.doCalculation(calculatedValues, properties);\n    }\n  }\n  private ensureExpression(): boolean {\n    const expression = this.getExpressionFromSurvey(\"expression\");\n    if (!expression) return false;\n    if (!!this.expressionRunner) {\n      this.expressionRunner.expression = expression;\n    } else {\n      this.expressionRunner = this.createExpressionRunner(expression);\n      this.expressionRunner.onRunComplete = newValue => {\n        if (!Helpers.isTwoValueEquals(newValue, this.value, false, true, false)) {\n          this.setValue(newValue);\n        }\n        this.unlocCalculation();\n      };\n    }\n    return true;\n  }\n}\n\nSerializer.addClass(\n  \"calculatedvalue\",\n  [\n    { name: \"!name\", isUnique: true },\n    \"expression:expression\",\n    \"includeIntoResult:boolean\",\n  ],\n  function() {\n    return new CalculatedValue();\n  },\n  \"base\"\n);\n", "import { Serializer } from \"./jsonobject\";\nimport { Base } from \"./base\";\nimport { ISurvey } from \"./base-interfaces\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { ConditionRunner } from \"./conditions\";\n\n/**\n * Base class for HtmlConditionItem and UrlConditionItem classes.\n */\nexport class ExpressionItem extends Base implements ILocalizableOwner {\n  public locOwner: ILocalizableOwner;\n  constructor(expression: string = null) {\n    super();\n    this.expression = expression;\n  }\n  public getType(): string {\n    return \"expressionitem\";\n  }\n  public runCondition(properties: any): boolean {\n    let res = false;\n    this.runExpressionByProperty(\"expression\", properties, (val: any) => {\n      res = val === true;\n    });\n    return res;\n  }\n  /**\n   * The expression property. If this expression returns true, then survey will use html property to show on complete page.\n   */\n  public get expression(): string {\n    return this.getPropertyValue(\"expression\", \"\");\n  }\n  public set expression(val: string) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  get locHtml(): LocalizableString {\n    return this.getLocalizableString(\"html\");\n  }\n  public getLocale(): string {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  public getRenderer(name: string): string {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  public getRendererContext(locStr: LocalizableString): any {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  public getProcessedText(text: string): string {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  public getSurvey(isLive: boolean = false): ISurvey {\n    return <ISurvey>this.locOwner;\n  }\n}\n\n/**\n * A class that contains expression and html propeties. It uses in survey.completedHtmlOnCondition array.\n * If the expression returns true then html of this item uses instead of survey.completedHtml property\n * @see SurveyModel.completedHtmlOnCondition\n * @see SurveyModel.completedHtml\n */\nexport class HtmlConditionItem extends ExpressionItem {\n  constructor(expression: string = null, html: string = null) {\n    super(expression);\n    this.createLocalizableString(\"html\", this);\n    this.html = html;\n  }\n  public getType(): string {\n    return \"htmlconditionitem\";\n  }\n  /**\n   * The html that shows on completed ('Thank you') page. The expression should return true\n   * @see expression\n   */\n  public get html(): string {\n    return this.getLocalizableStringText(\"html\");\n  }\n  public set html(value: string) {\n    this.setLocalizableStringText(\"html\", value);\n  }\n  get locHtml(): LocalizableString {\n    return this.getLocalizableString(\"html\");\n  }\n}\n\n/**\n * A class that contains expression and url propeties. It uses in survey.navigateToUrlOnCondition array.\n * If the expression returns true then url of this item uses instead of survey.navigateToUrl property\n * @see SurveyModel.navigateToUrl\n */\nexport class UrlConditionItem extends ExpressionItem {\n  constructor(expression: string = null, url: string = null) {\n    super(expression);\n    this.createLocalizableString(\"url\", this);\n    this.url = url;\n  }\n  public getType(): string {\n    return \"urlconditionitem\";\n  }\n  /**\n   * The url that survey navigates to on completing the survey. The expression should return true\n   * @see expression\n   */\n  public get url(): string {\n    return this.getLocalizableStringText(\"url\");\n  }\n  public set url(value: string) {\n    this.setLocalizableStringText(\"url\", value);\n  }\n  get locUrl(): LocalizableString {\n    return this.getLocalizableString(\"url\");\n  }\n}\n\nSerializer.addClass(\n  \"expressionitem\",\n  [\"expression:condition\"],\n  function() {\n    return new ExpressionItem();\n  },\n  \"base\"\n);\n\nSerializer.addClass(\n  \"htmlconditionitem\",\n  [{ name: \"html:html\", serializationProperty: \"locHtml\" }],\n  function() {\n    return new HtmlConditionItem();\n  },\n  \"expressionitem\"\n);\n\nSerializer.addClass(\n  \"urlconditionitem\",\n  [{ name: \"url:string\", serializationProperty: \"locUrl\" }],\n  function() {\n    return new UrlConditionItem();\n  },\n  \"expressionitem\"\n);\n", "import { Base } from \"./base\";\nimport { ITextProcessor, IQuestion, ISurvey } from \"./base-interfaces\";\nimport { ItemValue } from \"./itemvalue\";\nimport { Serializer, JsonObjectProperty } from \"./jsonobject\";\nimport { WebRequestError, WebRequestEmptyError } from \"./error\";\nimport { IBeforeRequestChoicesOptions, settings } from \"./settings\";\nimport { SurveyError } from \"./survey-error\";\n\nclass XmlParser {\n  private parser = new DOMParser();\n  public assignValue(target: any, name: string, value: any) {\n    if (Array.isArray(target[name])) {\n      target[name].push(value);\n    } else if (target[name] !== undefined) {\n      target[name] = [target[name]].concat(value);\n    } else if (\n      typeof value === \"object\" &&\n      Object.keys(value).length === 1 &&\n      Object.keys(value)[0] === name\n    ) {\n      target[name] = value[name];\n    } else {\n      target[name] = value;\n    }\n  }\n  public xml2Json(xmlNode: any, result: any) {\n    if (xmlNode.children && xmlNode.children.length > 0) {\n      for (let i = 0; i < xmlNode.children.length; i++) {\n        let childNode = xmlNode.children[i];\n        let childObject = {};\n        this.xml2Json(childNode, childObject);\n        this.assignValue(result, childNode.nodeName, childObject);\n      }\n    } else {\n      this.assignValue(result, xmlNode.nodeName, xmlNode.textContent);\n    }\n  }\n  public parseXmlString(xmlString: string) {\n    let xmlRoot = this.parser.parseFromString(xmlString, \"text/xml\");\n    let json = {};\n    this.xml2Json(xmlRoot, json);\n    return json;\n  }\n}\n\n/**\n * Configures access to a RESTful service that returns choices for [Checkbox](https://surveyjs.io/Examples/Library?id=questiontype-checkbox), [Dropdown](https://surveyjs.io/Examples/Library?id=questiontype-dropdown), [Radiogroup](https://surveyjs.io/Examples/Library?id=questiontype-radiogroup), and other multiple-choice question types.\n *\n * Use the following properties to configure this object:\n *\n * ```js\n * {\n *   url: \"http://...\", // A RESTful service's URL.\n *   valueName: \"value\", // Specifies which field contains choice values.\n *   titleName: \"title\", // Specifies which field contains display texts for choice values.\n *   imageLinkName: \"imageUrl\", // Specifies which field contains image URLs. Used in Image Picker questions.\n *   // Path to the array of choices. Specify `path` only if the array of choices is nested within the object returned by the service.\n *   // The following path separators are allowed: semicolon `;`, comma `,`.\n *   path: \"myNestedArray\"\n * }\n * ```\n *\n * Typically, you should assign this object to a question's [`choicesByUrl`](https://surveyjs.io/Documentation/Library?id=QuestionSelectBase#choicesByUrl) property. You can also specify additional application-wide settings using the [`settings.web`](https://surveyjs.io/form-library/documentation/api-reference/settings#web) object.\n */\nexport class ChoicesRestful extends Base {\n  private static cacheText = \"{CACHE}\";\n  private static noCacheText = \"{NOCACHE}\";\n  public static get EncodeParameters(): boolean {\n    return settings.web.encodeUrlParams;\n  }\n  public static set EncodeParameters(val: boolean) {\n    settings.web.encodeUrlParams = val;\n  }\n  public static clearCache() {\n    ChoicesRestful.itemsResult = {};\n    ChoicesRestful.sendingSameRequests = {};\n  }\n  private static itemsResult: { [index: string]: any } = {};\n  private static sendingSameRequests: {\n    [index: string]: Array<ChoicesRestful>,\n  } = {};\n  private static addSameRequest(obj: ChoicesRestful): boolean {\n    if (!obj.isUsingCache) return false;\n    var hash = obj.objHash;\n    var res = ChoicesRestful.sendingSameRequests[hash];\n    if (!res) {\n      ChoicesRestful.sendingSameRequests[obj.objHash] = [];\n      return false;\n    }\n    res.push(obj);\n    obj.isRunningValue = true;\n    return true;\n  }\n  private static unregisterSameRequests(obj: ChoicesRestful, items: any) {\n    if (!obj.isUsingCache) return;\n    var res = ChoicesRestful.sendingSameRequests[obj.objHash];\n    delete ChoicesRestful.sendingSameRequests[obj.objHash];\n    if (!res) return;\n    for (var i = 0; i < res.length; i++) {\n      res[i].isRunningValue = false;\n      if (!!res[i].getResultCallback) {\n        res[i].getResultCallback(items);\n      }\n    }\n  }\n  public static get onBeforeSendRequest(): (\n    sender: ChoicesRestful,\n    options: IBeforeRequestChoicesOptions\n  ) => void {\n    return settings.web.onBeforeRequestChoices;\n  }\n  public static set onBeforeSendRequest(\n    val: (sender: ChoicesRestful, options: IBeforeRequestChoicesOptions) => void\n  ) {\n    settings.web.onBeforeRequestChoices = val;\n  }\n  private static getCachedItemsResult(obj: ChoicesRestful): boolean {\n    var hash = obj.objHash;\n    var res = ChoicesRestful.itemsResult[hash];\n    if (!res) return false;\n    if (obj.getResultCallback) {\n      obj.getResultCallback(res);\n    }\n    return true;\n  }\n  private lastObjHash: string = \"\";\n  private isRunningValue: boolean = false;\n  protected processedUrl: string = \"\";\n  protected processedPath: string = \"\";\n  private isUsingCacheFromUrl: boolean = undefined;\n  public onProcessedUrlCallback: (url: string, path: string) => void;\n  public getResultCallback: (items: Array<ItemValue>) => void;\n  public beforeSendRequestCallback: () => void;\n  public updateResultCallback: (\n    items: Array<ItemValue>,\n    serverResult: any\n  ) => Array<ItemValue>;\n  public getItemValueCallback: (item: any) => any;\n  public error: SurveyError = null;\n  public owner: IQuestion;\n  public createItemValue = (value: any): ItemValue => {\n    return new ItemValue(value);\n  };\n  constructor() {\n    super();\n    this.registerPropertyChangedHandlers([\"url\"], () => {\n      if (this.owner) (<Base><any>this.owner).setPropertyValue(\"isUsingRestful\", !!this.url);\n    });\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.owner ? this.owner.survey : null;\n  }\n  public run(textProcessor: ITextProcessor = null) {\n    if (!this.url || !this.getResultCallback) return;\n    this.processedText(textProcessor);\n    if (!this.processedUrl) {\n      this.doEmptyResultCallback({});\n      this.lastObjHash = this.objHash;\n      return;\n    }\n    if (this.lastObjHash === this.objHash) return;\n    this.lastObjHash = this.objHash;\n    this.error = null;\n    if (this.useChangedItemsResults()) return;\n    if (ChoicesRestful.addSameRequest(this)) return;\n    this.sendRequest();\n  }\n  public get isUsingCache(): boolean {\n    if (this.isUsingCacheFromUrl === true) return true;\n    if (this.isUsingCacheFromUrl === false) return false;\n    return settings.web.cacheLoadedChoices;\n  }\n  public get isRunning(): boolean {\n    return this.getIsRunning();\n  }\n  protected getIsRunning(): boolean {\n    return this.isRunningValue;\n  }\n\n  public get isWaitingForParameters() {\n    return this.url && !this.processedUrl;\n  }\n  protected useChangedItemsResults(): boolean {\n    return ChoicesRestful.getCachedItemsResult(this);\n  }\n  private doEmptyResultCallback(serverResult: any) {\n    var items: Array<any> = [];\n    if (this.updateResultCallback) {\n      items = this.updateResultCallback(items, serverResult);\n    }\n    this.getResultCallback(items);\n  }\n  private processedText(textProcessor: ITextProcessor) {\n    var urlText = this.url;\n    if (!!urlText) {\n      urlText = urlText\n        .replace(ChoicesRestful.cacheText, \"\")\n        .replace(ChoicesRestful.noCacheText, \"\");\n    }\n    if (textProcessor) {\n      var pUrl = textProcessor.processTextEx({ text: urlText, runAtDesign: true });\n      var pPath = textProcessor.processTextEx({ text: this.path, runAtDesign: true });\n      if (!pUrl.hasAllValuesOnLastRun || !pPath.hasAllValuesOnLastRun) {\n        this.processedUrl = \"\";\n        this.processedPath = \"\";\n      } else {\n        this.processedUrl = pUrl.text;\n        this.processedPath = pPath.text;\n      }\n    } else {\n      this.processedUrl = urlText;\n      this.processedPath = this.path;\n    }\n    if (this.onProcessedUrlCallback) {\n      this.onProcessedUrlCallback(this.processedUrl, this.processedPath);\n    }\n  }\n  protected parseResponse(response: any) {\n    let parsedResponse;\n    if (\n      !!response &&\n      typeof response.indexOf === \"function\" &&\n      response.indexOf(\"<\") === 0\n    ) {\n      var parser = new XmlParser();\n      parsedResponse = parser.parseXmlString(response);\n    } else {\n      try {\n        parsedResponse = JSON.parse(response);\n      } catch{\n        parsedResponse = (response || \"\")\n          .split(\"\\n\")\n          .map((s: any) => s.trim(\" \"))\n          .filter((s: any) => !!s);\n      }\n    }\n    return parsedResponse;\n  }\n  protected sendRequest() {\n    if (typeof XMLHttpRequest !== \"undefined\") {\n      this.sendXmlHttpRequest();\n    } else if (typeof fetch !== \"undefined\") {\n      this.sendFetchRequest();\n    } else {\n      this.error = new WebRequestError(\n        \"The browser does not support XMLHttpRequest or fetch API\",\n        \"\",\n        this.owner\n      );\n      this.doEmptyResultCallback(\"\");\n    }\n  }\n  protected sendXmlHttpRequest() {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", this.processedUrl);\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    var self = this;\n    var loadingObjHash = this.objHash;\n    xhr.onload = function () {\n      self.beforeLoadRequest();\n      if (xhr.status === 200) {\n        self.onLoad(self.parseResponse(xhr.response), loadingObjHash);\n      } else {\n        self.onError(xhr.statusText, xhr.responseText);\n      }\n    };\n    var options = { url: this.processedUrl, request: xhr };\n    if (!!settings.web.onBeforeRequestChoices) {\n      settings.web.onBeforeRequestChoices(this, options);\n    }\n    this.beforeSendRequest();\n    options.request.send();\n  }\n  protected sendFetchRequest() {\n    const self = this;\n    const loadingObjHash = this.objHash;\n\n    let url = this.processedUrl;\n    const fetchOptions: RequestInit = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n    const options = { url, fetchOptions };\n\n    if (settings.web.onBeforeRequestChoices) {\n      settings.web.onBeforeRequestChoices(this, options);\n    }\n\n    this.beforeSendRequest();\n    fetch(options.url, options.fetchOptions)\n      .then(response => {\n        self.beforeLoadRequest();\n\n        if (response.status === 200) {\n          return response.text().then(text => {\n            self.onLoad(self.parseResponse(text), loadingObjHash);\n          });\n        } else {\n          return response.text().then(errorText => {\n            self.onError(response.statusText, errorText);\n          });\n        }\n      })\n      .catch(error => {\n        self.onError(error.message, \"\");\n      });\n  }\n  public getType(): string {\n    return \"choicesByUrl\";\n  }\n  public get isEmpty(): boolean {\n    return !this.url && !this.path;\n  }\n  public getCustomPropertiesNames(): Array<string> {\n    var properties = this.getCustomProperties();\n    var res = new Array<string>();\n    for (var i = 0; i < properties.length; i++) {\n      res.push(this.getCustomPropertyName(properties[i].name));\n    }\n    return res;\n  }\n  private getCustomPropertyName(propertyName: string): string {\n    return propertyName + \"Name\";\n  }\n  private getCustomProperties(): Array<JsonObjectProperty> {\n    var properties = Serializer.getProperties(this.itemValueType);\n    var res = [];\n    for (var i = 0; i < properties.length; i++) {\n      if (\n        properties[i].name === \"value\" ||\n        properties[i].name === \"text\" ||\n        properties[i].name === \"visibleIf\" ||\n        properties[i].name === \"enableIf\"\n      )\n        continue;\n      res.push(properties[i]);\n    }\n    return res;\n  }\n  private getAllPropertiesNames(): Array<string> {\n    const res = new Array<string>();\n    Serializer.getPropertiesByObj(this).forEach(prop => res.push(prop.name));\n    this.getCustomPropertiesNames().forEach(prop => res.push(prop));\n    return res;\n  }\n  public setData(json: any): void {\n    if (!json) json = {};\n    this.getAllPropertiesNames().forEach(name => {\n      (<any>this)[name] = json[name];\n    });\n    if (json.attachOriginalItems) {\n      this.attachData = json.attachOriginalItems;\n    }\n  }\n  public getData(): any {\n    const res: any = {};\n    let hasValue = false;\n    this.getAllPropertiesNames().forEach(name => {\n      const val = (<any>this)[name];\n      if (!this.isValueEmpty(val) && val !== this.getDefaultPropertyValue(name)) {\n        res[name] = val;\n        hasValue = true;\n      }\n    });\n    return hasValue ? res : null;\n  }\n  /**\n   * A RESTful service's URL.\n   *\n   * This property supports [dynamic URLs](https://surveyjs.io/Documentation/Library?id=design-survey-conditional-logic#dynamic-texts). For example, the URL below depends on the `region` question's value. When the value changes, the survey automatically loads a new dataset that corresponds to the selected region.\n   *\n   * ```js\n   * url: \"https://surveyjs.io/api/CountriesExample?region={region}\"\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/Examples/Library/?id=questiontype-dropdownrestfull (linkStyle))\n   * @see path\n   * @see valueName\n   * @see titleName\n   */\n  public get url(): string {\n    return this.getPropertyValue(\"url\") || \"\";\n  }\n  public set url(val: string) {\n    this.setPropertyValue(\"url\", val);\n    this.isUsingCacheFromUrl = undefined;\n    if (!val) return;\n    if (val.indexOf(ChoicesRestful.cacheText) > -1) {\n      this.isUsingCacheFromUrl = true;\n    } else {\n      if (val.indexOf(ChoicesRestful.noCacheText) > -1) {\n        this.isUsingCacheFromUrl = false;\n      }\n    }\n  }\n  /**\n   * Path to the array of choices. The following path separators are allowed: semicolon `;`, comma `,`.\n   *\n   * Specify this property only if the array of choices is nested within the object returned by the service. For example, the service returns the following object:\n   *\n   * ```js\n   * {\n   *   countries: [ ... ],\n   *   capitals: [ ... ]\n   * }\n   * ```\n   *\n   * To populate choices with values from the `countries` array, set the `path` property to `\"countries\"`. To use the `capitals` array, set this property to `\"capitals\"`.\n   * @see url\n   * @see valueName\n   * @see titleName\n   */\n\n  public get path(): string {\n    return this.getPropertyValue(\"path\") || \"\";\n  }\n  public set path(val: string) {\n    this.setPropertyValue(\"path\", val);\n  }\n  /**\n   * Specifies which property in the obtained data object contains choice values.\n   *\n   * [View Demo](https://surveyjs.io/Examples/Library/?id=questiontype-dropdownrestfull (linkStyle))\n   *\n   * @see url\n   * @see path\n   * @see titleName\n   */\n\n  public get valueName(): string {\n    return this.getPropertyValue(\"valueName\") || \"\";\n  }\n  public set valueName(val: string) {\n    this.setPropertyValue(\"valueName\", val);\n  }\n  /**\n   * Specifies which property in the obtained data object contains display texts for choices.\n   *\n   * @see url\n   * @see path\n   * @see valueName\n   */\n\n  public get titleName(): string {\n    return this.getPropertyValue(\"titleName\") || \"\";\n  }\n  public set titleName(val: string) {\n    this.setPropertyValue(\"titleName\", val);\n  }\n\n  /**\n   * Specifies which property in the obtained data object contains image URLs. Used only in [Image Picker](https://surveyjs.io/Examples/Library?id=questiontype-imagepicker) questions.\n   *\n   * @see url\n   * @see path\n   * @see valueName\n   */\n  public get imageLinkName(): string {\n    return this.getPropertyValue(\"imageLinkName\") || \"\";\n  }\n  public set imageLinkName(val: string) {\n    this.setPropertyValue(\"imageLinkName\", val);\n  }\n  /**\n   * Specifies whether the service is allowed to return an empty response or an empty array in a response.\n   *\n   * Default value: `false`\n   */\n  public get allowEmptyResponse(): boolean {\n    return this.getPropertyValue(\"allowEmptyResponse\");\n  }\n  public set allowEmptyResponse(val: boolean) {\n    this.setPropertyValue(\"allowEmptyResponse\", val);\n  }\n  public get attachOriginalItems(): boolean {\n    return this.attachData;\n  }\n  public set attachOriginalItems(val: boolean) {\n    this.attachData = val;\n  }\n  /**\n   * Specifies whether to attach original data objects to choice items.\n   *\n   * Default value: `false`\n   *\n   * If you enable this property, original data objects will be stored in the `data` property of choice items. For instance, the following code shows how to access a data object of a selected choice item in a Dropdown question:\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = {\n   *   \"elements\": [{\n   *     \"type\": \"dropdown\",\n   *     \"name\": \"country\",\n   *     \"title\": \"Select a country\",\n   *     \"choicesByUrl\": {\n   *       \"url\": \"https://surveyjs.io/api/CountriesExample\",\n   *       \"valueName\": \"name\",\n   *       \"attachData\": true\n   *     }\n   *   }]\n   * }\n   *\n   * const survey = new Model(surveyJson);\n   *\n   * function retrieveItemData(survey, qName) {\n   *   const q = survey.getQuestionByName(qName);\n   *   if (q && q.selectedItem) {\n   *     return q.selectedItem.data;\n   *   }\n   *   return null;\n   * }\n   * ```\n   */\n  public get attachData(): boolean {\n    return this.getPropertyValue(\"attachData\");\n  }\n  public set attachData(val: boolean) {\n    this.setPropertyValue(\"attachData\", val);\n  }\n  public get itemValueType(): string {\n    if (!this.owner) return \"itemvalue\";\n    var prop = Serializer.findProperty(this.owner.getType(), \"choices\");\n    if (!prop) return \"itemvalue\";\n    if (prop.type == \"itemvalue[]\") return \"itemvalue\";\n    return prop.type;\n  }\n  public clear(): void {\n    this.setData(undefined);\n  }\n  protected beforeSendRequest() {\n    this.isRunningValue = true;\n    if (!!this.beforeSendRequestCallback) {\n      this.beforeSendRequestCallback();\n    }\n  }\n  protected beforeLoadRequest() {\n    this.isRunningValue = false;\n  }\n  protected onLoad(result: any, loadingObjHash: string = null) {\n    if (!loadingObjHash) {\n      loadingObjHash = this.objHash;\n    }\n    var items = new Array<ItemValue>();\n    var updatedResult = this.getResultAfterPath(result);\n    if (updatedResult && updatedResult[\"length\"]) {\n      for (var i = 0; i < updatedResult.length; i++) {\n        var itemValue = updatedResult[i];\n        if (!itemValue) continue;\n        var value = !!this.getItemValueCallback\n          ? this.getItemValueCallback(itemValue)\n          : this.getValue(itemValue);\n        var item = this.createItemValue(value);\n        this.setTitle(item, itemValue);\n        this.setCustomProperties(item, itemValue);\n        if (this.attachData) {\n          item.originalItem = itemValue;\n          item.data = itemValue;\n        }\n        var imageLink = this.getImageLink(itemValue);\n        if (!!imageLink) {\n          item.imageLink = imageLink;\n        }\n        items.push(item);\n      }\n    } else {\n      if (!this.allowEmptyResponse) {\n        this.error = new WebRequestEmptyError(null, this.owner);\n      }\n    }\n    if (this.updateResultCallback) {\n      items = this.updateResultCallback(items, result);\n    }\n    if (this.isUsingCache) {\n      ChoicesRestful.itemsResult[loadingObjHash] = items;\n    }\n    this.callResultCallback(items, loadingObjHash);\n    ChoicesRestful.unregisterSameRequests(this, items);\n  }\n  protected callResultCallback(\n    items: Array<ItemValue>,\n    loadingObjHash: string\n  ) {\n    if (loadingObjHash != this.objHash) return;\n    this.getResultCallback(items);\n  }\n  private setCustomProperties(item: ItemValue, itemValue: any) {\n    var properties = this.getCustomProperties();\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      var val = this.getValueCore(\n        itemValue,\n        this.getPropertyBinding(prop.name)\n      );\n      if (!this.isValueEmpty(val)) {\n        (<any>item)[prop.name] = val;\n      }\n    }\n  }\n  private getPropertyBinding(propertyName: string) {\n    if ((<any>this)[this.getCustomPropertyName(propertyName)])\n      return (<any>this)[this.getCustomPropertyName(propertyName)];\n    if ((<any>this)[propertyName]) return (<any>this)[propertyName];\n    return propertyName;\n  }\n  private onError(status: string, response: string) {\n    this.error = new WebRequestError(status, response, this.owner);\n    this.doEmptyResultCallback(response);\n    ChoicesRestful.unregisterSameRequests(this, []);\n  }\n  private getResultAfterPath(result: any) {\n    if (!result) return result;\n    if (!this.processedPath) return result;\n    var pathes = this.getPathes();\n    for (var i = 0; i < pathes.length; i++) {\n      result = result[pathes[i]];\n      if (!result) return null;\n    }\n    return result;\n  }\n  private getPathes(): Array<string> {\n    var pathes = [];\n    if (this.processedPath.indexOf(\";\") > -1) {\n      pathes = this.path.split(\";\");\n    } else if (this.processedPath.indexOf(\",\") > -1) {\n      pathes = this.processedPath.split(\",\");\n    } else {\n      pathes = this.processedPath.split(\".\");\n    }\n    if (pathes.length == 0) pathes.push(this.processedPath);\n    return pathes;\n  }\n  private getValue(item: any): any {\n    if (!item) return null;\n    if (this.valueName) return this.getValueCore(item, this.valueName);\n    if (!(item instanceof Object)) return item;\n    var len = Object.keys(item).length;\n    if (len < 1) return null;\n    return item[Object.keys(item)[0]];\n  }\n  private setTitle(item: ItemValue, itemValue: any): any {\n    var title = this.titleName ? this.titleName : \"title\";\n    var val = this.getValueCore(itemValue, title);\n    if (!val) return;\n    if (typeof val === \"string\") {\n      item.text = val;\n    } else {\n      item.locText.setJson(val);\n    }\n  }\n  private getImageLink(item: any): any {\n    var imageLink = this.imageLinkName ? this.imageLinkName : \"imageLink\";\n    return this.getValueCore(item, imageLink);\n  }\n  private getValueCore(item: any, property: string): any {\n    if (!item) return null;\n    if (property.indexOf(\".\") < 0) return item[property];\n    var properties = property.split(\".\");\n    for (var i = 0; i < properties.length; i++) {\n      item = item[properties[i]];\n      if (!item) return null;\n    }\n    return item;\n  }\n  private get objHash() {\n    return (\n      this.processedUrl +\n      \";\" +\n      this.processedPath +\n      \";\" +\n      this.valueName +\n      \";\" +\n      this.titleName +\n      \";\" +\n      this.imageLinkName\n    );\n  }\n}\n\n/**\n * @deprecated Use `ChoicesRestful` instead.\n */\nexport class ChoicesRestfull extends ChoicesRestful {\n  public static get EncodeParameters(): boolean {\n    return ChoicesRestful.EncodeParameters;\n  }\n  public static set EncodeParameters(val: boolean) {\n    ChoicesRestful.EncodeParameters = val;\n  }\n  public static clearCache() {\n    ChoicesRestful.clearCache();\n  }\n  public static get onBeforeSendRequest(): (\n    sender: ChoicesRestful,\n    options: IBeforeRequestChoicesOptions\n  ) => void {\n    return settings.web.onBeforeRequestChoices;\n  }\n  public static set onBeforeSendRequest(\n    val: (sender: ChoicesRestful, options: IBeforeRequestChoicesOptions) => void\n  ) {\n    settings.web.onBeforeRequestChoices = val;\n  }\n}\n\nSerializer.addClass(\n  \"choicesByUrl\",\n  [\n    \"url\",\n    \"path\",\n    \"valueName\",\n    \"titleName\",\n    {\n      name: \"imageLinkName\",\n      visibleIf: function (obj: any) {\n        return !!obj && !!obj.owner && obj.owner.getType() == \"imagepicker\";\n      },\n    },\n    { name: \"allowEmptyResponse:boolean\" },\n    { name: \"attachData:boolean\", alternativeName: \"attachOriginalItems\", visible: false },\n  ],\n  function () {\n    return new ChoicesRestful();\n  }\n);\n", "import { HashTable } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { Question } from \"./question\";\nimport { property, Serializer } from \"./jsonobject\";\nimport { ConditionRunner } from \"./conditions\";\nimport { Helpers } from \"./helpers\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\n/**\n * A base class for all matrix question types.\n */\nexport class QuestionMatrixBaseModel<TRow, TColumn> extends Question {\n  protected generatedVisibleRows: Array<TRow> = null;\n  protected generatedTotalRow: TRow = null;\n  public visibleRowsChangedCallback: () => void;\n\n  protected createColumnValues(): any {\n    return this.createItemValues(\"columns\");\n  }\n\n  constructor(name: string) {\n    super(name);\n    this.columns = this.createColumnValues();\n    this.rows = this.createItemValues(\"rows\");\n  }\n  public getType(): string {\n    return \"matrixbase\";\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.updateVisibilityBasedOnRows();\n  }\n  public get isCompositeQuestion(): boolean {\n    return true;\n  }\n  /**\n   * Specifies whether to display the table header that contains column captions.\n   *\n   * Default value: `true`\n   */\n  public get showHeader(): boolean {\n    return this.getPropertyValue(\"showHeader\");\n  }\n  public set showHeader(val: boolean) {\n    this.setPropertyValue(\"showHeader\", val);\n  }\n  /**\n   * An array of matrix columns.\n   *\n   * For a Single-Select Matrix, the `columns` array can contain configuration objects with the `text` (display value) and `value` (value to be saved in survey results) properties. Alternatively, the array can contain primitive values that will be used as both the display values and values to be saved in survey results.\n   *\n   * [Single-Select Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   *\n   * For a Multi-Select Matrix or Dynamic Matrix, the `columns` array should contain configuration objects with properties described in the [`MatrixDropdownColumn`](https://surveyjs.io/form-library/documentation/api-reference/multi-select-matrix-column-values) API Reference section.\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/ (linkStyle))\n   */\n  get columns(): Array<any> {\n    return this.getPropertyValue(\"columns\");\n  }\n  set columns(newValue: Array<any>) {\n    this.setPropertyValue(\"columns\", newValue);\n  }\n  public get visibleColumns(): Array<any> {\n    const res: Array<any> = [];\n    this.columns.forEach(col => { if (this.isColumnVisible(col)) { res.push(col); } });\n    return res;\n  }\n  protected isColumnVisible(column: any): boolean {\n    return column.isVisible;\n  }\n  /**\n   * An array of matrix rows.\n   *\n   * This array can contain primitive values or objects with the `text` (display value) and `value` (value to be saved in survey results) properties.\n   *\n   * [Single-Select Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   */\n  get rows(): Array<any> {\n    return this.getPropertyValue(\"rows\");\n  }\n  set rows(newValue: Array<any>) {\n    var newRows = this.processRowsOnSet(newValue);\n    this.setPropertyValue(\"rows\", newRows);\n  }\n  protected processRowsOnSet(newRows: Array<any>) {\n    return newRows;\n  }\n  protected getVisibleRows(): Array<TRow> {\n    return [];\n  }\n  /**\n   * Returns an array of visible matrix rows.\n   * @see rowsVisibleIf\n   */\n  public get visibleRows(): Array<TRow> {\n    return this.getVisibleRows();\n  }\n  /**\n   * A Boolean expression that is evaluated against each matrix row. If the expression evaluates to `false`, the row becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current row in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-visibility-of-rows-in-matrix-table/ (linkStyle))\n   * @see visibleRows\n   * @see columnsVisibleIf\n   */\n  public get rowsVisibleIf(): string {\n    return this.getPropertyValue(\"rowsVisibleIf\", \"\");\n  }\n  public set rowsVisibleIf(val: string) {\n    this.setPropertyValue(\"rowsVisibleIf\", val);\n    if (!this.isLoadingFromJsonValue) {\n      this.runCondition(this.getDataFilteredProperties());\n    }\n  }\n  /**\n   * A Boolean expression that is evaluated against each matrix column. If the expression evaluates to `false`, the column becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current column in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-visibility-of-rows-in-matrix-table/ (linkStyle))\n   * @see rowsVisibleIf\n   */\n  public get columnsVisibleIf(): string {\n    return this.getPropertyValue(\"columnsVisibleIf\", \"\");\n  }\n  public set columnsVisibleIf(val: string) {\n    this.setPropertyValue(\"columnsVisibleIf\", val);\n    if (!this.isLoadingFromJson) {\n      this.runCondition(this.getDataFilteredProperties());\n    }\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.runItemsCondition(properties);\n  }\n  protected onColumnsChanged(): void { }\n  protected onRowsChanged(): void {\n    this.updateVisibilityBasedOnRows();\n    this.fireCallback(this.visibleRowsChangedCallback);\n  }\n  protected updateVisibilityBasedOnRows(): void {\n    if ((<any>this).hideIfRowsEmpty) {\n      this.onVisibleChanged();\n    }\n  }\n  protected isVisibleCore(): boolean {\n    const res = super.isVisibleCore();\n    if (!res || !(<any>this).hideIfRowsEmpty) return res;\n    return this.visibleRows?.length > 0;\n  }\n  protected shouldRunColumnExpression(): boolean {\n    return !this.survey || !this.survey.areInvisibleElementsShowing;\n  }\n  protected hasRowsAsItems(): boolean {\n    return true;\n  }\n  protected runItemsCondition(properties: HashTable<any>): void {\n    let hasChanges = this.hasRowsAsItems() && this.runConditionsForRows(properties);\n    const hasColumnsChanged = this.runConditionsForColumns(properties);\n    hasChanges = hasColumnsChanged || hasChanges;\n    if (hasChanges) {\n      if (this.isClearValueOnHidden && hasColumnsChanged) {\n        this.clearInvisibleColumnValues();\n      }\n      this.clearGeneratedRows();\n      if (hasColumnsChanged) {\n        this.onColumnsChanged();\n      }\n      this.onRowsChanged();\n    }\n  }\n  protected clearGeneratedRows(): void {\n    this.generatedVisibleRows = null;\n  }\n  protected createRowsVisibleIfRunner(): ConditionRunner { return null; }\n  private runConditionsForRows(properties: HashTable<any>): boolean {\n    const showInvisibile = !!this.survey && this.survey.areInvisibleElementsShowing;\n    const runner = !showInvisibile ? this.createRowsVisibleIfRunner() : null;\n    const hasChanged = ItemValue.runConditionsForItems(this.rows, undefined, runner,\n      properties, !showInvisibile);\n    ItemValue.runEnabledConditionsForItems(this.rows, undefined, properties);\n    return hasChanged;\n  }\n  protected runConditionsForColumns(properties: HashTable<any>): boolean {\n    const useColumnsExpression = !!this.survey && !this.survey.areInvisibleElementsShowing;\n    const expression = this.getExpressionFromSurvey(\"columnsVisibleIf\");\n    const runner = useColumnsExpression && !!expression ? new ConditionRunner(expression) : null;\n    return ItemValue.runConditionsForItems(this.columns, undefined, runner, properties, this.shouldRunColumnExpression());\n  }\n  protected clearInvisibleColumnValues(): void {}\n  protected clearInvisibleValuesInRows(): void {}\n  public needResponsiveWidth() {\n    //TODO: make it mor intelligent\n    return true;\n  }\n\n  protected get columnsAutoWidth() {\n    return !this.isMobile && !this.columns.some(col => !!col.width);\n  }\n  public getTableCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.columnsAutoWidth, this.columnsAutoWidth)\n      .append(this.cssClasses.noHeader, !this.showHeader)\n      .append(this.cssClasses.hasFooter, !!this.renderedTable?.showAddRowOnBottom)\n      .append(this.cssClasses.rootAlternateRows, this.alternateRows)\n      .append(this.cssClasses.rootVerticalAlignTop, (this.verticalAlign === \"top\"))\n      .append(this.cssClasses.rootVerticalAlignMiddle, (this.verticalAlign === \"middle\")).toString();\n  }\n\n  /**\n   * Aligns matrix cell content in the vertical direction.\n   */\n  @property() verticalAlign: \"top\" | \"middle\";\n\n  /**\n   * Specifies whether to apply shading to alternate matrix rows.\n   *\n   * [Single-Select Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   */\n  @property() alternateRows: boolean;\n\n  /**\n   * Minimum column width in CSS values.\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see width\n   */\n  public get columnMinWidth(): string {\n    return this.getPropertyValue(\"columnMinWidth\") || \"\";\n  }\n  public set columnMinWidth(val: string) {\n    this.setPropertyValue(\"columnMinWidth\", val);\n  }\n\n  /**\n   * A width for the column that displays row titles (first column). Accepts CSS values.\n   */\n  public get rowTitleWidth(): string {\n    return this.getPropertyValue(\"rowTitleWidth\") || \"\";\n  }\n  public set rowTitleWidth(val: string) {\n    this.setPropertyValue(\"rowTitleWidth\", val);\n  }\n  /**\n   * Specifies how to arrange matrix questions.\n   *\n   * Possible values:\n   *\n   * - `\"table\"` - Displays matrix questions in a table.\n   * - `\"list\"` - Displays matrix questions one under another as a list.\n   * - `\"auto\"` (default) - Uses the `\"table\"` mode if the survey has sufficient width to fit the table or the `\"list\"` mode otherwise.\n   */\n  public set displayMode(val: \"auto\" | \"table\" | \"list\") {\n    this.setPropertyValue(\"displayMode\", val);\n  }\n  public get displayMode(): \"auto\" | \"table\" | \"list\" {\n    return this.getPropertyValue(\"displayMode\");\n  }\n\n  //a11y\n  public getCellAriaLabel(row:any, column:any, directRowTitle?: string):string {\n    let rowTitle:string = row.locText && row.locText.renderedHtml ? row.locText.renderedHtml : \"\";\n    if (directRowTitle) rowTitle = directRowTitle;\n    const columnTitle:string = column.locTitle && column.locTitle.renderedHtml ? column.locTitle.renderedHtml : \"\";\n    const rowString:string = (this.getLocalizationString(\"matrix_row\") || \"row\").toLocaleLowerCase();\n    const columnString:string = (this.getLocalizationString(\"matrix_column\") || \"column\").toLocaleLowerCase();\n    return `${rowString} ${rowTitle}, ${columnString} ${columnTitle}`;\n  }\n\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  // EO a11y\n  protected getIsMobile(): boolean {\n    if (this.displayMode == \"auto\") return super.getIsMobile();\n    return this.displayMode === \"list\";\n  }\n}\n\nSerializer.addClass(\n  \"matrixbase\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    \"columnsVisibleIf:condition\",\n    \"rowsVisibleIf:condition\",\n    \"columnMinWidth\",\n    { name: \"showHeader:boolean\", default: true },\n    {\n      name: \"verticalAlign\",\n      choices: [\"top\", \"middle\"],\n      default: \"middle\",\n    },\n    { name: \"alternateRows:boolean\", default: false },\n    {\n      name: \"displayMode\",\n      default: \"auto\",\n      choices: [\"auto\", \"table\", \"list\"],\n      visible: false\n    },\n  ],\n  undefined,\n  \"question\"\n);\n", "import { Helpers } from \"./helpers\";\nimport { Question } from \"./question\";\nimport { PanelModel } from \"./panel\";\nimport { ISurvey, ISurveyImpl, ITextProcessor, ITextProcessorProp, ITextProcessorResult } from \"./base-interfaces\";\nimport { IObjectValueContext, ProcessValue, ValueGetter } from \"./conditionProcessValue\";\n\nexport class TextPreProcessorItem {\n  public start: number;\n  public end: number;\n}\n\nexport class TextPreProcessorValue {\n  constructor(public name: string, public returnDisplayValue: boolean) {\n    this.isExists = false;\n  }\n  public value: any;\n  public isExists: boolean;\n}\n\nexport class TextPreProcessor {\n  private _unObservableValues: any = [undefined];\n  private get hasAllValuesOnLastRunValue(): boolean {\n    return this._unObservableValues[0];\n  }\n  private set hasAllValuesOnLastRunValue(val: boolean) {\n    this._unObservableValues[0] = val;\n  }\n  public onProcess: (textValue: TextPreProcessorValue) => void;\n  public process(text: string, returnDisplayValue?: boolean, doEncoding?: boolean,\n    replaceUndefinedValues?: boolean): string {\n    this.hasAllValuesOnLastRunValue = true;\n    if (!text) return text;\n    if (!this.onProcess) return text;\n    const items = this.getItems(text);\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i];\n      const name = this.getName(text.substring(item.start + 1, item.end));\n      if (!!name) {\n        const textValue = new TextPreProcessorValue(name, returnDisplayValue === true);\n        this.onProcess(textValue);\n        if (!textValue.isExists) {\n          this.hasAllValuesOnLastRunValue = false;\n        }\n        if (textValue.isExists || replaceUndefinedValues) {\n          if (Helpers.isValueEmpty(textValue.value)) {\n            this.hasAllValuesOnLastRunValue = false;\n          }\n          var replacedValue = !Helpers.isValueEmpty(textValue.value)\n            ? textValue.value\n            : \"\";\n          if (doEncoding) {\n            replacedValue = encodeURIComponent(replacedValue);\n          }\n          text = text.substring(0, item.start) + replacedValue + text.substring(item.end + 1);\n        }\n      }\n    }\n    return text;\n  }\n  public processValue(name: string, returnDisplayValue: boolean): TextPreProcessorValue {\n    var textValue = new TextPreProcessorValue(name, returnDisplayValue);\n    if (!!this.onProcess) {\n      this.onProcess(textValue);\n    }\n    return textValue;\n  }\n  public get hasAllValuesOnLastRun() { return !!this.hasAllValuesOnLastRunValue; }\n  public processText(text: string, returnDisplayValue: boolean): string {\n    return this.process(text, returnDisplayValue);\n  }\n  public processTextEx(params: ITextProcessorProp): ITextProcessorResult {\n    const res = { hasAllValuesOnLastRun: true, text: params.text };\n    res.text = this.process(params.text, params.returnDisplayValue, params.doEncoding, params.replaceUndefinedValues);\n    res.hasAllValuesOnLastRun = this.hasAllValuesOnLastRun;\n    return res;\n  }\n  private getItems(text: string): Array<TextPreProcessorItem> {\n    var items = [];\n    var length = text.length;\n    var start = -1;\n    var ch = \"\";\n    for (var i = 0; i < length; i++) {\n      ch = text[i];\n      if (ch == \"{\") start = i;\n      if (ch == \"}\") {\n        if (start > -1) {\n          var item = new TextPreProcessorItem();\n          item.start = start;\n          item.end = i;\n          if (this.isValidItemName(text.substring(start + 1, i))) {\n            items.push(item);\n          }\n        }\n        start = -1;\n      }\n    }\n    return items;\n  }\n  private isValidItemName(name: string): boolean {\n    return !!name && name.indexOf(\":\") < 0;\n  }\n  private getName(name: string): string {\n    if (!name) return;\n    return name.trim();\n  }\n}\nexport class TextContextProcessor implements ITextProcessor {\n  private textPreProcessor: TextPreProcessor;\n  constructor(private obj: IObjectValueContext) {\n    this.textPreProcessor = new TextPreProcessor();\n    this.textPreProcessor.onProcess = (textValue: TextPreProcessorValue) => {\n      this.getProcessedTextValue(textValue);\n    };\n  }\n  processText(text: string, returnDisplayValue: boolean): string {\n    const params: ITextProcessorProp = { text: text, returnDisplayValue: returnDisplayValue };\n    return this.processTextEx(params).text;\n  }\n  processTextEx(params: ITextProcessorProp): ITextProcessorResult {\n    if (!params.runAtDesign && this.survey?.isDesignMode) return { hasAllValuesOnLastRun: true, text: params.text };\n    return this.textPreProcessor.processTextEx(params);\n  }\n  private get survey(): ISurvey {\n    const obj = <any>this.obj;\n    return obj.getSurvey ? obj.getSurvey() : null;\n  }\n  private getProcessedTextValue(textValue: TextPreProcessorValue) {\n    const name = textValue.name.toLocaleLowerCase();\n    const res = new ValueGetter().getValueInfo({ name: name, context: this.obj.getValueGetterContext(), isText: true, isDisplayValue: textValue.returnDisplayValue });\n    if (res.isFound) {\n      textValue.isExists = res.isFound;\n      textValue.value = res.value;\n    }\n  }\n}", "import { Question, IConditionObject, QuestionValueGetterContext, QuestionArrayGetterContext } from \"./question\";\nimport { Serializer, CustomPropertiesCollection, JsonObjectProperty } from \"./jsonobject\";\nimport { Base, ArrayChanges } from \"./base\";\nimport {\n  ISurveyImpl,\n  ISurveyData,\n  ISurvey,\n  ITextProcessor,\n  IPanel,\n  IElement,\n  IQuestion,\n  IProgressInfo\n} from \"./base-interfaces\";\nimport { SurveyElement } from \"./survey-element\";\nimport { PanelModel } from \"./panel\";\nimport { PanelLayoutColumnModel } from \"./panel-layout-column\";\nimport { Helpers, HashTable } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { TextContextProcessor } from \"./textPreProcessor\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { SurveyError } from \"./survey-error\";\nimport { CustomError } from \"./error\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { settings } from \"./settings\";\nimport { IValueGetterContext, IValueGetterInfo, IValueGetterItem } from \"./conditionProcessValue\";\nimport { ValidationContext } from \"./question\";\n\n/**\n * An interface used to create custom question types.\n *\n * Refer to the following articles for more information:\n *\n * - [Create Specialized Question Types](https://surveyjs.io/form-library/documentation/customize-question-types/create-specialized-question-types)\n * - [Create Composite Question Types](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types)\n */\nexport interface ICustomQuestionTypeConfiguration {\n  /**\n   * A name used to identify a custom question type.\n   *\n   * @see title\n   */\n  name: string;\n  /**\n   * A title used for this custom question type in the UI. When `title` is not specified, the `name` property value is used.\n   *\n   * @see name\n   */\n  title?: string;\n  /**\n   * The name of an icon to use for the custom question type.\n   *\n   * [UI Icons](https://surveyjs.io/form-library/documentation/icons (linkStyle))\n   */\n  iconName?: string;\n  internal?: boolean;\n  /**\n   * A function that is called when the custom question type is initialized. Use it to add, remove, or modify the type's properties (see [Override Base Question Properties](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types#override-base-question-properties)).\n   */\n  onInit?(): void;\n  /**\n   * Specifies whether the custom question type is available in the Toolbox and the Add Question menu in Survey Creator.\n   *\n   * Default value: `true`\n   *\n   * Set this property to `false` if your custom question type is used only to customize Property Grid content and is not meant for a survey.\n   */\n  showInToolbox?: boolean;\n  /* eslint-disable */\n  /**\n   * A default title for questions created with this question type. Survey authors can change the default title in the JSON object or in Survey Creator's Property Grid.\n   *\n   * You can specify the question title with a string value or with an object that defines different titles for different locales:\n   *\n   * ```js\n   * import { ComponentCollection } from \"survey-core\";\n   *\n   * ComponentCollection.Instance.add({\n   *   // ...\n   *   defaultQuestionTitle: \"Default title\"\n   * });\n   * // ===== OR =====\n   * ComponentCollection.Instance.add({\n   *   // ...\n   *   defaultQuestionTitle: {\n   *     en: \"Default title\",\n   *     de: \"Standardtitel\",\n   *     fr: \"Titre par défaut\"\n   *   }\n   * });\n   * ```\n   */\n  /* eslint-enable */\n  defaultQuestionTitle?: any;\n  /**\n   * An array of property names to inherit from a base question or a Boolean value that specifies whether or not to inherit all properties.\n   *\n   * Default value: `false`\n   *\n   * When you create a [custom specialized question type](https://surveyjs.io/form-library/documentation/customize-question-types/create-specialized-question-types), you base it on another question type configured within the [`questionJSON`](#questionJSON) object. If the custom question type should inherit all properties from the base type, set the `inheritBaseProps` property to `true`. If you want to inherit only certain properties, set the `inheritBaseProps` property to an array of their names.\n   *\n   * [Create Specialized Question Types](https://surveyjs.io/form-library/documentation/customize-question-types/create-specialized-question-types (linkStyle))\n   */\n  inheritBaseProps?: false | true | Array<string>;\n  /**\n   * A function that is called when the custom question is created. Use it to access questions nested within a [composite question type](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types).\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * The custom question.\n   */\n  onCreated?(question: Question): void;\n  /**\n   * A function that is called when JSON schemas are loaded.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   */\n  onLoaded?(question: Question): void;\n  /**\n   * A function that is called after the entire question is rendered.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `htmlElement`: `any`\\\n   * An HTML element that represents the custom question.\n   */\n  onAfterRender?(question: Question, htmlElement: any): void;\n  /**\n   * A function that is called each time a question nested within a [composite question](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types) is rendered.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A composite question.\n   * - `element`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A nested question.\n   * - `htmlElement`: `any`\\\n   * An HTML element that represents a nested question.\n   */\n  onAfterRenderContentElement?(\n    question: Question,\n    element: Question,\n    htmlElement: any\n  ): void;\n  /**\n   * A function that is called each time a question nested within a [composite question](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types) requires an update of its CSS classes.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A composite question.\n   * - `element`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A nested question.\n   * - `cssClasses`: `any`\\\n   * An object with CSS classes applied to a nested question, for example, `{ root: \"class1\", button: \"class2\" }`. You can modify this object to apply custom CSS classes.\n   */\n  onUpdateQuestionCssClasses?(question: Question, element: Question, cssClasses: any): void;\n  /**\n   * A function that is called when a custom question type property is changed. Use it to handle property changes.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `propertyName`: `string`\\\n   * The name of the changed property.\n   * - `newValue`: `any`\\\n   * A new value for the property.\n   */\n  onPropertyChanged?(\n    question: Question,\n    propertyName: string,\n    newValue: any\n  ): void;\n  /**\n   * A function that is called after the question value is changed in the UI.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `name`: `string`\\\n   * The question's [name](https://surveyjs.io/Documentation/Library?id=Question#name).\n   * - `newValue`: `any`\\\n   * A new value for the question.\n   *\n   * If you want to perform some actions when the value is changed in code as well as in the UI, implement the [`onValueSet`](https://surveyjs.io/form-library/documentation/api-reference/icustomquestiontypeconfiguration#onValueSet) function.\n   */\n  onValueChanged?(question: Question, name: string, newValue: any): void;\n  /**\n   * A function that is called before a question value is changed in the UI.\n   *\n   * This function should return the value you want to save: `newValue`, a custom value, or `undefined` if you want to clear the question value.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `name`: `string`\\\n   * The question's [name](https://surveyjs.io/Documentation/Library?id=Question#name).\n   * - `newValue`: `any`\\\n   * A new value for the question.\n   */\n  onValueChanging?(question: Question, name: string, newValue: any): any;\n  /**\n   * A function that is called when an [ItemValue](https://surveyjs.io/Documentation/Library?id=itemvalue) property is changed.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `options.obj`: [ItemValue](https://surveyjs.io/Documentation/Library?id=itemvalue)\\\n   * An `ItemValue` object.\n   * - `options.propertyName`: `string`\\\n   * The name of the property to which an array of `ItemValue` objects is assigned (for example, `\"choices\"` or `\"rows\"`).\n   * - `options.name`: `string`\\\n   * The name of the changed property: `\"text\"` or `\"value\"`.\n   * - `options.newValue`: `any`\\\n   * A new value for the property.\n   */\n  onItemValuePropertyChanged?(\n    question: Question,\n    options: { obj: ItemValue, propertyName: string, name: string, newValue: any }\n  ): void;\n  /**\n   * A function that allows you to override the default `getDisplayValue()` implementation.\n   */\n  getDisplayValue?: ((keyAsText: boolean, value: any) => any) | ((question: Question) => any);\n  /**\n   * JSON schemas of nested questions. Specify this property to create a [composite question type](https://surveyjs.io/form-library/documentation/customize-question-types/create-composite-question-types).\n   */\n  elementsJSON?: any;\n  /**\n   * A function that allows you to create nested questions if you do not specify the `elementsJSON` property.\n   *\n   * @see elementsJSON\n   */\n  createElements?: any;\n  /**\n   * A JSON schema for a built-in question type on which the custom question type is based.\n   *\n   * Refer to the [Create Specialized Question Types](https://surveyjs.io/form-library/documentation/customize-question-types/create-specialized-question-types) help topic for more information.\n   */\n  questionJSON?: any;\n  /**\n   * A function that allows you to create a custom question if you do not specify the `questionJSON` property.\n   *\n   * @see questionJSON\n   */\n  createQuestion?: any;\n  /**\n   * A function that allows you to display different error texts based on conditions.\n   * @param question A custom question. Use the `question.value` property to access the question's value.\n   * @returns An error text.\n   */\n  getErrorText?: (question: Question) => string;\n  /**\n   * A function that is called after the question value is set.\n   *\n   * Parameters:\n   *\n   * - `question`: [Question](https://surveyjs.io/Documentation/Library?id=Question)\\\n   * A custom question.\n   * - `newValue`: `any`\\\n   * A new value for the question.\n   *\n   * Unlike the [`onValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/icustomquestiontypeconfiguration#onValueChanged) function, which is called only when the question value is changed in the UI, `onValueSet` is called when the value is changed in code as well.\n   *\n   * [View Demo](https://surveyjs.io/survey-creator/examples/smart-search-input/ (linkStyle))\n   */\n  onValueSet?: (question: Question, newValue: any) => void;\n  onSetQuestionValue?: (question: Question, newValue: any) => void;\n  valueToQuestion?: (val: any) => any;\n  valueFromQuestion?: (val: any) => any;\n  getValue?: (val: any) => any;\n  setValue?: (val: any) => any;\n}\n\nexport class ComponentQuestionJSON {\n  private dynamicProperties: Array<JsonObjectProperty>;\n  public constructor(public name: string, public json: ICustomQuestionTypeConfiguration) {\n    var self = this;\n    Serializer.addClass(\n      name,\n      [],\n      function (json: any) {\n        return ComponentCollection.Instance.createQuestion(\n          !!json ? json.name : \"\",\n          self\n        );\n      },\n      \"question\"\n    );\n    this.onInit();\n  }\n  public onInit() {\n    if (!this.json.onInit) return;\n    this.json.onInit();\n  }\n  public onCreated(question: Question) {\n    if (!this.json.onCreated) return;\n    this.json.onCreated(question);\n  }\n  public onLoaded(question: Question) {\n    if (!this.json.onLoaded) return;\n    this.json.onLoaded(question);\n  }\n  public onAfterRender(question: Question, htmlElement: any): void {\n    if (!this.json.onAfterRender) return;\n    this.json.onAfterRender(question, htmlElement);\n  }\n  public onAfterRenderContentElement(\n    question: Question,\n    element: Question,\n    htmlElement: any\n  ): void {\n    if (!this.json.onAfterRenderContentElement) return;\n    this.json.onAfterRenderContentElement(question, element, htmlElement);\n  }\n  public onUpdateQuestionCssClasses(question: Question, element: Question, css: any): void {\n    if (!this.json.onUpdateQuestionCssClasses) return;\n    this.json.onUpdateQuestionCssClasses(question, element, css);\n  }\n  public onSetQuestionValue(question: Question, newValue: any): void {\n    if (this.json.onSetQuestionValue) {\n      this.json.onSetQuestionValue(question, newValue);\n    }\n    if (this.json.onValueSet) {\n      this.json.onValueSet(question, newValue);\n    }\n  }\n  public onPropertyChanged(\n    question: Question,\n    propertyName: string,\n    newValue: any\n  ): void {\n    if (!this.json.onPropertyChanged) return;\n    this.json.onPropertyChanged(question, propertyName, newValue);\n  }\n  public onValueChanged(question: Question, name: string, newValue: any): void {\n    if (!this.json.onValueChanged) return;\n    this.json.onValueChanged(question, name, newValue);\n  }\n  public onValueChanging(question: Question, name: string, newValue: any): any {\n    if (!this.json.onValueChanging) return newValue;\n    return this.json.onValueChanging(question, name, newValue);\n  }\n  public onGetErrorText(question: Question): string {\n    if (!this.json.getErrorText) return undefined;\n    return this.json.getErrorText(question);\n  }\n  public onItemValuePropertyChanged(\n    question: Question,\n    item: ItemValue,\n    propertyName: string,\n    name: string,\n    newValue: any\n  ): void {\n    if (!this.json.onItemValuePropertyChanged) return;\n    this.json.onItemValuePropertyChanged(question, {\n      obj: item,\n      propertyName: propertyName,\n      name: name,\n      newValue: newValue,\n    });\n  }\n  public getDisplayValue(keyAsText: boolean, value: any, question: Question) {\n    if (!this.json.getDisplayValue) return question.getDisplayValue(keyAsText, value);\n    return (this.json as any).getDisplayValue(question);\n  }\n  public get defaultQuestionTitle(): any {\n    return this.json.defaultQuestionTitle;\n  }\n  public setValueToQuestion(val: any): any {\n    const converter = this.json.valueToQuestion || this.json.setValue;\n    return !!converter ? converter(val) : val;\n  }\n  public getValueFromQuestion(val: any): any {\n    const converter = this.json.valueFromQuestion || this.json.getValue;\n    return !!converter ? converter(val) : val;\n  }\n  public get isComposite(): boolean {\n    return !!this.json.elementsJSON || !!this.json.createElements;\n  }\n  public getDynamicProperties(): Array<JsonObjectProperty> {\n    if (!Array.isArray(this.dynamicProperties)) {\n      this.dynamicProperties = this.calcDynamicProperties();\n    }\n    return this.dynamicProperties;\n  }\n  private calcDynamicProperties(): Array<JsonObjectProperty> {\n    const baseProps = this.json.inheritBaseProps;\n    if (!baseProps || !this.json.questionJSON) return [];\n    const type = this.json.questionJSON.type;\n    if (!type) return [];\n    if (Array.isArray(baseProps)) {\n      const props: Array<JsonObjectProperty> = [];\n      baseProps.forEach(name => {\n        const prop = Serializer.findProperty(type, name);\n        if (prop) {\n          props.push(prop);\n        }\n      });\n      return props;\n    }\n    const invalidNames = [];\n    for (let key in this.json.questionJSON) {\n      invalidNames.push(key);\n    }\n    return Serializer.getDynamicPropertiesByTypes(this.name, type, invalidNames);\n  }\n}\n\nexport class ComponentCollection {\n  public static Instance: ComponentCollection = new ComponentCollection();\n  private customQuestionValues: Array<ComponentQuestionJSON> = [];\n  public onCreateComposite: (\n    name: string,\n    questionJSON: ComponentQuestionJSON\n  ) => QuestionCompositeModel;\n  public onCreateCustom: (\n    name: string,\n    questionJSON: ComponentQuestionJSON\n  ) => QuestionCustomModel;\n  public onAddingJson: (name: string, isComposite: boolean) => void;\n  public add(json: ICustomQuestionTypeConfiguration): void {\n    if (!json) return;\n    let name = json.name;\n    if (!name) {\n      throw \"Attribute name is missed\";\n    }\n    name = name.toLowerCase();\n    if (!!this.getCustomQuestionByName(name)) {\n      throw \"There is already registered custom question with name '\" +\n      name +\n      \"'\";\n    }\n    if (!!Serializer.findClass(name)) {\n      throw \"There is already class with name '\" + name + \"'\";\n    }\n    var customQuestion = new ComponentQuestionJSON(name, json);\n    if (!!this.onAddingJson)\n      this.onAddingJson(name, customQuestion.isComposite);\n    this.customQuestionValues.push(customQuestion);\n  }\n  public remove(componentName: string): boolean {\n    if (!componentName) return false;\n    const index = this.getCustomQuestionIndex(componentName.toLowerCase());\n    if (index < 0) return false;\n    this.removeByIndex(index);\n    return true;\n  }\n  public get items(): Array<ComponentQuestionJSON> {\n    return this.customQuestionValues;\n  }\n  public getCustomQuestionByName(name: string): ComponentQuestionJSON {\n    const index = this.getCustomQuestionIndex(name);\n    return index >= 0 ? this.customQuestionValues[index] : undefined;\n  }\n  private getCustomQuestionIndex(name: string): number {\n    for (var i = 0; i < this.customQuestionValues.length; i++) {\n      if (this.customQuestionValues[i].name === name) return i;\n    }\n    return -1;\n  }\n  private removeByIndex(index: number): void {\n    Serializer.removeClass(this.customQuestionValues[index].name);\n    this.customQuestionValues.splice(index, 1);\n  }\n  public clear(includeInternal?: boolean): void {\n    for (let i = this.customQuestionValues.length - 1; i >= 0; i--) {\n      if (includeInternal || !this.customQuestionValues[i].json.internal) {\n        this.removeByIndex(i);\n      }\n    }\n  }\n  public createQuestion(\n    name: string,\n    questionJSON: ComponentQuestionJSON\n  ): Question {\n    if (!!questionJSON.isComposite)\n      return this.createCompositeModel(name, questionJSON);\n    return this.createCustomModel(name, questionJSON);\n  }\n  protected createCompositeModel(\n    name: string,\n    questionJSON: ComponentQuestionJSON\n  ): QuestionCompositeModel {\n    if (!!this.onCreateComposite)\n      return this.onCreateComposite(name, questionJSON);\n    return new QuestionCompositeModel(name, questionJSON);\n  }\n  protected createCustomModel(\n    name: string,\n    questionJSON: ComponentQuestionJSON\n  ): QuestionCustomModel {\n    if (!!this.onCreateCustom) return this.onCreateCustom(name, questionJSON);\n    return new QuestionCustomModel(name, questionJSON);\n  }\n}\n\nexport abstract class QuestionCustomModelBase extends Question\n  implements ISurveyImpl, ISurveyData, IPanel {\n  private locQuestionTitle: LocalizableString;\n  constructor(name: string, public customQuestion: ComponentQuestionJSON) {\n    super(name);\n    CustomPropertiesCollection.createProperties(this);\n    SurveyElement.CreateDisabledDesignElements = true;\n    this.locQuestionTitle = this.createLocalizableString(\"questionTitle\", this);\n    this.locQuestionTitle.setJson(this.customQuestion.defaultQuestionTitle);\n    this.createWrapper();\n    SurveyElement.CreateDisabledDesignElements = false;\n    if (!!this.customQuestion) {\n      this.customQuestion.onCreated(this);\n    }\n  }\n  public getType(): string {\n    return !!this.customQuestion ? this.customQuestion.name : \"custom\";\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    if (!!this.getElement()) {\n      this.getElement().locStrsChanged();\n    }\n  }\n  public localeChanged(): void {\n    super.locStrsChanged();\n    if (!!this.getElement()) {\n      this.getElement().localeChanged();\n    }\n  }\n  protected getDefaultTitle(): string {\n    if (!this.locQuestionTitle.isEmpty) {\n      return this.getProcessedText(this.locQuestionTitle.textOrHtml);\n    }\n    return super.getDefaultTitle();\n  }\n  public addUsedLocales(locales: Array<string>): void {\n    super.addUsedLocales(locales);\n    if (!!this.getElement()) {\n      this.getElement().addUsedLocales(locales);\n    }\n  }\n  public needResponsiveWidth(): boolean {\n    const el: any = this.getElement();\n    return !!el ? el.needResponsiveWidth() : false;\n  }\n  protected createWrapper(): void { }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (!!this.customQuestion && !this.isLoadingFromJson) {\n      this.customQuestion.onPropertyChanged(this, name, newValue);\n    }\n  }\n  public itemValuePropertyChanged(\n    item: ItemValue,\n    name: string,\n    oldValue: any,\n    newValue: any\n  ) {\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n    if (!!this.customQuestion && !this.isLoadingFromJson) {\n      this.customQuestion.onItemValuePropertyChanged(\n        this,\n        item,\n        item.ownerPropertyName,\n        name,\n        newValue\n      );\n    }\n  }\n  protected onFirstRenderingCore(): void {\n    super.onFirstRenderingCore();\n    const el = this.getElement();\n    if (!!el) {\n      el.onFirstRendering();\n    }\n  }\n  public onHidingContent(): void {\n    super.onHidingContent();\n    const el: any = this.getElement();\n    if (!!el) {\n      el.onHidingContent();\n    }\n  }\n  public getProgressInfo(): IProgressInfo {\n    let res = super.getProgressInfo();\n    if (!!this.getElement()) {\n      res = this.getElement().getProgressInfo();\n    }\n    if (this.isRequired && res.requiredQuestionCount == 0) {\n      res.requiredQuestionCount = 1;\n      if (!this.isEmpty()) {\n        res.answeredQuestionCount = 1;\n      }\n    }\n    return res;\n  }\n  protected abstract getElement(): SurveyElement;\n  protected initElement(el: SurveyElement) {\n    if (!el) return;\n    el.setSurveyImpl(this);\n    el.disableDesignActions = true;\n  }\n  protected isSettingValOnLoading: boolean;\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean) {\n    this.isSettingValOnLoading = true;\n    super.setSurveyImpl(value, isLight);\n    this.initElement(this.getElement());\n    this.isSettingValOnLoading = false;\n  }\n  private isLoadedCalled: boolean;\n  private onCustomQuestionLoaded(): void {\n    if (!this.isLoadedCalled && !!this.customQuestion && !!this.survey) {\n      this.customQuestion.onLoaded(this);\n      this.isLoadedCalled = true;\n    }\n  }\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    this.isLoadedCalled = false;\n    if (!!this.getElement()) {\n      this.getElement().onSurveyLoad();\n    }\n    this.onCustomQuestionLoaded();\n  }\n  public setSurveyCore(value: ISurvey): void {\n    super.setSurveyCore(value);\n    if (this.isLoadedCalled === false && value) {\n      this.onCustomQuestionLoaded();\n    }\n  }\n  public afterRenderQuestionElement(el: HTMLElement) {\n    //Do nothing\n  }\n  public afterRenderCore(el: any): void {\n    super.afterRenderCore(el);\n    if (!!this.customQuestion) {\n      this.customQuestion.onAfterRender(this, el);\n    }\n  }\n  protected onUpdateQuestionCssClasses(element: Question, css: any): void {\n    if (!!this.customQuestion) {\n      this.customQuestion.onUpdateQuestionCssClasses(this, element, css);\n    }\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.updateElementCss();\n    if (!!this.customQuestion) {\n      this.customQuestion.onSetQuestionValue(this, newValue);\n    }\n  }\n  protected setNewValue(newValue: any) {\n    super.setNewValue(newValue);\n    this.updateElementCss();\n  }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!!this.customQuestion) {\n      const text = this.customQuestion.onGetErrorText(this);\n      if (!!text) {\n        errors.push(new CustomError(text, this));\n      }\n    }\n  }\n  //ISurveyImpl\n  getSurveyData(): ISurveyData {\n    return this;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.textProcessor;\n  }\n  //ISurveyData\n  getValue(name: string): any {\n    return this.value;\n  }\n  setValue(name: string, newValue: any, locNotification: any, allowNotifyValueChanged?: boolean): any {\n    if (!this.data) return;\n    if (!!this.customQuestion) {\n      this.customQuestion.onValueChanged(this, name, newValue);\n    }\n    var newName = this.convertDataName(name);\n    let valueForSurvey = this.convertDataValue(name, newValue);\n    if (this.valueToDataCallback) {\n      valueForSurvey = this.valueToDataCallback(valueForSurvey);\n    }\n    this.data.setValue(\n      newName,\n      valueForSurvey,\n      locNotification,\n      allowNotifyValueChanged\n    );\n    this.updateIsAnswered();\n    this.updateElementCss();\n  }\n  protected getQuestionByName(name: string): IQuestion {\n    return undefined;\n  }\n  protected isValueChanging(name: string, newValue: any): boolean {\n    if (!!this.customQuestion) {\n      const qValue = newValue;\n      newValue = this.customQuestion.onValueChanging(this, name, newValue);\n      if (!Helpers.isTwoValueEquals(newValue, qValue)) {\n        const q = this.getQuestionByName(name);\n        if (!!q) {\n          q.value = newValue;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  protected convertDataName(name: string): string {\n    return this.getValueName();\n  }\n  protected convertDataValue(name: string, newValue: any): any {\n    return newValue;\n  }\n  getVariable(name: string): any {\n    return !!this.data ? this.data.getVariable(name) : null;\n  }\n  setVariable(name: string, newValue: any): void {\n    if (!this.data) return;\n    this.data.setVariable(name, newValue);\n  }\n  getComment(name: string): string {\n    return !!this.data ? this.data.getComment(this.getValueName()) : \"\";\n  }\n  setComment(name: string, newValue: string, locNotification: any): any {\n    if (!this.data) return;\n    this.data.setComment(this.getValueName(), newValue, locNotification);\n  }\n  getAllValues(): any {\n    return !!this.data ? this.data.getAllValues() : {};\n  }\n  getFilteredProperties(): any {\n    return !!this.data ? this.data.getFilteredProperties() : {};\n  }\n  findQuestionByName(name: string): IQuestion {\n    return !!this.data ? this.data.findQuestionByName(name) : null;\n  }\n  getEditingSurveyElement(): Base {\n    return undefined;\n  }\n  //IPanel\n  addElement(element: IElement, index: number) { }\n  removeElement(element: IElement): boolean {\n    return false;\n  }\n  getQuestionTitleLocation(): string {\n    return \"left\";\n  }\n  getQuestionTitleWidth(): string {\n    return undefined;\n  }\n  getColumsForElement(el: IElement): Array<PanelLayoutColumnModel> {\n    return [];\n  }\n  updateColumns() { }\n  getQuestionStartIndex(): string {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType(): string {\n    return \"row\";\n  }\n  elementWidthChanged(el: IElement) { }\n  get elements(): Array<IElement> {\n    return [];\n  }\n  indexOf(el: IElement): number {\n    return -1;\n  }\n  ensureRowsVisibility(): void {\n    // do nothing\n  }\n  validateContainerOnly(): void {\n    // do nothing\n  }\n  onQuestionValueChanged(el: IElement): void {\n    // do nothing\n  }\n  getQuestionErrorLocation(): string {\n    return this.getErrorLocation();\n  }\n  protected getContentAriaHidden(): boolean {\n    return this.isDesignMode || super.getContentAriaHidden();\n  }\n  protected getContentDisplayValueCore(keyAsText: boolean, value: any, question: Question): any {\n    if (!question) return super.getDisplayValueCore(keyAsText, value);\n    return this.customQuestion.getDisplayValue(keyAsText, value, question);\n  }\n}\n\nexport class QuestionCustomModel extends QuestionCustomModelBase {\n  private questionWrapper: Question;\n  private hasJSONTitle: boolean;\n  public getTemplate(): string {\n    return \"custom\";\n  }\n  public getDynamicProperties(): Array<JsonObjectProperty> {\n    return this.customQuestion.getDynamicProperties() || [];\n  }\n  public getDynamicType(): string {\n    return this.questionWrapper ? this.questionWrapper.getType() : \"question\";\n  }\n  public getOriginalObj(): Base {\n    return this.questionWrapper;\n  }\n  protected createWrapper(): void {\n    this.questionWrapper = this.createQuestion();\n    this.createDynamicProperties(this.questionWrapper);\n    if (this.getDynamicProperties().length > 0) {\n      this.questionWrapper.onPropertyValueChangedCallback = (name: string, oldValue: any, newValue: any, sender: Base, arrayChanges: ArrayChanges): void => {\n        const prop = this.getDynamicProperty(name);\n        if (prop) {\n          this.propertyValueChanged(name, oldValue, newValue, arrayChanges);\n        }\n      };\n    }\n  }\n  private getDynamicProperty(name: string): JsonObjectProperty {\n    const props = this.getDynamicProperties();\n    for (let i = 0; i < props.length; i ++) {\n      if (props[i].name === name) return props[i];\n    }\n    return null;\n  }\n  protected getElement(): SurveyElement {\n    return this.contentQuestion;\n  }\n  supportAutoAdvance(): boolean {\n    return !!this.contentQuestion && this.contentQuestion.supportAutoAdvance();\n  }\n  onAnyValueChanged(name: string, questionName: string): void {\n    super.onAnyValueChanged(name, questionName);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.onAnyValueChanged(name, questionName);\n    }\n  }\n  protected getQuestionByName(name: string): IQuestion {\n    return this.contentQuestion;\n  }\n  protected getDefaultTitle(): string {\n    if (this.hasJSONTitle && this.contentQuestion) {\n      return this.getProcessedText(this.contentQuestion.title);\n    }\n    return super.getDefaultTitle();\n  }\n  setValue(name: string, newValue: any, locNotification: any, allowNotifyValueChanged?: boolean): any {\n    if (this.isValueChanging(name, newValue)) return;\n    super.setValue(name, newValue, locNotification, allowNotifyValueChanged);\n  }\n  updateCommentFromSurvey(newValue: any): any {\n    super.updateCommentFromSurvey(newValue);\n    const q = this.contentQuestion;\n    if (!!q) {\n      q.updateCommentFromSurvey(newValue);\n    }\n  }\n  public get requireUpdateCommentValue(): boolean { return this.contentQuestion?.requireUpdateCommentValue; }\n  protected onSetData(): void {\n    super.onSetData();\n    if (!!this.survey && !this.isEmpty()) {\n      this.setValue(this.name, this.value, false, this.allowNotifyValueChanged);\n    }\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    if (!this.contentQuestion) return true;\n    var res = this.contentQuestion.validateElement(context);\n    this.errors = [];\n    for (var i = 0; i < this.contentQuestion.errors.length; i++) {\n      this.errors.push(this.contentQuestion.errors[i]);\n    }\n    res = res && super.validateElementCore(context);\n    this.updateElementCss();\n    return res;\n  }\n  public focus(onError = false): void {\n    if (!!this.contentQuestion) {\n      this.contentQuestion.focus(onError);\n    } else {\n      super.focus(onError);\n    }\n  }\n  public afterRenderCore(el: any): void {\n    super.afterRenderCore(el);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.afterRender(el);\n    }\n  }\n  public get contentQuestion(): Question {\n    return this.questionWrapper;\n  }\n  protected createQuestion(): Question {\n    var json = this.customQuestion.json;\n    var res: any = null;\n    if (!!json.questionJSON) {\n      this.hasJSONTitle = !!json.questionJSON.title;\n      let qType = json.questionJSON.type;\n      if (!qType || !Serializer.findClass(qType))\n        throw \"type attribute in questionJSON is empty or incorrect\";\n      res = <Question>Serializer.createClass(qType);\n      res.fromJSON(json.questionJSON);\n      res = this.checkCreatedQuestion(res);\n    } else {\n      if (!!json.createQuestion) {\n        res = this.checkCreatedQuestion(json.createQuestion());\n      }\n    }\n    this.initElement(res);\n    if (!!res) {\n      res.isContentElement = true;\n      if (!res.name) {\n        res.name = \"question\";\n      }\n      res.onUpdateCssClassesCallback = (css: any): void => {\n        this.onUpdateQuestionCssClasses(res, css);\n      };\n      res.hasCssErrorCallback = (): boolean => this.errors.length > 0;\n      res.setValueChangedDirectlyCallback = (val: boolean): void => { this.setValueChangedDirectly(val); };\n    }\n\n    return res;\n  }\n  private checkCreatedQuestion(res: Question): Question {\n    if (!res) return res;\n    if (!res.isQuestion) {\n      if (Array.isArray(res.questions) && res.questions.length > 0) {\n        res = res.questions[0];\n      } else {\n        res = Serializer.createClass(\"text\");\n      }\n      ConsoleWarnings.error(\"Could not create component: '\" + this.getType() + \"'. questionJSON should be a question.\");\n    }\n    return res;\n  }\n  public onSurveyLoad() {\n    super.onSurveyLoad();\n    if (!this.contentQuestion) return;\n    if (this.isEmpty() && !this.contentQuestion.isEmpty()) {\n      this.value = this.getContentQuestionValue();\n    }\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.runCondition(properties);\n    }\n  }\n  protected convertDataName(name: string): string {\n    const q = this.contentQuestion;\n    if (!q || name === this.getValueName()) return super.convertDataName(name);\n    var newName = name.replace(q.getValueName(), this.getValueName());\n    return newName.indexOf(this.getValueName()) == 0\n      ? newName\n      : super.convertDataName(name);\n  }\n  protected convertDataValue(name: string, newValue: any): any {\n    return this.convertDataName(name) == super.convertDataName(name)\n      ? this.getContentQuestionValue()\n      : newValue;\n  }\n  protected getContentQuestionValue(): any {\n    if (!this.contentQuestion) return undefined;\n    let val = this.contentQuestion.value;\n    if (!!this.customQuestion) val = this.customQuestion.getValueFromQuestion(val);\n    return val;\n  }\n  protected setContentQuestionValue(val: any): void {\n    if (!this.contentQuestion) return;\n    if (!!this.customQuestion) val = this.customQuestion.setValueToQuestion(val);\n    this.contentQuestion.value = val;\n  }\n  protected canSetValueToSurvey(): boolean {\n    return false;\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    if (!this.isLoadingFromJson && !!this.contentQuestion &&\n      !this.isTwoValueEquals(this.getContentQuestionValue(), newValue)\n    ) {\n      this.setContentQuestionValue(this.getUnbindValue(newValue));\n    }\n  }\n  onSurveyValueChanged(newValue: any): void {\n    super.onSurveyValueChanged(newValue);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.onSurveyValueChanged(newValue);\n    }\n  }\n  protected getValueCore(): any {\n    if (!!this.contentQuestion) return this.getContentQuestionValue();\n    return super.getValueCore();\n  }\n  private isSettingValueChanged: boolean;\n  protected setValueChangedDirectly(val: boolean): void {\n    if (this.isSettingValueChanged) return;\n    this.isSettingValueChanged = true;\n    super.setValueChangedDirectly(val);\n    if (!!this.contentQuestion) {\n      (<any>this.contentQuestion).setValueChangedDirectly(val);\n    }\n    this.isSettingValueChanged = false;\n  }\n  private createDynamicProperties(el: SurveyElement): void {\n    if (!el) return;\n    const props = this.getDynamicProperties();\n    if (Array.isArray(props)) {\n      Serializer.addDynamicPropertiesIntoObj(this, el, props);\n    }\n  }\n  protected initElement(el: SurveyElement): void {\n    super.initElement(el);\n    if (!!el) {\n      (<Question>el).parent = this;\n      (<Question>el).afterRenderQuestionCallback = (\n        question: Question,\n        element: any\n      ) => {\n        if (!!this.customQuestion) {\n          this.customQuestion.onAfterRenderContentElement(\n            this,\n            question,\n            element\n          );\n        }\n      };\n    }\n  }\n  public updateElementCss(reNew?: boolean): void {\n    if (!!this.contentQuestion) {\n      this.questionWrapper.updateElementCss(reNew);\n    }\n    super.updateElementCss(reNew);\n  }\n  public setIsMobile(val: boolean): void {\n    super.setIsMobile(val);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.setIsMobile(val);\n    }\n  }\n  protected updateElementCssCore(cssClasses: any) {\n    if (!!this.contentQuestion) {\n      cssClasses = this.contentQuestion.cssClasses;\n    }\n    super.updateElementCssCore(cssClasses);\n  }\n  protected getDisplayValueCore(keyAsText: boolean, value: any): any {\n    return super.getContentDisplayValueCore(keyAsText, value, this.contentQuestion);\n  }\n}\n\nexport class CompositeValueGetterContext extends QuestionValueGetterContext {\n  constructor (protected question: Question) {\n    super(question);\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    const cq = <QuestionCompositeModel>this.question;\n    if (path.length > 0 && (path.length > 1 || !isRoot)) {\n      const isCompPrefix = path[0].name === settings.expressionVariables.composite;\n      if (isCompPrefix) {\n        path.shift();\n      }\n      return new QuestionArrayGetterContext(cq.contentPanel.questions).getValue(path, false, index, createObjects);\n    }\n    return { isFound: false };\n  }\n}\n\nexport class QuestionCompositeModel extends QuestionCustomModelBase {\n  private panelWrapper: PanelModel;\n  private textProcessing: TextContextProcessor;\n  constructor(name: string, public customQuestion: ComponentQuestionJSON) {\n    super(name, customQuestion);\n    this.textProcessing = new TextContextProcessor(this);\n  }\n  protected createWrapper(): void {\n    this.panelWrapper = this.createPanel();\n  }\n  public getTemplate(): string {\n    return \"composite\";\n  }\n  protected getElement(): SurveyElement {\n    return this.contentPanel;\n  }\n  protected getCssRoot(cssClasses: any): string {\n    return new CssClassBuilder().append(super.getCssRoot(cssClasses)).append(cssClasses.composite).toString();\n  }\n  public get contentPanel(): PanelModel {\n    return this.panelWrapper;\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    const res = super.validateElementCore(context);\n    const pnl = this.contentPanel;\n    return !!pnl ? pnl.validateElement(context) && res : res;\n  }\n  public updateElementCss(reNew?: boolean) {\n    super.updateElementCss(reNew);\n    if (this.contentPanel) {\n      this.contentPanel.updateElementCss(reNew);\n    }\n  }\n  public dispose(): void {\n    this.unConnectEditingObj();\n    super.dispose();\n  }\n  private editingObjValue: Base;\n  private onEditingObjPropertyChanged: (sender: Base, options: any) => void;\n  private updateEditingObj(): Base {\n    const obj = this.data?.getEditingSurveyElement();\n    if (!obj) return undefined;\n    let newObj: Base = (<any>obj)[this.getValueName()];\n    if (!!newObj && !newObj.onPropertyChanged) {\n      newObj = undefined;\n    }\n    if (newObj !== this.editingObjValue) {\n      this.unConnectEditingObj();\n      this.editingObjValue = newObj;\n      if (!!newObj) {\n        this.onEditingObjPropertyChanged = (sender: Base, options: any): void => {\n          this.setNewValueIntoQuestion(options.name, (<any>this.editingObjValue)[options.name]);\n        };\n        newObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n      }\n    }\n\n    return this.editingObjValue;\n  }\n  private unConnectEditingObj(): void {\n    if (!!this.editingObjValue && !this.editingObjValue.isDisposed) {\n      this.editingObjValue.onPropertyChanged.remove(this.onEditingObjPropertyChanged);\n    }\n  }\n  getEditingSurveyElement(): Base {\n    return this.editingObjValue;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.textProcessing;\n  }\n  findQuestionByName(name: string): IQuestion {\n    const res = this.getQuestionByName(name);\n    if (!!res) return res;\n    return super.findQuestionByName(name);\n  }\n  protected clearValueIfInvisibleCore(reason: string): void {\n    super.clearValueIfInvisibleCore(reason);\n    const questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearValueIfInvisible(reason);\n    }\n  }\n  onAnyValueChanged(name: string, questionName: string): void {\n    super.onAnyValueChanged(name, questionName);\n    var questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  public get hasSingleInput(): boolean { return false; }\n  public get isContainer(): boolean { return true; }\n  protected createPanel(): PanelModel {\n    var res = <PanelModel>Serializer.createClass(\"panel\");\n    res.showQuestionNumbers = \"off\";\n    res.renderWidth = \"100%\";\n    var json = this.customQuestion.json;\n    if (!!json.elementsJSON) {\n      res.fromJSON({ elements: json.elementsJSON });\n    }\n    if (!!json.createElements) {\n      json.createElements(res, this);\n    }\n    this.initElement(res);\n    this.setIsContentElement(res);\n    res.readOnly = this.isReadOnly;\n    res.onGetNoCallback = (no: string): string => { return this.no; };\n    res.questions.forEach(q => {\n      q.setParentQuestion(this);\n      q.onUpdateCssClassesCallback = (css: any): void => { this.onUpdateQuestionCssClasses(q, css); };\n    });\n    this.setAfterRenderCallbacks(res);\n    return res;\n  }\n  protected onReadOnlyChanged() {\n    if (!!this.contentPanel) {\n      this.contentPanel.readOnly = this.isReadOnly;\n    }\n    super.onReadOnlyChanged();\n  }\n  updateValueFromSurvey(newValue: any, clearData = false): void {\n    this.updateEditingObj();\n    super.updateValueFromSurvey(newValue, clearData);\n  }\n  public onSurveyLoad(): void {\n    this.isSettingValOnLoading = true;\n    if (!!this.contentPanel) {\n      this.contentPanel.readOnly = this.isReadOnly;\n      this.setIsContentElement(this.contentPanel);\n    }\n    super.onSurveyLoad();\n    if (!!this.contentPanel) {\n      const val = this.getContentPanelValue();\n      if (!Helpers.isValueEmpty(val)) {\n        this.value = val;\n      }\n    }\n    this.isSettingValOnLoading = false;\n  }\n  private setIsContentElement(panel: PanelModel) {\n    panel.isContentElement = true;\n    var elements = panel.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (el.isPanel) {\n        this.setIsContentElement(<PanelModel>el);\n      } else {\n        (<Question>el).isContentElement = true;\n      }\n    }\n  }\n  public setVisibleIndex(val: number): number {\n    var res = super.setVisibleIndex(val);\n    if (this.isVisible && !!this.contentPanel) {\n      res += this.contentPanel.setVisibleIndex(val + 1);\n    }\n    return res;\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    if (!!this.contentPanel) {\n      this.contentPanel.runCondition(properties);\n    }\n  }\n  onSurveyValueChanged(newValue: any): void {\n    super.onSurveyValueChanged(newValue);\n    const val = !!newValue ? newValue : {};\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.onSurveyValueChanged(val[q.getValueName()]);\n      });\n    }\n  }\n  getValue(name: string): any {\n    var val = this.value;\n    return !!val ? val[name] : null;\n  }\n  protected getQuestionByName(name: string): IQuestion {\n    return !!this.contentPanel ? this.contentPanel.getQuestionByName(name) : undefined;\n  }\n  private settingNewValue = false;\n  setValue(name: string, newValue: any, locNotification: any, allowNotifyValueChanged?: boolean): any {\n    if (this.settingNewValue) {\n      this.setNewValueIntoQuestion(name, newValue);\n      return;\n    }\n    if (this.isValueChanging(name, newValue)) return;\n    this.settingNewValue = true;\n    if (!this.isEditingSurveyElement && !!this.contentPanel) {\n      let index = 0;\n      const maxTimes = this.contentPanel.questions.length + 1;\n      while(index < maxTimes && this.updateValueCoreWithPanelValue()) index ++;\n    }\n    this.setNewValueIntoQuestion(name, newValue);\n    super.setValue(name, newValue, locNotification, allowNotifyValueChanged);\n    this.settingNewValue = false;\n    this.runPanelTriggers(settings.expressionVariables.composite + \".\" + name, newValue);\n    if (this.isEditingSurveyElement) {\n      this.runCondition(this.getFilteredProperties());\n    }\n  }\n  setComment(name: string, newValue: string, locNotification: any): any {\n    let val = this.getUnbindValue(this.value);\n    const commentName = this.getCommentName(name);\n    if (!val && !newValue || !!newValue && !!val && val[commentName] === newValue) return;\n    if (!!newValue) {\n      if (!val) { val = {}; }\n      val[commentName] = newValue;\n    } else {\n      delete val[commentName];\n    }\n    const q = <Question>this.getQuestionByName(name);\n    if (!!q && q.comment !== newValue) {\n      q.comment = newValue;\n    }\n    if (!this.settingNewValue) {\n      this.value = val;\n    }\n  }\n  getComment(name: string): string {\n    const q = <Question>this.getQuestionByName(name);\n    if (!!q) return q.comment;\n    const val = this.value;\n    return !!val && val[this.getCommentName(name)] || \"\";\n  }\n  private getCommentName(name: string): string {\n    return name + settings.commentSuffix;\n  }\n  private runPanelTriggers(name: string, value: any): void {\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.runTriggers(name, value);\n      });\n    }\n  }\n  private updateValueCoreWithPanelValue(): boolean {\n    const panelValue = this.getContentPanelValue();\n    if (this.isTwoValueEquals(this.getValueCore(), panelValue)) return false;\n    this.setValueCore(panelValue);\n    return true;\n  }\n  private getContentPanelValue(val?: any): any {\n    if (!val) val = this.contentPanel.getValue();\n    return this.customQuestion.setValueToQuestion(val);\n  }\n  private getValueForContentPanel(val: any): any {\n    return this.customQuestion.getValueFromQuestion(val);\n  }\n  private setNewValueIntoQuestion(name: string, newValue: any): void {\n    var q = this.getQuestionByName(name);\n    if (!!q && !this.isTwoValueEquals(newValue, q.value)) {\n      q.value = newValue;\n    }\n  }\n  public addConditionObjectsByContext(\n    objects: Array<IConditionObject>,\n    context: any\n  ): void {\n    if (!this.contentPanel) return;\n    var questions = this.contentPanel.questions;\n    var prefixName = this.name;\n    var prefixText = this.title;\n    for (var i = 0; i < questions.length; i++) {\n      objects.push({\n        name: prefixName + \".\" + questions[i].name,\n        text: prefixText + \".\" + questions[i].title,\n        question: questions[i],\n      });\n    }\n  }\n  protected collectNestedQuestionsCore(questions: Array<Question>, visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    if (!this.contentPanel) return;\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.contentPanel.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n  }\n  protected convertDataValue(name: string, newValue: any): any {\n    var val = !!this.contentPanel && !this.isEditingSurveyElement ?\n      this.contentPanel.getValue() : this.getValueForContentPanel(this.value);\n    if (!val) val = {};\n    if (!val.getType) {\n      val = Helpers.getUnbindValue(val);\n    }\n    if (this.isValueEmpty(newValue) && !this.isEditingSurveyElement) {\n      delete val[name];\n    } else {\n      val[name] = newValue;\n    }\n    return this.getContentPanelValue(val);\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered = true): void {\n    this.setValuesIntoQuestions(newValue);\n    if (!this.isEditingSurveyElement && !!this.contentPanel) {\n      newValue = this.getContentPanelValue();\n    }\n    super.setQuestionValue(newValue, updateIsAnswered);\n  }\n  private setValuesIntoQuestions(newValue: any): void {\n    if (!this.contentPanel || this.settingNewValue) return;\n    newValue = this.getValueForContentPanel(newValue);\n    const oldSettingNewValue = this.settingNewValue;\n    this.settingNewValue = true;\n    const questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const key = q.getValueName();\n      const commentKey = this.getCommentName(key);\n      const val = !!newValue ? newValue[key] : undefined;\n      const commentVal = !!newValue && newValue[commentKey] || \"\";\n      if (!this.isTwoValueEquals(q.value, val) && (val !== undefined || !q.isEmpty())) {\n        q.value = val;\n      }\n      if (q.comment !== commentVal) {\n        q.comment = commentVal;\n      }\n    }\n    this.settingNewValue = oldSettingNewValue;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new CompositeValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keyAsText: boolean, value: any): any {\n    return super.getContentDisplayValueCore(keyAsText, value, <any>this.contentPanel);\n  }\n  private setAfterRenderCallbacks(panel: PanelModel) {\n    if (!panel || !this.customQuestion) return;\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].afterRenderQuestionCallback = (\n        question: Question,\n        element: any\n      ) => {\n        this.customQuestion.onAfterRenderContentElement(\n          this,\n          question,\n          element\n        );\n      };\n    }\n  }\n  public get ariaRole(): string {\n    return \"group\";\n  }\n  public setIsMobile(val: boolean): void {\n    super.setIsMobile(val);\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.setIsMobile(val);\n      });\n    }\n  }\n}\n", "import { HashTable } from \"./helpers\";\nimport { Question } from \"./question\";\nimport { IElement } from \"./base-interfaces\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { Serializer } from \"./jsonobject\";\nimport { ComponentCollection } from \"./question_custom\";\n\nexport class QuestionFactory {\n  public static Instance: QuestionFactory = new QuestionFactory();\n  public static get DefaultChoices(): string[] {\n    const choice = getLocaleString(\"choices_Item\");\n    return [choice + \"1\", choice + \"2\", choice + \"3\"];\n  }\n  public static get DefaultColums(): string[] {\n    var colName = getLocaleString(\"matrix_column\") + \" \";\n    return [colName + \"1\", colName + \"2\", colName + \"3\"];\n  }\n  public static get DefaultRows(): string[] {\n    var rowName = getLocaleString(\"matrix_row\") + \" \";\n    return [rowName + \"1\", rowName + \"2\"];\n  }\n  public static get DefaultMutlipleTextItems(): string[] {\n    var itemName = getLocaleString(\"multipletext_itemname\");\n    return [itemName + \"1\", itemName + \"2\"];\n  }\n  public registerQuestion(questionType: string, questionCreator: (name: string) => Question, showInToolbox: boolean = true): void {\n    ElementFactory.Instance.registerElement(questionType, questionCreator, showInToolbox);\n  }\n  public registerCustomQuestion(questionType: string) : void {\n    ElementFactory.Instance.registerCustomQuestion(questionType);\n  }\n  public unregisterElement(elementType: string, removeFromSerializer: boolean = false): void {\n    ElementFactory.Instance.unregisterElement(elementType, removeFromSerializer);\n  }\n  public clear(): void {\n    ElementFactory.Instance.clear();\n  }\n  public getAllTypes(): Array<string> {\n    return ElementFactory.Instance.getAllTypes();\n  }\n  public createQuestion(questionType: string, name: string): Question {\n    return <Question>ElementFactory.Instance.createElement(questionType, name);\n  }\n}\n\nexport class ElementFactory {\n  public static Instance: ElementFactory = new ElementFactory();\n  private creatorHash: HashTable<{showInToolbox: boolean, creator: (name: string) => IElement}> = {};\n\n  public registerElement(elementType: string, elementCreator: (name: string) => IElement, showInToolbox: boolean = true): void {\n    this.creatorHash[elementType] = { showInToolbox: showInToolbox, creator: elementCreator };\n  }\n  public registerCustomQuestion = (questionType: string, showInToolbox: boolean = true) : void => {\n    const creator = (name: string): Question => {\n      const el = Serializer.createClass(questionType);\n      if (!!el) el.name = name;\n      return el;\n    };\n    this.registerElement(questionType, creator, showInToolbox);\n  };\n  public clear(): void {\n    this.creatorHash = {};\n  }\n  public unregisterElement(elementType: string, removeFromSerializer: boolean = false): void {\n    delete this.creatorHash[elementType];\n    if (removeFromSerializer) {\n      Serializer.removeClass(elementType);\n    }\n  }\n  public getAllToolboxTypes(): Array<string> {\n    return this.getAllTypesCore(true);\n  }\n  public getAllTypes(): Array<string> {\n    return this.getAllTypesCore(false);\n  }\n  public createElement(elementType: string, name: string): IElement {\n    var item = this.creatorHash[elementType];\n    if (!!item && !!item.creator) return item.creator(name);\n    const compJSON = ComponentCollection.Instance.getCustomQuestionByName(elementType);\n    if (!!compJSON) return ComponentCollection.Instance.createQuestion(name, compJSON);\n    return null;\n  }\n  private getAllTypesCore(showInToolboxOnly: boolean): Array<string> {\n    var result = new Array<string>();\n    for (var key in this.creatorHash) {\n      if (!showInToolboxOnly || this.creatorHash[key].showInToolbox) {\n        result.push(key);\n      }\n    }\n    return result.sort();\n  }\n}", "import { HashTable, Helpers, createDate } from \"./helpers\";\nimport { Question } from \"./question\";\nimport { Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { ExpressionRunner } from \"./conditions\";\n\n/**\n * A class that describes the Expression question type. It is a read-only question type that calculates a value based on a specified expression.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-expression/ (linkStyle))\n */\nexport class QuestionExpressionModel extends Question {\n  private isExecutionLocked: boolean;\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"format\", this);\n    this.registerPropertyChangedHandlers([\"format\", \"currency\", \"displayStyle\"], () => {\n      this.updateFormatedValue();\n    });\n  }\n  public getType(): string {\n    return \"expression\";\n  }\n  public get hasInput(): boolean {\n    return false;\n  }\n  /**\n   * A string that formats a question value. Use `{0}` to reference the question value in the format string.\n   * @see displayStyle\n   */\n  public get format(): string {\n    return this.getLocalizableStringText(\"format\", \"\");\n  }\n  public set format(val: string) {\n    this.setLocalizableStringText(\"format\", val);\n  }\n  get locFormat(): LocalizableString {\n    return this.getLocalizableString(\"format\");\n  }\n  /**\n   * An expression used to calculate the question value.\n   *\n   * Refer to the following help topic for more information: [Expressions](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#expressions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/expression-question-for-dynamic-form-calculations/ (linkStyle))\n   */\n  public get expression(): string {\n    return this.getPropertyValue(\"expression\", \"\");\n  }\n  public set expression(val: string) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  public locCalculation() {\n    this.isExecutionLocked = true;\n  }\n  public unlocCalculation() {\n    this.isExecutionLocked = false;\n  }\n  protected runConditionCore(properties: HashTable<any>) {\n    super.runConditionCore(properties);\n    if (this.isExecutionLocked || !this.runIfReadOnly && this.isReadOnly) return;\n    this.runExpressionByProperty(\"expression\", properties, (val: any) => {\n      this.value = this.roundValue(val);\n    });\n  }\n  protected canCollectErrors(): boolean {\n    return true;\n  }\n  public hasRequiredError(): boolean {\n    return false;\n  }\n  /**\n   * The maximum number of fraction digits. Applies only if the `displayStyle` property is not `\"none\"`. Accepts values in the range from -1 to 20, where -1 disables the property.\n   *\n   * Default value: -1\n   * @see displayStyle\n   * @see minimumFractionDigits\n   * @see precision\n   */\n  public get maximumFractionDigits(): number {\n    return this.getPropertyValue(\"maximumFractionDigits\");\n  }\n  public set maximumFractionDigits(val: number) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"maximumFractionDigits\", val);\n  }\n  /**\n   * The minimum number of fraction digits. Applies only if the `displayStyle` property is not `\"none\"`. Accepts values in the range from -1 to 20, where -1 disables the property.\n   *\n   * Default value: -1\n   * @see displayStyle\n   * @see maximumFractionDigits\n   */\n  public get minimumFractionDigits(): number {\n    return this.getPropertyValue(\"minimumFractionDigits\");\n  }\n  public set minimumFractionDigits(val: number) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"minimumFractionDigits\", val);\n  }\n  private runIfReadOnlyValue: boolean;\n  public get runIfReadOnly(): boolean {\n    return this.runIfReadOnlyValue === true;\n  }\n  public set runIfReadOnly(val: boolean) {\n    this.runIfReadOnlyValue = val;\n  }\n  public get formatedValue(): string {\n    return this.getPropertyValue(\"formatedValue\", \"\");\n  }\n  protected updateFormatedValue(): void {\n    this.setPropertyValue(\"formatedValue\", this.getDisplayValueCore(false, this.value));\n  }\n  protected onValueChanged() {\n    this.updateFormatedValue();\n  }\n  updateValueFromSurvey(newValue: any, clearData: boolean): void {\n    super.updateValueFromSurvey(newValue, clearData);\n    this.updateFormatedValue();\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    var val = value === undefined || value === null ? this.defaultValue : value;\n    var res = \"\";\n    if (!this.isValueEmpty(val)) {\n      var str = this.getValueAsStr(val);\n      res = !this.format ? str : (<any>this.format)[\"format\"](str);\n    }\n    if (!!this.survey) {\n      res = this.survey.getExpressionDisplayValue(this, val, res);\n    }\n    return res;\n  }\n  /**\n   * Specifies a display style for the question value.\n   *\n   * Possible values:\n   *\n   * - `\"decimal\"`\n   * - `\"currency\"`\n   * - `\"percent\"`\n   * - `\"date\"`\n   * - `\"none\"` (default)\n   *\n   * If you use the `\"currency\"` display style, you can also set the `currency` property to specify a currency other than USD.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/expression-question-for-dynamic-form-calculations/ (linkStyle))\n   * @see currency\n   * @see minimumFractionDigits\n   * @see maximumFractionDigits\n   * @see format\n   */\n  public get displayStyle(): string {\n    return this.getPropertyValue(\"displayStyle\");\n  }\n  public set displayStyle(val: string) {\n    this.setPropertyValue(\"displayStyle\", val);\n  }\n  /**\n   * A three-letter currency code. Applies only if the `displayStyle` property is set to `\"currency\"`.\n   *\n   * Default value: \"USD\".\n   * @see displayStyle\n   * @see minimumFractionDigits\n   * @see maximumFractionDigits\n   * @see format\n   */\n  public get currency(): string {\n    return this.getPropertyValue(\"currency\");\n  }\n  public set currency(val: string) {\n    if (getCurrecyCodes().indexOf(val) < 0) return;\n    this.setPropertyValue(\"currency\", val);\n  }\n  /**\n   * Specifies whether to use grouping separators in number representation. Separators depend on the selected [locale](https://surveyjs.io/form-library/documentation/surveymodel#locale).\n   *\n   * Default value: `true`\n   */\n  public get useGrouping(): boolean {\n    return this.getPropertyValue(\"useGrouping\");\n  }\n  public set useGrouping(val: boolean) {\n    this.setPropertyValue(\"useGrouping\", val);\n  }\n  /**\n   * Specifies how many decimal digits to keep in the expression value.\n   *\n   * Default value: -1 (unlimited)\n   * @see maximumFractionDigits\n   */\n  public get precision(): number {\n    return this.getPropertyValue(\"precision\");\n  }\n  public set precision(val: number) {\n    this.setPropertyValue(\"precision\", val);\n  }\n  private roundValue(val: any): any {\n    if (val === Infinity) return undefined;\n    if (this.precision < 0) return val;\n    if (!Helpers.isNumber(val)) return val;\n    return parseFloat(val.toFixed(this.precision));\n  }\n  protected getValueAsStr(val: any): string {\n    if (this.displayStyle == \"date\") {\n      const d = createDate(\"question-expression\", val);\n      if (!!d && !!d.toLocaleDateString) return d.toLocaleDateString();\n    }\n    if (this.displayStyle != \"none\" && Helpers.isNumber(val)) {\n      var locale = this.getLocale();\n      if (!locale) locale = \"en\";\n      var options = {\n        style: this.displayStyle,\n        currency: this.currency,\n        useGrouping: this.useGrouping,\n      };\n      if (this.maximumFractionDigits > -1) {\n        (<any>options)[\"maximumFractionDigits\"] = this.maximumFractionDigits;\n      }\n      if (this.minimumFractionDigits > -1) {\n        (<any>options)[\"minimumFractionDigits\"] = this.minimumFractionDigits;\n      }\n      return val.toLocaleString(locale, options);\n    }\n    return val.toString();\n  }\n  //a11y\n  public get ariaRole(): string {\n    return \"presentation\";\n  }\n  // EO a11y\n}\n\nexport function getCurrecyCodes(): Array<string> {\n  return [\n    \"AED\",\n    \"AFN\",\n    \"ALL\",\n    \"AMD\",\n    \"ANG\",\n    \"AOA\",\n    \"ARS\",\n    \"AUD\",\n    \"AWG\",\n    \"AZN\",\n    \"BAM\",\n    \"BBD\",\n    \"BDT\",\n    \"BGN\",\n    \"BHD\",\n    \"BIF\",\n    \"BMD\",\n    \"BND\",\n    \"BOB\",\n    \"BOV\",\n    \"BRL\",\n    \"BSD\",\n    \"BTN\",\n    \"BWP\",\n    \"BYN\",\n    \"BZD\",\n    \"CAD\",\n    \"CDF\",\n    \"CHE\",\n    \"CHF\",\n    \"CHW\",\n    \"CLF\",\n    \"CLP\",\n    \"CNY\",\n    \"COP\",\n    \"COU\",\n    \"CRC\",\n    \"CUC\",\n    \"CUP\",\n    \"CVE\",\n    \"CZK\",\n    \"DJF\",\n    \"DKK\",\n    \"DOP\",\n    \"DZD\",\n    \"EGP\",\n    \"ERN\",\n    \"ETB\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GEL\",\n    \"GHS\",\n    \"GIP\",\n    \"GMD\",\n    \"GNF\",\n    \"GTQ\",\n    \"GYD\",\n    \"HKD\",\n    \"HNL\",\n    \"HRK\",\n    \"HTG\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"INR\",\n    \"IQD\",\n    \"IRR\",\n    \"ISK\",\n    \"JMD\",\n    \"JOD\",\n    \"JPY\",\n    \"KES\",\n    \"KGS\",\n    \"KHR\",\n    \"KMF\",\n    \"KPW\",\n    \"KRW\",\n    \"KWD\",\n    \"KYD\",\n    \"KZT\",\n    \"LAK\",\n    \"LBP\",\n    \"LKR\",\n    \"LRD\",\n    \"LSL\",\n    \"LYD\",\n    \"MAD\",\n    \"MDL\",\n    \"MGA\",\n    \"MKD\",\n    \"MMK\",\n    \"MNT\",\n    \"MOP\",\n    \"MRO\",\n    \"MUR\",\n    \"MVR\",\n    \"MWK\",\n    \"MXN\",\n    \"MXV\",\n    \"MYR\",\n    \"MZN\",\n    \"NAD\",\n    \"NGN\",\n    \"NIO\",\n    \"NOK\",\n    \"NPR\",\n    \"NZD\",\n    \"OMR\",\n    \"PAB\",\n    \"PEN\",\n    \"PGK\",\n    \"PHP\",\n    \"PKR\",\n    \"PLN\",\n    \"PYG\",\n    \"QAR\",\n    \"RON\",\n    \"RSD\",\n    \"RUB\",\n    \"RWF\",\n    \"SAR\",\n    \"SBD\",\n    \"SCR\",\n    \"SDG\",\n    \"SEK\",\n    \"SGD\",\n    \"SHP\",\n    \"SLL\",\n    \"SOS\",\n    \"SRD\",\n    \"SSP\",\n    \"STD\",\n    \"SVC\",\n    \"SYP\",\n    \"SZL\",\n    \"THB\",\n    \"TJS\",\n    \"TMT\",\n    \"TND\",\n    \"TOP\",\n    \"TRY\",\n    \"TTD\",\n    \"TWD\",\n    \"TZS\",\n    \"UAH\",\n    \"UGX\",\n    \"USD\",\n    \"USN\",\n    \"UYI\",\n    \"UYU\",\n    \"UZS\",\n    \"VEF\",\n    \"VND\",\n    \"VUV\",\n    \"WST\",\n    \"XAF\",\n    \"XAG\",\n    \"XAU\",\n    \"XBA\",\n    \"XBB\",\n    \"XBC\",\n    \"XBD\",\n    \"XCD\",\n    \"XDR\",\n    \"XOF\",\n    \"XPD\",\n    \"XPF\",\n    \"XPT\",\n    \"XSU\",\n    \"XTS\",\n    \"XUA\",\n    \"XXX\",\n    \"YER\",\n    \"ZAR\",\n    \"ZMW\",\n    \"ZWL\",\n  ];\n}\n\nfunction getCorrectMinMax(min: any, max: any, isMax: boolean): any {\n  let val = isMax ? max : min;\n  if (min == -1 || max == -1) return val;\n  if (min > max) return isMax ? min : max;\n  return val;\n}\n\nSerializer.addClass(\n  \"expression\",\n  [\n    \"expression:expression\",\n    { name: \"format\", serializationProperty: \"locFormat\" },\n    {\n      name: \"displayStyle\",\n      default: \"none\",\n      choices: [\"none\", \"decimal\", \"currency\", \"percent\", \"date\"],\n    },\n    {\n      name: \"currency\",\n      choices: () => {\n        return getCurrecyCodes();\n      },\n      default: \"USD\",\n      visibleIf: (obj: QuestionExpressionModel): boolean => {\n        return obj.displayStyle === \"currency\";\n      }\n    },\n    {\n      name: \"maximumFractionDigits:number\",\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(obj.minimumFractionDigits, val, true);\n      },\n      default: -1\n    },\n    {\n      name: \"minimumFractionDigits:number\",\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(val, obj.maximumFractionDigits, false);\n      },\n      default: -1\n    },\n    { name: \"useGrouping:boolean\", default: true },\n    { name: \"precision:number\", default: -1, category: \"data\" },\n    { name: \"enableIf\", visible: false, isSerializable: false },\n    { name: \"isRequired\", visible: false, isSerializable: false },\n    { name: \"readOnly\", visible: false, isSerializable: false },\n    { name: \"requiredErrorText\", visible: false, isSerializable: false },\n    { name: \"resetValueIf\", visible: false, isSerializable: false },\n    { name: \"setValueIf\", visible: false, isSerializable: false },\n    { name: \"setValueExpression\", visible: false, isSerializable: false },\n    { name: \"defaultValueExpression\", visible: false, isSerializable: false },\n    { name: \"defaultValue\", visible: false, isSerializable: false },\n    { name: \"correctAnswer\", visible: false, isSerializable: false },\n    { name: \"requiredIf\", visible: false, isSerializable: false }\n  ],\n  function() {\n    return new QuestionExpressionModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"expression\", (name) => {\n  return new QuestionExpressionModel(name);\n});\n", "import { JsonObject, JsonObjectProperty, Serializer } from \"./jsonobject\";\nimport { Question } from \"./question\";\nimport { Base, ArrayChanges } from \"./base\";\nimport { ISurvey, IWrapperObject } from \"./base-interfaces\";\nimport { ItemValue } from \"./itemvalue\";\nimport { QuestionSelectBase } from \"./question_baseselect\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { SurveyValidator } from \"./validator\";\nimport { getCurrecyCodes } from \"./question_expression\";\nimport { settings } from \"./settings\";\nimport { MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase } from \"./question_matrixdropdownbase\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem } from \"./conditionProcessValue\";\n\nexport interface IMatrixColumnOwner extends ILocalizableOwner {\n  hasChoices(): boolean;\n  onColumnPropertyChanged(column: MatrixDropdownColumn, name: string, newValue: any): void;\n  onColumnNestedPropertyChanged(column: MatrixDropdownColumn, name: string, nestedName: string, newValue: any): void;\n  onColumnItemValuePropertyChanged(\n    column: MatrixDropdownColumn,\n    propertyName: string,\n    obj: ItemValue,\n    name: string,\n    newValue: any,\n    oldValue: any\n  ): void;\n  onShowInMultipleColumnsChanged(column: MatrixDropdownColumn): void;\n  onColumnVisibilityChanged(column: MatrixDropdownColumn): void;\n  getCellType(): string;\n  getCustomCellType(column: MatrixDropdownColumn, row: MatrixDropdownRowModelBase, cellType: string): string;\n  onColumnCellTypeChanged(column: MatrixDropdownColumn): void;\n  getCellAriaLabel(row: any, column: any, directRowTitle?: string): string;\n}\nexport class MatrixColumnGetterContext implements IValueGetterContext {\n  constructor(private column: MatrixDropdownColumn) {\n  }\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length === 1 && [\"name\", \"item\"].indexOf(path[0].name) > -1)\n      return { isFound: true, value: this.column.name };\n    return undefined;\n  }\n  getRootObj(): IObjectValueContext { return <any>this.column.colOwner; }\n}\n\nfunction onUpdateSelectBaseCellQuestion(\n  cellQuestion: QuestionSelectBase,\n  column: MatrixDropdownColumn,\n  question: QuestionMatrixDropdownModelBase,\n  data: any\n) {\n  cellQuestion.storeOthersAsComment = !!question\n    ? question.storeOthersAsComment\n    : false;\n  if (\n    (!cellQuestion.choices || cellQuestion.choices.length == 0) &&\n    cellQuestion.choicesByUrl.isEmpty\n  ) {\n    cellQuestion.choices = question.choices;\n  }\n  if (!cellQuestion.choicesByUrl.isEmpty) {\n    cellQuestion.choicesByUrl.run(data.getTextProcessor());\n  }\n}\nfunction onUpdateSelectDropdownCellQuestion(cellQuestion: QuestionSelectBase, column: MatrixDropdownColumn,\n  question: QuestionMatrixDropdownModelBase, data: any) {\n  onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n  if (!!cellQuestion.locPlaceholder && cellQuestion.locPlaceholder.isEmpty && !question.locPlaceholder.isEmpty) {\n    cellQuestion.optionsCaption = question.optionsCaption;\n  }\n}\nexport var matrixDropdownColumnTypes: any = {\n  dropdown: {\n    onCellQuestionUpdate: (cellQuestion: any, column: any, question: any, data: any) => {\n      onUpdateSelectDropdownCellQuestion(cellQuestion, column, question, data);\n    }\n  },\n  checkbox: {\n    onCellQuestionUpdate: (cellQuestion: any, column: any, question: any, data: any) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n      cellQuestion.colCount =\n        column.colCount > -1 ? column.colCount : question.columnColCount;\n    },\n  },\n  radiogroup: {\n    onCellQuestionUpdate: (cellQuestion: any, column: any, question: any, data: any) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n      cellQuestion.colCount =\n        column.colCount > -1 ? column.colCount : question.columnColCount;\n    },\n  },\n  tagbox: {\n    onCellQuestionUpdate: (cellQuestion: any, column: any, question: any, data: any) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n    }\n  },\n  text: {},\n  comment: {},\n  boolean: {\n    onCellQuestionUpdate: (cellQuestion: any, column: any, question: any, data: any) => {\n      cellQuestion.renderAs = column.renderAs;\n    },\n  },\n  expression: {},\n  rating: {},\n  slider: {}\n};\n\n/**\n * An auxiliary class that describes a column in a [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) or [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model).\n *\n * You can get an object of this class from the [`columns`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#columns) array or by calling the [`getColumnByName()`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#getColumnByName) method on a matrix instance.\n */\nexport class MatrixDropdownColumn extends Base\n  implements ILocalizableOwner, IWrapperObject {\n  public static getColumnTypes(): Array<string> {\n    var res = [];\n    for (var key in matrixDropdownColumnTypes) {\n      res.push(key);\n    }\n    return res;\n  }\n  private templateQuestionValue: Question;\n  private colOwnerValue: IMatrixColumnOwner;\n  private indexValue = -1;\n  private _hasVisibleCell = true;\n  private _visiblechoices: Array<any>;\n\n  constructor(name: string, title?: string, colOwner?: IMatrixColumnOwner) {\n    super();\n    this.colOwnerValue = colOwner;\n    this.createLocalizableString(\"totalFormat\", this);\n    this.createLocalizableString(\"cellHint\", this);\n    this.registerPropertyChangedHandlers([\"showInMultipleColumns\"], () => { this.doShowInMultipleColumnsChanged(); });\n    this.registerPropertyChangedHandlers([\"visible\"], () => { this.doColumnVisibilityChanged(); });\n    this.updateTemplateQuestion(undefined, name, title);\n  }\n  public getOriginalObj(): Base {\n    return this.templateQuestion;\n  }\n  getClassNameProperty(): string {\n    return \"cellType\";\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.colOwner ? (<any>this.colOwner).survey : null;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.templateQuestion.autoOtherMode = this.isShowInMultipleColumns;\n    this.templateQuestion.endLoadingFromJson();\n    this.templateQuestion.onGetSurvey = () => {\n      return this.getSurvey();\n    };\n  }\n  getDynamicPropertyName(): string {\n    return \"cellType\";\n  }\n  getDynamicType(): string {\n    if (this.cellType === \"default\") return \"question\";\n    return this.calcCellQuestionType(null);\n  }\n  public get colOwner(): IMatrixColumnOwner {\n    return this.colOwnerValue;\n  }\n  public set colOwner(value: IMatrixColumnOwner) {\n    this.colOwnerValue = value;\n    if (!!value) {\n      this.updateTemplateQuestion();\n      this.setParentQuestionToTemplate(this.templateQuestion);\n    }\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixColumnGetterContext(this);\n  }\n  public locStrsChanged() {\n    super.locStrsChanged();\n    this.locTitle.strChanged();\n  }\n  public addUsedLocales(locales: Array<string>) {\n    super.addUsedLocales(locales);\n    this.templateQuestion.addUsedLocales(locales);\n  }\n  public get index() {\n    return this.indexValue;\n  }\n  public setIndex(val: number) {\n    this.indexValue = val;\n  }\n  public getType() {\n    return \"matrixdropdowncolumn\";\n  }\n  /**\n   * Specifies the type of column cells.\n   *\n   * Possible values:\n   *\n   * - [`\"dropdown\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * - [`\"checkbox\"`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)\n   * - [`\"radiogroup\"`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model)\n   * - [`\"tagbox\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model)\n   * - [`\"text\"`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [`\"comment\"`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [`\"boolean\"`](https://surveyjs.io/form-library/documentation/api-reference/boolean-question-model)\n   * - [`\"expression\"`](https://surveyjs.io/form-library/documentation/api-reference/expression-model)\n   * - [`\"rating\"`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model)\n   * - [`\"slider\"`](https://surveyjs.io/form-library/documentation/api-reference/questionslidermodel)\n   * - `\"default\"` (default) - Inherits the input type from the [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType) property specified for the parent matrix.\n   *\n   * The input types are based upon standalone question types. Depending on the selected input type, the matrix column can have additional configuration properties inherited from the corresponding question type. For instance, Dropdown, Checkboxes, Radio Button Group, and Tag Box columns can specify the [`choices`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model#choices) array, similar to the question types upon which they are based. Refer to the API Reference of these question types for a full list of available properties.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   */\n  public get cellType(): string {\n    return this.getPropertyValue(\"cellType\");\n  }\n  public set cellType(val: string) {\n    val = val.toLocaleLowerCase();\n    this.updateTemplateQuestion(val);\n    this.setPropertyValue(\"cellType\", val);\n    if (!!this.colOwner) {\n      this.colOwner.onColumnCellTypeChanged(this);\n    }\n  }\n  public get templateQuestion(): Question {\n    return this.templateQuestionValue;\n  }\n  public get value() {\n    return this.templateQuestion.name;\n  }\n  //For filtering columns\n  public get isVisible(): boolean {\n    return true;\n  }\n  public get isColumnVisible(): boolean {\n    if (this.isDesignMode) return true;\n    return this.visible && this.hasVisibleCell;\n  }\n  /**\n   * Gets or sets column visibility.\n   *\n   * If you want to display or hide a column based on a condition, specify the [`visibleIf`](#visibleIf) property.\n   * @see isRequired\n   * @see readOnly\n   */\n  public get visible(): boolean { return this.templateQuestion.visible; }\n  public set visible(val: boolean) {\n    this.templateQuestion.visible = val;\n  }\n  public get hasVisibleCell(): boolean {\n    return this._hasVisibleCell;\n  }\n  public set hasVisibleCell(newVal: boolean) {\n    this._hasVisibleCell = newVal;\n  }\n  public isColumnsVisibleIf: boolean = true;\n  public getVisibleMultipleChoices(): Array<ItemValue> {\n    const choices = this.templateQuestion.visibleChoices;\n    if (!Array.isArray(choices)) return [];\n    if (!Array.isArray(this._visiblechoices)) return choices;\n    const res = new Array<ItemValue>();\n    for (let i = 0; i < choices.length; i++) {\n      const item = choices[i];\n      if (this._visiblechoices.indexOf(item.value) > -1) res.push(item);\n    }\n    return res;\n  }\n  public get getVisibleChoicesInCell(): Array<any> {\n    if (Array.isArray(this._visiblechoices)) return this._visiblechoices;\n    const res = this.templateQuestion.visibleChoices;\n    return Array.isArray(res) ? res : [];\n  }\n  public setVisibleChoicesInCell(val: Array<any>): void {\n    this._visiblechoices = val;\n  }\n  public get isFilteredMultipleColumns(): boolean {\n    if (!this.showInMultipleColumns) return false;\n    const choices = this.templateQuestion.choices;\n    if (!Array.isArray(choices)) return false;\n    for (let i = 0; i < choices.length; i++) {\n      if (choices[i].visibleIf) return true;\n    }\n    return false;\n  }\n  /**\n   * A column ID that is not visible to respondents.\n   *\n   * > Column IDs must be unique.\n   * @see title\n   */\n  public get name(): string {\n    return this.templateQuestion.name;\n  }\n  public set name(val: string) {\n    this.templateQuestion.name = val;\n  }\n  /**\n   * A user-friendly column caption to display. If `title` is undefined, [`name`](#name) is displayed instead.\n   */\n  public get title(): string {\n    return this.templateQuestion.title;\n  }\n  public set title(val: string) {\n    this.templateQuestion.title = val;\n  }\n  public get locTitle() {\n    return this.templateQuestion.locTitle;\n  }\n  public get fullTitle(): string {\n    return this.locTitle.textOrHtml;\n  }\n  /**\n   * A value to show in HTML questions and in the dynamic titles and descriptions of survey elements when the cell value is empty.\n   *\n   * Default value: `\"\"`\n   *\n   * [Dynamic Texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts (linkStyle))\n   */\n  public get defaultDisplayValue(): string {\n    return this.templateQuestion.defaultDisplayValue;\n  }\n  public set defaultDisplayValue(val: string) {\n    this.templateQuestion.defaultDisplayValue = val;\n  }\n  public get locDefaultDisplayValue(): LocalizableString {\n    return this.templateQuestion.locDefaultDisplayValue;\n  }\n  /**\n   * Marks the column as required. If a respondent skips any cell in a required column, the matrix displays a [validation error](#requiredErrorText).\n   *\n   * If you want to mark the column as required based on a condition, specify the [`requiredIf`](#requiredIf) property.\n   * @see visible\n   * @see readOnly\n   */\n  public get isRequired(): boolean {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  public set isRequired(val: boolean) {\n    this.setPropertyValue(\"isRequired\", val);\n    this.templateQuestion.isRequired = val;\n  }\n  public get isRenderedRequired(): boolean {\n    return this.getPropertyValue(\"isRenderedRequired\", this.isRequired);\n  }\n  public set isRenderedRequired(val: boolean) {\n    this.setPropertyValue(\"isRenderedRequired\", val);\n  }\n  public updateIsRenderedRequired(val: boolean): void {\n    this.isRenderedRequired = val || this.isRequired;\n  }\n  public get requiredMark(): string {\n    return this.isRenderedRequired && this.getSurvey() ? this.getSurvey().requiredMark : this.templateQuestion.requiredMark;\n  }\n  /**\n   * Specifies a custom error message for a required column.\n   * @see isRequired\n   */\n  public get requiredErrorText(): string {\n    return this.templateQuestion.requiredErrorText;\n  }\n  public set requiredErrorText(val: string) {\n    this.templateQuestion.requiredErrorText = val;\n  }\n  get locRequiredErrorText(): LocalizableString {\n    return this.templateQuestion.locRequiredErrorText;\n  }\n  /**\n   * Makes the column read-only.\n   *\n   * If you want to switch the column to the read-only state based on a condition, specify the [`enableIf`](#enableIf) property.\n   * @see visible\n   * @see isRequired\n   */\n  public get readOnly(): boolean {\n    return this.templateQuestion.readOnly;\n  }\n  public set readOnly(val: boolean) {\n    this.templateQuestion.readOnly = val;\n  }\n  public get hasOther(): boolean {\n    return this.templateQuestion.showOtherItem;\n  }\n  public set hasOther(val: boolean) {\n    this.templateQuestion.showOtherItem = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this column becomes hidden.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visible\n   */\n  public get visibleIf(): string {\n    return this.templateQuestion.visibleIf;\n  }\n  public set visibleIf(val: string) {\n    this.templateQuestion.visibleIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this column becomes read-only.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   * @see readOnly\n   */\n  public get enableIf(): string {\n    return this.templateQuestion.enableIf;\n  }\n  public set enableIf(val: string) {\n    this.templateQuestion.enableIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this column becomes required.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  public get requiredIf(): string {\n    return this.templateQuestion.requiredIf;\n  }\n  public set requiredIf(val: string) {\n    this.templateQuestion.requiredIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, all cells in this column are set to a value calculated using the [`defaultValueExpression`](#defaultValueExpression).\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see setValueIf\n   */\n  public get resetValueIf(): string {\n    return this.templateQuestion.resetValueIf;\n  }\n  public set resetValueIf(val: string) {\n    this.templateQuestion.resetValueIf = val;\n  }\n  /**\n   * An expression used to calculate the column's default value. This expression applies to all cells of this column until the cell value is specified by an end user or programmatically.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see setValueExpression\n   */\n  public get defaultValueExpression(): string {\n    return this.templateQuestion.defaultValueExpression;\n  }\n  public set defaultValueExpression(val: string) {\n    this.templateQuestion.defaultValueExpression = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, all cells in this column are set to a value calculated using the [`setValueExpression`](#setValueExpression).\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see resetValueIf\n   */\n  public get setValueIf(): string {\n    return this.templateQuestion.setValueIf;\n  }\n  public set setValueIf(val: string) {\n    this.templateQuestion.setValueIf = val;\n  }\n  /**\n   * An expression that calculates a value for all cells in this column.\n   *\n   * The `setValueExpression` is re-evaluated whenever a referenced question's value changes. If you also specify the [`setValueIf`](#setValueIf) expression, re-evaluation occurs only when it returns `true`.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see defaultValueExpression\n   * @see resetValueIf\n   */\n  public get setValueExpression(): string {\n    return this.templateQuestion.setValueExpression;\n  }\n  public set setValueExpression(val: string) {\n    this.templateQuestion.setValueExpression = val;\n  }\n  /**\n   * Specifies whether a respondent is required to provide a unique response for each question within this column.\n   *\n   * Default value: `false`\n   */\n  public get isUnique(): boolean {\n    return this.getPropertyValue(\"isUnique\");\n  }\n  public set isUnique(val: boolean) {\n    this.setPropertyValue(\"isUnique\", val);\n  }\n  /**\n   * Specifies whether to create an individual column for each choice option. Applies only to columns of `\"checkbox\"` or `\"radiogroup\"` [`cellType`](#cellType).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/columnize-choice-options-of-matrix-cell/ (linkStyle))\n   */\n  public get showInMultipleColumns(): boolean {\n    return this.getPropertyValue(\"showInMultipleColumns\");\n  }\n  public set showInMultipleColumns(val: boolean) {\n    this.setPropertyValue(\"showInMultipleColumns\", val);\n  }\n  public get isSupportMultipleColumns(): boolean {\n    return [\"checkbox\", \"radiogroup\"].indexOf(this.cellType) > -1;\n  }\n  public get isShowInMultipleColumns(): boolean {\n    return this.showInMultipleColumns && this.isSupportMultipleColumns;\n  }\n  /**\n   * Column validators.\n   *\n   * [Data Validation](https://surveyjs.io/form-library/documentation/data-validation (linkStyle))\n   * @see isRequired\n   */\n  public get validators(): Array<SurveyValidator> {\n    return this.templateQuestion.validators;\n  }\n  public set validators(val: Array<SurveyValidator>) {\n    this.templateQuestion.validators = val;\n  }\n  /**\n   * An aggregation method used to calculate the column total.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default) - Disables total calculations.\n   * - `\"sum\"`\n   * - `\"count\"`\n   * - `\"min\"`\n   * - `\"max\"`\n   * - `\"avg\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalFormat\n   * @see totalDisplayStyle\n   */\n  public get totalType(): string {\n    return this.getPropertyValue(\"totalType\");\n  }\n  public set totalType(val: string) {\n    this.setPropertyValue(\"totalType\", val);\n  }\n  /**\n   * An expression used to calculate total values. Overrides the [`totalType`](#totalType) property.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   */\n  public get totalExpression(): string {\n    return this.getPropertyValue(\"totalExpression\");\n  }\n  public set totalExpression(val: string) {\n    this.setPropertyValue(\"totalExpression\", val);\n  }\n  public get hasTotal(): boolean {\n    return this.totalType != \"none\" || !!this.totalExpression;\n  }\n  /**\n   * A string pattern used to display column totals. To reference a total value within this pattern, use the `{0}` placeholder.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalDisplayStyle\n   */\n  public get totalFormat(): string {\n    return this.getLocalizableStringText(\"totalFormat\", \"\");\n  }\n  public set totalFormat(val: string) {\n    this.setLocalizableStringText(\"totalFormat\", val);\n  }\n  get locTotalFormat(): LocalizableString {\n    return this.getLocalizableString(\"totalFormat\");\n  }\n  public get cellHint(): string {\n    return this.getLocalizableStringText(\"cellHint\", \"\");\n  }\n  public set cellHint(val: string) {\n    this.setLocalizableStringText(\"cellHint\", val);\n  }\n  get locCellHint(): LocalizableString {\n    return this.getLocalizableString(\"cellHint\");\n  }\n  public get renderAs(): string {\n    return this.getPropertyValue(\"renderAs\");\n  }\n  public set renderAs(val: string) {\n    this.setPropertyValue(\"renderAs\", val);\n    if (!!this.templateQuestion) {\n      this.templateQuestion.renderAs = val;\n    }\n  }\n  public get totalMaximumFractionDigits(): number {\n    return this.getPropertyValue(\"totalMaximumFractionDigits\");\n  }\n  public set totalMaximumFractionDigits(val: number) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"totalMaximumFractionDigits\", val);\n  }\n  public get totalMinimumFractionDigits(): number {\n    return this.getPropertyValue(\"totalMinimumFractionDigits\");\n  }\n  public set totalMinimumFractionDigits(val: number) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"totalMinimumFractionDigits\", val);\n  }\n  /**\n   * A format for calculated total values.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default)\n   * - `\"decimal\"`\n   * - `\"currency\"`\n   * - `\"percent\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalFormat\n   * @see totalCurrency\n   */\n  public get totalDisplayStyle(): string {\n    return this.getPropertyValue(\"totalDisplayStyle\");\n  }\n  public set totalDisplayStyle(val: string) {\n    this.setPropertyValue(\"totalDisplayStyle\", val);\n  }\n  /**\n   * An alignment for calculated total values.\n   *\n   * Possible values:\n   *\n   * - `\"left\"`\n   * - `\"center\"`\n   * - `\"right\"`\n   * - `\"auto\"` (default) - Applies one of the values above based on the column's [cell type](#cellType).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalFormat\n   * @see totalCurrency\n   * @see totalDisplayStyle\n   */\n  public get totalAlignment(): string {\n    return this.getPropertyValue(\"totalAlignment\");\n  }\n  public set totalAlignment(val: string) {\n    this.setPropertyValue(\"totalAlignment\", val);\n  }\n  /**\n   * Specifies a currency used to display calculated total values. Applies only if [`totalDisplayStyle`](#totalDisplayStyle) is set to `\"currency\"`.\n   * @see totalType\n   */\n  public get totalCurrency(): string {\n    return this.getPropertyValue(\"totalCurrency\");\n  }\n  public set totalCurrency(val: string) {\n    if (getCurrecyCodes().indexOf(val) < 0) return;\n    this.setPropertyValue(\"totalCurrency\", val);\n  }\n  /**\n   * Gets or sets minimum column width in CSS values. By default, the matrix calculates column widths to optimally fit the content of all columns.\n   * @see width\n   */\n  public get minWidth(): string {\n    return this.getPropertyValue(\"minWidth\", \"\");\n  }\n  public set minWidth(val: string) {\n    this.setPropertyValue(\"minWidth\", val);\n  }\n  /**\n   * Gets or sets column width in CSS values. By default, the matrix calculates column widths to optimally fit the content of all columns.\n   * @see minWidth\n  */\n  public get width(): string {\n    return this.templateQuestion.width;\n  }\n  public set width(val: string) {\n    this.templateQuestion.width = val;\n  }\n  /**\n   * Gets or sets the number of columns used to arrange choice options. Applies only to columns of `\"checkbox\"` or `\"radiogroup\"` [`cellType`](#cellType).\n   *\n   * Default value: -1 (inherits the actual value from the parent matrix's [`columnColCount`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#columnColCount) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   */\n  public get colCount(): number {\n    return this.getPropertyValue(\"colCount\");\n  }\n  public set colCount(val: number) {\n    if (val < -1 || val > 4) return;\n    this.setPropertyValue(\"colCount\", val);\n  }\n  public getLocale(): string {\n    return this.colOwner ? this.colOwner.getLocale() : \"\";\n  }\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return this.colOwner ? this.colOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  public getRenderer(name: string): string {\n    return !!this.colOwner ? this.colOwner.getRenderer(name) : null;\n  }\n  public getRendererContext(locStr: LocalizableString): any {\n    return !!this.colOwner ? this.colOwner.getRendererContext(locStr) : locStr;\n  }\n  public getProcessedText(text: string): string {\n    return this.colOwner ? this.colOwner.getProcessedText(text) : text;\n  }\n  public createCellQuestion(row: MatrixDropdownRowModelBase): Question {\n    var qType = this.calcCellQuestionType(row);\n    var cellQuestion = <Question>this.createNewQuestion(qType);\n    this.callOnCellQuestionUpdate(cellQuestion, row);\n    return cellQuestion;\n  }\n  startLoadingFromJson(json?: any): void {\n    super.startLoadingFromJson(json);\n    if (!!json && !json.cellType && !!json.choices) {\n      json.cellType = this.colOwner.getCellType();\n    }\n  }\n  public updateCellQuestion(\n    cellQuestion: Question,\n    data: any,\n    onUpdateJson: (json: any) => any = null\n  ) {\n    this.setQuestionProperties(cellQuestion, onUpdateJson);\n  }\n  private callOnCellQuestionUpdate(cellQuestion: Question, data: any) {\n    var qType = cellQuestion.getType();\n    var qDefinition = (<any>matrixDropdownColumnTypes)[qType];\n    if (qDefinition && qDefinition[\"onCellQuestionUpdate\"]) {\n      qDefinition[\"onCellQuestionUpdate\"](\n        cellQuestion,\n        this,\n        this.colOwner,\n        data\n      );\n    }\n  }\n  defaultCellTypeChanged(): void {\n    this.updateTemplateQuestion();\n  }\n  protected calcCellQuestionType(row: MatrixDropdownRowModelBase): string {\n    let cellType = this.getDefaultCellQuestionType();\n    if (!!row && !!this.colOwner) {\n      cellType = this.colOwner.getCustomCellType(this, row, cellType);\n    }\n    return cellType;\n  }\n  private getDefaultCellQuestionType(cellType?: string): string {\n    if (!cellType) cellType = this.cellType;\n    if (cellType !== \"default\") return cellType;\n    if (this.colOwner) return this.colOwner.getCellType();\n    return settings.matrix.defaultCellType;\n  }\n  protected updateTemplateQuestion(newCellType?: string, name?: string, title?: string): void {\n    const curCellType = this.getDefaultCellQuestionType(newCellType);\n    const prevCellType = this.templateQuestion\n      ? this.templateQuestion.getType()\n      : \"\";\n    if (curCellType === prevCellType) return;\n    if (this.templateQuestion) {\n      this.removeProperties(prevCellType);\n    }\n    this.templateQuestionValue = this.createNewQuestion(curCellType);\n    this.templateQuestion.locOwner = this;\n    this.addProperties(curCellType);\n    if (!!name) {\n      this.name = name;\n    }\n    if (!!title) {\n      this.title = title;\n    } else {\n      this.templateQuestion.locTitle.strChanged();\n    }\n    if (settings.serialization.matrixDropdownColumnSerializeTitle) {\n      this.templateQuestion.locTitle.serializeCallBackText = true;\n    }\n    this.templateQuestion.onPropertyChanged.add((sender, options) => {\n      this.propertyValueChanged(\n        options.name,\n        options.oldValue,\n        options.newValue,\n        options.arrayChanges,\n        options.target\n      );\n    });\n    this.templateQuestion.onNestedPropertyChanged.add((sender, options) => {\n      if (this.colOwner && !this.isLoadingFromJson) {\n        this.colOwner.onColumnNestedPropertyChanged(this, options.name, options.nestedName, options.newValue);\n      }\n    });\n    this.templateQuestion.onItemValuePropertyChanged.add((sender, options) => {\n      this.doItemValuePropertyChanged(\n        options.propertyName,\n        options.obj,\n        options.name,\n        options.newValue,\n        options.oldValue\n      );\n    });\n    this.templateQuestion.isContentElement = true;\n    if (!this.isLoadingFromJson) {\n      this.templateQuestion.onGetSurvey = () => {\n        return this.getSurvey();\n      };\n    }\n    this.templateQuestion.locTitle.strChanged();\n  }\n  protected createNewQuestion(cellType: string): Question {\n    var question = <Question>Serializer.createClass(cellType);\n    if (!question) {\n      question = <Question>Serializer.createClass(\"text\");\n    }\n    question.loadingOwner = this;\n    question.isEditableTemplateElement = true;\n    question.autoOtherMode = this.isShowInMultipleColumns;\n    this.setQuestionProperties(question);\n    this.setParentQuestionToTemplate(question);\n    return question;\n  }\n  private setParentQuestionToTemplate(question: Question): void {\n    if (!!this.colOwner && (<any>this.colOwner).isQuestion) {\n      question.setParentQuestion(<any>this.colOwner);\n    }\n  }\n  private previousChoicesId: string = undefined;\n  protected setQuestionProperties(\n    question: Question,\n    onUpdateJson: (json: any) => any = null\n  ): void {\n    if (this.templateQuestion) {\n      var json = new JsonObject().toJsonObject(this.templateQuestion, true);\n      if (onUpdateJson) {\n        onUpdateJson(json);\n      }\n      json.type = question.getType();\n      if (this.cellType === \"default\" && !!this.colOwner && this.colOwner.hasChoices()) {\n        delete json[\"choices\"];\n      }\n      delete json[\"itemComponent\"];\n\n      if (this.jsonObj && json.type === \"rating\" && this.isLoadingFromJson) {\n        Object.keys(this.jsonObj).forEach((prop) => {\n          json[prop] = this.jsonObj[prop];\n        });\n      }\n      if (json[\"choicesOrder\"] === \"random\") {\n        json[\"choicesOrder\"] = \"none\";\n        const visChoices = this.templateQuestion[\"visibleChoices\"];\n        if (Array.isArray(visChoices)) {\n          json[\"choices\"] = visChoices;\n        }\n      }\n\n      new JsonObject().toObject(json, question);\n      question.isContentElement = this.templateQuestion.isContentElement;\n      this.previousChoicesId = undefined;\n      question.loadedChoicesFromServerCallback = () => {\n        if (!this.isShowInMultipleColumns) return;\n        if (!!this.previousChoicesId && this.previousChoicesId !== question.id) return;\n        this.previousChoicesId = question.id;\n        const choices = question.visibleChoices;\n        this.templateQuestion.choices = choices;\n        this.propertyValueChanged(\"choices\", choices, choices);\n      };\n    }\n  }\n  protected propertyValueChanged(name: string, oldValue: any, newValue: any, arrayChanges?: ArrayChanges, target?: Base): void {\n    super.propertyValueChanged(name, oldValue, newValue, arrayChanges, target);\n    if (name === \"isRequired\") {\n      this.updateIsRenderedRequired(newValue);\n    }\n    if (!this.colOwner || this.isLoadingFromJson) return;\n    if (this.isShowInMultipleColumns) {\n      if (name === \"choicesOrder\") return;\n      if ([\"visibleChoices\", \"choices\"].indexOf(name) > -1) {\n        this.colOwner.onShowInMultipleColumnsChanged(this);\n      }\n    }\n    if (!Serializer.hasOriginalProperty(this, name)) return;\n    this.colOwner.onColumnPropertyChanged(this, name, newValue);\n  }\n  private doItemValuePropertyChanged(\n    propertyName: string,\n    obj: ItemValue,\n    name: string,\n    newValue: any,\n    oldValue: any\n  ) {\n    if (!Serializer.hasOriginalProperty(obj, name)) return;\n    if (this.colOwner != null && !this.isLoadingFromJson) {\n      this.colOwner.onColumnItemValuePropertyChanged(\n        this,\n        propertyName,\n        obj,\n        name,\n        newValue,\n        oldValue\n      );\n    }\n  }\n\n  private doShowInMultipleColumnsChanged(): void {\n    if (this.colOwner != null) {\n      this.colOwner.onShowInMultipleColumnsChanged(this);\n    }\n    if (this.templateQuestion) {\n      this.templateQuestion.autoOtherMode = this.isShowInMultipleColumns;\n    }\n  }\n  private doColumnVisibilityChanged(): void {\n    if (this.colOwner != null && !this.isDesignMode) {\n      this.colOwner.onColumnVisibilityChanged(this);\n    }\n  }\n  private getProperties(curCellType: string): Array<JsonObjectProperty> {\n    return Serializer.getDynamicPropertiesByObj(this, curCellType);\n  }\n  private removeProperties(curCellType: string) {\n    var properties = this.getProperties(curCellType);\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      delete (<any>this)[prop.name];\n      if (prop.serializationProperty) {\n        delete (<any>this)[prop.serializationProperty];\n      }\n    }\n  }\n  private addProperties(curCellType: string) {\n    const props = this.getProperties(curCellType);\n    Serializer.addDynamicPropertiesIntoObj(this, this.templateQuestion, props);\n  }\n}\n\nSerializer.addClass(\n  \"matrixdropdowncolumn\",\n  [\n    { name: \"!name\", isUnique: true },\n    {\n      name: \"title\", serializationProperty: \"locTitle\", dependsOn: \"name\",\n      onPropertyEditorUpdate: function (obj: any, editor: any) {\n        if (!!obj && !!editor) {\n          editor.placeholder = obj.locTitle.getPlaceholder();\n        }\n      }\n    },\n    { name: \"cellHint\", serializationProperty: \"locCellHint\", visible: false },\n    {\n      name: \"cellType\",\n      default: \"default\",\n      choices: () => {\n        var res = MatrixDropdownColumn.getColumnTypes();\n        res.splice(0, 0, \"default\");\n        return res;\n      },\n    },\n    { name: \"colCount\", default: -1, choices: [-1, 0, 1, 2, 3, 4] },\n    { name: \"isRequired:boolean\", defaultFunc: (obj: Base) => {\n      const q = (<any>obj)?.templateQuestion;\n      if (!!q) {\n        return Serializer.findProperty(q.getType(), \"isRequired\").getDefaultValue(q) || false;\n      }\n      return false;\n    } },\n    \"isUnique:boolean\",\n    {\n      name: \"requiredErrorText:text\",\n      serializationProperty: \"locRequiredErrorText\",\n    },\n    \"readOnly:boolean\",\n    {\n      name: \"minWidth\",\n      onPropertyEditorUpdate: function (obj: any, editor: any) {\n        if (!!obj && !!editor) {\n          editor.value = obj.minWidth;\n        }\n      }\n    },\n    \"width\",\n    { name: \"visible:switch\", default: true, overridingProperty: \"visibleIf\" },\n    \"visibleIf:condition\",\n    \"enableIf:condition\",\n    \"requiredIf:condition\",\n    \"resetValueIf:condition\",\n    \"setValueIf:condition\",\n    \"setValueExpression:expression\",\n    {\n      name: \"showInMultipleColumns:boolean\",\n      dependsOn: \"cellType\",\n      visibleIf: (obj: any): boolean => {\n        return obj.isSupportMultipleColumns;\n      },\n    },\n    {\n      name: \"validators:validators\",\n      baseClassName: \"surveyvalidator\",\n      classNamePart: \"validator\",\n    },\n    {\n      name: \"totalType\", visibleIf: (obj: any): boolean => !obj.isShowInMultipleColumns,\n      default: \"none\",\n      choices: [\"none\", \"sum\", \"count\", \"min\", \"max\", \"avg\"],\n    },\n    { name: \"totalExpression:expression\", visibleIf: (obj: any): boolean => !obj.isShowInMultipleColumns },\n    { name: \"totalFormat\", serializationProperty: \"locTotalFormat\", visibleIf: (obj: any): boolean => obj.hasTotal },\n    {\n      name: \"totalDisplayStyle\", visibleIf: (obj: any): boolean => obj.hasTotal,\n      default: \"none\",\n      choices: [\"none\", \"decimal\", \"currency\", \"percent\"],\n    },\n    {\n      name: \"totalAlignment\", visibleIf: (obj: any): boolean => obj.hasTotal,\n      default: \"auto\",\n      choices: [\"auto\", \"left\", \"center\", \"right\"],\n    },\n    {\n      name: \"totalCurrency\", visibleIf: (obj: any): boolean => obj.hasTotal,\n      choices: () => {\n        return getCurrecyCodes();\n      },\n      default: \"USD\",\n    },\n    { name: \"totalMaximumFractionDigits:number\", default: -1, visibleIf: (obj: any): boolean => obj.hasTotal },\n    { name: \"totalMinimumFractionDigits:number\", default: -1, visibleIf: (obj: any): boolean => obj.hasTotal },\n    { name: \"renderAs\", default: \"default\", visible: false },\n    { name: \"defaultDisplayValue\", serializationProperty: \"locDefaultDisplayValue\" },\n  ],\n  function () {\n    return new MatrixDropdownColumn(\"\");\n  }\n);\n", "import { property, propertyArray } from \"./jsonobject\";\nimport { Question } from \"./question\";\nimport { Base, ComputedUpdater } from \"./base\";\nimport { ItemValue } from \"./itemvalue\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { PanelModel } from \"./panel\";\nimport { Action, IAction } from \"./actions/action\";\nimport { AdaptiveActionContainer } from \"./actions/adaptive-container\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { MatrixDropdownColumn } from \"./question_matrixdropdowncolumn\";\nimport { MatrixDropdownCell, MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase } from \"./question_matrixdropdownbase\";\nimport { ActionContainer } from \"./actions/container\";\nimport { QuestionMatrixDynamicModel } from \"./question_matrixdynamic\";\nimport { settings } from \"./settings\";\nimport { AnimationGroup, IAnimationConsumer, IAnimationGroupConsumer } from \"./utils/animation\";\nimport { cleanHtmlElementAfterAnimation, prepareElementForVerticalAnimation } from \"./utils/utils\";\n\nfunction getId(id: string, isError: boolean, isDetail: boolean) {\n  return id + (isError ? \"-error\" : \"\") + (isDetail ? \"-detail\" : \"\");\n}\n\nexport class QuestionMatrixDropdownRenderedCell {\n  private static counter = 1;\n  private idValue: number;\n  private itemValue: ItemValue;\n  public minWidth: string = \"\";\n  public width: string = \"\";\n  public locTitle: LocalizableString;\n  public cell: MatrixDropdownCell;\n  public column: MatrixDropdownColumn;\n  public row: MatrixDropdownRowModelBase;\n  public question: Question;\n  public isRemoveRow: boolean;\n  public choiceIndex: number;\n  public isOtherChoice: boolean;\n  public matrix: QuestionMatrixDropdownModelBase;\n  public isEmpty: boolean;\n  public colSpans: number = 1;\n  public panel: PanelModel;\n  public isShowHideDetail: boolean;\n  public isActionsCell: boolean = false;\n  public isErrorsCell: boolean = false;\n  public isDragHandlerCell: boolean = false;\n  public isDetailRowCell: boolean = false;\n  private classNameValue: string = \"\";\n  public constructor() {\n    this.idValue = QuestionMatrixDropdownRenderedCell.counter++;\n  }\n  public get requiredMark(): string {\n    return this.column && this.column.isRenderedRequired ? this.column.requiredMark : undefined;\n  }\n  public get hasQuestion(): boolean {\n    return !!this.question && !this.isErrorsCell;\n  }\n  public get hasTitle(): boolean {\n    return !!this.locTitle;\n  }\n  public get hasPanel(): boolean {\n    return !!this.panel;\n  }\n  public get id(): string {\n    let id = this.question ? this.question.id : this.idValue.toString();\n    if (this.isChoice) {\n      id += \"-\" + (Number.isInteger(this.choiceIndex) ? \"index\" + this.choiceIndex.toString() : this.item.id);\n    }\n    return getId(id, this.isErrorsCell, this.isDetailRowCell);\n  }\n  public get item(): ItemValue {\n    return this.itemValue;\n  }\n  public set item(val: ItemValue) {\n    this.itemValue = val;\n    if (!!val) {\n      val.hideCaption = true;\n    }\n  }\n  public get isChoice(): boolean {\n    return !!this.item;\n  }\n  public get isItemChoice(): boolean {\n    return this.isChoice && !this.isOtherChoice;\n  }\n  public get choiceValue(): any {\n    return this.isChoice ? this.item.value : null;\n  }\n  public get isCheckbox(): boolean {\n    return this.isItemChoice && this.question.isDescendantOf(\"checkbox\");\n  }\n  public get isRadio(): boolean {\n    return this.isItemChoice && this.question.isDescendantOf(\"radiogroup\");\n  }\n  public get isFirstChoice(): boolean {\n    return this.choiceIndex === 0;\n  }\n  public set className(val: string) {\n    this.classNameValue = val;\n  }\n  public get className(): string {\n    const builder = new CssClassBuilder().append(this.classNameValue);\n    if (this.hasQuestion) {\n      builder\n        .append(this.question.cssClasses.hasError, this.question.errors.length > 0)\n        .append(this.question.cssClasses.answered, this.question.isAnswered);\n    }\n    return builder.toString();\n  }\n  public get cellQuestionWrapperClassName(): string {\n    return this.cell.getQuestionWrapperClassName(this.matrix.cssClasses.cellQuestionWrapper);\n  }\n  public get isVisible(): boolean {\n    return (!this.hasQuestion && !this.isErrorsCell) || !this.matrix?.isMobile || this.question.isVisible;\n  }\n  public get showResponsiveTitle(): boolean {\n    return this.hasQuestion && this.matrix?.isMobile;\n  }\n  public get responsiveTitleCss(): string {\n    return new CssClassBuilder().append(this.matrix.cssClasses.cellResponsiveTitle).toString();\n  }\n  public get responsiveLocTitle(): LocalizableString {\n    return this.cell.column.locTitle;\n  }\n  public get headers(): string {\n    if (this.cell && this.cell.column) {\n      if (this.matrix.IsMultiplyColumn(this.cell.column)) {\n        if (!!this.item) {\n          return this.item.locText.renderedHtml;\n        } else {\n          return \"\";\n        }\n      }\n      let cellHint = this.cell.column.cellHint;\n      if (!!cellHint) {\n        if (cellHint.trim() === \"\") return \"\";\n        return this.cell.column.locCellHint.renderedHtml;\n      }\n      if (this.hasQuestion && this.question.isVisible && this.question.title)\n        return this.question.title;\n      return this.cell.column.title;\n    }\n    if (this.hasQuestion && this.question.isVisible) {\n      return this.question.locTitle.renderedHtml;\n    }\n    if (this.hasTitle) {\n      return this.locTitle.renderedHtml || \"\";\n    }\n    return \"\";\n  }\n  getTitle(): string {\n    return (this.matrix && this.matrix.showHeader) ? this.headers : \"\";\n  }\n  public calculateFinalClassName(matrixCssClasses: any): string {\n    const questionCss = this.cell.question.cssClasses;\n    // 'text-align': $data.isChoice ? 'center':\n    const builder = new CssClassBuilder()\n      .append(questionCss.itemValue, !!questionCss)\n      .append(questionCss.asCell, !!questionCss);\n    return builder.append(matrixCssClasses.cell, builder.isEmpty() && !!matrixCssClasses)\n      .append(matrixCssClasses.choiceCell, this.isChoice)\n      .toString();\n  }\n  public focusIn(): void {\n    if (this.question) {\n      this.question.focusIn();\n    }\n  }\n}\n\nexport class QuestionMatrixDropdownRenderedRow extends Base {\n  @property({ defaultValue: false }) isGhostRow: boolean;\n  @property({ defaultValue: false }) isAdditionalClasses: boolean;\n  @property({ defaultValue: true }) visible: boolean;\n  public onVisibilityChangedCallback: () => void;\n  public hasEndActions: boolean = false;\n  public row: MatrixDropdownRowModelBase;\n  public isErrorsRow = false;\n  private static counter = 1;\n  private idValue: number;\n  public cells: Array<QuestionMatrixDropdownRenderedCell> = [];\n\n  public constructor(public cssClasses: any, public isDetailRow: boolean = false) {\n    super();\n    this.idValue = QuestionMatrixDropdownRenderedRow.counter++;\n  }\n  public get id(): string {\n    return getId(this.row?.id || this.idValue.toString(), this.isErrorsRow, this.isDetailRow);\n  }\n  public get dropTargetId(): string {\n    return this.row?.id;\n  }\n  public get attributes() {\n    if (!this.row) return {};\n    return { \"data-sv-drop-target-matrix-row\": this.row.id };\n  }\n  public get className(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.row)\n      .append(this.cssClasses.detailRow, this.isDetailRow)\n      .append(this.cssClasses.rowHasPanel, this.row?.hasPanel)\n      .append(this.cssClasses.expandedRow, this.row?.isDetailPanelShowing && !this.isDetailRow)\n      .append(this.cssClasses.rowHasEndActions, this.hasEndActions)\n      .append(this.cssClasses.ghostRow, this.isGhostRow)\n      .append(this.cssClasses.rowAdditional, this.isAdditionalClasses)\n      .toString();\n  }\n  private rootElement: HTMLTableRowElement;\n  public setRootElement(val: HTMLTableRowElement): void {\n    this.rootElement = val;\n  }\n  public getRootElement(): HTMLTableRowElement {\n    return this.rootElement;\n  }\n  public focusCell(cellIndex: number): void {\n    if (this.rootElement) {\n      const inputElementSelector = `:scope td:nth-of-type(${cellIndex + 1}) input, :scope td:nth-of-type(${cellIndex + 1}) button`;\n      const inputElement = this.rootElement.querySelectorAll(inputElementSelector)[0] as HTMLInputElement;\n      if (inputElement) {\n        inputElement.focus();\n      }\n    }\n  }\n}\nexport class QuestionMatrixDropdownRenderedErrorRow extends QuestionMatrixDropdownRenderedRow {\n  public isErrorsRow: boolean = true;\n\n  constructor(cssClasses: any) {\n    super(cssClasses);\n  }\n  public get attributes() {\n    return {};\n  }\n  public get className(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.row)\n      .append(this.cssClasses.errorRow)\n      .toString();\n  }\n  public onAfterCreated(): void {\n    const callback = () => {\n      this.visible = this.cells.some((cell) => cell.question && cell.question.hasVisibleErrors);\n    };\n    this.cells.forEach((cell) => {\n      if (cell.question) {\n        cell.question.registerFunctionOnPropertyValueChanged(\"hasVisibleErrors\", callback);\n      }\n    });\n    callback();\n  }\n}\n\nexport class QuestionMatrixDropdownRenderedEmptyRow extends QuestionMatrixDropdownRenderedRow {\n  public isErrorsRow: boolean = false;\n\n  constructor(cssClasses: any, private customId: string) {\n    super(cssClasses);\n  }\n  public get attributes() {\n    return {};\n  }\n  public get dropTargetId() {\n    return this.customId;\n  }\n  public get className(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.row)\n      .append(this.cssClasses.rowEmpty)\n      .toString();\n  }\n}\n\nexport class QuestionMatrixDropdownRenderedTable extends Base {\n  private headerRowValue: QuestionMatrixDropdownRenderedRow;\n  private footerRowValue: QuestionMatrixDropdownRenderedRow;\n  private hasRemoveRowsValue: boolean;\n  private rowsActions: Array<Array<IAction>>;\n  private cssClasses: any;\n  @propertyArray({\n    onPush: (_: any, i: number, target: QuestionMatrixDropdownRenderedTable) => {\n      target.updateRenderedRows();\n    },\n    onRemove: (_: any, i: number, target: QuestionMatrixDropdownRenderedTable) => {\n      target.updateRenderedRows();\n    }\n  }) rows: Array<QuestionMatrixDropdownRenderedRow>;\n  protected getIsAnimationAllowed(): boolean {\n    return super.getIsAnimationAllowed() && this.matrix.animationAllowed;\n  }\n  private getRenderedRowsAnimationOptions(): IAnimationGroupConsumer<QuestionMatrixDropdownRenderedRow> {\n    const onBeforeRunAnimation = (el: HTMLElement) => {\n      el.querySelectorAll(\":scope > td > *\").forEach((el: HTMLElement) => {\n        prepareElementForVerticalAnimation(el);\n      });\n    };\n    const onAfterRunAnimation = (el: HTMLElement) => {\n      el.querySelectorAll(\":scope > td > *\").forEach((el: HTMLElement) => {\n        cleanHtmlElementAfterAnimation(el);\n      });\n    };\n    return {\n      isAnimationEnabled: () => {\n        return this.animationAllowed;\n      },\n      getRerenderEvent: () => this.onElementRerendered,\n      getAnimatedElement(el: QuestionMatrixDropdownRenderedRow) {\n        return el.getRootElement();\n      },\n      getLeaveOptions: () => {\n        return { cssClass: this.cssClasses.rowLeave, onBeforeRunAnimation, onAfterRunAnimation };\n      },\n      getEnterOptions: (_, info) => {\n        return { cssClass: this.cssClasses.rowEnter, onBeforeRunAnimation, onAfterRunAnimation };\n      },\n      getKey: (item) => {\n        return item.id;\n      }\n    };\n  }\n\n  @propertyArray() private _renderedRows: Array<QuestionMatrixDropdownRenderedRow> = [];\n  public updateRenderedRows(): void {\n    this.renderedRows = this.rows;\n  }\n  private renderedRowsAnimation = new AnimationGroup(this.getRenderedRowsAnimationOptions(), (val) => {\n    this._renderedRows = val;\n  }, () => this._renderedRows);\n\n  public get renderedRows(): Array<QuestionMatrixDropdownRenderedRow> {\n    return this._renderedRows;\n  }\n  public set renderedRows(val: Array<QuestionMatrixDropdownRenderedRow>) {\n    this.renderedRowsAnimation.sync(val);\n  }\n  public get wrapperDropTargetId() {\n    return this.renderedRows[this.renderedRows.length - 1]?.dropTargetId;\n  }\n\n  public constructor(public matrix: QuestionMatrixDropdownModelBase) {\n    super();\n    this.build();\n  }\n  public get showTable(): boolean {\n    return this.getPropertyValue(\"showTable\", true);\n  }\n  public get showHeader(): boolean {\n    return this.getPropertyValue(\"showHeader\");\n  }\n  public get showAddRow(): boolean {\n    return this.getPropertyValue(\"showAddRow\", false);\n  }\n  public get showAddRowOnTop(): boolean {\n    return this.getPropertyValue(\"showAddRowOnTop\", false);\n  }\n  public get showAddRowOnBottom(): boolean {\n    return this.getPropertyValue(\"showAddRowOnBottom\", false);\n  }\n  public get showFooter(): boolean {\n    return this.matrix.hasFooter && this.matrix.isColumnLayoutHorizontal;\n  }\n  public get hasFooter(): boolean {\n    return !!this.footerRow;\n  }\n  public get hasRemoveRows(): boolean {\n    return this.hasRemoveRowsValue;\n  }\n  private isRequireResetValue: boolean;\n  public isRequireReset(): boolean {\n    return this.isRequireResetValue || this.hasRemoveRows != this.matrix.canRemoveRows || !this.matrix.isColumnLayoutHorizontal;\n  }\n  public requireReset(): void {\n    this.isRequireResetValue = true;\n  }\n\n  public get headerRow(): QuestionMatrixDropdownRenderedRow {\n    return this.headerRowValue;\n  }\n  public get footerRow(): QuestionMatrixDropdownRenderedRow {\n    return this.footerRowValue;\n  }\n  public get isRowsDragAndDrop(): boolean {\n    return this.matrix.isRowsDragAndDrop && this.matrix.isColumnLayoutHorizontal;\n  }\n\n  private get showCellErrorsTop() {\n    //todo\n    return this.matrix.getErrorLocation() === \"top\";\n  }\n  private get showCellErrorsBottom() {\n    //todo\n    return this.matrix.getErrorLocation() === \"bottom\";\n  }\n\n  protected build() {\n    this.hasRemoveRowsValue = this.matrix.canRemoveRows;\n    //build rows now\n    var rows = this.matrix.visibleRows;\n    this.cssClasses = this.matrix.cssClasses;\n    this.buildRowsActions();\n    this.buildHeader();\n    this.buildRows();\n    this.buildFooter();\n    this.updateShowTableAndAddRow();\n  }\n  public updateShowTableAndAddRow() {\n    const showTable =\n      this.rows.length > 0 ||\n      this.matrix.isDesignMode ||\n      !this.matrix.getShowColumnsIfEmpty();\n    this.setPropertyValue(\"showTable\", showTable);\n    const isDesignMode = this.matrix.isDesignMode;\n    const showAddRow = !isDesignMode && this.matrix.canAddRow && showTable;\n    let showAddRowOnTop = showAddRow;\n    let showAddRowOnBottom = showAddRow;\n    if (showAddRowOnTop) {\n      if (this.matrix.getAddRowLocation() === \"default\") {\n        showAddRowOnTop = !this.matrix.isColumnLayoutHorizontal;\n      } else {\n        showAddRowOnTop = this.matrix.getAddRowLocation() !== \"bottom\";\n      }\n    }\n    if (showAddRowOnBottom && this.matrix.getAddRowLocation() !== \"topBottom\") {\n      showAddRowOnBottom = !showAddRowOnTop;\n    }\n    this.setPropertyValue(\"showAddRow\", !isDesignMode && this.matrix.canAddRow);\n    this.setPropertyValue(\"showAddRowOnTop\", showAddRowOnTop);\n    this.setPropertyValue(\"showAddRowOnBottom\", showAddRowOnBottom);\n  }\n  public onAddedRow(row: MatrixDropdownRowModelBase, index: number): void {\n    if (this.getRenderedDataRowCount() >= this.matrix.visibleRows.length)\n      return;\n    let rowIndex = this.getRenderedRowIndexByIndex(index);\n    this.rowsActions.splice(index, 0, this.buildRowActions(row));\n    this.addHorizontalRow(this.rows, row, rowIndex);\n    this.updateShowTableAndAddRow();\n  }\n  private getRenderedRowIndexByIndex(index: number): number {\n    let res = 0;\n    let dataRowIndex = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (dataRowIndex === index) {\n        if (this.rows[i].isErrorsRow || this.rows[i].isDetailRow) {\n          res++;\n          if (i + 1 < this.rows.length && this.rows[i + 1].isDetailRow) {\n            res ++;\n          }\n        }\n        break;\n      }\n      res++;\n      if (!(this.rows[i].isErrorsRow) && !this.rows[i].isDetailRow) dataRowIndex++;\n    }\n    if (dataRowIndex < index) return this.rows.length;\n    return res;\n  }\n  private getRenderedDataRowCount(): number {\n    var res = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (!(this.rows[i].isErrorsRow) && !this.rows[i].isDetailRow) res++;\n    }\n    return res;\n  }\n\n  public onRemovedRow(row: MatrixDropdownRowModelBase) {\n    var rowIndex = this.getRenderedRowIndex(row);\n    if (rowIndex < 0) return;\n    this.rowsActions.splice(rowIndex, 1);\n    var removeCount = 1;\n    if (\n      rowIndex < this.rows.length - 1 && this.showCellErrorsBottom &&\n      this.rows[rowIndex + 1].isErrorsRow\n    ) {\n      removeCount++;\n    }\n    if (\n      rowIndex < this.rows.length - 1 &&\n      (this.rows[rowIndex + 1].isDetailRow ||\n        this.showCellErrorsBottom && rowIndex + 1 < this.rows.length - 1 && this.rows[rowIndex + 2].isDetailRow\n      )\n    ) {\n      removeCount++;\n    }\n    if (rowIndex > 0 && this.showCellErrorsTop && this.rows[rowIndex - 1].isErrorsRow) {\n      rowIndex--;\n      removeCount++;\n    }\n    this.rows.splice(rowIndex, removeCount);\n    this.updateShowTableAndAddRow();\n  }\n  public onDetailPanelChangeVisibility(row: MatrixDropdownRowModelBase, isShowing: boolean): void {\n    const rowIndex = this.getRenderedRowIndex(row);\n    if (rowIndex < 0) return;\n    let currentIndex = rowIndex;\n    if (this.showCellErrorsBottom) currentIndex++;\n    var panelRowIndex =\n      currentIndex < this.rows.length - 1 && this.rows[currentIndex + 1].isDetailRow\n        ? currentIndex + 1\n        : -1;\n    if ((isShowing && panelRowIndex > -1) || (!isShowing && panelRowIndex < 0))\n      return;\n    if (isShowing) {\n      var detailRow = this.createDetailPanelRow(row, this.rows[rowIndex]);\n      this.rows.splice(currentIndex + 1, 0, detailRow);\n    } else {\n      this.rows.splice(panelRowIndex, 1);\n    }\n  }\n  public focusActionCell(row: MatrixDropdownRowModelBase, actionCellIndex: number): void {\n    let row2Focus = this.rows[this.rows.length - 1];\n    if (this.matrix.isColumnLayoutHorizontal) {\n      const nextRenderedRowIndex = this.getRenderedRowIndex(row);\n      row2Focus = this.rows[nextRenderedRowIndex];\n    }\n    row2Focus?.focusCell(actionCellIndex);\n  }\n  private getRenderedRowIndex(row: MatrixDropdownRowModelBase): number {\n    for (var i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].row == row) return i;\n    }\n    return -1;\n  }\n  protected buildRowsActions() {\n    this.rowsActions = [];\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      this.rowsActions.push(this.buildRowActions(rows[i]));\n    }\n  }\n  protected createRenderedRow(cssClasses: any, isDetailRow: boolean = false) {\n    return new QuestionMatrixDropdownRenderedRow(cssClasses, isDetailRow);\n  }\n  protected createErrorRenderedRow(cssClasses: any): QuestionMatrixDropdownRenderedErrorRow {\n    return new QuestionMatrixDropdownRenderedErrorRow(cssClasses);\n  }\n  protected createEmptyRenderedRow(cssClasses: any): QuestionMatrixDropdownRenderedEmptyRow {\n    return new QuestionMatrixDropdownRenderedEmptyRow(cssClasses, this.matrix.id);\n  }\n  protected buildHeader() {\n    var colHeaders =\n      this.matrix.isColumnLayoutHorizontal && this.matrix.showHeader;\n    var isShown =\n      colHeaders ||\n      (this.matrix.hasRowText && !this.matrix.isColumnLayoutHorizontal);\n    this.setPropertyValue(\"showHeader\", isShown);\n    if (!isShown) return;\n    this.headerRowValue = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\", this.cssClasses.actionsCellDrag));\n    }\n    if (this.hasActionCellInRows(\"start\")) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n    if (this.matrix.hasRowText && this.matrix.showHeader) {\n      this.headerRow.cells.push(this.createHeaderCell(null));\n    }\n    if (this.matrix.isColumnLayoutHorizontal) {\n      for (var i = 0; i < this.matrix.columns.length; i++) {\n        var column = this.matrix.columns[i];\n        if (!column.isColumnVisible) continue;\n        if (this.matrix.IsMultiplyColumn(column)) {\n          this.createMutlipleColumnsHeader(column);\n        } else {\n          this.headerRow.cells.push(this.createHeaderCell(column));\n        }\n      }\n    } else {\n      var rows = this.matrix.visibleRows;\n      for (var i = 0; i < rows.length; i++) {\n        const cell = this.createTextCell(rows[i].locText);\n        this.setHeaderCellCssClasses(cell);\n        cell.row = rows[i];\n        this.headerRow.cells.push(cell);\n      }\n      if (this.matrix.hasFooter) {\n        const cell = this.createTextCell(this.matrix.getFooterText());\n        this.setHeaderCellCssClasses(cell);\n        this.headerRow.cells.push(cell);\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n  }\n  protected buildFooter() {\n    if (!this.showFooter) return;\n    this.footerRowValue = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      this.footerRow.cells.push(this.createHeaderCell(null));\n    }\n    if (this.hasActionCellInRows(\"start\")) {\n      this.footerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n    if (this.matrix.hasRowText) {\n      const cell = this.createTextCell(this.matrix.getFooterText());\n      cell.className = new CssClassBuilder().append(cell.className)\n        .append(this.cssClasses.footerTotalCell).toString();\n      this.footerRow.cells.push(cell);\n    }\n    var cells = this.matrix.visibleTotalRow.cells;\n    for (var i = 0; i < cells.length; i++) {\n      var cell = cells[i];\n      if (!cell.column.isColumnVisible) continue;\n      if (this.matrix.IsMultiplyColumn(cell.column)) {\n        this.createMutlipleColumnsFooter(this.footerRow, cell);\n      } else {\n        var editCell = this.createEditCell(cell);\n        if (cell.column) {\n          this.setCellWidth(cell.column, editCell);\n        }\n        editCell.className = new CssClassBuilder().append(editCell.className)\n          .append(this.cssClasses.footerCell).toString();\n        this.footerRow.cells.push(editCell);\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      this.footerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n  }\n  protected buildRows() {\n    this.blockAnimations();\n    var rows = this.matrix.isColumnLayoutHorizontal\n      ? this.buildHorizontalRows()\n      : this.buildVerticalRows();\n    this.rows = rows;\n    this.releaseAnimations();\n  }\n  private hasActionCellInRowsValues: any = {};\n  private hasActionCellInRows(location: \"start\" | \"end\"): boolean {\n    if (this.hasActionCellInRowsValues[location] === undefined) {\n      this.hasActionCellInRowsValues[location] = this.hasActionsCellInLocaltion(location);\n    }\n    return this.hasActionCellInRowsValues[location];\n  }\n  private hasActionsCellInLocaltion(location: \"start\" | \"end\"): boolean {\n    if (location == \"end\" && this.hasRemoveRows) return true;\n    return this.matrix.visibleRows.some(\n      (row, index) => !this.isValueEmpty(this.getRowActions(index, location)));\n  }\n  private canRemoveRow(row: MatrixDropdownRowModelBase): boolean {\n    return this.matrix.canRemoveRow(row);\n  }\n  private buildHorizontalRows(): Array<QuestionMatrixDropdownRenderedRow> {\n    var rows = this.matrix.visibleRows;\n    var renderedRows: Array<QuestionMatrixDropdownRenderedRow> = [];\n    if (rows.length == 0 && this.matrix.allowRowReorder && this.matrix.allowRowDragIn) {\n      const row = this.createEmptyRow();\n      const cell = this.createTextCell(this.matrix.locNoRowsText);\n      cell.colSpans = this.headerRow && this.headerRow.cells.length || 1;\n      row.cells.push(cell);\n      renderedRows.push(row);\n    }\n    for (var i = 0; i < rows.length; i++) {\n      this.addHorizontalRow(\n        renderedRows,\n        rows[i]\n      );\n    }\n    return renderedRows;\n  }\n  private addHorizontalRow(\n    renderedRows: Array<QuestionMatrixDropdownRenderedRow>,\n    row: MatrixDropdownRowModelBase,\n    index: number = -1\n  ) {\n    const renderedRow = this.createHorizontalRow(row);\n    const errorRow = this.createErrorRow(renderedRow);\n    renderedRow.row = row;\n    if (index < 0) {\n      index = renderedRows.length;\n    }\n    if (this.matrix.isMobile) {\n      const cells = [];\n      for (let i = 0; i < renderedRow.cells.length; i++) {\n        if (this.showCellErrorsTop && !errorRow.cells[i].isEmpty) {\n          cells.push(errorRow.cells[i]);\n        }\n        cells.push(renderedRow.cells[i]);\n        if (this.showCellErrorsBottom && !errorRow.cells[i].isEmpty) {\n          cells.push(errorRow.cells[i]);\n        }\n      }\n      renderedRow.cells = cells;\n      renderedRows.splice(index, 0, renderedRow);\n    } else {\n      renderedRows.splice(index, 0, ...(this.showCellErrorsTop ? [errorRow, renderedRow] : [renderedRow, errorRow]));\n      index++;\n    }\n    if (row.isDetailPanelShowing) {\n      renderedRows.splice(index + 1, 0, this.createDetailPanelRow(row, renderedRow));\n    }\n  }\n  private getRowDragCell(rowIndex: number) {\n    const cell = new QuestionMatrixDropdownRenderedCell();\n    const lockedRows = (<QuestionMatrixDynamicModel>this.matrix).lockedRowCount;\n    cell.isDragHandlerCell = lockedRows < 1 || rowIndex >= lockedRows;\n    cell.isEmpty = !cell.isDragHandlerCell;\n    cell.className = this.getActionsCellClassName(cell);\n    cell.row = this.matrix.visibleRows[rowIndex];\n    return cell;\n  }\n  private getActionsCellClassName(cell: QuestionMatrixDropdownRenderedCell = null): string {\n    const classBuilder =\n      new CssClassBuilder()\n        .append(this.cssClasses.actionsCell)\n        .append(this.cssClasses.actionsCellDrag, cell?.isDragHandlerCell)\n        .append(this.cssClasses.detailRowCell, cell?.isDetailRowCell)\n        .append(this.cssClasses.verticalCell, !this.matrix.isColumnLayoutHorizontal);\n    if (cell.isActionsCell) {\n      const actions = (cell.item.value as ActionContainer).actions;\n      if (this.cssClasses.actionsCellPrefix) {\n        actions.forEach(action => {\n          classBuilder.append(this.cssClasses.actionsCellPrefix + \"--\" + action.id);\n        });\n      }\n    }\n    return classBuilder.toString();\n  }\n  private getRowActionsCell(rowIndex: number, location: \"start\" | \"end\", isDetailRow: boolean = false) {\n    const rowActions = this.getRowActions(rowIndex, location);\n    if (!this.isValueEmpty(rowActions)) {\n      const cell = new QuestionMatrixDropdownRenderedCell();\n      const actionContainer = this.matrix.allowAdaptiveActions ? new AdaptiveActionContainer() : new ActionContainer();\n      if (!!this.matrix.survey && this.matrix.survey.getCss().actionBar) {\n        actionContainer.cssClasses = this.matrix.survey.getCss().actionBar;\n      }\n      actionContainer.setItems(rowActions);\n\n      const itemValue = new ItemValue(actionContainer);\n      cell.item = itemValue;\n      cell.isActionsCell = true;\n      cell.isDragHandlerCell = false;\n      cell.isDetailRowCell = isDetailRow;\n      cell.className = this.getActionsCellClassName(cell);\n      cell.row = this.matrix.visibleRows[rowIndex];\n      return cell;\n    }\n    return null;\n  }\n  private getRowActions(rowIndex: number, location: \"start\" | \"end\") {\n    var actions = this.rowsActions[rowIndex];\n    if (!Array.isArray(actions)) return [];\n    return actions.filter((action) => {\n      if (!action.location) {\n        action.location = \"start\";\n      }\n      return action.location === location;\n    });\n  }\n  private buildRowActions(row: MatrixDropdownRowModelBase): Array<IAction> {\n    var actions: Array<IAction> = [];\n    this.setDefaultRowActions(row, actions);\n    if (!!this.matrix.survey) {\n      actions = this.matrix.survey.getUpdatedMatrixRowActions(\n        this.matrix,\n        row,\n        actions\n      );\n    }\n    return actions;\n  }\n  private get showRemoveButtonAsIcon() {\n    return (\n      settings.matrix.renderRemoveAsIcon && this.matrix.survey && (<any>this.matrix.survey).css.root === \"sd-root-modern\"\n    );\n  }\n  protected setDefaultRowActions(\n    row: MatrixDropdownRowModelBase,\n    actions: Array<IAction>\n  ) {\n    const matrix = <QuestionMatrixDynamicModel>this.matrix;\n    if (this.hasRemoveRows && this.canRemoveRow(row)) {\n      if (!this.showRemoveButtonAsIcon) {\n        actions.push(\n          new Action({\n            id: \"remove-row\",\n            location: \"end\",\n            enabled: !this.matrix.isInputReadOnly,\n            component: \"sv-matrix-remove-button\",\n            data: { row: row, question: this.matrix },\n          })\n        );\n      } else {\n        actions.push(\n          new Action({\n            id: \"remove-row\",\n            iconName: \"icon-delete-24x24\",\n            iconSize: \"auto\",\n            component: \"sv-action-bar-item\",\n            innerCss: new CssClassBuilder().append(this.matrix.cssClasses.button).append(this.matrix.cssClasses.buttonRemove).toString(),\n            location: \"end\",\n            showTitle: false,\n            title: matrix.removeRowText,\n            enabled: !matrix.isInputReadOnly,\n            data: { row: row, question: matrix },\n            action: () => {\n              matrix.removeRowUI(row);\n            },\n          })\n        );\n      }\n    }\n\n    if (row.hasPanel) {\n      if (this.matrix.isMobile) {\n        actions.unshift(\n          new Action({\n            id: \"show-detail-mobile\",\n            title: <any>new ComputedUpdater(() => row.isDetailPanelShowing ? this.matrix.getLocalizationString(\"hideDetails\") : this.matrix.getLocalizationString(\"showDetails\")),\n            showTitle: true,\n            location: \"end\",\n            action: (context) => {\n              row.showHideDetailPanelClick();\n            },\n          })\n        );\n      } else {\n        actions.push(\n          new Action({\n            id: \"show-detail\",\n            title: <any>new ComputedUpdater(() => row.isDetailPanelShowing ? this.matrix.getLocalizationString(\"hideDetails\") : this.matrix.getLocalizationString(\"showDetails\")),\n            showTitle: false,\n            location: \"start\",\n            component: \"sv-matrix-detail-button\",\n            data: { row: row, question: this.matrix },\n          })\n        );\n      }\n    }\n  }\n  private createErrorRow(\n    row: QuestionMatrixDropdownRenderedRow\n  ): QuestionMatrixDropdownRenderedRow {\n    const res = this.createErrorRenderedRow(this.cssClasses);\n    for (let i = 0; i < row.cells.length; i++) {\n      const cell = row.cells[i];\n      if (!cell.hasQuestion) {\n        res.cells.push(this.createEmptyCell(true));\n      } else if (this.matrix.IsMultiplyColumn(cell.cell.column)) {\n        if (cell.isFirstChoice) {\n          res.cells.push(this.createErrorCell(cell.cell));\n        } else {\n          res.cells.push(this.createEmptyCell(true));\n        }\n      } else {\n        res.cells.push(this.createErrorCell(cell.cell));\n      }\n    }\n    res.onAfterCreated();\n    return res;\n  }\n  private createEmptyRow(): QuestionMatrixDropdownRenderedRow {\n    const res = this.createEmptyRenderedRow(this.cssClasses);\n    return res;\n  }\n  private createHorizontalRow(row: MatrixDropdownRowModelBase): QuestionMatrixDropdownRenderedRow {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      var rowIndex = this.matrix.visibleRows.indexOf(row);\n      res.cells.push(this.getRowDragCell(rowIndex));\n    }\n    this.addRowActionsCell(row, res, \"start\");\n    if (this.matrix.hasRowText) {\n      var renderedCell = this.createTextCell(row.locText);\n      renderedCell.row = row;\n      res.cells.push(renderedCell);\n      this.setCellWidth(null, renderedCell);\n\n      renderedCell.className = new CssClassBuilder()\n        .append(renderedCell.className)\n        .append(this.cssClasses.rowTextCell)\n        .append(this.cssClasses.columnTitleCell, !this.matrix.isColumnLayoutHorizontal)\n        .append(this.cssClasses.detailRowText, row.hasPanel)\n        .toString();\n    }\n    for (var i = 0; i < row.cells.length; i++) {\n      let cell = row.cells[i];\n      if (!cell.column.isColumnVisible) continue;\n      if (this.matrix.IsMultiplyColumn(cell.column)) {\n        this.createMutlipleEditCells(res, cell);\n      } else {\n        if (cell.column.isShowInMultipleColumns) {\n          cell.question.visibleChoices.map((c: ItemValue) => c.hideCaption = false);\n        }\n        var renderedCell = this.createEditCell(cell);\n        res.cells.push(renderedCell);\n        this.setCellWidth(cell.column, renderedCell);\n      }\n    }\n    this.addRowActionsCell(row, res, \"end\");\n    return res;\n  }\n  private addRowActionsCell(\n    row: MatrixDropdownRowModelBase,\n    renderedRow: QuestionMatrixDropdownRenderedRow,\n    location: \"start\" | \"end\"\n  ) {\n    var rowIndex = this.matrix.visibleRows.indexOf(row);\n    if (this.hasActionCellInRows(location)) {\n      const actions = this.getRowActionsCell(rowIndex, location, renderedRow.isDetailRow);\n      if (!!actions) {\n        renderedRow.cells.push(actions);\n        renderedRow.hasEndActions = true;\n      } else {\n        var cell = new QuestionMatrixDropdownRenderedCell();\n        cell.isEmpty = true;\n        cell.isDetailRowCell = renderedRow.isDetailRow;\n        renderedRow.cells.push(cell);\n      }\n    }\n  }\n  private createDetailPanelRow(\n    row: MatrixDropdownRowModelBase,\n    renderedRow: QuestionMatrixDropdownRenderedRow\n  ): QuestionMatrixDropdownRenderedRow {\n    const panelFullWidth: boolean = this.matrix.isDesignMode;\n    var res = this.createRenderedRow(this.cssClasses, true);\n    res.row = row;\n    var buttonCell = new QuestionMatrixDropdownRenderedCell();\n    if (this.matrix.hasRowText) {\n      buttonCell.colSpans = 2;\n    }\n    buttonCell.isEmpty = true;\n    if (!panelFullWidth) res.cells.push(buttonCell);\n    var actionsCell = null;\n    if (this.hasActionCellInRows(\"end\")) {\n      actionsCell = new QuestionMatrixDropdownRenderedCell();\n      actionsCell.isEmpty = true;\n    }\n    var cell = new QuestionMatrixDropdownRenderedCell();\n    cell.panel = row.detailPanel;\n    cell.colSpans =\n      renderedRow.cells.length -\n      (!panelFullWidth ? buttonCell.colSpans : 0) -\n      (!!actionsCell ? actionsCell.colSpans : 0);\n    cell.className = this.cssClasses.detailPanelCell;\n    res.cells.push(cell);\n\n    if (!!actionsCell) {\n      if (this.matrix.isMobile) {\n        this.addRowActionsCell(row, res, \"end\");\n      } else {\n        res.cells.push(actionsCell);\n      }\n    }\n    if (\n      typeof this.matrix.onCreateDetailPanelRenderedRowCallback === \"function\"\n    ) {\n      this.matrix.onCreateDetailPanelRenderedRowCallback(res);\n    }\n    return res;\n  }\n\n  private buildVerticalRows(): Array<QuestionMatrixDropdownRenderedRow> {\n    var columns = this.matrix.columns;\n    var renderedRows = [];\n    for (var i = 0; i < columns.length; i++) {\n      var col = columns[i];\n      if (col.isColumnVisible) {\n        if (this.matrix.IsMultiplyColumn(col)) {\n          this.createMutlipleVerticalRows(renderedRows, col, i);\n        } else {\n          const renderedRow = this.createVerticalRow(col, i);\n          const errorRow = this.createErrorRow(renderedRow);\n          if (this.showCellErrorsTop) {\n            renderedRows.push(errorRow);\n            renderedRows.push(renderedRow);\n          } else {\n            renderedRows.push(renderedRow);\n            renderedRows.push(errorRow);\n          }\n        }\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      renderedRows.push(this.createEndVerticalActionRow());\n    }\n    return renderedRows;\n  }\n  private createMutlipleVerticalRows(\n    renderedRows: Array<QuestionMatrixDropdownRenderedRow>,\n    column: MatrixDropdownColumn,\n    index: number\n  ) {\n    var choices = this.getMultipleColumnChoices(column);\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      const renderedRow = this.createVerticalRow(column, index, choices[i], i);\n      const errorRow = this.createErrorRow(renderedRow);\n      if (this.showCellErrorsTop) {\n        renderedRows.push(errorRow);\n        renderedRows.push(renderedRow);\n      } else {\n        renderedRows.push(renderedRow);\n        renderedRows.push(errorRow);\n      }\n    }\n  }\n  private createVerticalRow(\n    column: MatrixDropdownColumn,\n    index: number,\n    choice: ItemValue = null,\n    choiceIndex: number = -1\n  ): QuestionMatrixDropdownRenderedRow {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.matrix.showHeader) {\n      var lTitle = !!choice ? choice.locText : column.locTitle;\n      var hCell = this.createTextCell(lTitle);\n      hCell.column = column;\n      hCell.className = new CssClassBuilder()\n        .append(hCell.className)\n        .append(this.cssClasses.rowTextCell)\n        .append(this.cssClasses.columnTitleCell).toString();\n      res.cells.push(hCell);\n    }\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      var rChoice = choice;\n      var rChoiceIndex = choiceIndex >= 0 ? choiceIndex : i;\n      var cell = rows[i].cells[index];\n      var visChoices = !!choice ? cell.question.visibleChoices : undefined;\n      if (!!visChoices && rChoiceIndex < visChoices.length) {\n        rChoice = visChoices[rChoiceIndex];\n      }\n      var rCell = this.createEditCell(cell, rChoice);\n      rCell.item = rChoice;\n      rCell.choiceIndex = rChoiceIndex;\n      res.cells.push(rCell);\n    }\n    if (this.matrix.hasTotal) {\n      res.cells.push(\n        this.createEditCell(this.matrix.visibleTotalRow.cells[index])\n      );\n    }\n\n    return res;\n  }\n  private createEndVerticalActionRow(): QuestionMatrixDropdownRenderedRow {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.matrix.showHeader) {\n      res.cells.push(this.createEmptyCell());\n    }\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      res.cells.push(this.getRowActionsCell(i, \"end\"));\n    }\n    if (this.matrix.hasTotal) {\n      res.cells.push(this.createEmptyCell());\n    }\n    return res;\n  }\n  private createMutlipleEditCells(\n    rRow: QuestionMatrixDropdownRenderedRow,\n    cell: MatrixDropdownCell,\n    isFooter: boolean = false\n  ) {\n    var choices = isFooter\n      ? this.getMultipleColumnChoices(cell.column)\n      : cell.question.visibleChoices;\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      var rCell = this.createEditCell(cell, !isFooter ? choices[i] : undefined);\n      if (!isFooter) {\n        //rCell.item = choices[i];\n        this.setItemCellCssClasses(rCell);\n        rCell.choiceIndex = i;\n      }\n      rRow.cells.push(rCell);\n    }\n  }\n  private setItemCellCssClasses(cell: QuestionMatrixDropdownRenderedCell) {\n    cell.className = new CssClassBuilder()\n      .append(this.cssClasses.cell)\n      .append(this.cssClasses.itemCell)\n      .append(this.cssClasses.radioCell, cell.isRadio)\n      .append(this.cssClasses.checkboxCell, cell.isCheckbox)\n      .toString();\n  }\n  private createEditCell(\n    cell: MatrixDropdownCell,\n    choiceItem: any = undefined\n  ): QuestionMatrixDropdownRenderedCell {\n    var res = new QuestionMatrixDropdownRenderedCell();\n    res.cell = cell;\n    res.row = cell.row;\n    res.column = cell.column;\n    res.question = cell.question;\n    res.matrix = this.matrix;\n    res.item = choiceItem;\n    res.isOtherChoice = !!choiceItem && !!cell.question && cell.question.otherItem === choiceItem;\n\n    res.className = res.calculateFinalClassName(this.cssClasses);\n    return res;\n  }\n  private createErrorCell(\n    cell: MatrixDropdownCell,\n    choiceItem: any = undefined\n  ): QuestionMatrixDropdownRenderedCell {\n    var res = new QuestionMatrixDropdownRenderedCell();\n    res.question = cell.question;\n    res.row = cell.row;\n    res.matrix = this.matrix;\n    res.isErrorsCell = true;\n    res.className = new CssClassBuilder()\n      .append(this.cssClasses.cell)\n      .append(this.cssClasses.errorsCell)\n      .append(this.cssClasses.errorsCellTop, this.showCellErrorsTop)\n      .append(this.cssClasses.errorsCellBottom, this.showCellErrorsBottom)\n      .toString();\n    return res;\n  }\n  private createMutlipleColumnsFooter(\n    rRow: QuestionMatrixDropdownRenderedRow,\n    cell: MatrixDropdownCell\n  ) {\n    this.createMutlipleEditCells(rRow, cell, true);\n  }\n  private createMutlipleColumnsHeader(column: MatrixDropdownColumn) {\n    var choices = this.getMultipleColumnChoices(column);\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      var cell = this.createTextCell(choices[i].locText);\n      this.setHeaderCell(column, cell);\n      this.setHeaderCellCssClasses(cell);\n      this.headerRow.cells.push(cell);\n    }\n  }\n  private getMultipleColumnChoices(column: MatrixDropdownColumn): any {\n    var choices = column.templateQuestion.choices;\n    if (!!choices && Array.isArray(choices) && choices.length == 0)\n      return [].concat(this.matrix.choices, column.getVisibleMultipleChoices());\n    choices = column.getVisibleMultipleChoices();\n    if (!choices || !Array.isArray(choices)) return null;\n    return choices;\n  }\n  private setHeaderCellCssClasses(cell: QuestionMatrixDropdownRenderedCell, cellType?: string, classMod?: string): void {\n    cell.className = new CssClassBuilder()\n      .append(this.cssClasses.headerCell)\n      .append(this.cssClasses.columnTitleCell, this.matrix.isColumnLayoutHorizontal)\n      .append(this.cssClasses.emptyCell, !!cell.isEmpty)\n      .append(this.cssClasses.cell + \"--\" + cellType, !!cellType)\n      .append(classMod, !!classMod)\n      .toString();\n  }\n  private createHeaderCell(\n    column: MatrixDropdownColumn,\n    cellType: string = null,\n    classMod?: string\n  ): QuestionMatrixDropdownRenderedCell {\n    let cell = !!column ? this.createTextCell(column.locTitle) : this.createEmptyCell();\n    cell.column = column;\n    this.setHeaderCell(column, cell);\n    if (!cellType) cellType = (!!column && column.cellType !== \"default\") ? column.cellType : this.matrix.cellType;\n    this.setHeaderCellCssClasses(cell, cellType, classMod);\n    return cell;\n  }\n  private setHeaderCell(\n    column: MatrixDropdownColumn,\n    cell: QuestionMatrixDropdownRenderedCell\n  ) {\n    this.setCellWidth(column, cell);\n  }\n  private setCellWidth(\n    column: MatrixDropdownColumn,\n    cell: QuestionMatrixDropdownRenderedCell\n  ) {\n    cell.minWidth = column != null ? this.matrix.getColumnWidth(column) : this.matrix.getRowTitleWidth();\n    cell.width = column != null ? column.width : this.matrix.getRowTitleWidth();\n  }\n  private createTextCell(\n    locTitle: LocalizableString\n  ): QuestionMatrixDropdownRenderedCell {\n    var cell = new QuestionMatrixDropdownRenderedCell();\n    cell.locTitle = locTitle;\n    if (!!this.cssClasses.cell) {\n      cell.className = this.cssClasses.cell;\n    }\n    return cell;\n  }\n  private createEmptyCell(isError: boolean = false): QuestionMatrixDropdownRenderedCell {\n    const res = this.createTextCell(null);\n    res.isEmpty = true;\n    res.className = new CssClassBuilder()\n      .append(this.cssClasses.cell)\n      .append(this.cssClasses.emptyCell)\n      .append(this.cssClasses.errorsCell, isError)\n      .toString();\n    return res;\n  }\n}", "import { JsonObject, CustomPropertiesCollection, Serializer, property } from \"./jsonobject\";\nimport { QuestionMatrixBaseModel } from \"./martixBase\";\nimport { Question, IConditionObject, IQuestionPlainData, QuestionItemValueGetterContext } from \"./question\";\nimport { HashTable, Helpers } from \"./helpers\";\nimport { Base } from \"./base\";\nimport { IElement, IQuestion, ISurveyData, ISurvey, ISurveyImpl, ITextProcessor, IProgressInfo, IPanel, IPlainDataOptions } from \"./base-interfaces\";\nimport { SurveyElement } from \"./survey-element\";\nimport { TextContextProcessor } from \"./textPreProcessor\";\nimport { ItemValue } from \"./itemvalue\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { FunctionFactory } from \"./functionsfactory\";\nimport { PanelModel } from \"./panel\";\nimport { settings } from \"./settings\";\nimport { KeyDuplicationError } from \"./error\";\nimport { SurveyModel } from \"./survey\";\nimport { SurveyError } from \"./survey-error\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IMatrixColumnOwner, MatrixDropdownColumn } from \"./question_matrixdropdowncolumn\";\nimport { QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable } from \"./question_matrixdropdownrendered\";\nimport { ConditionRunner } from \"./conditions\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, VariableGetterContext } from \"./conditionProcessValue\";\nimport { ValidationContext } from \"./question\";\n\nexport interface IMatrixDropdownData extends IObjectValueContext {\n  value: any;\n  getFilteredData(): any;\n  getSharedQuestionFromArray(name: string, rowIndex: number): Question;\n  onRowChanged(\n    row: MatrixDropdownRowModelBase,\n    columnName: string,\n    newRowValue: any,\n    isDeletingValue: boolean\n  ): void;\n  onRowChanging(\n    row: MatrixDropdownRowModelBase,\n    columnName: string,\n    rowValue: any\n  ): any;\n  isValidateOnValueChanging: boolean;\n  getRowIndex(row: MatrixDropdownRowModelBase): number;\n  getRowValue(rowIndex: number): any;\n  checkIfValueInRowDuplicated(\n    checkedRow: MatrixDropdownRowModelBase,\n    cellQuestion: Question\n  ): boolean;\n  hasDetailPanel(row: MatrixDropdownRowModelBase): boolean;\n  getIsDetailPanelShowing(row: MatrixDropdownRowModelBase): boolean;\n  setIsDetailPanelShowing(row: MatrixDropdownRowModelBase, val: boolean): void;\n  createRowDetailPanel(row: MatrixDropdownRowModelBase): PanelModel;\n  validateCell(\n    row: MatrixDropdownRowModelBase,\n    columnName: string,\n    rowValue: any\n  ): SurveyError;\n  columns: Array<MatrixDropdownColumn>;\n  createQuestion(\n    row: MatrixDropdownRowModelBase,\n    column: MatrixDropdownColumn\n  ): Question;\n  choices: Array<ItemValue>;\n  getLocale(): string;\n  getMarkdownHtml(text: string, name: string, item?: any): string;\n  getRenderer(name: string): string;\n  getRendererContext(locStr: LocalizableString): any;\n  getProcessedText(text: string): string;\n  getParentTextProcessor(): ITextProcessor;\n  getSharedQuestionByName(columnName: string, row: MatrixDropdownRowModelBase): Question;\n  runTriggersInRow(row: MatrixDropdownRowModelBase, runName: string, newValue: any): void;\n  onTotalValueChanged(): any;\n  getSurvey(): ISurvey;\n  isMatrixReadOnly(): boolean;\n  onRowVisibilityChanged(row: MatrixDropdownRowModelBase): void;\n}\n\nexport class MatrixDropdownCell {\n  private questionValue: Question;\n  constructor(\n    public column: MatrixDropdownColumn,\n    public row: MatrixDropdownRowModelBase,\n    public data: IMatrixDropdownData\n  ) {\n    this.questionValue = this.createQuestion(column, row, data);\n    this.questionValue.updateCustomWidget();\n    this.updateCellQuestionTitleDueToAccessebility(row);\n  }\n  private updateCellQuestionTitleDueToAccessebility(row: MatrixDropdownRowModelBase): void {\n    this.questionValue.locTitle.onGetTextCallback = (str: string): string => {\n      const survey = row?.getSurvey();\n      if (!survey || survey.isSingleVisibleInput) return this.questionValue.title;\n      const rowTitle = row.getAccessbilityText();\n      if (!rowTitle) return this.questionValue.title;\n      return this.column.colOwner.getCellAriaLabel(row, this.column, rowTitle);\n    };\n  }\n  public locStrsChanged(): void {\n    this.question.locStrsChanged();\n  }\n  protected createQuestion(\n    column: MatrixDropdownColumn,\n    row: MatrixDropdownRowModelBase,\n    data: IMatrixDropdownData\n  ): Question {\n    const res = data.createQuestion(this.row, this.column);\n    res.readOnlyCallback = (): boolean => !this.row.isRowEnabled();\n    res.validateValueCallback = function () {\n      return data.validateCell(row, column.name, row.value);\n    };\n    CustomPropertiesCollection.getProperties(column.getType()).forEach(\n      (property) => {\n        let propertyName = property.name;\n        if ((<any>column)[propertyName] !== undefined) {\n          res[propertyName] = (<any>column)[propertyName];\n        }\n      }\n    );\n    return res;\n  }\n  public get question(): Question {\n    return this.questionValue;\n  }\n  public get value(): any {\n    return this.question.value;\n  }\n  public set value(value: any) {\n    this.question.value = value;\n  }\n  public getQuestionWrapperClassName(className: string): string {\n    return className;\n  }\n  public runCondition(properties: HashTable<any>): void {\n    this.question.runCondition(properties);\n  }\n}\n\nexport class MatrixDropdownTotalCell extends MatrixDropdownCell {\n  constructor(\n    public column: MatrixDropdownColumn,\n    public row: MatrixDropdownRowModelBase,\n    public data: IMatrixDropdownData\n  ) {\n    super(column, row, data);\n    this.updateCellQuestion();\n  }\n  protected createQuestion(\n    column: MatrixDropdownColumn,\n    row: MatrixDropdownRowModelBase,\n    data: IMatrixDropdownData\n  ): Question {\n    var res = <Question>Serializer.createClass(\"expression\");\n    res.setSurveyImpl(row);\n    return res;\n  }\n  public locStrsChanged() {\n    this.updateCellQuestion();\n    super.locStrsChanged();\n  }\n  public updateCellQuestion() {\n    this.question.locCalculation();\n    this.column.updateCellQuestion(this.question, null, function (json) {\n      delete json[\"defaultValue\"];\n    });\n    this.question.expression = this.getTotalExpression();\n    this.question.format = this.column.totalFormat;\n    this.question.currency = this.column.totalCurrency;\n    this.question.displayStyle = this.column.totalDisplayStyle;\n    this.question.maximumFractionDigits = this.column.totalMaximumFractionDigits;\n    this.question.minimumFractionDigits = this.column.totalMinimumFractionDigits;\n    this.question.unlocCalculation();\n    this.question.runIfReadOnly = true;\n  }\n  public getQuestionWrapperClassName(className: string): string {\n    let result = super.getQuestionWrapperClassName(className);\n    if (!result) {\n      return result;\n    }\n    if (this.question.expression && this.question.expression != \"''\") {\n      result += \" \" + className + \"--expression\";\n    }\n    let alignment = this.column.totalAlignment;\n    if (alignment === \"auto\") {\n      if (this.column.cellType === \"dropdown\") {\n        alignment = \"left\";\n      }\n    }\n    return result + \" \" + className + \"--\" + alignment;\n  }\n  public getTotalExpression(): string {\n    if (!!this.column.totalExpression) return this.column.totalExpression;\n    if (this.column.totalType == \"none\") return \"''\";\n    var funName = this.column.totalType + \"InArray\";\n    if (!FunctionFactory.Instance.hasFunction(funName)) return \"\";\n    return funName + \"({matrix}, '\" + this.column.name + \"')\";\n  }\n}\n\nexport class MatrixRowGetterContext extends QuestionItemValueGetterContext {\n  constructor(private row: MatrixDropdownRowModelBase) {\n    super();\n  }\n  protected getIndex(): number { return this.row.rowIndex - 1; }\n  protected getQuestionData(): Question { return <Question>(<any>this.row.data); }\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length === 0) return undefined;\n    const setVar = settings.expressionVariables;\n    if (path.length === 1) {\n      const rowVal = this.getRowValue(path[0].name);\n      if (rowVal !== undefined) {\n        return { isFound: true, value: rowVal };\n      }\n      if (path[0].name === setVar.matrix) {\n        const matrix = this.row.data;\n        return { isFound: true, context: matrix.getValueGetterContext(), value: matrix.getFilteredData() };\n      }\n    }\n    if (path.length > 1 && path[0].name === setVar.totalRow) {\n      const totalRow = <IObjectValueContext>(<any>this.row.data).visibleTotalRow;\n      if (!!totalRow) {\n        path[0].name = \"row\";\n        return totalRow.getValueGetterContext().getValue(path, isRoot, index, createObjects);\n      }\n    }\n    const isRowPrefix = path[0].name === setVar.row;\n    if (isRowPrefix || !isRoot) {\n      if (isRowPrefix) {\n        path.shift();\n      }\n      let res = super.getValue(path, isRoot, index, createObjects);\n      if (!!res && res.isFound) return res;\n      const allValues = this.row.getAllValues();\n      if (isRoot) {\n        res = this.getValueFromBindedQuestions(path, allValues);\n        if (!!res) return res;\n      }\n      return new VariableGetterContext(allValues).getValue(path, isRoot, index, createObjects);\n    }\n    return undefined;\n  }\n  getRootObj(): IObjectValueContext { return this.row.data; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const qs = this.row.getQuestionsByValueName(name, true);\n    if (qs.length > 0) {\n      res.isFound = true;\n      res.context = qs[0].getValueGetterContext();\n    }\n  }\n  private getRowValue(name: string): any {\n    const setVar = settings.expressionVariables;\n    name = name.toLocaleLowerCase();\n    if (name === setVar.rowIndex.toLocaleLowerCase()) {\n      return this.row.rowIndex;\n    }\n    if (name === setVar.visibleRowIndex.toLocaleLowerCase()) {\n      return this.getQuestionData().visibleRows.indexOf(this.row) + 1;\n    }\n    if ([setVar.item, setVar.rowName.toLocaleLowerCase(), setVar.rowValue.toLocaleLowerCase()].indexOf(name) > -1) {\n      return this.row.rowName;\n    }\n    if (name == setVar.rowTitle.toLocaleLowerCase()) {\n      return this.row.rowTitle;\n    }\n    return undefined;\n  }\n}\n\nexport class MatrixDropdownRowModelBase implements ISurveyData, ISurveyImpl, ILocalizableOwner, IObjectValueContext {\n  private static idCounter: number = 1;\n  private static getId(): string {\n    return \"srow_\" + MatrixDropdownRowModelBase.idCounter++;\n  }\n  protected isSettingValue: boolean = false;\n  private idValue: string;\n  private textPreProcessor: TextContextProcessor;\n  private detailPanelValue: PanelModel = null;\n  private visibleValue: boolean = true;\n\n  public cells: Array<MatrixDropdownCell> = [];\n  public showHideDetailPanelClick: any;\n  public onDetailPanelShowingChanged: () => void;\n  public visibleIndex: number = -1;\n\n  constructor(public data: IMatrixDropdownData, value: any) {\n    this.data = data;\n    this.subscribeToChanges(value);\n    this.textPreProcessor = new TextContextProcessor(this);\n    this.showHideDetailPanelClick = () => {\n      if (this.getSurvey().isDesignMode) return true;\n      this.showHideDetailPanel();\n    };\n    this.idValue = MatrixDropdownRowModelBase.getId();\n  }\n  public get id(): string {\n    return this.idValue;\n  }\n  public get rowName(): any {\n    return null;\n  }\n  public get rowTitle(): any {\n    return this.rowName;\n  }\n  public get dataName(): string {\n    return this.rowName;\n  }\n  public get text(): any {\n    return this.rowName;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixRowGetterContext(this);\n  }\n  public isRowEnabled(): boolean { return true; }\n  protected isRowHasEnabledCondition(): boolean { return false; }\n  public get isVisible(): boolean { return this.visible && this.isItemVisible(); }\n  public get visible(): boolean { return this.visibleValue; }\n  public set visible(val: boolean) {\n    if (this.visible !== val) {\n      this.visibleValue = val;\n      this.data?.onRowVisibilityChanged(this);\n    }\n  }\n  protected isItemVisible(): boolean { return true; }\n  public get value(): any {\n    return this.getValueCore(false);\n  }\n  public set value(value: any) {\n    this.isSettingValue = true;\n    this.subscribeToChanges(value);\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      var val = this.getCellValue(value, question.getValueName());\n      var oldComment = question.comment;\n      var comment = !!value\n        ? value[question.getValueName() + Base.commentSuffix]\n        : \"\";\n      if (comment == undefined) comment = \"\";\n      question.updateValueFromSurvey(val);\n      if (!!comment || this.isTwoValueEquals(oldComment, question.comment)) {\n        question.updateCommentFromSurvey(comment);\n      }\n      question.onSurveyValueChanged(val);\n    }\n    this.isSettingValue = false;\n  }\n  public get filteredValue(): any {\n    return this.getValueCore(true);\n  }\n  private getValueCore(isFiltered: boolean): any {\n    var result: any = {};\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      if (!question.isEmpty()) {\n        result[question.getValueName()] = isFiltered ? question.getFilteredValue() : question.value;\n      }\n      if (\n        !!question.comment &&\n        !!this.getSurvey() &&\n        this.getSurvey().storeOthersAsComment\n      ) {\n        result[question.getValueName() + Base.commentSuffix] =\n          question.comment;\n      }\n    }\n    return result;\n  }\n  public get locText(): LocalizableString {\n    return null;\n  }\n  public getAccessbilityText(): string {\n    return this.locText && this.locText.renderedHtml;\n  }\n  public get hasPanel(): boolean {\n    if (!this.data) return false;\n    return this.data.hasDetailPanel(this);\n  }\n  public get detailPanel(): PanelModel {\n    return this.detailPanelValue;\n  }\n  public get detailPanelId(): string {\n    return !!this.detailPanel ? this.detailPanel.id : \"\";\n  }\n  public get isDetailPanelShowing(): boolean {\n    return !!this.data ? this.data.getIsDetailPanelShowing(this) : false;\n  }\n  private setIsDetailPanelShowing(val: boolean) {\n    if (!val && this.detailPanel) {\n      this.detailPanel.onHidingContent();\n    }\n    if (!!this.data) {\n      this.data.setIsDetailPanelShowing(this, val);\n    }\n    if (val && this.detailPanel) {\n      this.detailPanel.onFirstRendering();\n    }\n    if (!!this.onDetailPanelShowingChanged) {\n      this.onDetailPanelShowingChanged();\n    }\n  }\n  private showHideDetailPanel() {\n    if (this.isDetailPanelShowing) {\n      this.hideDetailPanel();\n    } else {\n      this.showDetailPanel();\n    }\n  }\n  private isCreatingDetailPanel = false;\n  public showDetailPanel() {\n    this.ensureDetailPanel();\n    if (!this.detailPanelValue) return;\n    this.setIsDetailPanelShowing(true);\n  }\n  public hideDetailPanel(destroyPanel: boolean = false) {\n    this.setIsDetailPanelShowing(false);\n    if (destroyPanel) {\n      this.detailPanelValue = null;\n    }\n  }\n  private ensureDetailPanel() {\n    if (this.isCreatingDetailPanel) return;\n    if (!!this.detailPanelValue || !this.hasPanel || !this.data) return;\n    this.isCreatingDetailPanel = true;\n    this.detailPanelValue = this.data.createRowDetailPanel(this);\n    var questions = this.detailPanelValue.questions;\n    var value = this.getDataRowValue();\n    if (!Helpers.isValueEmpty(value)) {\n      for (var i = 0; i < questions.length; i++) {\n        const key = questions[i].getValueName();\n        const val = !!this.editingObj ? Serializer.getObjPropertyValue(this.editingObj, key) : value[key];\n        if (!Helpers.isValueEmpty(val)) {\n          questions[i].value = val;\n        }\n      }\n    }\n    this.detailPanelValue.setSurveyImpl(this);\n    this.isCreatingDetailPanel = false;\n  }\n  getAllValues(): any {\n    const res = this.value;\n    if (this.data) {\n      const rowVal = this.getDataRowValue();\n      if (rowVal) {\n        for (var key in rowVal) {\n          if (res[key] === undefined) {\n            res[key] = rowVal[key];\n          }\n        }\n      }\n    }\n    return res;\n  }\n  getFilteredProperties(): any {\n    return { survey: this.getSurvey(), row: this };\n  }\n  private getDataRowValue(): any {\n    if (!this.data) return null;\n    return this.data.getRowValue(this.data.getRowIndex(this));\n  }\n  public runCondition(properties: HashTable<any>, rowsVisibleIf?: string): void {\n    if (!this.data) return;\n    const newProps = Helpers.createCopy(properties);\n    newProps[settings.expressionVariables.row] = this;\n    if (!!rowsVisibleIf) {\n      this.visible = new ConditionRunner(rowsVisibleIf).runContext(this.getValueGetterContext(), properties);\n    } else {\n      this.visible = true;\n    }\n    for (var i = 0; i < this.cells.length; i++) {\n      this.cells[i].runCondition(newProps);\n    }\n    if (!!this.detailPanel) {\n      this.detailPanel.runCondition(newProps);\n    }\n    if (this.isRowHasEnabledCondition()) {\n      this.onQuestionReadOnlyChanged();\n    }\n  }\n  public updateElementVisibility(): void {\n    this.cells.forEach(cell => cell.question.updateElementVisibility());\n    if (!!this.detailPanel) {\n      this.detailPanel.updateElementVisibility();\n    }\n  }\n  public getNamesWithDefaultValues(): Array<string> {\n    const res: Array<string> = [];\n    this.questions.forEach(q => {\n      if (q.isValueDefault) {\n        res.push(q.getValueName());\n      }\n    });\n    return res;\n  }\n  public clearValue(keepComment?: boolean): void {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearValue(keepComment);\n    }\n  }\n  public onAnyValueChanged(name: string, questionName: string): void {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  public getDataValueCore(valuesHash: any, key: string): any {\n    var survey = this.getSurvey();\n    if (!!survey) {\n      return (<any>survey).getDataValueCore(valuesHash, key);\n    } else {\n      return valuesHash[key];\n    }\n  }\n  public getValue(name: string): any {\n    var question = this.getQuestionByName(name);\n    return !!question ? question.value : null;\n  }\n  public setValue(name: string, newColumnValue: any) {\n    this.setValueCore(name, newColumnValue, false);\n  }\n  getVariable(name: string): any {\n    return undefined;\n  }\n  setVariable(name: string, newValue: any) { }\n  public getComment(name: string): string {\n    var question = this.getQuestionByName(name);\n    return !!question ? question.comment : \"\";\n  }\n  public setComment(name: string, newValue: string, locNotification: any) {\n    this.setValueCore(name, newValue, true);\n  }\n  findQuestionByName(name: string): IQuestion {\n    if (!name) return undefined;\n    const prefix = settings.expressionVariables.row + \".\";\n    if (name.indexOf(prefix) === 0) {\n      return this.getQuestionByName(name.substring(prefix.length));\n    }\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement(): Base { return undefined; }\n  private setValueCore(name: string, newColumnValue: any, isComment: boolean) {\n    if (this.isSettingValue || this.isCreatingDetailPanel) return;\n    this.updateQuestionsValue(name, newColumnValue, isComment);\n    if (!isComment) {\n      this.updateSharedQuestionsValue(name, newColumnValue);\n    }\n    var newValue = this.value;\n    var changedName = isComment ? name + Base.commentSuffix : name;\n    var changedValue = newColumnValue;\n    var changedQuestion = this.getQuestionByName(name);\n    var changingValue = this.data.onRowChanging(this, changedName, newValue);\n    if (\n      !!changedQuestion &&\n      !this.isTwoValueEquals(changingValue, changedValue)\n    ) {\n      this.isSettingValue = true;\n      if (isComment) {\n        changedQuestion.comment = changingValue;\n      } else {\n        changedQuestion.value = changingValue;\n      }\n      this.isSettingValue = false;\n      newValue = this.value;\n    }\n    if (this.data.isValidateOnValueChanging && !this.validateCellQuestion(changedQuestion)) return;\n    const isDeleting = newColumnValue == null && !changedQuestion ||\n      isComment && !newColumnValue && !!changedQuestion;\n    this.data.onRowChanged(this, changedName, newValue, isDeleting);\n    const rowName = settings.expressionVariables.row;\n    if (changedName) {\n      const runName = rowName + \".\" + changedName;\n      this.runTriggers(runName, newValue);\n      this.data.runTriggersInRow(this, runName, newValue);\n    }\n    this.onAnyValueChanged(rowName, \"\");\n  }\n  private updateQuestionsValue(\n    name: string,\n    newColumnValue: any,\n    isComment: boolean\n  ) {\n    if (!this.detailPanel) return;\n    var colQuestion = this.getQuestionByColumnName(name);\n    var detailQuestion = this.detailPanel.getQuestionByName(name);\n    if (!colQuestion || !detailQuestion) return;\n    var isColQuestion = this.isTwoValueEquals(\n      newColumnValue,\n      isComment ? colQuestion.comment : colQuestion.value\n    );\n    var question = isColQuestion ? detailQuestion : colQuestion;\n    this.isSettingValue = true;\n    if (!isComment) {\n      question.value = newColumnValue;\n    } else {\n      question.comment = newColumnValue;\n    }\n    this.isSettingValue = false;\n  }\n  private updateSharedQuestionsValue(name: string, value: any): void {\n    const questions = this.getQuestionsByValueName(name);\n    if (questions.length > 1) {\n      for (let i = 0; i < questions.length; i ++) {\n        if (!Helpers.isTwoValueEquals(questions[i].value, value)) {\n          this.isSettingValue = true;\n          questions[i].updateValueFromSurvey(value);\n          this.isSettingValue = false;\n        }\n      }\n    }\n  }\n  public runTriggers(name: string, value: any, keys?: any): void {\n    if (!name && !keys) return;\n    this.questions.forEach(q => q.runTriggers(name, value, keys));\n  }\n  private validateCellQuestion(question: Question): boolean {\n    if (!question) return true;\n    if (!question.validateElement(new ValidationContext({ fireCallback: true, isOnValueChanged: !this.data.isValidateOnValueChanging })))\n      return false;\n    if (question.isEmpty()) return true;\n    var cell = this.getCellByColumnName(question.name);\n    if (!cell || !cell.column || !cell.column.isUnique) return true;\n    return !this.data.checkIfValueInRowDuplicated(this, question);\n  }\n  public get isEmpty() {\n    var val = this.value;\n    if (Helpers.isValueEmpty(val)) return true;\n    for (var key in val) {\n      if (val[key] !== undefined && val[key] !== null) return false;\n    }\n    return true;\n  }\n  public hasValueAnyQuestion(visibleOnly?: boolean): boolean {\n    const questions = visibleOnly ? this.visibleQuestions : this.questions;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  public getQuestionByColumn(column: MatrixDropdownColumn): Question {\n    var cell = this.getCellByColumn(column);\n    return !!cell ? cell.question : null;\n  }\n  public getCellByColumn(column: MatrixDropdownColumn): MatrixDropdownCell {\n    for (var i = 0; i < this.cells.length; i++) {\n      if (this.cells[i].column == column) return this.cells[i];\n    }\n    return null;\n  }\n  private getCellByColumnName(columnName: string): MatrixDropdownCell {\n    for (var i = 0; i < this.cells.length; i++) {\n      if (this.cells[i].column.name == columnName) return this.cells[i];\n    }\n    return null;\n  }\n  public getQuestionByColumnName(columnName: string): Question {\n    var cell = this.getCellByColumnName(columnName);\n    return !!cell ? cell.question : null;\n  }\n  public get questions(): Array<Question> {\n    var res: Array<Question> = [];\n    for (var i = 0; i < this.cells.length; i++) {\n      res.push(this.cells[i].question);\n    }\n    var detailQuestions = !!this.detailPanel ? this.detailPanel.questions : [];\n    for (var i = 0; i < detailQuestions.length; i++) {\n      res.push(detailQuestions[i]);\n    }\n    return res;\n  }\n  public get visibleQuestions(): Array<Question> {\n    const res: Array<Question> = [];\n    this.questions.forEach(q => {\n      if (q.isVisible) {\n        res.push(q);\n      }\n    });\n    return res;\n  }\n  public getQuestionByName(name: string): Question {\n    var res = this.getQuestionByColumnName(name);\n    if (!!res) return res;\n    return !!this.detailPanel ? this.detailPanel.getQuestionByName(name) : null;\n  }\n  public getQuestionsByName(name: string): Array<Question> {\n    let res = [];\n    let q = this.getQuestionByColumnName(name);\n    if (!!q) res.push(q);\n    if (!!this.detailPanel) {\n      q = this.detailPanel.getQuestionByName(name);\n      if (!!q) res.push(q);\n    }\n    return res;\n  }\n  public getQuestionsByValueName(name: string, caseInsensitive?: boolean): Array<Question> {\n    if (caseInsensitive) {\n      name = name.toLocaleLowerCase();\n    }\n    let res = [];\n    for (var i = 0; i < this.cells.length; i++) {\n      const cell = this.cells[i];\n      const q = cell.question;\n      if (!q) continue;\n      let valueName = q.getValueName();\n      if (caseInsensitive) {\n        valueName = valueName.toLocaleLowerCase();\n      }\n      if (valueName === name) {\n        res.push(cell.question);\n      }\n    }\n    if (!!this.detailPanel) {\n      res = res.concat(this.detailPanel.getQuestionsByValueName(name, caseInsensitive));\n    }\n    return res;\n  }\n  protected getSharedQuestionByName(columnName: string): Question {\n    return !!this.data\n      ? this.data.getSharedQuestionByName(columnName, this)\n      : null;\n  }\n  public clearIncorrectValues(val: any): void {\n    for (var key in val) {\n      var question = this.getQuestionByName(key);\n      if (question) {\n        var qVal = question.value;\n        question.clearIncorrectValues();\n        if (!this.isTwoValueEquals(qVal, question.value)) {\n          this.setValue(key, question.value);\n        }\n      } else {\n        if (\n          !this.getSharedQuestionByName(key) &&\n          key.indexOf(settings.matrix.totalsSuffix) < 0\n        ) {\n          this.setValue(key, null);\n        }\n      }\n    }\n  }\n  public getLocale(): string {\n    return this.data ? this.data.getLocale() : \"\";\n  }\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return this.data ? this.data.getMarkdownHtml(text, name, item) : undefined;\n  }\n  public getRenderer(name: string): string {\n    return this.data ? this.data.getRenderer(name) : null;\n  }\n  public getRendererContext(locStr: LocalizableString): any {\n    return this.data ? this.data.getRendererContext(locStr) : locStr;\n  }\n  public getProcessedText(text: string): string {\n    return this.data ? this.data.getProcessedText(text) : text;\n  }\n  public locStrsChanged() {\n    for (var i = 0; i < this.cells.length; i++) {\n      this.cells[i].locStrsChanged();\n    }\n    if (!!this.detailPanel) {\n      this.detailPanel.locStrsChanged();\n    }\n  }\n  public updateCellQuestionOnColumnChanged(column: MatrixDropdownColumn, name: string, newValue: any): void {\n    var cell = this.getCellByColumn(column);\n    if (!cell) return;\n    this.updateCellOnColumnChanged(cell, name, newValue);\n  }\n  public updateCellQuestionOnColumnItemValueChanged(\n    column: MatrixDropdownColumn,\n    propertyName: string,\n    obj: ItemValue,\n    name: string,\n    newValue: any,\n    oldValue: any\n  ) {\n    var cell = this.getCellByColumn(column);\n    if (!cell) return;\n    this.updateCellOnColumnItemValueChanged(\n      cell,\n      propertyName,\n      obj,\n      name,\n      newValue,\n      oldValue\n    );\n  }\n  public onQuestionReadOnlyChanged() {\n    const questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      q.setPropertyValue(\"isReadOnly\", q.isReadOnly);\n    }\n    if (!!this.detailPanel) {\n      const parentIsReadOnly = !!this.data && this.data.isMatrixReadOnly();\n      this.detailPanel.readOnly = parentIsReadOnly || !this.isRowEnabled();\n    }\n  }\n  public validate(context: ValidationContext): boolean {\n    let res = true;\n    const cells = this.cells;\n    if (!cells) return res;\n    for (let colIndex = 0; colIndex < cells.length; colIndex++) {\n      if (!cells[colIndex]) continue;\n      const question = cells[colIndex].question;\n      if (!question || !question.visible) continue;\n      if (!!context && context.isOnValueChanged === true && question.isEmpty())\n        continue;\n      res = question.validateElement(context) && res;\n    }\n    if (this.hasPanel) {\n      this.ensureDetailPanel();\n      const isValid = this.detailPanel.validateElement(context);\n      const rec = <any>context;\n      if (!rec.hideErroredPanel && !isValid && context.fireCallback) {\n        if (rec.isSingleDetailPanel) {\n          rec.hideErroredPanel = true;\n        }\n        this.showDetailPanel();\n      }\n      res = isValid && res;\n    }\n    return res;\n  }\n\n  protected updateCellOnColumnChanged(cell: MatrixDropdownCell, name: string, newValue: any): void {\n    if (name === \"choices\" && Array.isArray(newValue) && newValue.length === 0 && this.data) {\n      newValue = this.data.choices;\n    }\n    cell.question[name] = newValue;\n  }\n  public updateCellOnColumnItemValueChanged(\n    cell: MatrixDropdownCell,\n    propertyName: string,\n    obj: ItemValue,\n    name: string,\n    newValue: any,\n    oldValue: any\n  ) {\n    var items = cell.question[propertyName];\n    if (!Array.isArray(items)) return;\n    var val = name === \"value\" ? oldValue : obj[\"value\"];\n    var item = ItemValue.getItemByValue(items, val);\n    if (!item) return;\n    item[name] = newValue;\n  }\n  protected buildCells(value: any) {\n    this.isSettingValue = true;\n    var columns = this.data.columns;\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n      var cell = this.createCell(column);\n      this.cells.push(cell);\n      var cellValue = this.getCellValue(value, column.name);\n      if (!Helpers.isValueEmpty(cellValue)) {\n        cell.question.value = cellValue;\n        var commentKey = column.name + Base.commentSuffix;\n        if (!!value && !Helpers.isValueEmpty(value[commentKey])) {\n          cell.question.comment = value[commentKey];\n        }\n      }\n    }\n    this.isSettingValue = false;\n  }\n  protected isTwoValueEquals(val1: any, val2: any): boolean {\n    return Helpers.isTwoValueEquals(val1, val2, false, true, false);\n  }\n  private getCellValue(value: any, name: string): any {\n    if (!!this.editingObj)\n      return Serializer.getObjPropertyValue(this.editingObj, name);\n    return !!value ? value[name] : undefined;\n  }\n  protected createCell(column: MatrixDropdownColumn): MatrixDropdownCell {\n    return new MatrixDropdownCell(column, this, this.data);\n  }\n  getSurveyData(): ISurveyData {\n    return this;\n  }\n  getSurvey(): ISurvey {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.textPreProcessor;\n  }\n  public get rowIndex(): number {\n    return this.getRowIndex();\n  }\n  protected getRowIndex(): number {\n    return !!this.data ? this.data.getRowIndex(this) + 1 : -1;\n  }\n  public get editingObj(): Base {\n    return this.editingObjValue;\n  }\n  private onEditingObjPropertyChanged: (sender: Base, options: any) => void;\n  private editingObjValue: Base;\n  public dispose(): void {\n    if (!!this.editingObj) {\n      this.editingObj.onPropertyChanged.remove(\n        this.onEditingObjPropertyChanged\n      );\n      this.editingObjValue = null;\n    }\n  }\n  private subscribeToChanges(value: any) {\n    if (!value || !value.getType || !value.onPropertyChanged) return;\n    if (value === this.editingObj) return;\n    this.editingObjValue = <Base>value;\n    this.onEditingObjPropertyChanged = (sender: Base, options: any) => {\n      this.updateOnSetValue(options.name, options.newValue);\n    };\n    this.editingObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n  }\n  private updateOnSetValue(name: string, newValue: any) {\n    this.isSettingValue = true;\n    let questions = this.getQuestionsByName(name);\n    for (let i = 0; i < questions.length; i++) {\n      questions[i].value = newValue;\n    }\n    this.isSettingValue = false;\n  }\n}\nexport class MatrixDropdownTotalRowModel extends MatrixDropdownRowModelBase {\n  constructor(data: IMatrixDropdownData) {\n    super(data, null);\n    this.buildCells(null);\n  }\n  protected createCell(column: MatrixDropdownColumn): MatrixDropdownCell {\n    return new MatrixDropdownTotalCell(column, this, this.data);\n  }\n  public setValue(name: string, newValue: any) {\n    if (!!this.data && !this.isSettingValue) {\n      this.data.onTotalValueChanged();\n    }\n  }\n  public runCondition(properties: HashTable<any>, rowsVisibleIf?: string): void {\n    var counter = 0;\n    var prevValue;\n    do {\n      prevValue = Helpers.getUnbindValue(this.value);\n      super.runCondition(properties, \"\");\n      counter++;\n    } while(!Helpers.isTwoValueEquals(prevValue, this.value) && counter < 3);\n  }\n  protected updateCellOnColumnChanged(cell: MatrixDropdownCell, name: string, newValue: any): void {\n    (<MatrixDropdownTotalCell>cell).updateCellQuestion();\n  }\n}\n\nexport class MatrixSingleInputLocOwner implements ILocalizableOwner {\n  constructor(private matrix: QuestionMatrixDropdownModelBase, private row?: MatrixDropdownRowModelBase) {}\n  getLocale(): string { return this.matrix.getLocale(); }\n  getMarkdownHtml(text: string, name: string, item?: any): string {\n    return this.matrix.getMarkdownHtml(text, name, item);\n  }\n  getProcessedText(text: string): string {\n    return this.matrix.processSingleInputTitle(text, this.row);\n  }\n  getRenderer(name: string): string {\n    return this.matrix.getRenderer(name);\n  }\n  getRendererContext(locStr: LocalizableString): any {\n    return this.matrix.getRendererContext(locStr);\n  }\n}\n\n/**\n * A base class for the [`QuestionMatrixDropdownModel`](https://surveyjs.io/form-library/documentation/questionmatrixdropdownmodel) and [`QuestionMatrixDynamicModel`](https://surveyjs.io/form-library/documentation/questionmatrixdynamicmodel) classes.\n */\nexport class QuestionMatrixDropdownModelBase extends QuestionMatrixBaseModel<MatrixDropdownRowModelBase, MatrixDropdownColumn> implements IMatrixDropdownData, IMatrixColumnOwner {\n  public static get defaultCellType() {\n    return settings.matrix.defaultCellType;\n  }\n  public static set defaultCellType(val: string) {\n    settings.matrix.defaultCellType = val;\n  }\n  public static addDefaultColumns(matrix: QuestionMatrixDropdownModelBase) {\n    var colNames = QuestionFactory.DefaultColums;\n    for (var i = 0; i < colNames.length; i++) matrix.addColumn(colNames[i]);\n  }\n  private detailPanelValue: PanelModel;\n  private useCaseSensitiveComparisonValue: boolean;\n  protected isRowChanging = false;\n  columnsChangedCallback: () => void;\n  onRenderedTableResetCallback: () => void;\n  onRenderedTableCreatedCallback: (\n    table: QuestionMatrixDropdownRenderedTable\n  ) => void;\n  onCellCreatedCallback: (options: any) => void;\n  onCellValueChangedCallback: (options: any) => void;\n  onHasDetailPanelCallback: (row: MatrixDropdownRowModelBase) => boolean;\n  onCreateDetailPanelCallback: (\n    row: MatrixDropdownRowModelBase,\n    panel: PanelModel\n  ) => void;\n  onCreateDetailPanelRenderedRowCallback: (\n    renderedRow: QuestionMatrixDropdownRenderedRow\n  ) => void;\n  onAddColumn: (column: MatrixDropdownColumn) => void;\n  onRemoveColumn: (column: MatrixDropdownColumn) => void;\n  cellValueChangingCallback: (row: any, columnName: string, value: any, oldValue: any) => any;\n\n  protected createColumnValues() {\n    return this.createNewArray(\n      \"columns\",\n      (item: any) => {\n        item.colOwner = this;\n        if (this.onAddColumn)this.onAddColumn(item);\n        if (this.survey) {\n          this.survey.matrixColumnAdded(this, item);\n        }\n      },\n      (item: any) => {\n        item.colOwner = null;\n        if (this.onRemoveColumn)this.onRemoveColumn(item);\n      }\n    );\n  }\n\n  constructor(name: string) {\n    super(name);\n    this.createItemValues(\"choices\");\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"keyDuplicationError\", this, false, true);\n    this.createLocalizableString(\"singleInputTitleTemplate\", new MatrixSingleInputLocOwner(this), true, this.getSingleInputTitleTemplate());\n    this.detailPanelValue = this.createNewDetailPanel();\n    this.detailPanel.selectedElementInDesign = this;\n    this.detailPanel.renderWidth = \"100%\";\n    this.detailPanel.isInteractiveDesignElement = false;\n    this.detailPanel.showTitle = false;\n    this.registerPropertyChangedHandlers([\"columns\", \"cellType\"], () => { this.updateColumnsAndRows(); });\n    this.registerPropertyChangedHandlers(\n      [\"placeholder\", \"columnColCount\", \"rowTitleWidth\", \"choices\"],\n      () => {\n        this.clearRowsAndResetRenderedTable();\n      }\n    );\n    this.registerPropertyChangedHandlers(\n      [\n        \"transposeData\",\n        \"addRowButtonLocation\",\n        \"hideColumnsIfEmpty\",\n        \"showHeader\",\n        \"minRowCount\",\n        \"isReadOnly\",\n        \"rowCount\",\n        \"hasFooter\",\n        \"detailPanelMode\",\n        \"displayMode\"\n      ],\n      () => {\n        this.resetRenderedTable();\n      });\n  }\n  public getType(): string {\n    return \"matrixdropdownbase\";\n  }\n  public dispose(): void {\n    super.dispose();\n    this.clearGeneratedRows();\n  }\n  public get hasSingleInput(): boolean { return false; }\n  public get isContainer(): boolean { return true; }\n  public get isRowsDynamic(): boolean {\n    return false;\n  }\n  private isUpdating: boolean;\n  protected get isUpdateLocked(): boolean {\n    return this.isLoadingFromJson || this.isUpdating;\n  }\n  public beginUpdate(): void {\n    this.isUpdating = true;\n  }\n  public endUpdate(): void {\n    this.isUpdating = false;\n    this.updateColumnsAndRows();\n  }\n  protected updateColumnsAndRows(): void {\n    this.updateColumnsIndexes(this.columns);\n    this.updateColumnsCellType();\n    this.generatedTotalRow = null;\n    this.clearRowsAndResetRenderedTable();\n  }\n  public itemValuePropertyChanged(\n    item: ItemValue,\n    name: string,\n    oldValue: any,\n    newValue: any\n  ) {\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n    if (item.ownerPropertyName === \"choices\") {\n      this.clearRowsAndResetRenderedTable();\n    }\n  }\n  /**\n   * Specifies whether to display [`columns`](#columns) as rows and [`rows`](#rows) as columns.\n   *\n   * Default value: `false`\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/transpose-dynamic-rows-to-columns-in-matrix/ (linkStyle))\n   */\n  public get transposeData(): boolean {\n    return this.getPropertyValue(\"transposeData\");\n  }\n  public set transposeData(val: boolean) {\n    this.setPropertyValue(\"transposeData\", val);\n  }\n  /**\n   * @deprecated Use the [`transposeData`](#transposeData) property instead.\n   */\n  public get columnLayout(): string {\n    return this.transposeData ? \"vertical\" : \"horizontal\";\n  }\n  public set columnLayout(val: string) {\n    this.transposeData = val === \"vertical\";\n  }\n  get columnsLocation(): string {\n    return this.columnLayout;\n  }\n  set columnsLocation(val: string) {\n    this.columnLayout = val;\n  }\n  /**\n   * Specifies the error message position for questions within detail sections.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   * @see cellErrorLocation\n   */\n  public get detailErrorLocation(): string {\n    return this.getPropertyValue(\"detailErrorLocation\");\n  }\n  public set detailErrorLocation(value: string) {\n    this.setPropertyValue(\"detailErrorLocation\", value.toLowerCase());\n  }\n  /**\n   * Specifies the error message position relative to matrix cells.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above matrix cells.\n   * - `\"bottom\"` - Displays error messages below matrix cells.\n   * @see detailErrorLocation\n   */\n  public get cellErrorLocation(): string {\n    return this.getPropertyValue(\"cellErrorLocation\");\n  }\n  public set cellErrorLocation(value: string) {\n    this.setPropertyValue(\"cellErrorLocation\", value.toLowerCase());\n  }\n  public getChildErrorLocation(child: Question): string {\n    const errLocation = !!child.parent ? this.detailErrorLocation : this.cellErrorLocation;\n    if (errLocation !== \"default\") return errLocation;\n    return super.getChildErrorLocation(child);\n  }\n  /**\n   * Returns `true` if [`columns`](#columns) are placed in the horizontal direction and [`rows`](#columns) in the vertical direction.\n   *\n   * To specify the layout, use the [`transposeData`](#transposeData) property. If you set it to `true`, the survey applies it only when the screen has enough space. Otherwise, the survey falls back to the original layout, but the `transposeData` property remains set to `true`. Unlike `transposeData`, the `isColumnLayoutHorizontal` property always indicates the current layout.\n   * @see transposeData\n   */\n  public get isColumnLayoutHorizontal(): boolean {\n    return this.isMobile ? true : !this.transposeData;\n  }\n  /**\n   * Enables case-sensitive comparison in columns with the `isUnique` property set to `true`.\n   *\n   * When this property is `true`, `\"ABC\"` and `\"abc\"` are considered different values.\n   *\n   * Default value: `false`\n   * @see keyDuplicationError\n   */\n  public get useCaseSensitiveComparison(): boolean {\n    return this.useCaseSensitiveComparisonValue !== undefined ? this.useCaseSensitiveComparisonValue : settings.comparator.caseSensitive;\n  }\n  public set useCaseSensitiveComparison(val: boolean) {\n    this.useCaseSensitiveComparisonValue = val;\n  }\n  /**\n   * @deprecated Use the [`useCaseSensitiveComparison`](#useCaseSensitiveComparison) property instead.\n   */\n  public get isUniqueCaseSensitive(): boolean {\n    return this.useCaseSensitiveComparison;\n  }\n  public set isUniqueCaseSensitive(val: boolean) {\n    this.useCaseSensitiveComparison = val;\n  }\n  /**\n   * Specifies the location of detail sections.\n   *\n   * Possible values:\n   *\n   * - `\"underRow\"` - Displays detail sections under their respective rows. Users can expand any number of detail sections.\n   * - `\"underRowSingle\"` - Displays detail sections under their respective rows, but only one detail section can be expanded at a time.\n   * - `\"none\"` (default) - Hides detail sections.\n   *\n   * Use the [`detailElements`](#detailElements) property to specify content of detail sections.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanel\n   */\n  public get detailPanelMode(): string {\n    return this.getPropertyValue(\"detailPanelMode\");\n  }\n  public set detailPanelMode(val: string) {\n    this.setPropertyValue(\"detailPanelMode\", val);\n  }\n  /**\n   * Contains a [`PanelModel`](https://surveyjs.io/form-library/documentation/panelmodel) instance that represents a detail section template.\n   * @see detailElements\n   * @see detailPanelMode\n   */\n  public get detailPanel(): PanelModel {\n    return this.detailPanelValue;\n  }\n  public getPanel(): IPanel {\n    return this.detailPanel;\n  }\n  /**\n   * An array of survey elements (questions and panels) to be displayed in detail sections.\n   *\n   * Detail sections are expandable panels displayed under each matrix row. You can use them to display questions that do not fit into the row.\n   *\n   * Set the [`detailPanelMode`](#detailPanelMode) property to `\"underRow\"` or `\"underRowSingle\"` to display detail sections.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanel\n   */\n  public get detailElements(): Array<IElement> {\n    return this.detailPanel.elements;\n  }\n  protected createNewDetailPanel(): PanelModel {\n    return Serializer.createClass(\"panel\");\n  }\n  public get hasRowText(): boolean {\n    return true;\n  }\n  public getFooterText(): LocalizableString {\n    return null;\n  }\n  public get canAddRow(): boolean {\n    return false;\n  }\n  public get canRemoveRows(): boolean {\n    return false;\n  }\n  public canRemoveRow(row: MatrixDropdownRowModelBase): boolean {\n    return true;\n  }\n  public onPointerDown(pointerDownEvent: PointerEvent, row: MatrixDropdownRowModelBase): void { }\n  protected onRowsChanged(): void {\n    this.clearVisibleRows();\n    this.resetRenderedTable();\n    super.onRowsChanged();\n    this.updateRowsVisibleIndexes();\n  }\n  private updateRowsVisibleIndexes(): void {\n    const rows = this.visibleRows;\n    if (!Array.isArray(rows)) return;\n    const vriName = settings.expressionVariables.visibleRowIndex;\n    const keys = {};\n    keys[vriName] = 0;\n    for (let i = 0; i < rows.length; i ++) {\n      rows[i].visibleIndex = i;\n      keys[vriName] = i + 1;\n      rows[i].runTriggers(vriName, i + 1, keys);\n    }\n  }\n  private lockResetRenderedTable: boolean = false;\n  protected onStartRowAddingRemoving() {\n    this.lockResetRenderedTable = true;\n    this.setValueChangedDirectly(true);\n  }\n  protected onEndRowAdding() {\n    this.lockResetRenderedTable = false;\n    if (!this.renderedTable) return;\n    if (this.renderedTable.isRequireReset()) {\n      this.resetRenderedTable();\n    } else {\n      const index = this.visibleRows.length - 1;\n      this.renderedTable.onAddedRow(this.visibleRows[index], index);\n    }\n  }\n  protected onEndRowRemoving(row: MatrixDropdownRowModelBase) {\n    this.lockResetRenderedTable = false;\n    if (this.renderedTable.isRequireReset()) {\n      this.resetRenderedTable();\n    } else {\n      if (!!row) {\n        this.renderedTable.onRemovedRow(row);\n      }\n    }\n  }\n  private get renderedTableValue(): QuestionMatrixDropdownRenderedTable {\n    return this.getPropertyValue(\"renderedTable\", null);\n  }\n  private set renderedTableValue(val: QuestionMatrixDropdownRenderedTable) {\n    this.setPropertyValue(\"renderedTable\", val);\n  }\n  protected clearRowsAndResetRenderedTable() {\n    this.clearGeneratedRows();\n    this.resetRenderedTable();\n    this.fireCallback(this.columnsChangedCallback);\n  }\n  //For internal use\n  public resetRenderedTable(columnVisibilityChanged?: boolean): void {\n    if (!this.renderedTableValue) return;\n    if (this.lockResetRenderedTable || this.isUpdateLocked) {\n      if (columnVisibilityChanged) {\n        this.renderedTableValue.requireReset();\n      }\n    } else {\n      this.renderedTableValue = null;\n      this.fireCallback(this.onRenderedTableResetCallback);\n    }\n  }\n  protected clearGeneratedRows(): void {\n    this.clearVisibleRows();\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].dispose();\n    }\n    super.clearGeneratedRows();\n  }\n  protected get isRendredTableCreated(): boolean {\n    return !!this.renderedTableValue;\n  }\n  public get renderedTable(): QuestionMatrixDropdownRenderedTable {\n    if (!this.renderedTableValue && !this.isDisposed) {\n      this.renderedTableValue = this.createRenderedTable();\n      if (!!this.onRenderedTableCreatedCallback) {\n        this.onRenderedTableCreatedCallback(this.renderedTableValue);\n      }\n    }\n    return this.renderedTableValue;\n  }\n  protected createRenderedTable(): QuestionMatrixDropdownRenderedTable {\n    return new QuestionMatrixDropdownRenderedTable(this);\n  }\n  protected getRowByQuestion(question: Question): MatrixDropdownRowModelBase {\n    if (!question) return undefined;\n    return <MatrixDropdownRowModelBase>question.data;\n  }\n  protected onMatrixRowCreated(row: MatrixDropdownRowModelBase): void {\n    if (!this.survey) return;\n    var options = {\n      rowValue: row.value,\n      row: row,\n      column: <any>null,\n      columnName: <any>null,\n      cell: <any>null,\n      cellQuestion: <any>null,\n      value: <any>null,\n    };\n    for (var i = 0; i < this.columns.length; i++) {\n      options.column = this.columns[i];\n      options.columnName = options.column.name;\n      var cell = row.cells[i];\n      options.cell = cell;\n      options.cellQuestion = cell.question;\n      options.value = cell.value;\n      if (!!this.onCellCreatedCallback) {\n        this.onCellCreatedCallback(options);\n      }\n      this.survey.matrixCellCreated(this, options);\n    }\n  }\n  /**\n   * Specifies the type of matrix cells. You can override this property for individual columns.\n   *\n   * Possible values:\n   *\n   * - [`\"dropdown\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * - [`\"checkbox\"`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)\n   * - [`\"radiogroup\"`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model)\n   * - [`\"tagbox\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model)\n   * - [`\"text\"`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [`\"comment\"`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [`\"boolean\"`](https://surveyjs.io/form-library/documentation/api-reference/boolean-question-model)\n   * - [`\"expression\"`](https://surveyjs.io/form-library/documentation/api-reference/expression-model)\n   * - [`\"rating\"`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model)\n   * - [`\"slider\"`](https://surveyjs.io/form-library/documentation/api-reference/questionslidermodel)\n   *\n   * Default value: `\"dropdown\"` (inherited from [`settings.matrix.defaultCellType`](https://surveyjs.io/form-library/documentation/settings#matrixDefaultCellType))\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   */\n  public get cellType(): string {\n    return this.getPropertyValue(\"cellType\", settings.matrix.defaultCellType);\n  }\n  public set cellType(val: string) {\n    val = val.toLowerCase();\n    this.setPropertyValue(\"cellType\", val);\n  }\n  isSelectCellType(): boolean {\n    return Serializer.isDescendantOf(this.cellType, \"selectbase\");\n  }\n  private updateColumnsCellType() {\n    for (var i = 0; i < this.columns.length; i++) {\n      this.columns[i].defaultCellTypeChanged();\n    }\n  }\n  private updateColumnsIndexes(cols: Array<MatrixDropdownColumn>) {\n    for (var i = 0; i < cols.length; i++) {\n      cols[i].setIndex(i);\n    }\n  }\n  /**\n   * Specifies the number of columns in Radiogroup and Checkbox cells.\n   *\n   * Default value: 0 (the number of columns is selected automatically based on the available column width)\n   * @see cellType\n   */\n  public get columnColCount(): number {\n    return this.getPropertyValue(\"columnColCount\");\n  }\n  public set columnColCount(value: number) {\n    if (value < 0 || value > 4) return;\n    this.setPropertyValue(\"columnColCount\", value);\n  }\n  public get horizontalScroll(): boolean {\n    return this.getPropertyValue(\"horizontalScroll\");\n  }\n  public set horizontalScroll(val: boolean) {\n    this.setPropertyValue(\"horizontalScroll\", val);\n  }\n  public get allowAdaptiveActions(): boolean {\n    return this.getPropertyValue(\"allowAdaptiveActions\");\n  }\n  public set allowAdaptiveActions(val: boolean) {\n    this.setPropertyValue(\"allowAdaptiveActions\", val);\n    if (!!this.detailPanel) {\n      this.detailPanel.allowAdaptiveActions = val;\n    }\n  }\n  public hasChoices(): boolean {\n    return this.choices.length > 0;\n  }\n  onColumnPropertyChanged(column: MatrixDropdownColumn, name: string, newValue: any): void {\n    this.updateHasFooter();\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].updateCellQuestionOnColumnChanged(\n        column,\n        name,\n        newValue\n      );\n    }\n    if (!!this.generatedTotalRow) {\n      this.generatedTotalRow.updateCellQuestionOnColumnChanged(\n        column,\n        name,\n        newValue\n      );\n    }\n    this.onColumnsChanged();\n    if (name == \"isRequired\") {\n      this.resetRenderedTable();\n    }\n  }\n  onColumnNestedPropertyChanged(column: MatrixDropdownColumn, name: string, nestedName: string, newValue: any): void {\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      const row = this.generatedVisibleRows[i];\n      const q = row.getQuestionByColumn(column);\n      if (!!q && !!q[name]) {\n        q[name][nestedName] = newValue;\n      }\n    }\n  }\n  onColumnItemValuePropertyChanged(column: MatrixDropdownColumn, propertyName: string,\n    obj: ItemValue, name: string, newValue: any, oldValue: any): void {\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].updateCellQuestionOnColumnItemValueChanged(\n        column,\n        propertyName,\n        obj,\n        name,\n        newValue,\n        oldValue\n      );\n    }\n  }\n\n  onShowInMultipleColumnsChanged(column: MatrixDropdownColumn): void {\n    this.resetTableAndRows();\n  }\n  onColumnVisibilityChanged(column: MatrixDropdownColumn): void {\n    this.resetTableAndRows();\n  }\n  onColumnCellTypeChanged(column: MatrixDropdownColumn): void {\n    this.updateDefaultRowValue(column);\n    this.resetTableAndRows();\n  }\n  private updateDefaultRowValue(column: MatrixDropdownColumn): void {\n    let val = this.defaultRowValue;\n    if (!!val) {\n      if (column.cellType === \"file\" && val[column.name]) {\n        delete val[column.name];\n        if (Object.keys(val).length === 0) {\n          val = undefined;\n        }\n        this.defaultRowValue = val;\n      }\n    }\n  }\n  private resetTableAndRows(): void {\n    this.clearGeneratedRows();\n    this.resetRenderedTable();\n  }\n  public getRowTitleWidth(): string {\n    return \"\";\n  }\n  public get hasFooter(): boolean {\n    return this.getPropertyValue(\"hasFooter\", false);\n  }\n  public getAddRowLocation(): string {\n    return \"default\";\n  }\n  public getShowColumnsIfEmpty(): boolean {\n    return false;\n  }\n  protected updateShowTableAndAddRow() {\n    if (!!this.renderedTable) {\n      this.renderedTable.updateShowTableAndAddRow();\n    }\n  }\n  protected updateHasFooter() {\n    this.setPropertyValue(\"hasFooter\", this.hasTotal);\n  }\n  public get hasTotal(): boolean {\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].hasTotal) return true;\n    }\n    return false;\n  }\n  getCellType(): string {\n    return this.cellType;\n  }\n  getCustomCellType(column: MatrixDropdownColumn, row: MatrixDropdownRowModelBase, cellType: string): string {\n    if (!this.survey) return cellType;\n    var options = {\n      rowValue: row.value,\n      row: row,\n      column: column,\n      columnName: column.name,\n      cellType: cellType\n    };\n    this.survey.matrixCellCreating(this, options);\n    return options.cellType;\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    if (!path) return super.getConditionJson(operator);\n    let columnName = \"\";\n    for (let i = path.length - 1; i >= 0; i--) {\n      if (path[i] == \".\") break;\n      columnName = path[i] + columnName;\n    }\n    let question = undefined;\n    let column = this.getColumnByName(columnName);\n    if (!!column) {\n      question = column.createCellQuestion(null);\n    } else {\n      if (this.detailPanelMode !== \"none\") {\n        question = this.detailPanel.getQuestionByName(columnName);\n      }\n    }\n    return !!question ? question.getConditionJson(operator) : null;\n  }\n  public clearIncorrectValues(): void {\n    if (!Array.isArray(this.visibleRows)) return;\n    const rows = this.generatedVisibleRows;\n    for (let i = 0; i < rows.length; i++) {\n      rows[i].clearIncorrectValues(this.getRowValue(i));\n    }\n  }\n  public clearErrors(): void {\n    super.clearErrors();\n    this.runFuncForCellQuestions((q: Question) => { q.clearErrors(); });\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    this.runFuncForCellQuestions((q: Question) => { q.localeChanged(); });\n  }\n  private runFuncForCellQuestions(func: (question: Question) => void): void {\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        if (row.isVisible) {\n          for (let j = 0; j < row.cells.length; j++) {\n            func(row.cells[j].question);\n          }\n        }\n      }\n    }\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    var counter = 0;\n    var prevTotalValue;\n    do {\n      prevTotalValue = Helpers.getUnbindValue(this.totalValue);\n      this.runCellsCondition(properties);\n      this.runTotalsCondition(properties);\n      counter++;\n    } while(\n      !Helpers.isTwoValueEquals(prevTotalValue, this.totalValue) &&\n      counter < 3\n    );\n    this.updateVisibilityBasedOnRows();\n  }\n  public runTriggers(name: string, value: any, keys?: any): void {\n    super.runTriggers(name, value, keys);\n    this.runFuncForCellQuestions((q: Question) => { q.runTriggers(name, value, keys); });\n  }\n  public updateElementVisibility(): void {\n    super.updateElementVisibility();\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      rows.forEach(row => row.updateElementVisibility());\n    }\n    this.updateShowTableAndAddRow();\n  }\n  protected shouldRunColumnExpression(): boolean {\n    return false;\n  }\n  protected runCellsCondition(properties: HashTable<any>): void {\n    if (this.isDesignMode) return;\n    const rowsVisibleIf = this.getExpressionFromSurvey(\"rowsVisibleIf\");\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].runCondition(properties, rowsVisibleIf);\n      }\n    }\n    this.checkColumnsVisibility();\n    this.checkColumnsRenderedRequired();\n  }\n  protected runConditionsForColumns(properties: HashTable<any>): boolean {\n    const expression = this.getExpressionFromSurvey(\"columnsVisibleIf\");\n    this.columns.forEach(column => {\n      if (!expression) {\n        column.isColumnsVisibleIf = true;\n      } else {\n        const condition = new ConditionRunner(expression);\n        column.isColumnsVisibleIf = condition.runContext(column.getValueGetterContext(), properties) === true;\n      }\n    });\n    return false;\n  }\n  private checkColumnsVisibility(): void {\n    if (this.isDesignMode) return;\n    var hasChanged = false;\n    for (var i = 0; i < this.columns.length; i++) {\n      const column = this.columns[i];\n      const isCellsVisibilty = !!column.visibleIf || column.isFilteredMultipleColumns;\n      if (!isCellsVisibilty && !this.columnsVisibleIf && column.isColumnVisible) continue;\n      hasChanged = this.isColumnVisibilityChanged(column, isCellsVisibilty) || hasChanged;\n    }\n    if (hasChanged) {\n      this.resetRenderedTable(true);\n    }\n  }\n  private checkColumnsRenderedRequired(): void {\n    const rows = this.generatedVisibleRows;\n    if (!rows) return;\n    for (var i = 0; i < this.columns.length; i++) {\n      const column = this.columns[i];\n      if (!column.requiredIf || !column.isColumnVisible) continue;\n      let required = rows.length > 0;\n      for (var j = 0; j < rows.length; j++) {\n        if (!rows[j].cells[i].question.isRequired) {\n          required = false;\n          break;\n        }\n      }\n      column.updateIsRenderedRequired(required);\n    }\n  }\n  private isColumnVisibilityChanged(column: MatrixDropdownColumn, checkCellsVisiblity: boolean): boolean {\n    const curVis = column.isColumnVisible;\n    let hasVisCell = !checkCellsVisiblity;\n    const rows = this.generatedVisibleRows;\n    const checkRows = checkCellsVisiblity && rows;\n    const isMultipleColumnsVisibility = checkRows && column.isFilteredMultipleColumns;\n    const curVisibleChoices = isMultipleColumnsVisibility ? column.getVisibleChoicesInCell : [];\n    const newVisibleChoices = new Array<any>();\n    if (checkRows) {\n      for (let i = 0; i < rows.length; i++) {\n        const cell = rows[i].cells[column.index];\n        const q = cell?.question;\n        if (!!q && q.isVisible) {\n          hasVisCell = true;\n          if (isMultipleColumnsVisibility) {\n            this.updateNewVisibleChoices(q, newVisibleChoices);\n          } else break;\n        }\n      }\n    }\n    column.hasVisibleCell = hasVisCell && column.isColumnsVisibleIf;\n    if (isMultipleColumnsVisibility) {\n      column.setVisibleChoicesInCell(newVisibleChoices);\n      if (!Helpers.isArraysEqual(curVisibleChoices, newVisibleChoices, true, false, false)) return true;\n    }\n    return curVis !== column.isColumnVisible;\n  }\n  private updateNewVisibleChoices(q: Question, dest: Array<any>): void {\n    const choices = q.visibleChoices;\n    if (!Array.isArray(choices)) return;\n    for (let i = 0; i < choices.length; i++) {\n      const ch = choices[i];\n      if (dest.indexOf(ch.value) < 0) dest.push(ch.value);\n    }\n  }\n  protected runTotalsCondition(properties: HashTable<any>): void {\n    if (!this.generatedTotalRow) return;\n    this.generatedTotalRow.runCondition(properties);\n  }\n  public IsMultiplyColumn(column: MatrixDropdownColumn): boolean {\n    return column.isShowInMultipleColumns && !this.isMobile;\n  }\n\n  public locStrsChanged() {\n    super.locStrsChanged();\n    var columns = this.columns;\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].locStrsChanged();\n    }\n    var rows = this.generatedVisibleRows;\n    if (!rows) return;\n    for (var i = 0; i < rows.length; i++) {\n      rows[i].locStrsChanged();\n    }\n    if (!!this.generatedTotalRow) {\n      this.generatedTotalRow.locStrsChanged();\n    }\n  }\n  /**\n   * Returns a matrix column with a given `name` or `null` if a column with this is not found.\n   * @param columnName A column name.\n   */\n  public getColumnByName(columnName: string): MatrixDropdownColumn {\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].name == columnName) return this.columns[i];\n    }\n    return null;\n  }\n  getColumnName(columnName: string): MatrixDropdownColumn {\n    return this.getColumnByName(columnName);\n  }\n  public getColumnWidth(column: MatrixDropdownColumn): string {\n    return column.minWidth ? column.minWidth : this.columnMinWidth ? this.columnMinWidth : (settings.matrix.columnWidthsByType[column.cellType]?.minWidth || \"\");\n  }\n  /**\n   * Gets or sets choice items for Dropdown, Checkbox, and Radiogroup matrix cells. You can override this property for individual columns.\n   *\n   * This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A value to be saved in survey results\n   *   \"text\": string, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [onTextMarkdown](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * If you need to specify only the `value` property, you can set the `choices` property to an array of primitive values, for example, `[ \"item1\", \"item2\", \"item3\" ]`. These values are both saved in survey results and used as display text.\n   * @see cellType\n   */\n  public get choices(): Array<any> {\n    return this.getPropertyValue(\"choices\");\n  }\n  public set choices(val: Array<any>) {\n    this.setPropertyValue(\"choices\", val);\n  }\n  /**\n   * A placeholder for Dropdown matrix cells.\n   * @see cellType\n   */\n  public get placeholder() {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  public set placeholder(val: string) {\n    this.setLocalizableStringText(\"placeholder\", val);\n  }\n  public get locPlaceholder() {\n    return this.getLocalizableString(\"placeholder\");\n  }\n  public get optionsCaption() {\n    return this.placeholder;\n  }\n  public set optionsCaption(val: string) {\n    this.placeholder = val;\n  }\n  /**\n   * An error message displayed when users enter a duplicate value into a column that accepts only unique values (`isUnique` is set to `true` or `keyName` is specified).\n   *\n   * A default value for this property is taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization). Refer to the following help topic for more information: [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization).\n   * @see useCaseSensitiveComparison\n   */\n  public get keyDuplicationError(): string {\n    return this.getLocalizableStringText(\"keyDuplicationError\");\n  }\n  public set keyDuplicationError(val: string) {\n    this.setLocalizableStringText(\"keyDuplicationError\", val);\n  }\n  get locKeyDuplicationError(): LocalizableString {\n    return this.getLocalizableString(\"keyDuplicationError\");\n  }\n  /**\n   * A title template that applies when the survey is in [input-per-page mode](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode).\n   *\n   * Default value: `\"Row {rowIndex}\"` for Dynamic Matrix | `\"{rowTitle}\"` for Multi-Select Matrix\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{rowIndex}` - A row index within the collection of all rows. Starts with 1.\n   * - `{visibleRowIndex}` - A row index within the collection of visible rows. Starts with 1.\n   * - `{rowName}` - A row name (the `value` property within objects in the [`rows`](#rows) array). Use this placeholder if you need to distinguish between matrix rows.\n   * - `{rowTitle}` - A row title (the `text` property within objects in the `rows` array).\n   * - `{row.columnname}` - The value of a cell in the same row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/loop-and-merge/ (linkStyle))\n   */\n  public get singleInputTitleTemplate(): string {\n    return this.getLocalizableStringText(\"singleInputTitleTemplate\");\n  }\n  public set singleInputTitleTemplate(val: string) {\n    this.setLocalizableStringText(\"singleInputTitleTemplate\", val);\n  }\n  get locSingleInputTitleTemplate(): LocalizableString {\n    return this.getLocalizableString(\"singleInputTitleTemplate\");\n  }\n  protected getSingleQuestionLocTitleCore(): LocalizableString {\n    return this.locSingleInputTitleTemplate;\n  }\n  protected getSingleInputTitleTemplate(): string { return \"\"; }\n  public processSingleInputTitle(text: string, row: MatrixDropdownRowModelBase): string {\n    if (!row) {\n      row = this.getRowByQuestion(this.singleInputQuestion);\n    }\n    const textProcessor = row ? row.getTextProcessor() : this.textProcessor;\n    if (textProcessor) {\n      return textProcessor.processText(text, true);\n    }\n    return text;\n  }\n  protected singleInputMoveToFirstCore(): void {\n    const data: any = this.singleInputQuestion?.data;\n    this.singleInputEditRow(data);\n  }\n  protected singleInputEditRow(row: MatrixDropdownRowModelBase): void {\n    if (!row) return;\n    const qs = row.visibleQuestions;\n    if (Array.isArray(qs) && qs.length > 0) {\n      this.setSingleInputQuestion(qs[0]);\n    }\n  }\n  public get storeOthersAsComment(): boolean {\n    return !!this.survey ? this.survey.storeOthersAsComment : false;\n  }\n  public addColumn(name: string, title?: string): MatrixDropdownColumn {\n    var column = new MatrixDropdownColumn(name, title, this);\n    this.columns.push(column);\n    return column;\n  }\n  private visibleRowsArray: Array<MatrixDropdownRowModelBase>;\n  protected clearVisibleRows(): void {\n    this.visibleRowsArray = null;\n  }\n  protected isColumnVisible(column: any): boolean {\n    return column.isColumnVisible;\n  }\n  private isGenereatingRows: boolean;\n  protected getVisibleRows(): Array<MatrixDropdownRowModelBase> {\n    if (this.isUpdateLocked) return null;\n    if (this.isGenereatingRows) return [];\n    if (!!this.visibleRowsArray) return this.visibleRowsArray;\n    this.generateVisibleRowsIfNeeded();\n    this.visibleRowsArray = this.getVisibleFromGenerated(this.generatedVisibleRows);\n    this.updateRowsVisibleIndexes();\n    return this.visibleRowsArray;\n  }\n  public get allRows(): Array<MatrixDropdownRowModelBase> {\n    if (this.isGenereatingRows) return [];\n    this.generateVisibleRowsIfNeeded();\n    return this.generatedVisibleRows;\n  }\n  private generateVisibleRowsIfNeeded(): void {\n    if (!this.isUpdateLocked && !this.generatedVisibleRows) {\n      this.isGenereatingRows = true;\n      this.generatedVisibleRows = this.generateRows();\n      this.isGenereatingRows = false;\n      for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n        const row = this.generatedVisibleRows[i];\n        row.visibleIndex = i;\n        this.onMatrixRowCreated(row);\n      }\n      if (this.data) {\n        this.runCellsCondition(this.data.getFilteredProperties());\n        if (this.isValueChangedWithoutRows) {\n          this.isValueChangedWithoutRows = false;\n          this.runTriggersOnNewRows();\n        }\n      }\n      if (!!this.generatedVisibleRows) {\n        this.updateValueOnRowsGeneration(this.generatedVisibleRows);\n        this.updateIsAnswered();\n      }\n    }\n  }\n  private runTriggersOnNewRows(): void {\n    const val = this.value;\n    this.generatedVisibleRows.forEach((row) => {\n      const rowValue = this.getRowValueCore(row, val);\n      if (!Helpers.isValueEmpty(rowValue)) {\n        const triggeredValue = Helpers.createCopyWithPrefix(rowValue, settings.expressionVariables.row + \".\");\n        row.runTriggers(\"\", undefined, triggeredValue);\n      }\n    });\n  }\n  private getVisibleFromGenerated(rows: Array<MatrixDropdownRowModelBase>): Array<MatrixDropdownRowModelBase> {\n    const res: Array<MatrixDropdownRowModelBase> = [];\n    if (!rows) return res;\n    rows.forEach(row => { if (row.isVisible) res.push(row); });\n    return res.length === rows.length ? rows : res;\n  }\n  private updateValueOnRowsGeneration(rows: Array<MatrixDropdownRowModelBase>) {\n    var oldValue = this.createNewValue(true);\n    var newValue = this.createNewValue();\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      if (!!row.editingObj) continue;\n      var rowValue = this.getRowValue(i);\n      var rValue = row.value;\n      if (this.isTwoValueEquals(rowValue, rValue)) continue;\n      newValue = this.getNewValueOnRowChanged(row, \"\", rValue, false, newValue)\n        .value;\n    }\n    if (this.isTwoValueEquals(oldValue, newValue)) return;\n    this.isRowChanging = true;\n    this.setNewValue(newValue);\n    this.isRowChanging = false;\n  }\n  public get totalValue(): any {\n    if (!this.hasTotal || !this.visibleTotalRow) return {};\n    return this.visibleTotalRow.value;\n  }\n  protected getVisibleTotalRow(): MatrixDropdownRowModelBase {\n    if (this.isUpdateLocked) return null;\n    if (this.hasTotal) {\n      if (!this.generatedTotalRow) {\n        this.generatedTotalRow = this.generateTotalRow();\n        if (this.data) {\n          this.runTotalsCondition({ survey: this.survey });\n        }\n      }\n    } else {\n      this.generatedTotalRow = null;\n    }\n    return this.generatedTotalRow;\n  }\n  public get visibleTotalRow(): MatrixDropdownRowModelBase {\n    return this.getVisibleTotalRow();\n  }\n  public onSurveyLoad() {\n    super.onSurveyLoad();\n    this.updateColumnsIndexes(this.columns);\n    this.clearGeneratedRows();\n    this.generatedTotalRow = null;\n    this.updateHasFooter();\n  }\n  /**\n   * Returns an object with row values. If a row has no answers, this method returns an empty object.\n   * @param rowIndex A zero-based row index.\n   * @see setRowValue\n   */\n  public getRowValue(rowIndex: number): any {\n    if (rowIndex < 0 || !Array.isArray(this.visibleRows)) return null;\n    var rows = this.generatedVisibleRows;\n    if (rowIndex >= rows.length) return null;\n    const val = this.value;\n    const rowVal = this.getRowValueCore(rows[rowIndex], val);\n    if (this.isValueSurveyElement(val)) return rowVal;\n    return Helpers.getUnbindValue(rowVal);\n  }\n  public checkIfValueInRowDuplicated(\n    checkedRow: MatrixDropdownRowModelBase,\n    cellQuestion: Question\n  ): boolean {\n    if (!this.generatedVisibleRows) return false;\n    return this.isValueInColumnDuplicated(cellQuestion.name, true, checkedRow);\n  }\n  /**\n   * Assigns values to a row.\n   * @param rowIndex A zero-based row index.\n   * @param rowValue An object with the following structure: `{ \"column_name\": columnValue, ... }`\n   * @see getRowValue\n   */\n  public setRowValue(rowIndex: number, rowValue: any): any {\n    if (rowIndex < 0) return null;\n    var visRows = this.visibleRows;\n    if (rowIndex >= visRows.length) return null;\n    visRows[rowIndex].value = rowValue;\n    this.onRowChanged(visRows[rowIndex], \"\", rowValue, false);\n  }\n  protected generateRows(): Array<MatrixDropdownRowModelBase> {\n    return null;\n  }\n  protected generateTotalRow(): MatrixDropdownRowModelBase {\n    return new MatrixDropdownTotalRowModel(this);\n  }\n  protected createNewValue(nullOnEmpty: boolean = false): any {\n    var res = !this.value ? {} : this.createValueCopy();\n    if (nullOnEmpty && this.isMatrixValueEmpty(res)) return null;\n    return res;\n  }\n  protected getRowValueCore(\n    row: MatrixDropdownRowModelBase,\n    questionValue: any,\n    create: boolean = false\n  ): any {\n    var result =\n      !!questionValue && !!questionValue[row.rowName]\n        ? questionValue[row.rowName]\n        : null;\n    if (!result && create) {\n      result = {};\n      if (!!questionValue) {\n        questionValue[row.rowName] = result;\n      }\n    }\n    return result;\n  }\n  protected getRowObj(row: MatrixDropdownRowModelBase): any {\n    var obj = this.getRowValueCore(row, this.value);\n    return !!obj && !!obj.getType ? obj : null;\n  }\n  protected getRowDisplayValue(\n    keysAsText: boolean,\n    row: MatrixDropdownRowModelBase,\n    rowValue: any\n  ): any {\n    if (!rowValue) return rowValue;\n    if (!!row.editingObj) return rowValue;\n    var keys = Object.keys(rowValue);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var question = row.getQuestionByName(key);\n      if (!question) {\n        question = this.getSharedQuestionByName(key, row);\n      }\n      if (!!question) {\n        var displayvalue = question.getDisplayValue(keysAsText, rowValue[key]);\n        if (keysAsText && !!question.title && question.title !== key) {\n          rowValue[question.title] = displayvalue;\n          delete rowValue[key];\n        } else {\n          rowValue[key] = displayvalue;\n        }\n      }\n    }\n    return rowValue;\n  }\n  public getPlainData(options: IPlainDataOptions = { includeEmpty: true }): IQuestionPlainData {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      questionPlainData.isNode = true;\n      const prevData = Array.isArray(questionPlainData.data) ? [].concat(questionPlainData.data) : [];\n      questionPlainData.data = this.visibleRows.map(\n        (row: MatrixDropdownRowModelBase) => {\n          var rowDataItem = <any>{\n            name: row.dataName,\n            title: row.text,\n            value: row.value,\n            displayValue: this.getRowDisplayValue(false, row, row.value),\n            getString: (val: any) =>\n              typeof val === \"object\" ? JSON.stringify(val) : val,\n            isNode: true,\n            data: row.cells\n              .map((cell: MatrixDropdownCell) =>\n                cell.question.getPlainData(options)\n              )\n              .filter((d: any) => !!d),\n          };\n          (options.calculations || []).forEach((calculation) => {\n            rowDataItem[calculation.propertyName] = (<any>row)[\n              calculation.propertyName\n            ];\n          });\n          return rowDataItem;\n        }\n      );\n      questionPlainData.data = questionPlainData.data.concat(prevData);\n    }\n    return questionPlainData;\n  }\n  public addConditionObjectsByContext(objects: Array<IConditionObject>, context: any): void {\n    let rowElements: Array<any> = [].concat(this.columns);\n    if (this.detailPanelMode !== \"none\") {\n      rowElements = rowElements.concat(this.detailPanel.questions);\n    }\n    const hasColumnContext = !!context && rowElements.indexOf(context) > -1;\n    const hasContext = context === true || hasColumnContext;\n    const rowsIndeces = this.getConditionObjectsRowIndeces();\n    if (hasContext) {\n      rowsIndeces.push(-1);\n    }\n    for (var i = 0; i < rowsIndeces.length; i++) {\n      const index = rowsIndeces[i];\n      const rowName = index > -1 ? this.getConditionObjectRowName(index) : \"row\";\n      if (!rowName) continue;\n      const rowTitle = index > -1 ? this.getConditionObjectRowText(index) : \"row\";\n      const hasQuestionPrefix = index > -1 || context === true;\n      const dot = hasQuestionPrefix && index === -1 ? \".\" : \"\";\n      const prefixName = (hasQuestionPrefix ? this.getValueName() : \"\") + dot + rowName + \".\";\n      const prefixTitle = (hasQuestionPrefix ? this.processedTitle : \"\") + dot + rowTitle + \".\";\n      for (var j = 0; j < rowElements.length; j++) {\n        const rowElement = rowElements[j];\n        if (index === -1 && context === rowElement) continue;\n        const obj: IConditionObject = {\n          name: prefixName + rowElement.name,\n          text: prefixTitle + rowElement.fullTitle,\n          question: this\n        };\n\n        if (index === -1 && context === true) {\n          obj.context = this;\n        } else {\n          if (hasColumnContext && prefixName.startsWith(\"row.\")) {\n            obj.context = context;\n          }\n        }\n        objects.push(obj);\n      }\n    }\n  }\n  public onHidingContent(): void {\n    super.onHidingContent();\n    if (!this.generatedVisibleRows) return;\n    const questions: Question[] = [];\n    this.collectNestedQuestions(questions, true);\n    questions.forEach(q => q.onHidingContent());\n  }\n  protected getIsReadyNestedQuestions(): Array<Question> {\n    if (!this.generatedVisibleRows) return [];\n    const res = new Array<Question>();\n    this.collectNestedQuestonsInRows(this.generatedVisibleRows, res, false, true, false);\n    if (!!this.generatedTotalRow) {\n      this.collectNestedQuestonsInRows([this.generatedTotalRow], res, false, true, false);\n    }\n    return res;\n  }\n  protected collectNestedQuestionsCore(questions: Array<Question>, visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.collectNestedQuestonsInRows(this.visibleRows, questions, visibleOnly, includeNested, includeItSelf);\n  }\n  protected collectNestedQuestonsInRows(rows: Array<MatrixDropdownRowModelBase>, questions: Question[], visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    if (!Array.isArray(rows)) return;\n    rows.forEach(row => {\n      row.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n    });\n  }\n  protected getConditionObjectRowName(index: number): string {\n    return \"\";\n  }\n  protected getConditionObjectRowText(index: number): string {\n    return this.getConditionObjectRowName(index);\n  }\n  protected getConditionObjectsRowIndeces(): Array<number> {\n    return [];\n  }\n  public getProgressInfo(): IProgressInfo {\n    this.getIsRequireToGenerateRows() && this.generateVisibleRowsIfNeeded();\n    if (!!this.generatedVisibleRows)\n      return SurveyElement.getProgressInfoByElements(\n        this.getCellQuestions(),\n        this.isRequired\n      );\n    const res = Base.createProgressInfo();\n    this.updateProgressInfoByValues(res);\n    if (res.requiredQuestionCount === 0 && this.isRequired) {\n      res.requiredQuestionCount = 1;\n      res.requiredAnsweredQuestionCount = !this.isEmpty() ? 1 : 0;\n    }\n    return res;\n  }\n  protected getIsRequireToGenerateRows(): boolean {\n    return !!this.rowsVisibleIf;\n  }\n  protected updateProgressInfoByValues(res: IProgressInfo): void { }\n  protected updateProgressInfoByRow(res: IProgressInfo, rowValue: any): void {\n    for (var i = 0; i < this.columns.length; i++) {\n      const col = this.columns[i];\n      if (!col.templateQuestion.hasInput) continue;\n      const hasValue = !Helpers.isValueEmpty(rowValue[col.name]);\n      if (!hasValue && !!col.templateQuestion.visibleIf) continue;\n      res.questionCount += 1;\n      res.requiredQuestionCount += col.isRequired;\n      res.answeredQuestionCount += hasValue ? 1 : 0;\n      res.requiredAnsweredQuestionCount += hasValue && col.isRequired ? 1 : 0;\n    }\n  }\n  private getCellQuestions(): Array<Question> {\n    const res: Array<Question> = [];\n    this.runFuncForCellQuestions((q: Question) => { res.push(q); });\n    return res;\n  }\n\n  protected onBeforeValueChanged(val: any) { }\n  private onSetQuestionValue() {\n    if (this.isRowChanging) return;\n    this.onBeforeValueChanged(this.value);\n    if (!this.generatedVisibleRows || this.generatedVisibleRows.length == 0)\n      return;\n    this.isRowChanging = true;\n    var val = this.createNewValue();\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var row = this.generatedVisibleRows[i];\n      this.generatedVisibleRows[i].value = this.getRowValueCore(row, val);\n    }\n    this.isRowChanging = false;\n  }\n  protected setQuestionValue(newValue: any) {\n    super.setQuestionValue(newValue, false);\n    this.onSetQuestionValue();\n    this.updateIsAnswered();\n  }\n  supportAutoAdvance(): boolean {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (!rows) return true;\n    for (var i = 0; i < rows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        var question = cells[colIndex].question;\n        if (\n          question &&\n          (!question.supportAutoAdvance() || !question.value)\n        )\n          return false;\n      }\n    }\n    return true;\n  }\n  protected getContainsErrors(): boolean {\n    return (\n      super.getContainsErrors() ||\n      this.checkForAnswersOrErrors(\n        (question: Question) => question.containsErrors,\n        false\n      )\n    );\n  }\n  protected getIsAnswered(): boolean {\n    return (\n      super.getIsAnswered() &&\n      this.checkForAnswersOrErrors(\n        (question: Question) => question.isAnswered,\n        true\n      )\n    );\n  }\n  private checkForAnswersOrErrors(\n    predicate: (question: Question) => boolean,\n    every: boolean = false\n  ) {\n    var rows = this.generatedVisibleRows;\n    if (!rows) return false;\n    for (var i = 0; i < rows.length; i++) {\n      var cells = rows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!cells[colIndex]) continue;\n        var question = cells[colIndex].question;\n        if (question && question.isVisible)\n          if (predicate(question)) {\n            if (!every) return true;\n          } else {\n            if (every) return false;\n          }\n      }\n    }\n    return every ? true : false;\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    const rowsValidation = this.validateRows(context);\n    const isDuplicated = this.isValueDuplicated(context);\n    return super.validateElementCore(context) && rowsValidation && !isDuplicated;\n  }\n  protected getIsRunningValidators(): boolean {\n    if (super.getIsRunningValidators()) return true;\n    if (!this.generatedVisibleRows) return false;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!cells[colIndex]) continue;\n        var question = cells[colIndex].question;\n        if (!!question && question.isRunningValidators) return true;\n      }\n    }\n    return false;\n  }\n  public getAllErrors(): Array<SurveyError> {\n    var result = super.getAllErrors();\n    var rows = this.generatedVisibleRows;\n\n    if (rows === null) return result;\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      for (var j = 0; j < row.cells.length; j++) {\n        var errors = row.cells[j].question.getAllErrors();\n        if (errors && errors.length > 0) {\n          result = result.concat(errors);\n        }\n      }\n    }\n    return result;\n  }\n  private validateRows(context: ValidationContext): boolean {\n    let rows = this.generatedVisibleRows;\n    if (!rows) {\n      rows = this.visibleRows;\n    }\n    var res = true;\n    (<any>context).isSingleDetailPanel = this.detailPanelMode === \"underRowSingle\";\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].isVisible) {\n        res = rows[i].validate(context) && res;\n      }\n    }\n    return res;\n  }\n  private isValueDuplicated(context: ValidationContext): boolean {\n    if (!this.generatedVisibleRows) return false;\n    var names = this.getUniqueColumnsNames();\n    var res = false;\n    for (var i = 0; i < names.length; i++) {\n      const rows = this.getDuplicatedRowAndShowErrors(names[i], true);\n      if (!!rows && rows.length > 0) {\n        context.setError(rows[0].getQuestionByColumnName(names[i]));\n        res = true;\n      }\n    }\n    return res;\n  }\n  protected getUniqueColumnsNames(): Array<string> {\n    var res = new Array<string>();\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].isUnique) {\n        res.push(this.columns[i].name);\n      }\n    }\n    return res;\n  }\n  private isValueInColumnDuplicated(columnName: string, showErrors: boolean, row?: MatrixDropdownRowModelBase): boolean {\n    const rows = this.getDuplicatedRowAndShowErrors(columnName, showErrors, row);\n    return !!row ? rows.indexOf(row) > -1 : rows.length > 0;\n  }\n  private getDuplicatedRowAndShowErrors(columnName: string, showErrors: boolean, row?: MatrixDropdownRowModelBase): Array<MatrixDropdownRowModelBase> {\n    const rows = this.getDuplicatedRows(columnName);\n    if (showErrors) {\n      this.showDuplicatedErrorsInRows(rows, columnName);\n    }\n    this.removeDuplicatedErrorsInRows(rows, columnName);\n    return rows;\n  }\n  private getDuplicatedRows(columnName: string): Array<MatrixDropdownRowModelBase> {\n    const keyValues: HashTable<Array<MatrixDropdownRowModelBase>> = {};\n    const res: Array<MatrixDropdownRowModelBase> = [];\n    const rows = this.generatedVisibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      let val = undefined;\n      const question = rows[i].getQuestionByName(columnName);\n      if (!!question) {\n        val = question.value;\n      } else {\n        const rowVal = this.getRowValue(i);\n        val = !!rowVal ? rowVal[columnName] : undefined;\n      }\n      if (!this.isValueEmpty(val)) {\n        if (!this.useCaseSensitiveComparison && typeof val === \"string\") {\n          val = val.toLocaleLowerCase();\n        }\n        if (!keyValues[val]) {\n          keyValues[val] = [];\n        }\n        keyValues[val].push(rows[i]);\n      }\n    }\n    for (let key in keyValues) {\n      if (keyValues[key].length > 1) {\n        keyValues[key].forEach(row => res.push(row));\n      }\n    }\n    return res;\n  }\n  private showDuplicatedErrorsInRows(duplicatedRows: Array<MatrixDropdownRowModelBase>, columnName: string): void {\n    duplicatedRows.forEach(row => {\n      let question = row.getQuestionByName(columnName);\n      const inDetailPanel = this.detailPanel.getQuestionByName(columnName);\n      if (!question && inDetailPanel) {\n        row.showDetailPanel();\n        if (row.detailPanel) {\n          question = row.detailPanel.getQuestionByName(columnName);\n        }\n      }\n      if (question) {\n        if (inDetailPanel) {\n          row.showDetailPanel();\n        }\n        this.addDuplicationError(question);\n      }\n    });\n  }\n  private removeDuplicatedErrorsInRows(duplicatedRows: Array<MatrixDropdownRowModelBase>, columnName: string): void {\n    this.generatedVisibleRows.forEach(row => {\n      if (duplicatedRows.indexOf(row) < 0) {\n        const question = row.getQuestionByName(columnName);\n        if (question) {\n          this.removeDuplicationError(row, question);\n        }\n      }\n    });\n  }\n  private getDuplicationError(question: Question): SurveyError {\n    const errors = question.errors;\n    for (let i = 0; i < errors.length; i ++) {\n      if (errors[i].getErrorType() === \"keyduplicationerror\") return errors[i];\n    }\n    return null;\n  }\n  private addDuplicationError(question: Question) {\n    if (!this.getDuplicationError(question)) {\n      question.addError(new KeyDuplicationError(this.keyDuplicationError, this));\n    }\n  }\n  private removeDuplicationError(row: MatrixDropdownRowModelBase, question: Question) {\n    if (question.removeError(this.getDuplicationError(question)) && question.errors.length === 0 && !!row.editingObj) {\n      (<any>row.editingObj)[question.getValueName()] = question.value;\n    }\n  }\n  public getFirstQuestionToFocus(withError: boolean): Question {\n    return this.getFirstCellQuestion(withError);\n  }\n  protected getFirstInputElementId(): string {\n    var question = this.getFirstCellQuestion(false);\n    return question ? question.inputId : super.getFirstInputElementId();\n  }\n  protected getFirstErrorInputElementId(): string {\n    var question = this.getFirstCellQuestion(true);\n    return question ? question.inputId : super.getFirstErrorInputElementId();\n  }\n  protected getFirstCellQuestion(onError: boolean): Question {\n    if (!this.generatedVisibleRows) return null;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!onError) return cells[colIndex].question;\n        if (cells[colIndex].question.currentErrorCount > 0)\n          return cells[colIndex].question;\n      }\n    }\n    return null;\n  }\n  protected onReadOnlyChanged() {\n    super.onReadOnlyChanged();\n    if (!this.generateRows) return;\n    for (var i = 0; i < this.visibleRows.length; i++) {\n      this.visibleRows[i].onQuestionReadOnlyChanged();\n    }\n  }\n\n  //IMatrixDropdownData\n  public createQuestion(\n    row: MatrixDropdownRowModelBase,\n    column: MatrixDropdownColumn\n  ): Question {\n    return this.createQuestionCore(row, column);\n  }\n  protected createQuestionCore(\n    row: MatrixDropdownRowModelBase,\n    column: MatrixDropdownColumn\n  ): Question {\n    var question = column.createCellQuestion(row);\n    question.setSurveyImpl(row);\n    question.setParentQuestion(this);\n    question.inMatrixMode = true;\n    return question;\n  }\n  protected deleteRowValue(\n    newValue: any,\n    row: MatrixDropdownRowModelBase\n  ): any {\n    if (!newValue) return newValue;\n    delete newValue[row.rowName];\n    return this.isObject(newValue) && Object.keys(newValue).length == 0\n      ? null\n      : newValue;\n  }\n  private isDoingonAnyValueChanged: boolean;\n  private isValueChangedWithoutRows: boolean;\n  onAnyValueChanged(name: string, questionName: string): void {\n    if (this.isUpdateLocked || this.isDoingonAnyValueChanged) return;\n    if (!this.generatedVisibleRows) {\n      if (name === this.getValueName()) {\n        this.isValueChangedWithoutRows = true;\n      }\n      return;\n    }\n    this.isDoingonAnyValueChanged = true;\n    var rows = this.generatedVisibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      rows[i].onAnyValueChanged(name, questionName);\n    }\n    var totalRow = this.visibleTotalRow;\n    if (!!totalRow) {\n      totalRow.onAnyValueChanged(name, questionName);\n    }\n    this.isDoingonAnyValueChanged = false;\n  }\n  protected isObject(value: any) {\n    return value !== null && typeof value === \"object\";\n  }\n  private getOnCellValueChangedOptions(\n    row: MatrixDropdownRowModelBase,\n    columnName: string,\n    rowValue: any\n  ): any {\n    const getQuestion = (colName: any) => {\n      return row.getQuestionByName(colName);\n    };\n    return {\n      row: row,\n      columnName: columnName,\n      rowValue: rowValue,\n      value: !!rowValue ? rowValue[columnName] : null,\n      getCellQuestion: getQuestion,\n      cellQuestion: row.getQuestionByName(columnName),\n      column: this.getColumnByName(columnName)\n    };\n  }\n  protected onCellValueChanged(row: MatrixDropdownRowModelBase, columnName: string, rowValue: any): void {\n    if (!this.survey) return;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    if (!!this.onCellValueChangedCallback) {\n      this.onCellValueChangedCallback(options);\n    }\n    this.survey.matrixCellValueChanged(this, options);\n  }\n  validateCell(row: MatrixDropdownRowModelBase, columnName: string, rowValue: any): SurveyError {\n    if (!this.survey) return;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    return this.survey.matrixCellValidate(this, options);\n  }\n  get isValidateOnValueChanging(): boolean {\n    return !!this.survey ? this.survey.isValidateOnValueChanging : false;\n  }\n  protected get hasInvisibleRows(): boolean {\n    const rows = this.generatedVisibleRows;\n    if (!Array.isArray(rows)) return false;\n    for (let i = 0; i < rows.length; i ++) {\n      if (!rows[i].isVisible) return true;\n    }\n    return false;\n  }\n  getFilteredData(): any {\n    if (this.isEmpty() || !this.generatedVisibleRows || this.isEditingSurveyElement) return this.value;\n    return this.getFilteredDataCore();\n  }\n  protected getFilteredDataCore(): any { return this.value; }\n  onRowChanging(\n    row: MatrixDropdownRowModelBase,\n    columnName: string,\n    rowValue: any\n  ): any {\n    if (!this.survey && !this.cellValueChangingCallback) return !!rowValue ? rowValue[columnName] : null;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    var oldRowValue = this.getRowValueCore(row, this.createNewValue(), true);\n    options.oldValue = !!oldRowValue ? oldRowValue[columnName] : null;\n    if (!!this.cellValueChangingCallback) {\n      options.value = this.cellValueChangingCallback(row, columnName, options.value, options.oldValue);\n    }\n    if (!!this.survey) {\n      this.survey.matrixCellValueChanging(this, options);\n    }\n    return options.value;\n  }\n  getSharedQuestionFromArray(name: string, rowIndex: number): Question {\n    return !!this.survey && !!this.valueName ? <Question>(this.survey.getQuestionByValueNameFromArray(this.valueName, name, rowIndex)) : null;\n  }\n  onRowChanged(row: MatrixDropdownRowModelBase, columnName: string, newRowValue: any, isDeletingValue: boolean): void {\n    var rowObj = !!columnName ? this.getRowObj(row) : null;\n    if (!!rowObj) {\n      var columnValue = null;\n      if (!!newRowValue && !isDeletingValue) {\n        columnValue = newRowValue[columnName];\n      }\n      this.isRowChanging = true;\n      Serializer.setObjPropertyValue(rowObj, columnName, columnValue);\n      this.isRowChanging = false;\n      this.onCellValueChanged(row, columnName, rowObj);\n    } else {\n      var oldValue = this.createNewValue(true);\n      var combine = this.getNewValueOnRowChanged(\n        row,\n        columnName,\n        newRowValue,\n        isDeletingValue,\n        this.createNewValue()\n      );\n      if (this.isTwoValueEquals(oldValue, combine.value)) return;\n      this.isRowChanging = true;\n      this.setNewValue(combine.value);\n      this.isRowChanging = false;\n      if (columnName) {\n        this.onCellValueChanged(row, columnName, combine.rowValue);\n      }\n    }\n    if (this.getUniqueColumnsNames().indexOf(columnName) > -1) {\n      this.isValueInColumnDuplicated(columnName, !!rowObj);\n    }\n  }\n  private getNewValueOnRowChanged(row: MatrixDropdownRowModelBase,\n    columnName: string, newRowValue: any, isDeletingValue: boolean, newValue: any): any {\n    const rowValue = this.getRowValueCore(row, newValue, true);\n    if (isDeletingValue) {\n      delete rowValue[columnName];\n    }\n    row.questions.forEach(q => {\n      delete rowValue[q.getValueName()];\n    });\n    if (newRowValue) {\n      newRowValue = JSON.parse(JSON.stringify(newRowValue));\n      for (var key in newRowValue) {\n        if (!this.isValueEmpty(newRowValue[key])) {\n          rowValue[key] = newRowValue[key];\n        }\n      }\n    }\n    if (this.isObject(rowValue) && Object.keys(rowValue).length === 0) {\n      newValue = this.deleteRowValue(newValue, row);\n    }\n    newValue = this.correctValueForMinMaxRows(newValue);\n    return { value: newValue, rowValue: rowValue };\n  }\n  protected correctValueForMinMaxRows(newValue: any): any { return newValue; }\n  getRowIndex(row: MatrixDropdownRowModelBase): number {\n    if (!Array.isArray(this.generatedVisibleRows)) return -1;\n    return this.generatedVisibleRows.indexOf(row);\n  }\n  public getElementsInDesign(includeHidden: boolean = false): Array<IElement> {\n    let elements: Array<IElement>;\n    if (this.detailPanelMode == \"none\") {\n      elements = super.getElementsInDesign(includeHidden);\n    } else {\n      elements = includeHidden ? [this.detailPanel] : this.detailElements;\n    }\n    return this.columns.concat(elements);\n  }\n  hasDetailPanel(row: MatrixDropdownRowModelBase): boolean {\n    if (this.detailPanelMode == \"none\") return false;\n    if (this.isDesignMode) return true;\n    if (!!this.onHasDetailPanelCallback)\n      return this.onHasDetailPanelCallback(row);\n    return this.detailElements.length > 0;\n  }\n  getIsDetailPanelShowing(row: MatrixDropdownRowModelBase): boolean {\n    if (this.detailPanelMode == \"none\") return false;\n    if (this.isDesignMode) {\n      var res = this.visibleRows.indexOf(row) == 0;\n      if (res) {\n        if (!row.detailPanel) {\n          row.showDetailPanel();\n        }\n      }\n      return res;\n    }\n    return this.getPropertyValue(\"isRowShowing\" + row.id, false);\n  }\n  setIsDetailPanelShowing(row: MatrixDropdownRowModelBase, val: boolean): void {\n    if (val == this.getIsDetailPanelShowing(row)) return;\n    this.setPropertyValue(\"isRowShowing\" + row.id, val);\n    this.updateDetailPanelButtonCss(row);\n    if (!!this.renderedTable) {\n      this.renderedTable.onDetailPanelChangeVisibility(row, val);\n    }\n    if (this.survey) {\n      this.survey.matrixDetailPanelVisibleChanged(this, row.rowIndex - 1, row, val);\n    }\n    if (val && this.detailPanelMode === \"underRowSingle\") {\n      var rows = this.visibleRows;\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].id !== row.id && rows[i].isDetailPanelShowing) {\n          rows[i].hideDetailPanel();\n        }\n      }\n    }\n  }\n  public getDetailPanelButtonCss(row: MatrixDropdownRowModelBase): string {\n    const builder = new CssClassBuilder().append(this.getPropertyValue(\"detailButtonCss\" + row.id));\n    return builder.append(this.cssClasses.detailButton, builder.toString() === \"\").toString();\n  }\n  public getDetailPanelIconCss(row: MatrixDropdownRowModelBase): string {\n    const builder = new CssClassBuilder().append(this.getPropertyValue(\"detailIconCss\" + row.id));\n    return builder.append(this.cssClasses.detailIcon, builder.toString() === \"\").toString();\n  }\n  public getDetailPanelIconId(row: MatrixDropdownRowModelBase): string {\n    return this.getIsDetailPanelShowing(row) ? this.cssClasses.detailIconExpandedId : this.cssClasses.detailIconId;\n  }\n  private updateDetailPanelButtonCss(row: MatrixDropdownRowModelBase) {\n    const classes = this.cssClasses;\n    const isPanelShowing = this.getIsDetailPanelShowing(row);\n\n    const iconBuilder = new CssClassBuilder().append(classes.detailIcon)\n      .append(classes.detailIconExpanded, isPanelShowing);\n    this.setPropertyValue(\"detailIconCss\" + row.id, iconBuilder.toString());\n\n    const buttonBuilder = new CssClassBuilder().append(classes.detailButton)\n      .append(classes.detailButtonExpanded, isPanelShowing);\n    this.setPropertyValue(\"detailButtonCss\" + row.id, buttonBuilder.toString());\n  }\n  createRowDetailPanel(row: MatrixDropdownRowModelBase): PanelModel {\n    if (this.isDesignMode) return this.detailPanel;\n    var panel = this.createNewDetailPanel();\n    panel.readOnly = this.isReadOnly || !row.isRowEnabled();\n    panel.setSurveyImpl(row);\n    var json = this.detailPanel.toJSON();\n    new JsonObject().toObject(json, panel);\n    panel.renderWidth = \"100%\";\n    panel.updateCustomWidgets();\n    if (!!this.onCreateDetailPanelCallback) {\n      this.onCreateDetailPanelCallback(row, panel);\n    }\n    panel.questions.forEach(q => q.setParentQuestion(this));\n    panel.onSurveyLoad();\n    return panel;\n  }\n  getSharedQuestionByName(\n    columnName: string,\n    row: MatrixDropdownRowModelBase\n  ): Question {\n    if (!this.survey || !this.valueName) return null;\n    var index = this.getRowIndex(row);\n    if (index < 0) return null;\n    return <Question>(\n      this.survey.getQuestionByValueNameFromArray(\n        this.valueName,\n        columnName,\n        index\n      )\n    );\n  }\n  runTriggersInRow(row: MatrixDropdownRowModelBase, runName: string, newValue: any): void {\n    if (!this.survey || !this.valueName) return;\n    var index = this.getRowIndex(row);\n    if (index < 0) return;\n    this.survey.getQuestionsByValueName(this.valueName).forEach((q: any) => {\n      const rows = q.visibleRows;\n      if (Array.isArray(rows) && index < rows.length && rows[0] instanceof MatrixDropdownRowModelBase) {\n        rows[index].runTriggers(runName, newValue);\n      }\n    });\n  }\n  onTotalValueChanged(): any {\n    if (\n      !!this.data &&\n      !!this.visibleTotalRow &&\n      !this.isUpdateLocked &&\n      !this.isSett\n    ) {\n      this.data.setValue(\n        this.getValueName() + settings.matrix.totalsSuffix,\n        this.totalValue,\n        false\n      );\n    }\n  }\n  getParentTextProcessor(): ITextProcessor {\n    if (!this.parentQuestion || !this.parent) return null;\n    const data = (<any>this.parent).data;\n    if (!!data && !!data.getTextProcessor)\n      return data.getTextProcessor();\n    return null;\n  }\n  isMatrixReadOnly(): boolean { return this.isReadOnly; }\n  onRowVisibilityChanged(row: MatrixDropdownRowModelBase): void {\n    this.clearVisibleRows();\n    this.resetRenderedTable();\n    this.resetSingleInput();\n  }\n  protected clearValueIfInvisibleCore(reason: string): void {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearInvisibleValuesInRows();\n  }\n  protected clearInvisibleValuesInRows(): void {\n    if (this.isEmpty() || !this.isRowsFiltered()) return;\n    const sharedQuestions = this.survey?.questionsByValueName(this.getValueName()) || [];\n    if (sharedQuestions.length < 2) {\n      this.value = this.getFilteredData();\n    }\n  }\n  protected isRowsFiltered(): boolean {\n    return this.visibleRows !== this.generatedVisibleRows;\n  }\n  public getQuestionFromArray(name: string, index: number): IQuestion {\n    if (index >= this.visibleRows.length) return null;\n    return this.visibleRows[index].getQuestionByName(name);\n  }\n  private isMatrixValueEmpty(val: any) {\n    if (!val) return;\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        if (this.isObject(val[i]) && Object.keys(val[i]).length > 0)\n          return false;\n      }\n      return true;\n    }\n    return Object.keys(val).length == 0;\n  }\n\n  private get SurveyModel() {\n    return this.survey as SurveyModel;\n  }\n  public getCellTemplateData(cell: QuestionMatrixDropdownRenderedCell) {\n    // return cell.cell.column.templateQuestion;\n    return this.SurveyModel.getMatrixCellTemplateData(cell);\n  }\n  public getCellWrapperComponentName(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentName(cell, cell.row instanceof MatrixDropdownTotalRowModel ? \"row-footer\" : \"cell\");\n  }\n  public getCellWrapperComponentData(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentData(cell, cell.row instanceof MatrixDropdownTotalRowModel ? \"row-footer\" : \"cell\");\n  }\n  public getColumnHeaderWrapperComponentName(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentName(\n      cell,\n      \"column-header\"\n    );\n  }\n  public getColumnHeaderWrapperComponentData(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentData(\n      cell,\n      \"column-header\"\n    );\n  }\n  public getRowHeaderWrapperComponentName(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentName(cell, \"row-header\");\n  }\n  public getRowHeaderWrapperComponentData(cell: MatrixDropdownCell) {\n    return this.SurveyModel.getElementWrapperComponentData(cell, \"row-header\");\n  }\n  protected onMobileChanged(): void {\n    super.onMobileChanged();\n    this.resetRenderedTable();\n  }\n  public getRootCss(): string {\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.rootScroll, this.horizontalScroll).toString();\n  }\n  public afterRenderQuestionElement(el: HTMLElement): void {\n    super.afterRenderQuestionElement(el);\n    this.setRootElement(el?.parentElement);\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    super.beforeDestroyQuestionElement(el);\n    this.setRootElement(undefined);\n  }\n\n  private rootElement: HTMLElement;\n  public setRootElement(val: HTMLElement): void {\n    this.rootElement = val;\n  }\n  public getRootElement(): HTMLElement {\n    return this.rootElement;\n  }\n}\n\nSerializer.addClass(\n  \"matrixdropdownbase\",\n  [\n    {\n      name: \"columns:matrixdropdowncolumns\",\n      uniqueProperty: \"name\",\n      className: \"matrixdropdowncolumn\",\n      isArray: true\n    },\n    {\n      name: \"columnLayout\",\n      alternativeName: \"columnsLocation\",\n      choices: [\"horizontal\", \"vertical\"],\n      visible: false, isSerializable: false\n    },\n    {\n      name: \"transposeData:boolean\", version: \"1.9.130\", oldName: \"columnLayout\"\n    },\n    {\n      name: \"detailElements\",\n      baseClassName: \"question\",\n      visible: false,\n      isLightSerializable: false,\n    },\n    {\n      name: \"detailPanelMode\",\n      choices: [\"none\", \"underRow\", \"underRowSingle\"],\n      default: \"none\",\n    },\n    { name: \"cellErrorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"] },\n    {\n      name: \"detailErrorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"],\n      visibleIf: (obj: any) => { return !!obj && obj.detailPanelMode != \"none\"; }\n    },\n    { name: \"horizontalScroll:boolean\", visible: false, },\n    {\n      name: \"choices:itemvalue[]\", uniqueProperty: \"value\", visibleIf: (obj): boolean => obj.isSelectCellType()\n    },\n    { name: \"placeholder\", alternativeName: \"optionsCaption\", serializationProperty: \"locPlaceholder\" },\n    { name: \"keyDuplicationError\", serializationProperty: \"locKeyDuplicationError\", },\n    {\n      name: \"singleInputTitleTemplate\", serializationProperty: \"locSingleInputTitleTemplate\",\n      visibleIf(obj) { return obj.survey?.questionsOnPageMode === \"inputPerPage\"; }\n    },\n    {\n      name: \"cellType\",\n      default: \"dropdown\",\n      choices: () => {\n        return MatrixDropdownColumn.getColumnTypes();\n      },\n    },\n    { name: \"columnColCount\", default: 0, choices: [0, 1, 2, 3, 4] },\n    \"columnMinWidth\",\n    { name: \"allowAdaptiveActions:boolean\", default: false, visible: false },\n  ],\n  function () {\n    return new QuestionMatrixDropdownModelBase(\"\");\n  },\n  \"matrixbase\"\n);\n", "import {\n  QuestionMatrixDropdownModelBase,\n  MatrixDropdownRowModelBase,\n  IMatrixDropdownData,\n} from \"./question_matrixdropdownbase\";\nimport { Serializer } from \"./jsonobject\";\nimport { ItemValue } from \"./itemvalue\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { IProgressInfo } from \"./base-interfaces\";\nimport { Helpers } from \"./helpers\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, ValueGetterContextCore, VariableGetterContext } from \"./conditionProcessValue\";\n\nexport class MatrixDropdownValueGetterContext extends ValueGetterContextCore {\n  constructor (protected question: QuestionMatrixDropdownModel) {\n    super();\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (!createObjects && this.question.isEmpty()) return { isFound: path.length === 0, value: undefined };\n    if (path.length > 0) {\n      const res = super.getValue(path, isRoot, index, createObjects);\n      if (res && res.isFound) return res;\n    }\n    return new VariableGetterContext(this.question.value).getValue(path, isRoot, index, createObjects);\n  }\n  getRootObj(): IObjectValueContext { return <any>this.question.data; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const rows = this.question.visibleRows;\n    name = name.toLocaleLowerCase();\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      const itemName = row.rowName?.toString() || \"\";\n      if (itemName.toLocaleLowerCase() === name) {\n        res.isFound = true;\n        res.context = row.getValueGetterContext();\n        return;\n      }\n    }\n  }\n}\n\nexport class MatrixDropdownRowModel extends MatrixDropdownRowModelBase {\n  private item: ItemValue;\n  constructor(\n    public name: string,\n    item: ItemValue,\n    data: IMatrixDropdownData,\n    value: any\n  ) {\n    super(data, value);\n    this.item = item;\n    this.buildCells(value);\n  }\n  public get rowName(): string {\n    return this.name;\n  }\n  public get rowTitle(): any {\n    return this.text;\n  }\n  public get text(): string {\n    return this.item.text;\n  }\n  public get locText(): LocalizableString {\n    return this.item.locText;\n  }\n  protected isItemVisible(): boolean { return this.item.isVisible; }\n  public isRowEnabled(): boolean { return this.item.isEnabled; }\n  protected isRowHasEnabledCondition(): boolean { return !!this.item.enableIf; }\n}\n/**\n  * A class that describes the Multi-Select Matrix question type. Multi-Select Matrix allows you to use the [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Checkbox](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radiogroup](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Text](https://surveyjs.io/form-library/documentation/questiontextmodel), and [Comment](https://surveyjs.io/form-library/documentation/questioncommentmodel) question types as cell editors.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/ (linkStyle))\n */\nexport class QuestionMatrixDropdownModel extends QuestionMatrixDropdownModelBase\n  implements IMatrixDropdownData {\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"totalText\", this, true);\n    this.registerPropertyChangedHandlers([\"rows\"], () => {\n      if (!this.generatedVisibleRows) return;\n      this.clearGeneratedRows();\n      this.resetRenderedTable();\n      this.getVisibleRows();\n      this.clearIncorrectValues();\n    });\n    this.registerPropertyChangedHandlers([\"hideIfRowsEmpty\"], () => {\n      this.updateVisibilityBasedOnRows();\n    });\n  }\n  public getType(): string {\n    return \"matrixdropdown\";\n  }\n  /**\n   * A title for the total row. Applies if at least one column displays total values.\n   * @see rowTitleWidth\n   * @see columns\n   */\n  public get totalText() {\n    return this.getLocalizableStringText(\"totalText\", \"\");\n  }\n  public set totalText(val: string) {\n    this.setLocalizableStringText(\"totalText\", val);\n  }\n  public get locTotalText(): LocalizableString {\n    return this.getLocalizableString(\"totalText\");\n  }\n  public getFooterText(): LocalizableString {\n    return this.locTotalText;\n  }\n  public getRowTitleWidth(): string {\n    return this.rowTitleWidth;\n  }\n  /**\n   * Specifies whether to hide the question when the matrix has no visible rows.\n   * @see rowsVisibleIf\n   */\n  public get hideIfRowsEmpty(): boolean {\n    return this.getPropertyValue(\"hideIfRowsEmpty\");\n  }\n  public set hideIfRowsEmpty(val: boolean) {\n    this.setPropertyValue(\"hideIfRowsEmpty\", val);\n  }\n  protected getSingleInputTitleTemplate(): string { return \"rowNameTemplateTitle\"; }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixDropdownValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!value) return value;\n    var rows = this.visibleRows;\n    var res = {};\n    if (!rows) return res;\n    for (var i = 0; i < rows.length; i++) {\n      var rowName = rows[i].rowName;\n      var val = value[rowName];\n      if (!val) continue;\n      if (keysAsText) {\n        var displayRowValue = ItemValue.getTextOrHtmlByValue(\n          this.rows,\n          rowName\n        );\n        if (!!displayRowValue) {\n          rowName = displayRowValue;\n        }\n      }\n      (<any>res)[rowName] = this.getRowDisplayValue(keysAsText, rows[i], val);\n    }\n    return res;\n  }\n  protected getConditionObjectRowName(index: number): string {\n    return \".\" + this.rows[index].value;\n  }\n  protected getConditionObjectRowText(index: number): string {\n    return \".\" + this.rows[index].calculatedText;\n  }\n  protected getConditionObjectsRowIndeces() : Array<number> {\n    const res = [];\n    for (var i = 0; i < this.rows.length; i++) res.push(i);\n    return res;\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return Helpers.isValueObject(val, true);\n  }\n  public clearIncorrectValues(): void {\n    if (!this.isEmpty()) {\n      this.getVisibleRows();\n      const newVal: any = {};\n      const val = this.value;\n      for (let key in val) {\n        const row = this.getRowByKey(key);\n        if (!!row && row.isVisible) {\n          newVal[key] = val[key];\n        }\n      }\n      this.value = newVal;\n    }\n    super.clearIncorrectValues();\n  }\n  private getRowByKey(val: any): MatrixDropdownRowModelBase {\n    const rows = this.generatedVisibleRows;\n    if (!rows) return null;\n    for (let i = 0; i < rows.length; i ++) {\n      if (rows[i].rowName === val) return rows[i];\n    }\n    return null;\n  }\n  private defaultValuesInRows: any = {};\n  protected clearGeneratedRows(): void {\n    if (!this.generatedVisibleRows) return;\n    if (!this.isDisposed) {\n      this.generatedVisibleRows.forEach(row => {\n        this.defaultValuesInRows[row.rowName] = row.getNamesWithDefaultValues();\n      });\n    }\n    super.clearGeneratedRows();\n  }\n  private getRowValueForCreation(val: any, rowName: any): any {\n    const res = val[rowName];\n    if (!res) return res;\n    const names = this.defaultValuesInRows[rowName];\n    if (!Array.isArray(names) || names.length === 0) return res;\n    names.forEach(name => {\n      delete res[name];\n    });\n    return res;\n  }\n  protected generateRows(): Array<MatrixDropdownRowModel> {\n    var result = new Array<MatrixDropdownRowModel>();\n    var rows = this.rows;\n    if (!rows || rows.length === 0) return result;\n    var val = this.value;\n    if (!val) val = {};\n    for (var i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      if (this.isValueEmpty(row.value)) continue;\n      result.push(this.createMatrixRow(row, this.getRowValueForCreation(val, row.value)));\n    }\n    return result;\n  }\n  protected createMatrixRow(item: ItemValue, value: any): MatrixDropdownRowModel {\n    return new MatrixDropdownRowModel(item.value, item, this, value);\n  }\n  protected getFilteredDataCore(): any {\n    const res: any = {};\n    this.generatedVisibleRows.forEach(row => {\n      if (row.isVisible && !row.isEmpty) {\n        res[row.rowName] = row.filteredValue;\n      }\n    });\n    return res;\n  }\n  protected getSearchableItemValueKeys(keys: Array<string>) {\n    keys.push(\"rows\");\n  }\n  protected getIsRequireToGenerateRows(): boolean {\n    if (super.getIsRequireToGenerateRows()) return true;\n    for (let i = 0; i < this.rows.length; i ++) {\n      if (!!this.rows[i].visibleIf) return true;\n    }\n    return false;\n  }\n  protected updateProgressInfoByValues(res: IProgressInfo): void {\n    let val = this.value;\n    if (!val) val = {};\n    for (var i = 0; i < this.rows.length; i ++) {\n      const row = this.rows[i];\n      const rowName = val[row.value];\n      this.updateProgressInfoByRow(res, !!rowName ? rowName : {});\n    }\n  }\n}\n\nSerializer.addClass(\n  \"matrixdropdown\",\n  [\n    {\n      name: \"rows:itemvalue[]\", uniqueProperty: \"value\"\n    },\n    \"rowsVisibleIf:condition\",\n    \"rowTitleWidth\",\n    { name: \"totalText\", serializationProperty: \"locTotalText\" },\n    \"hideIfRowsEmpty:boolean\"\n  ],\n  function() {\n    return new QuestionMatrixDropdownModel(\"\");\n  },\n  \"matrixdropdownbase\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"matrixdropdown\", (name) => {\n  var q = new QuestionMatrixDropdownModel(name);\n  q.choices = [1, 2, 3, 4, 5];\n  q.rows = QuestionFactory.DefaultRows;\n  QuestionMatrixDropdownModelBase.addDefaultColumns(q);\n  return q;\n});\n", "/* eslint-disable no-restricted-globals */\nimport { findScrollableParent, isShadowDOM } from \"../utils/utils\";\nimport { IsMobile, IsTouch } from \"../utils/devices\";\nimport { settings, ISurveyEnvironment } from \"../settings\";\nimport { IDragDropEngine } from \"./engine\";\n\n// WebKit requires cancelable `touchmove` events to be added as early as possible\n// see https://bugs.webkit.org/show_bug.cgi?id=184250\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\n    \"touchmove\",\n    (event) => {\n      if (!DragDropDOMAdapter.PreventScrolling) {\n        return;\n      }\n\n      // Prevent scrolling\n      event.preventDefault();\n    },\n    { passive: false }\n  );\n}\n\nexport interface IDragDropDOMAdapter {\n  startDrag(event: PointerEvent, draggedElement: any, parentElement: any, draggedElementNode: HTMLElement, preventSaveTargetNode: boolean): void;\n  draggedElementShortcut: HTMLElement;\n  rootContainer: HTMLElement;\n  documentOrShadowRoot: Document | ShadowRoot;\n  rootElement?: HTMLElement | ShadowRoot;\n  viewRootElement?: Element;\n}\n\nexport class DragDropDOMAdapter implements IDragDropDOMAdapter {\n  public static PreventScrolling = false;\n\n  private timeoutID: any;\n  private startX: number;\n  private startY: number;\n  private currentX: number;\n  private currentY: number;\n  // save event.target node from the frameworks update. See  https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n  private savedTargetNode: any;\n  private savedTargetNodeParent: any;\n  private savedTargetNodeIndex: any;\n  private scrollIntervalId: number = null;\n\n  constructor(private dd: IDragDropEngine, private longTap: boolean = true, private fitToContainer:boolean = false) {}\n\n  public get documentOrShadowRoot(): Document | ShadowRoot {\n    const rootNode = this.rootElement.getRootNode();\n    return rootNode instanceof Document || rootNode instanceof ShadowRoot ? rootNode : undefined;\n  }\n  public get rootElement(): HTMLElement | ShadowRoot {\n    if (isShadowDOM(settings.environment.root)) {\n      return this.rootContainer || settings.environment.root;\n    } else {\n      return this.rootContainer || settings.environment.root.documentElement || document.body;\n    }\n  }\n  public get viewRootElement(): Element {\n    return isShadowDOM(this.rootElement) ? this.rootElement.host : this.rootElement;\n  }\n  private stopLongTapIfMoveEnough = (pointerMoveEvent: PointerEvent) => {\n    pointerMoveEvent.preventDefault();\n    this.currentX = pointerMoveEvent.pageX;\n    this.currentY = pointerMoveEvent.pageY;\n    if (this.isMicroMovement) return;\n    this.returnUserSelectBack();\n    this.stopLongTap();\n  };\n  // see https://stackoverflow.com/questions/6042202/how-to-distinguish-mouse-click-and-drag\n  private get isMicroMovement() {\n    const delta = 5;\n    const diffX = Math.abs(this.currentX - this.startX);\n    const diffY = Math.abs(this.currentY - this.startY);\n    return diffX < delta && diffY < delta;\n  }\n  private stopLongTap = (e?: any) => {\n    clearTimeout(this.timeoutID);\n    this.timeoutID = null;\n    document.removeEventListener(\"pointerup\", this.stopLongTap);\n    document.removeEventListener(\"pointermove\", this.stopLongTapIfMoveEnough);\n  };\n  private startLongTapProcessing(\n    event: PointerEvent,\n    draggedElement: any,\n    parentElement?: any,\n    draggedElementNode?: HTMLElement,\n    preventSaveTargetNode: boolean = false\n  ): void {\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n    document.body.style.setProperty(\"touch-action\", \"none\", \"important\");\n    //document.body.style.setProperty(\"-webkit-touch-callout\", \"none\", \"important\");\n\n    this.timeoutID = setTimeout(() => {\n      this.doStartDrag(\n        event,\n        draggedElement,\n        parentElement,\n        draggedElementNode\n      );\n      if (!preventSaveTargetNode) {\n        this.savedTargetNode = event.target;\n        this.savedTargetNode.style.cssText =\n            `\n          position: absolute;\n          height: 1px!important;\n          width: 1px!important;\n          overflow: hidden;\n          clip: rect(1px 1px 1px 1px);\n          clip: rect(1px, 1px, 1px, 1px);\n        `;\n        this.savedTargetNodeParent = this.savedTargetNode.parentElement;\n        this.savedTargetNodeIndex = this.getNodeIndexInParent(this.savedTargetNode);\n        this.rootElement.appendChild(this.savedTargetNode);\n      }\n\n      this.stopLongTap();\n    }, this.longTap ? 500 : 0);\n\n    document.addEventListener(\"pointerup\", this.stopLongTap);\n    document.addEventListener(\"pointermove\", this.stopLongTapIfMoveEnough);\n  }\n  private handlePointerCancel = (event: PointerEvent) => {\n    this.clear();\n  };\n  private handleEscapeButton = (event: KeyboardEvent) => {\n    if (event.keyCode == 27) {\n      this.clear();\n    }\n  };\n  private onContextMenu = (event:any) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  private moveShortcutElement(event: PointerEvent) {\n    let rootElementX = this.viewRootElement.getBoundingClientRect().x;\n    let rootElementY = this.viewRootElement.getBoundingClientRect().y;\n\n    let rootElementScrollLeft = this.viewRootElement.scrollLeft;\n    let rootElementScrollTop = this.viewRootElement.scrollTop;\n\n    this.doScroll(event.clientY, event.clientX);\n\n    const shortcutHeight = this.draggedElementShortcut.offsetHeight;\n    const shortcutWidth = this.draggedElementShortcut.offsetWidth;\n    let shortcutXOffset = this.draggedElementShortcut.shortcutXOffset || shortcutWidth / 2;\n    let shortcutYOffset = this.draggedElementShortcut.shortcutYOffset || shortcutHeight / 2;\n\n    // TODO this is hot fix for RTL support. Probably we need better global strategy for it. https://github.com/surveyjs/survey-library/issues/4554\n    if (document.querySelectorAll(\"[dir='rtl']\").length !== 0) {\n      shortcutXOffset = shortcutWidth / 2;\n      shortcutYOffset = shortcutHeight / 2;\n    }\n\n    const documentBottom = document.documentElement.clientHeight;\n    const documentRight = document.documentElement.clientWidth;\n\n    const pageX = event.pageX;\n    const pageY = event.pageY;\n\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n\n    //https://github.com/surveyjs/survey-creator/issues/5484\n    rootElementX -= rootElementScrollLeft;\n    rootElementY -= rootElementScrollTop;\n\n    const shortcutBottomCoordinate = this.getShortcutBottomCoordinate(clientY, shortcutHeight, shortcutYOffset);\n    const shortcutRightCoordinate = this.getShortcutRightCoordinate(clientX, shortcutWidth, shortcutXOffset);\n\n    if (shortcutRightCoordinate >= documentRight) { // right boundary\n      this.draggedElementShortcut.style.left =\n        // pageX -\n        // clientX +\n        documentRight -\n        shortcutWidth -\n        rootElementX +\n        \"px\";\n      this.draggedElementShortcut.style.top =\n        /*pageY*/ clientY - shortcutYOffset - rootElementY + \"px\";\n      return;\n    }\n\n    if (clientX - shortcutXOffset <= 0) { // left boundary\n      this.draggedElementShortcut.style.left =\n        pageX - clientX - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top =\n        /*pageY*/ clientY - rootElementY - shortcutYOffset + \"px\";\n      return;\n    }\n\n    if (shortcutBottomCoordinate >= documentBottom) { // bottom boundary\n      this.draggedElementShortcut.style.left =\n        /*pageX*/ clientX - shortcutXOffset - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top =\n        // pageY -\n        // clientY +\n        documentBottom -\n        shortcutHeight -\n        rootElementY +\n        \"px\";\n      return;\n    }\n\n    if (clientY - shortcutYOffset <= 0) { // top  boundary\n      this.draggedElementShortcut.style.left =\n        clientX - shortcutXOffset - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top =\n        pageY - clientY - rootElementY + \"px\";\n      return;\n    }\n\n    this.draggedElementShortcut.style.left =\n      clientX - rootElementX - shortcutXOffset + \"px\";\n    this.draggedElementShortcut.style.top =\n      clientY - rootElementY - shortcutYOffset + \"px\";\n  }\n  private getShortcutBottomCoordinate(currentY: number, shortcutHeight: number, shortcutYOffset: number):number {\n    return currentY + shortcutHeight - shortcutYOffset;\n  }\n  private getShortcutRightCoordinate(currentX: number, shortcutWidth: number, shortcutXOffset: number):number {\n    return currentX + shortcutWidth - shortcutXOffset;\n  }\n\n  protected requestAnimationFrame(callback: any) {\n    return requestAnimationFrame(callback);\n  }\n\n  protected scrollByDrag(scrollableParentNode: Element, clientY: number, clientX: number) {\n    const startScrollBoundary = 100;\n\n    let top: number;\n    let bottom: number;\n    let left: number;\n    let right: number;\n\n    if (scrollableParentNode.tagName === \"HTML\") {\n      top = 0;\n      bottom = document.documentElement.clientHeight;\n      left = 0;\n      right = document.documentElement.clientWidth;\n    } else {\n      top = scrollableParentNode.getBoundingClientRect().top;\n      bottom = scrollableParentNode.getBoundingClientRect().bottom;\n      left = scrollableParentNode.getBoundingClientRect().left;\n      right = scrollableParentNode.getBoundingClientRect().right;\n    }\n\n    const repeat = () => {\n      const isTop = clientY - top <= startScrollBoundary;\n      const isBottom = bottom - clientY <= startScrollBoundary;\n      const isLeft = clientX - left <= startScrollBoundary;\n      const isRight = right - clientX <= startScrollBoundary;\n      if (isTop && !isLeft && !isRight) {\n        scrollableParentNode.scrollTop -= 15;\n      } else if (isBottom && !isLeft && !isRight) {\n        scrollableParentNode.scrollTop += 15;\n      } else if (isRight && !isTop && !isBottom) {\n        scrollableParentNode.scrollLeft += 15;\n      } else if (isLeft && !isTop && !isBottom) {\n        scrollableParentNode.scrollLeft -= 15;\n      }\n      this.scrollIntervalId = this.requestAnimationFrame(repeat);\n    };\n    this.scrollIntervalId = this.requestAnimationFrame(repeat);\n  }\n\n  private doScroll(clientY: number, clientX: number) {\n    cancelAnimationFrame(this.scrollIntervalId);\n\n    const displayProp = this.draggedElementShortcut.style.display;\n    //this.draggedElementShortcut.hidden = true;\n    this.draggedElementShortcut.style.display = \"none\";\n    let dragOverNode = <HTMLElement>this.documentOrShadowRoot.elementFromPoint(clientX, clientY);\n    //this.draggedElementShortcut.hidden = false;\n    this.draggedElementShortcut.style.display = displayProp || \"block\";\n\n    let scrollableParentNode = findScrollableParent(dragOverNode);\n\n    this.scrollByDrag(scrollableParentNode, clientY, clientX);\n  }\n\n  private dragOver = (event: PointerEvent) => {\n    this.moveShortcutElement(event);\n    this.draggedElementShortcut.style.cursor = \"grabbing\";\n    this.dd.dragOver(event);\n  };\n  private clear = () => {\n    cancelAnimationFrame(this.scrollIntervalId);\n\n    document.removeEventListener(\"pointermove\", this.dragOver);\n    document.removeEventListener(\"pointercancel\", this.handlePointerCancel);\n    document.removeEventListener(\"keydown\", this.handleEscapeButton);\n    document.removeEventListener(\"pointerup\", this.drop);\n    this.draggedElementShortcut.removeEventListener(\"pointerup\", this.drop);\n    if (IsTouch) {\n      this.draggedElementShortcut.removeEventListener(\"contextmenu\", this.onContextMenu);\n    }\n    this.draggedElementShortcut.parentElement.removeChild(this.draggedElementShortcut);\n\n    this.dd.clear();\n    this.draggedElementShortcut = null;\n    this.scrollIntervalId = null;\n\n    if (IsTouch) {\n      this.savedTargetNode.style.cssText = null;\n      this.savedTargetNode && this.savedTargetNode.parentElement.removeChild(this.savedTargetNode);\n      this.insertNodeToParentAtIndex(this.savedTargetNodeParent, this.savedTargetNode, this.savedTargetNodeIndex);\n      DragDropDOMAdapter.PreventScrolling = false;\n    }\n    this.savedTargetNode = null;\n    this.savedTargetNodeParent = null;\n    this.savedTargetNodeIndex = null;\n\n    this.returnUserSelectBack();\n  };\n  private drop = () => {\n    this.dd.drop();\n    this.clear();\n  };\n  private doStartDrag(\n    event: PointerEvent,\n    draggedElement: any,\n    parentElement?: any,\n    draggedElementNode?: HTMLElement\n  ): void {\n    if (IsTouch) {\n      DragDropDOMAdapter.PreventScrolling = true;\n    }\n    if (event.which === 3) return; //right mouse btn\n\n    this.dd.dragInit(event, draggedElement, parentElement, draggedElementNode);\n\n    this.rootElement.append(this.draggedElementShortcut);\n    this.moveShortcutElement(event);\n\n    document.addEventListener(\"pointermove\", this.dragOver);\n    document.addEventListener(\"pointercancel\", this.handlePointerCancel);\n    document.addEventListener(\"keydown\", this.handleEscapeButton);\n    document.addEventListener(\"pointerup\", this.drop);\n    if (!IsTouch) {\n      this.draggedElementShortcut.addEventListener(\"pointerup\", this.drop);\n    } else {\n      this.draggedElementShortcut.addEventListener(\"contextmenu\", this.onContextMenu);\n    }\n  }\n\n  private returnUserSelectBack() {\n    document.body.style.setProperty(\"touch-action\", \"auto\");\n    document.body.style.setProperty(\"user-select\", \"auto\");\n    document.body.style.setProperty(\"-webkit-user-select\", \"auto\");\n    //document.body.style.setProperty(\"-webkit-touch-callout\", \"default\");\n  }\n\n  public draggedElementShortcut: any = null;\n  public rootContainer: HTMLElement;\n\n  public startDrag(event: PointerEvent, draggedElement: any, parentElement?: any, draggedElementNode?: HTMLElement, preventSaveTargetNode: boolean = false): void {\n    document.body.style.setProperty(\"user-select\", \"none\", \"important\");\n    document.body.style.setProperty(\"-webkit-user-select\", \"none\", \"important\");\n    if (IsTouch) {\n      this.startLongTapProcessing(\n        event,\n        draggedElement,\n        parentElement,\n        draggedElementNode,\n        preventSaveTargetNode\n      );\n      return;\n    }\n    this.doStartDrag(event, draggedElement, parentElement, draggedElementNode);\n  }\n\n  private getNodeIndexInParent(node: any): number {\n    return [...node.parentElement.childNodes].indexOf(node);\n  }\n\n  private insertNodeToParentAtIndex(parent: HTMLElement, node: HTMLElement, index:number) {\n    parent.insertBefore(node, parent.childNodes[index]);\n  }\n}\n", "import { SurveyModel } from \"../survey\";\nimport { EventBase } from \"../base\";\nimport { IShortcutText, ISurvey } from \"../base-interfaces\";\nimport { IDragDropEngine } from \"./engine\";\nimport { DragDropDOMAdapter, IDragDropDOMAdapter } from \"./dom-adapter\";\nimport { DomDocumentHelper } from \"../global_variables_utils\";\n\nexport abstract class DragDropCore<T> implements IDragDropEngine {\n  private _isBottom: boolean = null;\n  public get isBottom(): boolean { //TODO rename isBottom to isShowGhostAtBottomOfDropTarget\n    return !!this._isBottom;\n  }\n  public set isBottom(val: boolean) {\n    this._isBottom = val;\n    this.ghostPositionChanged();\n  }\n  public onGhostPositionChanged: EventBase<{}> = new EventBase<{}>();\n  protected ghostPositionChanged(): void {\n    this.onGhostPositionChanged.fire(<any>{}, {});\n  }\n\n  public onDragStart: EventBase<DragDropCore<T>> = new EventBase();\n  public onDragEnd: EventBase<DragDropCore<T>> = new EventBase();\n  public onDragClear: EventBase<DragDropCore<T>> = new EventBase();\n  public onBeforeDrop = this.onDragStart;\n  public onAfterDrop = this.onDragEnd;\n\n  public draggedElement: any = null;\n  protected abstract get draggedElementType(): string;\n  protected parentElement: T;\n  public dropTarget: any = null;\n  protected get dropTargetDataAttributeName(): string {\n    return `[data-sv-drop-target-${this.draggedElementType}]`;\n  }\n  protected get survey(): SurveyModel {\n    return this.surveyValue || this.creator?.survey;\n  }\n\n  public prevDropTarget: any = null;\n  protected allowDropHere = false;\n\n  protected domAdapter: IDragDropDOMAdapter;\n  constructor(private surveyValue?: ISurvey, private creator?: any, longTap?: boolean, domAdapter?: IDragDropDOMAdapter) {\n    this.domAdapter = domAdapter || new DragDropDOMAdapter(this, longTap, this.survey?.fitToContainer);\n  }\n\n  public startDrag(event: PointerEvent, draggedElement: any, parentElement?: any, draggedElementNode?: HTMLElement, preventSaveTargetNode: boolean = false): void {\n    this.domAdapter.rootContainer = this.getRootElement(this.survey, this.creator);\n    this.domAdapter.startDrag(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode);\n  }\n\n  private getRootElement(survey: SurveyModel, creator: any): HTMLElement {\n    return creator ? creator.rootElement : survey.rootElement;\n  }\n\n  public dragInit(event: PointerEvent, draggedElement: any, parentElement?: any, draggedElementNode?: HTMLElement): void {\n    this.draggedElement = draggedElement;\n    this.parentElement = parentElement;\n    const shortcutText = this.getShortcutText(this.draggedElement);\n    this.domAdapter.draggedElementShortcut = this.createDraggedElementShortcut(\n      shortcutText,\n      draggedElementNode,\n      event\n    );\n    this.onStartDrag(event);\n    const fromElement = this.draggedElement && this.draggedElement.parent;\n    this.onDragStart.fire(this, { fromElement: fromElement, draggedElement: this.draggedElement });\n  }\n\n  protected onStartDrag(event?: PointerEvent): void {\n  }\n\n  protected isDropTargetDoesntChanged(newIsBottom: boolean): boolean {\n    return (\n      this.dropTarget === this.prevDropTarget && newIsBottom === this.isBottom\n    );\n  }\n\n  protected getShortcutText(draggedElement: IShortcutText): string {\n    return draggedElement?.shortcutText;\n  }\n\n  protected createDraggedElementShortcut(\n    text: string,\n    draggedElementNode?: HTMLElement,\n    event?: PointerEvent\n  ): HTMLElement {\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!!draggedElementShortcut) {\n      draggedElementShortcut.innerText = text;\n      draggedElementShortcut.className = this.getDraggedElementClass();\n    }\n    return draggedElementShortcut;\n  }\n\n  protected getDraggedElementClass() {\n    return \"sv-dragged-element-shortcut\";\n  }\n\n  protected doDragOver(): void { }\n  protected afterDragOver(dropTargetNode: HTMLElement): void { }\n\n  // public getGhostPosition(item: any): string {\n  //   if (this.dropTarget !== item) return null;\n  //   if (this.isBottom) return \"bottom\";\n  //   return \"top\";\n  // }\n\n  protected abstract isDropTargetValid(\n    dropTarget: any,\n    dropTargetNode?: HTMLElement\n  ): boolean;\n\n  protected banDropHere = (): void => {\n    this.allowDropHere = false;\n    this.doBanDropHere();\n    this.dropTarget = null;\n    this.domAdapter.draggedElementShortcut.style.cursor = \"not-allowed\";\n    this.isBottom = null;\n  };\n\n  protected doBanDropHere = (): void => { };\n\n  protected findDropTargetNodeFromPoint(clientX: number, clientY: number): HTMLElement {\n    const displayProp = this.domAdapter.draggedElementShortcut.style.display;\n    this.domAdapter.draggedElementShortcut.style.display = \"none\";\n\n    if (!DomDocumentHelper.isAvailable()) return null;\n\n    let dragOverNodes = <Array<HTMLElement>>this.domAdapter.documentOrShadowRoot.elementsFromPoint(clientX, clientY);\n    this.domAdapter.draggedElementShortcut.style.display = displayProp || \"block\";\n\n    let index = 0;\n    let dragOverNode: HTMLElement = dragOverNodes[index];\n    while(dragOverNode && dragOverNode.className && typeof dragOverNode.className.indexOf == \"function\" && dragOverNode.className.indexOf(\"sv-drag-target-skipped\") != -1) {\n      index++;\n      dragOverNode = dragOverNodes[index];\n    }\n\n    if (!dragOverNode) return null;\n\n    return this.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n\n  protected getDataAttributeValueByNode(node: HTMLElement) {\n    let datasetName = \"svDropTarget\";\n    const words = this.draggedElementType.split(\"-\");\n    words.forEach((word) => {\n      datasetName += this.capitalizeFirstLetter(word);\n    });\n    return node.dataset[datasetName];\n  }\n\n  protected getDropTargetByNode(\n    dropTargetNode: HTMLElement,\n    event: PointerEvent\n  ): any {\n    let dataAttributeValue = this.getDataAttributeValueByNode(dropTargetNode);\n\n    return this.getDropTargetByDataAttributeValue(\n      dataAttributeValue,\n      dropTargetNode,\n      event\n    );\n  }\n\n  private capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  //TODO adandone unrequired params (survey-elements)\n  protected abstract getDropTargetByDataAttributeValue(\n    dataAttributeValue: string,\n    dropTargetNode?: HTMLElement,\n    event?: PointerEvent\n  ): any;\n\n  protected calculateVerticalMiddleOfHTMLElement(HTMLElement: HTMLElement): number {\n    const rect = HTMLElement.getBoundingClientRect();\n    return rect.y + rect.height / 2;\n  }\n\n  protected calculateHorizontalMiddleOfHTMLElement(HTMLElement: HTMLElement): number {\n    const rect = HTMLElement.getBoundingClientRect();\n    return rect.x + rect.width / 2;\n  }\n\n  protected calculateIsBottom(clientY: number, dropTargetNode?: HTMLElement): boolean {\n    return false;\n  }\n\n  protected findDropTargetNodeByDragOverNode(dragOverNode: HTMLElement): HTMLElement {\n    const dropTargetNode: HTMLElement = dragOverNode.closest(this.dropTargetDataAttributeName);\n    return dropTargetNode;\n  }\n\n  public dragOver(event: PointerEvent): void {\n    const dropTargetNode = this.findDropTargetNodeFromPoint(\n      event.clientX,\n      event.clientY\n    );\n\n    if (!dropTargetNode) {\n      this.banDropHere();\n      return;\n    }\n\n    this.dropTarget = this.getDropTargetByNode(dropTargetNode, event);\n\n    const isDropTargetValid = this.isDropTargetValid(\n      this.dropTarget,\n      dropTargetNode\n    );\n\n    this.doDragOver();\n\n    if (!isDropTargetValid) {\n      this.banDropHere();\n      return;\n    }\n\n    let isBottom = this.calculateIsBottom(event.clientY, dropTargetNode);\n\n    this.allowDropHere = true;\n\n    if (this.isDropTargetDoesntChanged(isBottom)) return;\n\n    this.isBottom = null; //TODO need for property change trigger with guarantee but it would be better not to watch on isBottom property but have some event like onValidTargetDragOver\n    this.isBottom = isBottom;\n    if (this.draggedElement != this.dropTarget) {\n      this.afterDragOver(dropTargetNode);\n    }\n    this.prevDropTarget = this.dropTarget;\n  }\n\n  protected abstract doDrop(): any;\n  public drop(): void {\n    if (this.allowDropHere) {\n      const fromElement = this.draggedElement.parent;\n      const newElement = this.doDrop();\n      this.onDragEnd.fire(this, { fromElement: fromElement, draggedElement: newElement, toElement: this.dropTarget });\n    }\n  }\n\n  public clear(): void {\n    const options = {\n      draggedElement: this.draggedElement\n    };\n    this.dropTarget = null;\n    this.prevDropTarget = null;\n    this.draggedElement = null;\n    this.isBottom = null;\n    this.parentElement = null;\n    this.onDragClear.fire(this, options);\n  }\n}\n", "import { CssClassBuilder } from \"../utils/cssClassBuilder\";\nimport { DomDocumentHelper } from \"../global_variables_utils\";\nimport { MatrixDropdownRowModelBase } from \"../question_matrixdropdownbase\";\nimport { QuestionMatrixDynamicModel, MatrixDynamicRowModel } from \"../question_matrixdynamic\";\nimport { DragDropCore } from \"./core\";\nimport { DragDropAllowEvent, MatrixRowDragOverEvent } from \"src/survey-events-api\";\nimport { Question } from \"src/question\";\nexport class DragDropMatrixRows extends DragDropCore<QuestionMatrixDynamicModel> {\n  private draggedRenderedRow;\n  private initialDraggedElementIndex: number;\n  private lastDropTargetParentElement;\n  private dropIsBanned = false;\n\n  protected get draggedElementType(): string {\n    return \"matrix-row\";\n  }\n\n  protected restoreUserSelectValue: string;\n\n  private patchUserSelect() {\n    const _body = DomDocumentHelper.getBody();\n    if (!!_body) {\n      this.restoreUserSelectValue = _body.style.userSelect;\n      _body.style.userSelect = \"none\";\n    }\n  }\n\n  private matrixRowMap = {};\n\n  protected onStartDrag(): void {\n    this.patchUserSelect();\n    const renderedRows = this.parentElement.renderedTable.rows;\n    let index = renderedRows.findIndex(r => r.row === this.draggedElement);\n    if (index >= 0) {\n      this.draggedRenderedRow = renderedRows[index];\n      this.initialDraggedElementIndex = index;\n      this.draggedRenderedRow.isGhostRow = true;\n      this.lastDropTargetParentElement = this.parentElement;\n    }\n\n    const matrices = [];\n    function fillMatricies(questions: Question[]) {\n      const ms = questions.filter(q => q.isDescendantOf(\"matrixdynamic\") && (q as QuestionMatrixDynamicModel).allowRowReorder);\n      ms.forEach((m: QuestionMatrixDynamicModel) => {\n        matrices.push(m);\n        if (m.detailPanelMode !== \"none\") {\n          m.visibleRows.forEach(r => {\n            if (r.isDetailPanelShowing) {\n              fillMatricies(r.questions);\n            }\n          });\n        }\n      });\n    }\n\n    if (this.survey.onMatrixRowDragOver.isEmpty) {\n      matrices.push(this.parentElement);\n    } else {\n      fillMatricies(this.survey.getAllQuestions());\n    }\n\n    this.matrixRowMap = {};\n    matrices.forEach(matrix => {\n      matrix.visibleRows.forEach(row => {\n        this.matrixRowMap[row.id] = { row, matrix };\n      });\n      if (matrix.visibleRows.length == 0) {\n        this.matrixRowMap[matrix.id] = { row: matrix, matrix };\n      }\n    });\n\n    this.fromIndex = this.parentElement.visibleRows.indexOf(this.draggedElement);\n  }\n\n  private get shortcutClass(): string {\n    return new CssClassBuilder()\n      .append(this.parentElement.cssClasses.draggedRow)\n      //.append(this.parentElement.cssClasses.dragShortcutMobileMod, IsMobile)\n      .toString();\n  }\n\n  protected createDraggedElementShortcut(\n    text: string,\n    draggedElementNode: HTMLElement,\n    event: PointerEvent\n  ): HTMLElement {\n    const draggedElementShortcut: any = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n\n    draggedElementShortcut.className = this.shortcutClass;\n\n    const isDeepClone = true;\n\n    if (!!draggedElementNode) {\n      const row = <HTMLElement>(draggedElementNode\n        .closest(\"[data-sv-drop-target-matrix-row]\"));\n      const clone = <HTMLElement>(row.cloneNode(isDeepClone));\n\n      clone.style.cssText = `\n        width: ${row.offsetWidth}px;\n      `;\n\n      clone.classList.remove(\"sv-matrix__drag-drop--moveup\");\n      clone.classList.remove(\"sv-matrix__drag-drop--movedown\");\n      this.draggedElement.isDragDropMoveDown = false;\n      this.draggedElement.isDragDropMoveUp = false;\n\n      draggedElementShortcut.appendChild(clone);\n\n      const rect = draggedElementNode.getBoundingClientRect();\n      draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n      draggedElementShortcut.shortcutYOffset = event.clientY - rect.y;\n    }\n\n    return draggedElementShortcut;\n  }\n\n  private fromIndex: number = null;\n  private toIndex: number = null;\n  private toMatrix: QuestionMatrixDynamicModel = null;\n\n  protected getDropTargetByDataAttributeValue(\n    dataAttributeValue: any\n  ): MatrixDropdownRowModelBase {\n    const mapData = this.matrixRowMap[dataAttributeValue];\n    return mapData?.row || mapData?.matrix;\n  }\n  public canInsertIntoThisRow(row: MatrixDynamicRowModel): boolean {\n    const lockedRows = this.parentElement.lockedRowCount;\n    return lockedRows <= 0 || row.rowIndex > lockedRows;\n  }\n  protected isDropTargetValid(dropTarget: any, dropTargetNode?: HTMLElement): boolean {\n    return this.canInsertIntoThisRow(dropTarget);\n  }\n\n  protected calculateIsBottom(clientY: number, dropTargetNode?: HTMLElement): boolean {\n    const rect = dropTargetNode.getBoundingClientRect();\n    return clientY >= rect.y + rect.height / 2;\n  }\n\n  private removeGhost() {\n    const lastRenderedRows = this.lastDropTargetParentElement.renderedTable.rows;\n    const draggedRenderedRowIndex = lastRenderedRows.indexOf(this.draggedRenderedRow);\n    if (draggedRenderedRowIndex >= 0) lastRenderedRows.splice(draggedRenderedRowIndex, 1);\n  }\n\n  protected doBanDropHere = (): void => {\n    if (!this.dropIsBanned) {\n      this.removeGhost();\n      this.parentElement.renderedTable.rows.splice(this.initialDraggedElementIndex, 0, this.draggedRenderedRow);\n      this.dropIsBanned = true;\n      this.lastDropTargetParentElement = this.parentElement;\n    }\n  };\n\n  protected afterDragOver(dropTargetNode: HTMLElement): void {\n    if (!this.dropTarget) return;\n    const dropTargetMatrix = this.matrixRowMap[this.dropTarget.id].matrix;\n    const dropTargetRow = this.matrixRowMap[this.dropTarget.id].row;\n    const bottomOffset = this.isBottom && !dropTargetRow.isDetailPanelShowing ? 1 : 0;\n    let toIndex = 0;\n    const options: MatrixRowDragOverEvent = {\n      allow: dropTargetMatrix == this.parentElement,\n      row: dropTargetRow,\n      fromMatrix: this.parentElement,\n      toMatrix: dropTargetMatrix,\n    } as any;\n    this.survey.onMatrixRowDragOver.fire(this.survey, options);\n    if (!options.allow) return;\n\n    this.removeGhost();\n    this.lastDropTargetParentElement = dropTargetMatrix;\n\n    const renderedRows = dropTargetMatrix.renderedTable.rows;\n    if (dropTargetMatrix.visibleRows.length > 0) {\n      const dropTargetRenderedRowIndex = renderedRows.findIndex(r => r.row == this.dropTarget);\n      if (dropTargetRenderedRowIndex >= 0) {\n        renderedRows.splice(dropTargetRenderedRowIndex + bottomOffset, 0, this.draggedRenderedRow);\n      }\n      toIndex = dropTargetMatrix.visibleRows.indexOf(this.dropTarget) + bottomOffset;\n    } else {\n      if (!dropTargetMatrix.renderedTable.headerRow) renderedRows[0].cells[0].colSpans = this.draggedRenderedRow.cells.length;\n      renderedRows.splice(0, 0, this.draggedRenderedRow);\n    }\n\n    this.toIndex = toIndex;\n    this.toMatrix = dropTargetMatrix;\n    this.dropIsBanned = false;\n\n    super.ghostPositionChanged();\n  }\n\n  protected doDrop = (): QuestionMatrixDynamicModel => {\n    if (this.parentElement == this.toMatrix) {\n      if (this.fromIndex < this.toIndex) {\n        this.toIndex--;\n      }\n      this.parentElement.moveRowByIndex(this.fromIndex, this.toIndex);\n    } else if (this.toMatrix) {\n      const row = { ...this.parentElement.value[this.fromIndex] };\n      this.parentElement.removeRowByIndex(this.fromIndex);\n      this.toMatrix.addRowByIndex(row, this.toIndex);\n    }\n    return this.parentElement;\n  };\n\n  public clear(): void {\n    this.matrixRowMap = {};\n    const renderedRows = this.parentElement.renderedTable.rows;\n    renderedRows.forEach((renderedRow) => {\n      renderedRow.isGhostRow = false;\n    });\n    this.parentElement.clearOnDrop();\n    if (this.toMatrix)this.toMatrix.clearOnDrop();\n    this.fromIndex = null;\n    this.toIndex = null;\n    const _body = DomDocumentHelper.getBody();\n    if (!!_body) {\n      _body.style.userSelect = this.restoreUserSelectValue || \"initial\";\n    }\n    super.clear();\n  }\n}\n", "import { IsTouch } from \"./devices\";\n\nexport interface ITargets {\n  target: HTMLElement; currentTarget: HTMLElement;\n}\n\nexport class DragOrClickHelper<T = any> {\n  private pointerDownEvent:any;\n  private targets: ITargets;\n  private startX: any;\n  private startY: any;\n  private currentX: any;\n  private currentY: any;\n  private itemModel: any;\n\n  constructor(public dragHandler: (event: PointerEvent, targets: ITargets, item?: T) => void, public preventOnTouch = true) { }\n\n  public onPointerDown(pointerDownEvent: PointerEvent, itemModel?: T) {\n    this.targets = { currentTarget: pointerDownEvent.currentTarget as HTMLElement, target: pointerDownEvent.target as HTMLElement };\n    if (IsTouch && this.preventOnTouch) {\n      this.dragHandler(pointerDownEvent, this.targets, itemModel); //TODO handle inside in the library's drag drop core, need refactoring\n      return;\n    }\n    this.pointerDownEvent = pointerDownEvent;\n    this.startX = pointerDownEvent.pageX;\n    this.startY = pointerDownEvent.pageY;\n    this.targets.currentTarget.getRootNode().addEventListener(\"pointermove\", this.tryToStartDrag);\n    this.targets.currentTarget.addEventListener(\"pointerup\", this.onPointerUp);\n    this.itemModel = itemModel;\n  }\n\n  private onPointerUp = (pointerUpEvent: any) => {\n    this.clearListeners();\n  };\n\n  private tryToStartDrag = (pointerMoveEvent: any) => {\n    this.currentX = pointerMoveEvent.pageX;\n    this.currentY = pointerMoveEvent.pageY;\n    if (this.isMicroMovement) return;\n\n    this.clearListeners();\n\n    this.dragHandler(this.pointerDownEvent, this.targets, this.itemModel);\n    return true;\n  };\n\n  // see https://stackoverflow.com/questions/6042202/how-to-distinguish-mouse-click-and-drag\n  private get isMicroMovement() {\n    const delta = 10;\n    const diffX = Math.abs(this.currentX - this.startX);\n    const diffY = Math.abs(this.currentY - this.startY);\n    return diffX < delta && diffY < delta;\n  }\n  private clearListeners() {\n    if (!this.pointerDownEvent) return;\n    this.targets.currentTarget.getRootNode().removeEventListener(\"pointermove\", this.tryToStartDrag);\n    this.targets.currentTarget.removeEventListener(\"pointerup\", this.onPointerUp);\n  }\n}\n", "import { Action } from \"./actions/action\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { Question } from \"./question\";\n\nexport class QuestionSingleInputSummaryItem {\n  constructor(public locText: LocalizableString, public btnEdit: Action, public btnRemove: Action) {\n  }\n  public get showRemove(): boolean { return !!this.btnRemove; }\n}\n\nexport class QuestionSingleInputSummary {\n  constructor(public question: Question, public noEntry: LocalizableString) {\n  }\n  public items: Array<QuestionSingleInputSummaryItem> = [];\n  public isEmpty(): boolean {\n    return this.items.length == 0;\n  }\n  public dispose(): void {\n    this.items.forEach((item) => {\n      item.btnEdit?.dispose();\n      item.btnRemove?.dispose();\n    });\n  }\n}", "import { Serializer } from \"./jsonobject\";\nimport { Helpers } from \"./helpers\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { Question, QuestionValueGetterContext } from \"./question\";\nimport {\n  QuestionMatrixDropdownModelBase,\n  MatrixDropdownRowModelBase,\n  IMatrixDropdownData,\n  MatrixSingleInputLocOwner\n} from \"./question_matrixdropdownbase\";\nimport { SurveyError } from \"./survey-error\";\nimport { MinRowCountError } from \"./error\";\nimport { Action, IAction } from \"./actions/action\";\nimport { settings } from \"./settings\";\nimport { confirmActionAsync } from \"./utils/utils\";\nimport { DragDropMatrixRows } from \"./dragdrop/matrix-rows\";\nimport { IShortcutText, ISurveyImpl, IProgressInfo } from \"./base-interfaces\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { QuestionMatrixDropdownRenderedTable } from \"./question_matrixdropdownrendered\";\nimport { DragOrClickHelper, ITargets } from \"./utils/dragOrClickHelper\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { QuestionSingleInputSummary, QuestionSingleInputSummaryItem } from \"./questionSingleInputSummary\";\nimport { IValueGetterContext, IValueGetterInfo, IValueGetterItem } from \"./conditionProcessValue\";\nimport { ValidationContext } from \"./question\";\n\nexport class MatrixDynamicValueGetterContext extends QuestionValueGetterContext {\n  constructor (protected question: Question) {\n    super(question);\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (!createObjects && this.question.isEmpty()) return { isFound: path.length === 0, value: undefined };\n    if (index > -1) {\n      const md = <QuestionMatrixDynamicModel>this.question;\n      const rows = md.allRows;\n      if (index >= 0 && index < rows.length) {\n        return rows[index].getValueGetterContext().getValue(path, false, index, createObjects);\n      }\n      return { isFound: false, value: undefined, context: this };\n    }\n    return super.getValue(path, isRoot, index, createObjects);\n  }\n}\n\nexport class MatrixDynamicRowModel extends MatrixDropdownRowModelBase implements IShortcutText {\n  private dragOrClickHelper: DragOrClickHelper;\n\n  constructor(public index: number, data: IMatrixDropdownData, value: any) {\n    super(data, value);\n    this.buildCells(value);\n  }\n  protected getRowIndex(): number {\n    const res = super.getRowIndex();\n    return res > 0 ? res : this.index + 1;\n  }\n  public get rowName() {\n    return this.id;\n  }\n  public get dataName(): string {\n    return \"row\" + (this.index + 1);\n  }\n  public get text(): any {\n    return \"row \" + (this.visibleIndex + 1);\n  }\n  public getAccessbilityText(): string {\n    return (this.visibleIndex + 1).toString();\n  }\n  public get shortcutText(): string {\n    const matrix = <QuestionMatrixDynamicModel>this.data;\n    const index = matrix.visibleRows.indexOf(this) + 1;\n    const questionValue1 = this.cells.length > 1 ? this.cells[1][\"questionValue\"] : undefined;\n    const questionValue0 = this.cells.length > 0 ? this.cells[0][\"questionValue\"] : undefined;\n    return (\n      questionValue1 && questionValue1.value ||\n      questionValue0 && questionValue0.value ||\n      \"\" + index\n    );\n  }\n}\n\n/**\n  * A class that describes the Dynamic Matrix question type.\n  *\n  * Dynamic Matrix allows respondents to add and delete matrix rows. You can use the [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Checkboxes](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radio Button Group](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Single-Line Input](https://surveyjs.io/form-library/documentation/questiontextmodel), [Long Text](https://surveyjs.io/form-library/documentation/questioncommentmodel), and other question types as cell editors.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/ (linkStyle))\n  */\nexport class QuestionMatrixDynamicModel extends QuestionMatrixDropdownModelBase\n  implements IMatrixDropdownData {\n  public onGetValueForNewRowCallBack: (\n    sender: QuestionMatrixDynamicModel\n  ) => any;\n  private rowCounter = 0;\n  private initialRowCount: number;\n  private setRowCountValueFromData: boolean = false;\n\n  constructor(name: string) {\n    super(name);\n    this.initialRowCount = this.getDefaultPropertyValue(\"rowCount\");\n    this.createLocalizableString(\"confirmDeleteText\", this, false, \"confirmDelete\");\n    var locAddRowText = this.createLocalizableString(\"addRowText\", this);\n    locAddRowText.onGetTextCallback = (text: string): string => {\n      return !!text ? text : this.defaultAddRowText;\n    };\n    this.createLocalizableString(\"removeRowText\", this, false, \"removeRow\");\n    this.createLocalizableString(\"noRowsText\", this, false, true);\n    this.createLocalizableString(\"editRowText\", this, false, \"editText\");\n    this.registerPropertyChangedHandlers([\"hideColumnsIfEmpty\", \"allowAddRows\"], () => { this.updateShowTableAndAddRow(); });\n    this.registerPropertyChangedHandlers([\"allowRowReorder\", \"isReadOnly\", \"lockedRowCount\"], () => { this.resetRenderedTable(); });\n    this.registerPropertyChangedHandlers([\"minRowCount\"], () => { this.onMinRowCountChanged(); });\n    this.registerPropertyChangedHandlers([\"maxRowCount\"], () => { this.onMaxRowCountChanged(); });\n    this.dragOrClickHelper = new DragOrClickHelper(this.startDragMatrixRow);\n  }\n\n  public dragDropMatrixRows: DragDropMatrixRows;\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    super.setSurveyImpl(value, isLight);\n    this.dragDropMatrixRows = new DragDropMatrixRows(this.survey, null, true);\n  }\n\n  private draggedRow: MatrixDropdownRowModelBase;\n  private isBanStartDrag(pointerDownEvent: PointerEvent): boolean {\n    const target = (<HTMLElement>pointerDownEvent.target);\n    return target.getAttribute(\"contenteditable\") === \"true\" || target.nodeName === \"INPUT\" || !this.isDragHandleAreaValid(target);\n  }\n  public isDragHandleAreaValid(node:HTMLElement): boolean {\n    if (this.survey.matrixDragHandleArea === \"icon\") {\n      return node.classList.contains(this.cssClasses.dragElementDecorator);\n    }\n    return true;\n  }\n  public onPointerDown(pointerDownEvent: PointerEvent, row: MatrixDropdownRowModelBase):void {\n    if (!row || !this.isRowsDragAndDrop || this.isDesignMode) return;\n    if (this.isBanStartDrag(pointerDownEvent)) return;\n    if (row.isDetailPanelShowing) return;\n    this.draggedRow = row;\n    this.dragOrClickHelper.onPointerDown(pointerDownEvent);\n  }\n\n  public startDragMatrixRow = (event: PointerEvent, targets: ITargets): void => {\n    this.dragDropMatrixRows.startDrag(event, this.draggedRow, this, targets.target);\n  };\n\n  public getType(): string {\n    return \"matrixdynamic\";\n  }\n\n  public get isRowsDynamic(): boolean {\n    return true;\n  }\n  /**\n   * Specifies whether to display a confirmation dialog when a respondent wants to delete a row.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see confirmDeleteText\n   */\n  public get confirmDelete(): boolean {\n    return this.getPropertyValue(\"confirmDelete\");\n  }\n  public set confirmDelete(val: boolean) {\n    this.setPropertyValue(\"confirmDelete\", val);\n  }\n  public get isValueArray(): boolean { return true; }\n  /**\n   * Specifies a key column. Set this property to a column name, and the question will display `keyDuplicationError` if a user tries to enter a duplicate value in this column.\n   * @see keyDuplicationError\n   */\n  public get keyName(): string {\n    return this.getPropertyValue(\"keyName\", \"\");\n  }\n  public set keyName(val: string) {\n    this.setPropertyValue(\"keyName\", val);\n  }\n  /**\n   * If it is not empty, then this value is set to every new row, including rows created initially, unless the defaultValue is not empty\n   * @see defaultValue\n   * @see copyDefaultValueFromLastEntry\n   */\n  public get defaultRowValue(): any {\n    return this.getPropertyValue(\"defaultRowValue\");\n  }\n  public set defaultRowValue(val: any) {\n    this.setPropertyValue(\"defaultRowValue\", val);\n  }\n  /**\n   * Specifies whether default values for a new row/column should be copied from the last row/column.\n   *\n   * If you also specify `defaultValue`, it will be merged with the copied values.\n   * @see defaultValue\n   */\n  public get copyDefaultValueFromLastEntry(): boolean {\n    return this.getPropertyValue(\"copyDefaultValueFromLastEntry\");\n  }\n  public set copyDefaultValueFromLastEntry(val: boolean) {\n    this.setPropertyValue(\"copyDefaultValueFromLastEntry\", val);\n  }\n  /**\n   * @deprecated Use the [`copyDefaultValueFromLastEntry`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#copyDefaultValueFromLastEntry) property instead.\n   */\n  public get defaultValueFromLastRow(): boolean {\n    return this.copyDefaultValueFromLastEntry;\n  }\n  public set defaultValueFromLastRow(val: boolean) {\n    this.copyDefaultValueFromLastEntry = val;\n  }\n  protected isDefaultValueEmpty(): boolean {\n    return (\n      super.isDefaultValueEmpty() && this.isValueEmpty(this.defaultRowValue)\n    );\n  }\n  protected valueFromData(val: any): any {\n    if (this.minRowCount < 1 || this.isEmpty()) return super.valueFromData(val);\n    return this.correctValueForMinMaxRows(val);\n  }\n  protected correctValueForMinMaxRows(val: any): any {\n    if (!Array.isArray(val)) val = [];\n    for (var i = val.length; i < this.minRowCount; i++) val.push({});\n    return val;\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return Array.isArray(val);\n  }\n  protected setDefaultValue() {\n    if (\n      this.isValueEmpty(this.defaultRowValue) ||\n      !this.isValueEmpty(this.defaultValue)\n    ) {\n      super.setDefaultValue();\n      return;\n    }\n    if (!this.isEmpty() || this.rowCount == 0) return;\n    var newValue = [];\n    for (var i = 0; i < this.rowCount; i++) {\n      newValue.push(this.defaultRowValue);\n    }\n    this.value = newValue;\n  }\n  public moveRowByIndex(fromIndex: number, toIndex: number):void {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && Math.max(fromIndex, toIndex) >= value.length) return;\n    const movableRow = value[fromIndex];\n    value.splice(fromIndex, 1);\n    value.splice(toIndex, 0, movableRow);\n    this.value = value;\n  }\n  public addRowByIndex(rowData: any, toIndex: number):void {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && toIndex >= value.length) return;\n    value.splice(toIndex, 0, rowData);\n    this.rowCount++;\n    this.value = value;\n  }\n  public removeRowByIndex(fromIndex: number):void {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && fromIndex >= value.length) return;\n    value.splice(fromIndex, 1);\n    this.rowCount--;\n    this.value = value;\n  }\n  public clearOnDrop(): void {\n    if (!this.isEditingSurveyElement) {\n      this.resetRenderedTable();\n    }\n  }\n  initDataUI(): void {\n    if (!this.generatedVisibleRows) {\n      this.getVisibleRows();\n    }\n  }\n  /**\n   * The number of rows in the matrix.\n   *\n   * Default value: 2\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see minRowCount\n   * @see maxRowCount\n   */\n  public get rowCount(): number {\n    return this.rowCountValue;\n  }\n  public set rowCount(val: number) {\n    val = Helpers.getNumber(val);\n    if (val < 0 || val > settings.matrix.maxRowCount || val === this.rowCount) return;\n    this.setRowCountValueFromData = false;\n    var prevValue = this.rowCountValue;\n    this.rowCountValue = val;\n    if (this.value && this.value.length > val) {\n      var qVal = this.value;\n      qVal.splice(val);\n      this.value = qVal;\n    }\n    if (this.isUpdateLocked) {\n      this.initialRowCount = val;\n      return;\n    }\n    if (this.generatedVisibleRows || prevValue == 0) {\n      if (!this.generatedVisibleRows) {\n        this.clearGeneratedRows();\n        this.generatedVisibleRows = [];\n      }\n      this.generatedVisibleRows.splice(val);\n      for (var i = prevValue; i < val; i++) {\n        var newRow = this.createMatrixRow(this.getValueForNewRow());\n        this.generatedVisibleRows.push(newRow);\n        this.onMatrixRowCreated(newRow);\n      }\n      this.runCondition(this.getDataFilteredProperties());\n    }\n    this.onRowsChanged();\n  }\n  protected updateBindingProp(propName: string, value: any): void {\n    super.updateBindingProp(propName, value);\n    const rows = this.generatedVisibleRows;\n    if (propName !== \"rowCount\" || !Array.isArray(rows)) return;\n    const val = this.getUnbindValue(this.value) || [];\n    if (val.length < rows.length) {\n      let hasValue = false;\n      for (let i = val.length; i < rows.length; i ++) {\n        hasValue ||= !rows[i].isEmpty;\n        val.push(rows[i].value || {});\n      }\n      if (hasValue) {\n        this.value = val;\n      }\n    }\n  }\n  protected updateProgressInfoByValues(res: IProgressInfo): void {\n    let val = this.value;\n    if (!Array.isArray(val)) val = [];\n    for (var i = 0; i < this.rowCount; i ++) {\n      const rowValue = i < val.length ? val[i] : {};\n      this.updateProgressInfoByRow(res, rowValue);\n    }\n  }\n  private getValueForNewRow(): any {\n    var res = null;\n    if (!!this.onGetValueForNewRowCallBack) {\n      res = this.onGetValueForNewRowCallBack(this);\n    }\n    return res;\n  }\n  /**\n   * Specifies whether users can drag and drop matrix rows to reorder them. Applies only if [`transposeData`](#transposeData) is `false`.\n   *\n   * Default value: `false`\n   */\n  public get allowRowReorder(): boolean {\n    return this.getPropertyValue(\"allowRowReorder\");\n  }\n  public set allowRowReorder(val: boolean) {\n    this.setPropertyValue(\"allowRowReorder\", val);\n  }\n  /**\n   * @deprecated Use the [`allowRowReorder`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#allowRowReorder) property instead.\n   */\n  public get allowRowsDragAndDrop(): boolean {\n    return this.allowRowReorder;\n  }\n  public set allowRowsDragAndDrop(val: boolean) {\n    this.allowRowReorder = val;\n  }\n  public get allowRowDragIn() {\n    return !(this.survey as any)?.onMatrixRowDragOver?.isEmpty;\n  }\n  public get isRowsDragAndDrop(): boolean {\n    return this.allowRowReorder && !this.isReadOnly;\n  }\n  public get lockedRowCount(): number {\n    return this.getPropertyValue(\"lockedRowCount\", 0);\n  }\n  public set lockedRowCount(val: number) {\n    this.setPropertyValue(\"lockedRowCount\", val);\n  }\n\n  public get iconDragElement(): string {\n    return this.cssClasses.iconDragElement;\n  }\n\n  protected createRenderedTable(): QuestionMatrixDropdownRenderedTable {\n    return new QuestionMatrixDynamicRenderedTable(this);\n  }\n\n  private get rowCountValue(): number {\n    return this.getPropertyValue(\"rowCount\");\n  }\n  private set rowCountValue(val: number) {\n    this.setPropertyValue(\"rowCount\", val);\n  }\n  /**\n   * A minimum number of rows in the matrix. Users cannot delete rows if `rowCount` equals `minRowCount`.\n   *\n   * Default value: 0\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see rowCount\n   * @see maxRowCount\n   * @see allowRemoveRows\n   */\n  public get minRowCount(): number {\n    return this.getPropertyValue(\"minRowCount\");\n  }\n  public set minRowCount(val: number) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minRowCount\", val);\n  }\n  private onMinRowCountChanged(): void {\n    const val = this.minRowCount;\n    if (val > this.maxRowCount)this.maxRowCount = val;\n    if (this.initialRowCount < val)this.initialRowCount = val;\n    if (this.rowCount < val)this.rowCount = val;\n  }\n  /**\n   * A maximum number of rows in the matrix. Users cannot add new rows if `rowCount` equals `maxRowCount`.\n   *\n   * Default value: 1000 (inherited from [`settings.matrix.maxRowCount`](https://surveyjs.io/form-library/documentation/settings#matrixMaximumRowCount))\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see rowCount\n   * @see minRowCount\n   * @see allowAddRows\n   */\n  public get maxRowCount(): number {\n    return this.getPropertyValue(\"maxRowCount\");\n  }\n  public set maxRowCount(val: number) {\n    if (val <= 0) return;\n    if (val > settings.matrix.maxRowCount)\n      val = settings.matrix.maxRowCount;\n    if (val == this.maxRowCount) return;\n    this.setPropertyValue(\"maxRowCount\", val);\n  }\n  private onMaxRowCountChanged(): void {\n    const val = this.maxRowCount;\n    if (val < this.minRowCount)this.minRowCount = val;\n    if (this.rowCount > val)this.rowCount = val;\n  }\n  /**\n   * Specifies whether users are allowed to add new rows.\n   *\n   * Default value: `true`\n   * @see canAddRow\n   * @see allowRemoveRows\n   */\n  public get allowAddRows(): boolean {\n    return this.getPropertyValue(\"allowAddRows\");\n  }\n  public set allowAddRows(val: boolean) {\n    this.setPropertyValue(\"allowAddRows\", val);\n  }\n  /**\n   * Specifies whether users are allowed to delete rows.\n   *\n   * Default value: `true`\n   * @see canRemoveRows\n   * @see allowAddRows\n   */\n  public get allowRemoveRows(): boolean {\n    return this.getPropertyValue(\"allowRemoveRows\");\n  }\n  public set allowRemoveRows(val: boolean) {\n    this.setPropertyValue(\"allowRemoveRows\", val);\n    if (!this.isUpdateLocked) {\n      this.resetRenderedTable();\n    }\n  }\n  /**\n   * Indicates whether it is possible to add a new row.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to add new rows (`allowAddRows` is `true`).\n   * - The question, its parent panel, or survey is not in read-only state.\n   * - `rowCount` is less than `maxRowCount`.\n   * @see allowAddRows\n   * @see isReadOnly\n   * @see rowCount\n   * @see maxRowCount\n   * @see canRemoveRows\n   */\n  public get canAddRow(): boolean {\n    return (\n      this.allowAddRows && !this.isReadOnly && this.rowCount < this.maxRowCount\n    );\n  }\n  public canRemoveRowsCallback: (allow: boolean) => boolean;\n  /**\n   * Indicates whether it is possible to delete rows.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to delete rows (`allowRemoveRows` is `true`).\n   * - The question, its parent panel, or survey is not in read-only state.\n   * - `rowCount` exceeds `minRowCount`.\n   * @see allowRemoveRows\n   * @see isReadOnly\n   * @see rowCount\n   * @see minRowCount\n   * @see canAddRow\n   */\n  public get canRemoveRows(): boolean {\n    var res =\n      this.allowRemoveRows &&\n      !this.isReadOnly &&\n      this.rowCount > this.minRowCount;\n    return !!this.canRemoveRowsCallback ? this.canRemoveRowsCallback(res) : res;\n  }\n  public canRemoveRow(row: MatrixDropdownRowModelBase): boolean {\n    if (!this.survey) return true;\n    const index = (<MatrixDynamicRowModel>row).rowIndex - 1;\n    if (this.lockedRowCount > 0 && index < this.lockedRowCount) return false;\n    return this.survey.matrixAllowRemoveRow(this, index, row);\n  }\n  public addRowUI(): void {\n    this.addRow(true);\n  }\n  private getQuestionToFocusOnAddingRow(): Question {\n    if (this.visibleRows.length === 0) return null;\n    var row = this.visibleRows[this.visibleRows.length - 1];\n    for (var i = 0; i < row.cells.length; i++) {\n      var q = row.cells[i].question;\n      if (!!q && q.isVisible && !q.isReadOnly) {\n        return q;\n      }\n    }\n    return null;\n  }\n  /**\n   * Creates and adds a new row to the matrix.\n   * @param setFocus *(Optional)* Pass `true` to focus the cell in the first column.\n   */\n  public addRow(setFocus?: boolean): void {\n    const oldRowCount = this.rowCount;\n    const allow = this.canAddRow;\n    var options = { question: this, canAddRow: allow, allow: allow };\n    if (!!this.survey) {\n      this.survey.matrixBeforeRowAdded(options);\n    }\n    const newAllow = allow !== options.allow ? options.allow :\n      (allow !== options.canAddRow ? options.canAddRow : allow);\n    if (!newAllow) return;\n    this.onStartRowAddingRemoving();\n    this.addRowCore();\n    this.onEndRowAdding();\n    this.singleInputOnAddItem(false);\n    if (this.detailPanelShowOnAdding && this.visibleRows.length > 0) {\n      this.visibleRows[this.visibleRows.length - 1].showDetailPanel();\n    }\n    if (setFocus && oldRowCount !== this.rowCount) {\n      const q = this.getQuestionToFocusOnAddingRow();\n      if (!!q) {\n        q.focus();\n      }\n    }\n  }\n  /**\n   * Specifies whether to expand the detail section immediately when a respondent adds a new row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanelMode\n   */\n  public get detailPanelShowOnAdding(): boolean {\n    return this.getPropertyValue(\"detailPanelShowOnAdding\");\n  }\n  public set detailPanelShowOnAdding(val: boolean) {\n    this.setPropertyValue(\"detailPanelShowOnAdding\", val);\n  }\n  protected hasRowsAsItems(): boolean {\n    return false;\n  }\n  public unbindValue() {\n    this.clearGeneratedRows();\n    this.clearPropertyValue(\"value\");\n    this.rowCountValue = 0;\n    super.unbindValue();\n  }\n  protected isValueSurveyElement(val: any): boolean {\n    return this.isEditingSurveyElement || super.isValueSurveyElement(val);\n  }\n  private addRowCore() {\n    var prevRowCount = this.rowCount;\n    this.rowCount = this.rowCount + 1;\n    var defaultValue = this.getDefaultRowValue(true);\n    var newValue = null;\n    if (!this.isValueEmpty(defaultValue)) {\n      newValue = this.createNewValue();\n      if (newValue.length == this.rowCount) {\n        newValue[newValue.length - 1] = defaultValue;\n        this.value = newValue;\n      }\n    }\n    if (this.data) {\n      this.runCellsCondition(this.getDataFilteredProperties());\n      const rows = this.generatedVisibleRows;\n      if (this.isValueEmpty(defaultValue) && rows.length > 0) {\n        const row = rows[rows.length - 1];\n        if (!this.isValueEmpty(row.value)) {\n          if (!newValue) {\n            newValue = this.createNewValue();\n          }\n          if (\n            !this.isValueSurveyElement(newValue) &&\n            !this.isTwoValueEquals(newValue[newValue.length - 1], row.value)\n          ) {\n            newValue[newValue.length - 1] = row.value;\n            this.value = newValue;\n          }\n        }\n      }\n    }\n    if (this.survey) {\n      const rows = this.visibleRows;\n      if (prevRowCount + 1 == this.rowCount && rows.length > 0) {\n        const row = rows[rows.length - 1];\n        this.survey.matrixRowAdded(this, row);\n        this.onRowsChanged();\n      }\n    }\n  }\n  private getDefaultRowValue(isRowAdded: boolean): any {\n    var res = null;\n    for (var i = 0; i < this.columns.length; i++) {\n      var q = this.columns[i].templateQuestion;\n      if (!!q && !this.isValueEmpty(q.getDefaultValue())) {\n        res = res || {};\n        (<any>res)[this.columns[i].name] = q.getDefaultValue();\n      }\n    }\n    if (!this.isValueEmpty(this.defaultRowValue)) {\n      for (var key in this.defaultRowValue) {\n        res = res || {};\n        (<any>res)[key] = this.defaultRowValue[key];\n      }\n    }\n    if (isRowAdded && this.copyDefaultValueFromLastEntry) {\n      var val = this.value;\n      if (!!val && Array.isArray(val) && val.length >= this.rowCount - 1) {\n        var rowValue = val[this.rowCount - 2];\n        for (var key in rowValue) {\n          res = res || {};\n          (<any>res)[key] = rowValue[key];\n        }\n      }\n    }\n    return res;\n  }\n  public focusAddBUtton(): void {\n    const rootElement = this.getRootElement();\n    if (!!rootElement && !!this.cssClasses.buttonAdd) {\n      const addButton = rootElement.querySelectorAll(\".\" + this.cssClasses.buttonAdd)[0] as HTMLButtonElement;\n      addButton && addButton.focus();\n    }\n  }\n  public getActionCellIndex(row: MatrixDropdownRowModelBase): number {\n    const headerShift = this.showHeader ? 1 : 0;\n    if (this.isColumnLayoutHorizontal) {\n      return row.cells.length;\n    }\n    return this.visibleRows.indexOf(row) + headerShift;\n  }\n  public removeRowUI(value: any): void {\n    if (!!value && !!value.rowName) {\n      var index = this.visibleRows.indexOf(value);\n      if (index < 0) return;\n      value = index;\n    }\n    this.removeRow(value, undefined, () => {\n      const rowCount = this.visibleRows.length;\n      const nextIndex = index >= rowCount ? rowCount - 1 : index;\n      const nextRow = nextIndex > -1 ? this.visibleRows[nextIndex] : undefined;\n      setTimeout(() => {\n        if (nextRow) {\n          this.renderedTable.focusActionCell(nextRow, this.getActionCellIndex(nextRow));\n        } else {\n          this.focusAddBUtton();\n        }\n      }, 10);\n    });\n  }\n  public isRequireConfirmOnRowDelete(index: number): boolean {\n    if (!this.confirmDelete) return false;\n    if (index < 0 || index >= this.rowCount) return false;\n    var value = this.createNewValue();\n    if (this.isValueEmpty(value) || !Array.isArray(value)) return false;\n    if (index >= value.length) return false;\n    return !this.isValueEmpty(value[index]);\n  }\n  /**\n   * Removes a matrix row with a specified index.\n   * @param index A zero-based row index.\n   * @param confirmDelete *(Optional)* A Boolean value that specifies whether to display a confirmation dialog. If you do not specify this parameter, the [`confirmDelete`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#confirmDelete) property value is used.\n   */\n  public removeRow(index: number, confirmDelete?: boolean, onRowRemoved?: () => void): void {\n    if (!this.canRemoveRows) return;\n    if (index < 0 || index >= this.rowCount) return;\n    var row =\n      !!this.visibleRows && index < this.visibleRows.length\n        ? this.visibleRows[index]\n        : null;\n    if (confirmDelete === undefined) {\n      confirmDelete = this.isRequireConfirmOnRowDelete(index);\n    }\n    if (confirmDelete) {\n      confirmActionAsync({\n        message: this.confirmDeleteText,\n        funcOnYes: () => {\n          this.removeRowAsync(index, row);\n          onRowRemoved && onRowRemoved();\n        },\n        locale: this.getLocale(),\n        rootElement: this.survey.rootElement,\n        cssClass: this.cssClasses.confirmDialog\n      });\n      return;\n    }\n    this.removeRowAsync(index, row);\n    onRowRemoved && onRowRemoved();\n  }\n  private removeRowAsync(index: number, row: MatrixDropdownRowModelBase): void {\n    if (!!row && !!this.survey && !this.survey.matrixRowRemoving(this, index, row)) return;\n    this.onStartRowAddingRemoving();\n    this.removeRowCore(index);\n    this.singleInputOnRemoveItem(index);\n    this.onEndRowRemoving(row);\n  }\n  private removeRowCore(index: number) {\n    var row = this.visibleRows\n      ? this.visibleRows[index]\n      : null;\n    index = this.generatedVisibleRows.indexOf(row);\n    if (index < 0) return;\n    if (this.generatedVisibleRows && index < this.generatedVisibleRows.length) {\n      this.generatedVisibleRows.splice(index, 1);\n    }\n    this.rowCountValue--;\n    if (this.value) {\n      var val = [];\n      if (Array.isArray(this.value) && index < this.value.length) {\n        val = this.createValueCopy();\n      } else {\n        val = this.createNewValue();\n      }\n      val.splice(index, 1);\n      val = this.deleteRowValue(val, null);\n      this.isRowChanging = true;\n      this.value = val;\n      this.isRowChanging = false;\n    }\n    this.onRowsChanged();\n    if (this.survey) {\n      this.survey.matrixRowRemoved(this, index, row);\n    }\n  }\n  protected onSingleInputQuestionAdded(question: Question): void {\n    if (!this.showHeader) {\n      question.titleLocation = \"hidden\";\n    }\n  }\n  protected getSingleInputQuestionsCore(question: Question, checkDynamic: boolean): Array<Question> {\n    const res = new Array<Question>();\n    const rows = this.visibleRows;\n    if (checkDynamic) {\n      for (let i = 0; i < rows.length; i ++) {\n        const row = rows[i];\n        if (!row.hasValueAnyQuestion(true) || !row.validate(new ValidationContext())) {\n          this.fillSingleInputQuestionsByRow(res, row);\n        }\n      }\n    }\n    return this.getSingleInputQuestionsForDynamic(question, res);\n  }\n  protected fillSingleInputQuestionsInContainer(res: Array<Question>, innerQuestion: Question): void {\n    const row = this.getRowByQuestion(innerQuestion);\n    this.fillSingleInputQuestionsByRow(res, row);\n  }\n  private fillSingleInputQuestionsByRow(res: Array<Question>, row: MatrixDropdownRowModelBase): void {\n    if (row) {\n      row.questions.forEach(q => q.addNestedQuestion(res, true, false, false));\n    }\n  }\n\n  protected getSingleInputAddTextCore(): string {\n    if (!this.canAddRow) return undefined;\n    return this.addRowText;\n  }\n  protected singleInputAddItemCore(): void {\n    this.addRowUI();\n  }\n  protected singleInputRemoveItemCore(question: Question): void {\n    this.removeRowUI(this.getRowByQuestion(question));\n  }\n  protected getSingleQuestionOnChange(index: number): Question {\n    const rows = this.visibleRows;\n    if (rows.length > 0) {\n      if (index < 0 || index >= rows.length) index = rows.length - 1;\n      const row = rows[index];\n      const vQs = row.visibleQuestions;\n      if (vQs.length > 0) {\n        return vQs[0];\n      }\n    }\n    return null;\n  }\n  protected createSingleInputSummary(): QuestionSingleInputSummary {\n    const res = new QuestionSingleInputSummary(this, this.locNoRowsText);\n    const items = new Array<QuestionSingleInputSummaryItem>();\n    const canRemoveRows = this.canRemoveRows;\n    this.visibleRows.forEach((row) => {\n      const locText = new LocalizableString(new MatrixSingleInputLocOwner(this, row), true, undefined, this.getSingleInputTitleTemplate());\n      locText.setJson(this.locSingleInputTitleTemplate.getJson());\n      const bntEdit = new Action({ locTitle: this.getLocalizableString(\"editRowText\"), action: () => { this.singleInputEditRow(row); } });\n      const btnRemove = canRemoveRows && this.canRemoveRow(row) ?\n        new Action({ locTitle: this.locRemoveRowText, action: () => { this.removeRowUI(row); } }) : undefined;\n      items.push(new QuestionSingleInputSummaryItem(locText, bntEdit, btnRemove));\n    });\n    res.items = items;\n    return res;\n  }\n  /**\n   * A message displayed in a confirmation dialog that appears when a respondent wants to delete a row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see confirmDelete\n   */\n  public get confirmDeleteText() {\n    return this.getLocalizableStringText(\"confirmDeleteText\");\n  }\n  public set confirmDeleteText(val: string) {\n    this.setLocalizableStringText(\"confirmDeleteText\", val);\n  }\n  get locConfirmDeleteText() {\n    return this.getLocalizableString(\"confirmDeleteText\");\n  }\n  /**\n   * A caption for the Add Row button.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see addRowButtonLocation\n   */\n  public get addRowText() {\n    return this.getLocalizableStringText(\"addRowText\", this.defaultAddRowText);\n  }\n  public set addRowText(val: string) {\n    this.setLocalizableStringText(\"addRowText\", val);\n  }\n  get locAddRowText() {\n    return this.getLocalizableString(\"addRowText\");\n  }\n  private get defaultAddRowText(): string {\n    return this.getLocalizationString(\n      this.isColumnLayoutHorizontal ? \"addRow\" : \"addColumn\"\n    );\n  }\n  protected getSingleInputTitleTemplate(): string { return \"rowIndexTemplateTitle\"; }\n  /**\n   * Specifies the location of the Add Row button.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` - Displays the Add Row button at the top of the matrix.\n   * - `\"bottom\"` - Displays the Add Row button at the bottom of the matrix.\n   * - `\"topBottom\"` - Displays the Add Row button at the top and bottom of the matrix.\n   *\n   * Default value: `\"top\"` if [`transposeData`](#transposeData) is `true`; `\"bottom\"` if `transposeData` is `false` or the matrix is in compact mode.\n   * @see addRowText\n   */\n  public get addRowButtonLocation(): string {\n    return this.getPropertyValue(\"addRowButtonLocation\");\n  }\n  public set addRowButtonLocation(val: string) {\n    this.setPropertyValue(\"addRowButtonLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`addRowButtonLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#addRowButtonLocation) property instead.\n   */\n  public get addRowLocation(): string {\n    return this.addRowButtonLocation;\n  }\n  public set addRowLocation(val: string) {\n    this.addRowButtonLocation = val;\n  }\n  public getAddRowLocation(): string {\n    return this.addRowButtonLocation;\n  }\n  /**\n   * Specifies whether to hide columns when the matrix does not contain any rows. If you enable this property, the matrix displays the `noRowsText` message and the Add Row button.\n   *\n   * Default value: `false`\n   * @see noRowsText\n   */\n  public get hideColumnsIfEmpty(): boolean {\n    return this.getPropertyValue(\"hideColumnsIfEmpty\");\n  }\n  public set hideColumnsIfEmpty(val: boolean) {\n    this.setPropertyValue(\"hideColumnsIfEmpty\", val);\n  }\n  public getShowColumnsIfEmpty() {\n    return this.hideColumnsIfEmpty;\n  }\n  /**\n   * Use this property to change the default value of remove row button text.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   */\n  public get removeRowText() {\n    return this.getLocalizableStringText(\"removeRowText\");\n  }\n  public set removeRowText(val: string) {\n    this.setLocalizableStringText(\"removeRowText\", val);\n  }\n  get locRemoveRowText() {\n    return this.getLocalizableString(\"removeRowText\");\n  }\n  /**\n   * A message displayed when the matrix does not contain any rows. Applies only if `hideColumnsIfEmpty` is enabled.\n   * @see hideColumnsIfEmpty\n   */\n  public get noRowsText(): string {\n    return this.getLocalizableStringText(\"noRowsText\");\n  }\n  public set noRowsText(val: string) {\n    this.setLocalizableStringText(\"noRowsText\", val);\n  }\n  public get locNoRowsText(): LocalizableString {\n    return this.getLocalizableString(\"noRowsText\");\n  }\n  /**\n   * @deprecated Use the [`noRowsText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#noRowsText) property instead.\n   */\n  public get emptyRowsText(): string {\n    return this.noRowsText;\n  }\n  public set emptyRowsText(val: string) {\n    this.noRowsText = val;\n  }\n  get locEmptyRowsText(): LocalizableString {\n    return this.locNoRowsText;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixDynamicValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!value || !Array.isArray(value)) return value;\n    var values = this.getUnbindValue(value);\n    var rows = this.visibleRows;\n    for (var i = 0; i < rows.length && i < values.length; i++) {\n      var val = values[i];\n      if (!val) continue;\n      values[i] = this.getRowDisplayValue(keysAsText, rows[i], val);\n    }\n    return values;\n  }\n  protected getConditionObjectRowName(index: number): string {\n    return \"[\" + index.toString() + \"]\";\n  }\n  protected getConditionObjectsRowIndeces() : Array<number> {\n    const res = [];\n    const rowCount = Math.max(this.rowCount, 1);\n    for (var i = 0; i < Math.min(settings.matrix.maxRowCountInCondition, rowCount); i++) {\n      res.push(i);\n    }\n    return res;\n  }\n  public supportAutoAdvance(): boolean {\n    return false;\n  }\n  public get hasRowText(): boolean {\n    return false;\n  }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!isOnValueChanged && !this.validateMinRows()) {\n      errors.push(new MinRowCountError(this.minRowCount, this));\n    }\n  }\n  private validateMinRows(): boolean {\n    if (this.minRowCount <= 0 || !this.isRequired || !this.generatedVisibleRows)\n      return true;\n    let setRowCount = 0;\n    this.generatedVisibleRows.forEach(row => {\n      if (!row.isEmpty) setRowCount++;\n    });\n    return setRowCount >= this.minRowCount;\n  }\n  protected getUniqueColumnsNames(): Array<string> {\n    var res = super.getUniqueColumnsNames();\n    const name = this.keyName;\n    if (!!name && res.indexOf(name) < 0) {\n      res.push(name);\n    }\n    return res;\n  }\n  protected generateRows(): Array<MatrixDynamicRowModel> {\n    var result = new Array<MatrixDynamicRowModel>();\n    if (this.rowCount === 0) return result;\n    var val = this.createNewValue();\n    for (var i = 0; i < this.rowCount; i++) {\n      result.push(this.createMatrixRow(this.getRowValueByIndex(val, i)));\n    }\n    if (!this.isValueEmpty(this.getDefaultRowValue(false))) {\n      this.value = val;\n    }\n    return result;\n  }\n  protected createMatrixRow(value: any): MatrixDynamicRowModel {\n    return new MatrixDynamicRowModel(this.rowCounter++, this, value);\n  }\n  private lastDeletedRow: MatrixDropdownRowModelBase;\n  private getInsertedDeletedIndex(rows: MatrixDropdownRowModelBase[], val: any[]): number {\n    const len = Math.min(rows.length, val.length);\n    for (let i = 0; i < len; i ++) {\n      if (val[i] !== rows[i].editingObj) return i;\n    }\n    return len;\n  }\n  private isEditingObjectValueChanged(): boolean {\n    const val = this.value;\n    if (!this.generatedVisibleRows || !this.isValueSurveyElement(val)) return false;\n    let lastDelRow = this.lastDeletedRow;\n    this.lastDeletedRow = undefined;\n    const rows = this.generatedVisibleRows;\n    if (!Array.isArray(val) || Math.abs(rows.length - val.length) > 1 || rows.length === val.length) return false;\n    const index = this.getInsertedDeletedIndex(rows, val);\n    if (rows.length > val.length) {\n      this.lastDeletedRow = rows[index];\n      const row = rows[index];\n      rows.splice(index, 1);\n      if (this.isRendredTableCreated) {\n        this.renderedTable.onRemovedRow(row);\n      }\n    } else {\n      let newRow = undefined;\n      if (!!lastDelRow && lastDelRow.editingObj === val[index]) {\n        newRow = lastDelRow;\n      } else {\n        lastDelRow = undefined;\n        newRow = this.createMatrixRow(val[index]);\n      }\n      rows.splice(index, 0, newRow);\n      if (!lastDelRow) {\n        this.onMatrixRowCreated(newRow);\n      }\n      if (this.isRendredTableCreated) {\n        this.renderedTable.onAddedRow(newRow, index);\n      }\n    }\n    this.setPropertyValueDirectly(\"rowCount\", val.length);\n    return true;\n  }\n  updateValueFromSurvey(newValue: any, clearData: boolean = false): void {\n    this.setRowCountValueFromData = true;\n    if (this.minRowCount > 0 && Helpers.isValueEmpty(newValue) && !Helpers.isValueEmpty(this.defaultRowValue)) {\n      newValue = [];\n      for (let i = 0; i < this.minRowCount; i ++) {\n        newValue.push(Helpers.createCopy(this.defaultRowValue));\n      }\n    }\n    super.updateValueFromSurvey(newValue, clearData);\n    this.setRowCountValueFromData = false;\n  }\n  protected getFilteredDataCore(): any {\n    const res: any = [];\n    this.generatedVisibleRows.forEach(row => {\n      if (row.isVisible && !row.isEmpty) {\n        res.push(row.filteredValue);\n      }\n    });\n    return res;\n  }\n  protected onBeforeValueChanged(val: any): void {\n    if (!val || !Array.isArray(val)) return;\n    var newRowCount = val.length;\n    if (newRowCount == this.rowCount) return;\n    if (!this.setRowCountValueFromData && newRowCount < this.initialRowCount)\n      return;\n    if (this.isEditingObjectValueChanged()) return;\n    this.setRowCountValueFromData = true;\n    this.rowCountValue = newRowCount;\n    if (!this.generatedVisibleRows) return;\n    if (newRowCount == this.generatedVisibleRows.length + 1) {\n      this.onStartRowAddingRemoving();\n      const newValue = this.getRowValueByIndex(val, newRowCount - 1);\n      const newRow = this.createMatrixRow(newValue);\n      this.generatedVisibleRows.push(newRow);\n      this.onMatrixRowCreated(newRow);\n      this.onEndRowAdding();\n    } else {\n      this.clearGeneratedRows();\n      this.getVisibleRows();\n      this.onRowsChanged();\n    }\n    this.setRowCountValueFromData = false;\n  }\n  protected createNewValue(): any {\n    var result = this.createValueCopy();\n    if (!result || !Array.isArray(result)) result = [];\n    if (result.length > this.rowCount) result.splice(this.rowCount);\n    var rowValue = this.getDefaultRowValue(false);\n    rowValue = rowValue || {};\n    for (var i = result.length; i < this.rowCount; i++) {\n      result.push(this.getUnbindValue(rowValue));\n    }\n    return result;\n  }\n  protected deleteRowValue(newValue: any, row: MatrixDropdownRowModelBase): any {\n    if (!Array.isArray(newValue)) return newValue;\n    var isEmpty = true;\n    for (var i = 0; i < newValue.length; i++) {\n      if (this.isObject(newValue[i]) && Object.keys(newValue[i]).length > 0) {\n        isEmpty = false;\n        break;\n      }\n    }\n    return isEmpty ? null : newValue;\n  }\n\n  private getRowValueByIndex(questionValue: any, index: number): any {\n    return Array.isArray(questionValue) &&\n      index >= 0 &&\n      index < questionValue.length\n      ? questionValue[index]\n      : null;\n  }\n  protected getRowValueCore(\n    row: MatrixDropdownRowModelBase,\n    questionValue: any,\n    create: boolean = false\n  ): any {\n    if (!this.generatedVisibleRows) return {};\n    var res = this.getRowValueByIndex(\n      questionValue,\n      this.generatedVisibleRows.indexOf(row)\n    );\n    if (!res && create) res = {};\n    return res;\n  }\n  public getAddRowButtonCss(isEmptySection: boolean = false): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.button)\n      .append(this.cssClasses.buttonAdd)\n      .append(this.cssClasses.emptyRowsButton, isEmptySection)\n      .toString();\n  }\n  public getRemoveRowButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.button)\n      .append(this.cssClasses.buttonRemove)\n      .toString();\n  }\n  public getRootCss(): string {\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.empty, !this.renderedTable?.showTable).toString();\n  }\n}\n\nclass QuestionMatrixDynamicRenderedTable extends QuestionMatrixDropdownRenderedTable {\n  protected setDefaultRowActions(\n    row: MatrixDropdownRowModelBase,\n    actions: Array<IAction>\n  ) {\n    super.setDefaultRowActions(row, actions);\n  }\n}\n\nSerializer.addClass(\n  \"matrixdynamic\",\n  [\n    { name: \"allowAddRows:boolean\", default: true },\n    { name: \"allowRemoveRows:boolean\", default: true },\n    { name: \"rowCount:number\", default: 2, minValue: 0, isBindable: true },\n    { name: \"minRowCount:number\", default: 0, minValue: 0 },\n    {\n      name: \"maxRowCount:number\",\n      default: settings.matrix.maxRowCount,\n    },\n    { name: \"keyName\" },\n    \"defaultRowValue:rowvalue\",\n    { name: \"copyDefaultValueFromLastEntry:boolean\", alternativeName: \"defaultValueFromLastRow\" },\n    { name: \"confirmDelete:boolean\" },\n    {\n      name: \"confirmDeleteText\",\n      dependsOn: \"confirmDelete\",\n      visibleIf: function(obj: any): boolean {\n        return !obj || obj.confirmDelete;\n      },\n      serializationProperty: \"locConfirmDeleteText\",\n    },\n    {\n      name: \"addRowButtonLocation\", alternativeName: \"addRowLocation\",\n      default: \"default\",\n      choices: [\"default\", \"top\", \"bottom\", \"topBottom\"],\n    },\n    { name: \"addRowText\", serializationProperty: \"locAddRowText\" },\n    { name: \"removeRowText\", serializationProperty: \"locRemoveRowText\" },\n    \"hideColumnsIfEmpty:boolean\",\n    {\n      name: \"noRowsText:text\", alternativeName: \"emptyRowsText\",\n      serializationProperty: \"locNoRowsText\",\n      dependsOn: \"hideColumnsIfEmpty\",\n      visibleIf: function(obj: any): boolean {\n        return !obj || obj.hideColumnsIfEmpty;\n      },\n    },\n    {\n      name: \"detailPanelShowOnAdding:boolean\",\n      dependsOn: \"detailPanelMode\",\n      visibleIf: function(obj: any): boolean {\n        return obj.detailPanelMode !== \"none\";\n      },\n    },\n    { name: \"allowRowReorder:switch\", alternativeName: \"allowRowsDragAndDrop\" },\n  ],\n  function() {\n    return new QuestionMatrixDynamicModel(\"\");\n  },\n  \"matrixdropdownbase\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"matrixdynamic\", (name) => {\n  var q = new QuestionMatrixDynamicModel(name);\n  q.choices = [1, 2, 3, 4, 5];\n  QuestionMatrixDropdownModelBase.addDefaultColumns(q);\n  return q;\n});\n", "export var surveyCss: any = {\n  currentType: \"default\",\n  getCss: function () {\n    var loc = this.currentType ? this[this.currentType] : defaultCss;\n    if (!loc) loc = defaultCss;\n    return loc;\n  },\n  getAvailableThemes: function () {\n    return Object.keys(this).filter(propertyName => [\"currentType\", \"getCss\", \"getAvailableThemes\"].indexOf(propertyName) === -1);\n  }\n};\n\nexport var defaultCss = {\n  root: \"sd-root-modern\",\n  rootProgress: \"sd-progress\",\n  rootMobile: \"sd-root-modern--mobile\",\n  rootAnimationDisabled: \"sd-root-modern--animation-disabled\",\n  rootReadOnly: \"sd-root--readonly\",\n  rootCompact: \"sd-root--compact\",\n  rootFitToContainer: \"sd-root-modern--full-container\",\n  rootWrapper: \"sd-root-modern__wrapper\",\n  rootWrapperFixed: \"sd-root-modern__wrapper--fixed\",\n  rootWrapperHasImage: \"sd-root-modern__wrapper--has-image\",\n  rootBackgroundImage: \"sd-root_background-image\",\n  container: \"sd-container-modern\",\n  header: \"sd-title sd-container-modern__title\",\n  bodyContainer: \"sv-components-row\",\n  body: \"sd-body\",\n  bodyWithTimer: \"sd-body--with-timer\",\n  clockTimerRoot: \"sd-timer\",\n  clockTimerRootTop: \"sd-timer--top\",\n  clockTimerRootBottom: \"sd-timer--bottom\",\n  clockTimerProgress: \"sd-timer__progress\",\n  clockTimerProgressAnimation: \"sd-timer__progress--animation\",\n  clockTimerTextContainer: \"sd-timer__text-container\",\n  clockTimerMinorText: \"sd-timer__text--minor\",\n  clockTimerMajorText: \"sd-timer__text--major\",\n  bodyEmpty: \"sd-body sd-body--empty\",\n  bodyLoading: \"sd-body--loading\",\n  footer: \"sd-footer sd-body__navigation sd-clearfix\",\n  title: \"sd-title\",\n  description: \"sd-description\",\n  logo: \"sd-logo\",\n  logoImage: \"sd-logo__image\",\n  headerText: \"sd-header__text\",\n  headerClose: \"sd-hidden\",\n  navigationButton: \"\",\n  bodyNavigationButton: \"sd-btn\",\n  completedPage: \"sd-completedpage\",\n  completedBeforePage: \"sd-completed-before-page\",\n  timerRoot: \"sd-body__timer\",\n  navigation: {\n    complete: \"sd-btn--action sd-navigation__complete-btn\",\n    prev: \"sd-navigation__prev-btn\",\n    next: \"sd-navigation__next-btn\",\n    start: \"sd-navigation__start-btn\",\n    preview: \"sd-navigation__preview-btn\",\n    edit: \"sd-btn sd-btn--small\",\n  },\n  panel: {\n    contentEnter: \"sd-element__content--enter\",\n    contentLeave: \"sd-element__content--leave\",\n    enter: \"sd-element-wrapper--enter\",\n    leave: \"sd-element-wrapper--leave\",\n    asPage: \"sd-panel--as-page\",\n    number: \"sd-element__num\",\n    title: \"sd-title sd-element__title sd-panel__title\",\n    titleExpandable: \"sd-element__title--expandable\",\n    titleExpandableSvg: \"sd-element__title-expandable-svg\",\n    titleNumInline: \"sd-element__title--num-inline\",\n    titleExpanded: \"sd-element__title--expanded\",\n    titleCollapsed: \"sd-element__title--collapsed\",\n    titleDisabled: \"sd-element__title--disabled\",\n    titleOnExpand: \"sd-panel__title--expanded\",\n    titleOnError: \"sd-panel__title--error\",\n    titleBar: \"sd-action-title-bar\",\n    description: \"sd-description sd-panel__description\",\n    container: \"sd-element sd-element--complex sd-panel sd-row__panel\",\n    withFrame: \"sd-element--with-frame\",\n    content: \"sd-element__content sd-panel__content\",\n    icon: \"sd-panel__icon\",\n    iconExpanded: \"sd-panel__icon--expanded\",\n    footer: \"sd-panel__footer\",\n    requiredMark: \"sd-panel__required-text\",\n    header: \"sd-panel__header sd-element__header sd-element__header--location-top\",\n    collapsed: \"sd-element--collapsed\",\n    expanded: \"sd-element--expanded\",\n    expandable: \"sd-element--expandable\",\n    expandableAnimating: \"sd-elemenet--expandable--animating\",\n    nested: \"sd-element--nested sd-element--nested-with-borders\",\n    invisible: \"sd-element--invisible\",\n    navigationButton: \"\",\n    compact: \"sd-element--with-frame sd-element--compact\",\n    errorsContainer: \"sd-panel__errbox sd-element__erbox sd-element__erbox--above-element\"\n  },\n  paneldynamic: {\n    mainRoot: \"sd-element  sd-question sd-question--paneldynamic sd-element--complex sd-question--complex sd-row__question\",\n    empty: \"sd-question--empty\",\n    root: \"sd-paneldynamic\",\n    iconRemove: \"sd-hidden\",\n    navigation: \"sd-paneldynamic__navigation\",\n    title: \"sd-title sd-element__title sd-question__title\",\n    header: \"sd-paneldynamic__header sd-element__header\",\n    headerTab: \"sd-paneldynamic__header-tab\",\n    button: \"sd-action sd-paneldynamic__btn\",\n    buttonRemove: \"sd-action--negative sd-paneldynamic__remove-btn\",\n    buttonAdd: \"sd-paneldynamic__add-btn\",\n    buttonPrev: \"sd-paneldynamic__prev-btn sd-action--icon sd-action\",\n    buttonPrevDisabled: \"sd-action--disabled\",\n    buttonNextDisabled: \"sd-action--disabled\",\n    buttonNext: \"sd-paneldynamic__next-btn sd-action--icon sd-action\",\n    progressContainer: \"sd-paneldynamic__progress-container\",\n    progress: \"sd-progress\",\n    progressBar: \"sd-progress__bar\",\n    nested: \"sd-element--nested sd-element--nested-with-borders\",\n    progressText: \"sd-paneldynamic__progress-text\",\n    separator: \"sd-paneldynamic__separator\",\n    panelWrapper: \"sd-paneldynamic__panel-wrapper\",\n    footer: \"sd-paneldynamic__footer\",\n    panelFooter: \"sd-paneldynamic__panel-footer\",\n    footerButtonsContainer: \"sd-paneldynamic__buttons-container\",\n    panelsContainer: \"sd-paneldynamic__panels-container\",\n    panelWrapperInRow: \"sd-paneldynamic__panel-wrapper--in-row\",\n    panelWrapperEnter: \"sd-paneldynamic__panel-wrapper--enter\",\n    panelWrapperLeave: \"sd-paneldynamic__panel-wrapper--leave\",\n    panelWrapperList: \"sd-paneldynamic__panel-wrapper--list\",\n    progressBtnIcon: \"icon-progressbuttonv2\",\n    noEntriesPlaceholder: \"sd-paneldynamic__placeholder sd-question__placeholder\",\n    compact: \"sd-element--with-frame sd-element--compact\",\n    tabsContainer: \"sd-paneldynamic__tabs-container\",\n    tabsContainerWithHeader: \"sd-paneldynamic__tabs-container--with-header\",\n    tabsRoot: \"sd-tabs-toolbar\",\n    tabsLeft: \"sd-tabs-toolbar--left\",\n    tabsRight: \"sd-tabs-toolbar--right\",\n    tabsCenter: \"sd-tabs-toolbar--center\",\n    tabs: {\n      item: \"sd-tab-item\",\n      itemPressed: \"sd-tab-item--pressed\",\n      itemAsIcon: \"sd-tab-item--icon\",\n      itemIcon: \"sd-tab-item__icon\",\n      itemTitle: \"sd-tab-item__title\"\n    }\n  },\n  progress: \"sd-progress sd-body__progress\",\n  progressTop: \"sd-body__progress--top\",\n  progressBottom: \"sd-body__progress--bottom\",\n  progressBar: \"sd-progress__bar\",\n  progressText: \"sd-progress__text\",\n  progressButtonsRoot: \"sd-progress-buttons\",\n  progressButtonsNumbered: \"sd-progress-buttons--numbered\",\n  progressButtonsFitSurveyWidth: \"sd-progress-buttons--fit-survey-width\",\n  progressButtonsContainerCenter: \"sd-progress-buttons__container-center\",\n  progressButtonsContainer: \"sd-progress-buttons__container\",\n  progressButtonsConnector: \"sd-progress-buttons__connector\",\n  progressButtonsButton: \"sd-progress-buttons__button\",\n  progressButtonsButtonBackground: \"sd-progress-buttons__button-background\",\n  progressButtonsButtonContent: \"sd-progress-buttons__button-content\",\n  progressButtonsHeader: \"sd-progress-buttons__header\",\n  progressButtonsFooter: \"sd-progress-buttons__footer\",\n  progressButtonsImageButtonLeft: \"sd-progress-buttons__image-button-left\",\n  progressButtonsImageButtonRight: \"sd-progress-buttons__image-button-right\",\n  progressButtonsImageButtonHidden: \"sd-progress-buttons__image-button--hidden\",\n  progressButtonsListContainer: \"sd-progress-buttons__list-container\",\n  progressButtonsList: \"sd-progress-buttons__list\",\n  progressButtonsListElementPassed: \"sd-progress-buttons__list-element--passed\",\n  progressButtonsListElementCurrent:\n    \"sd-progress-buttons__list-element--current\",\n  progressButtonsListElementNonClickable:\n    \"sd-progress-buttons__list-element--nonclickable\",\n  progressButtonsPageTitle: \"sd-progress-buttons__page-title\",\n  progressButtonsPageDescription: \"sd-progress-buttons__page-description\",\n  progressTextInBar: \"sd-hidden\",\n  page: {\n    root: \"sd-page sd-body__page\",\n    emptyHeaderRoot: \"sd-page__empty-header\",\n    title: \"sd-title sd-page__title\",\n    description: \"sd-description sd-page__description\",\n    number: \"sd-page__num\",\n    errorsContainer: \"sd-page__errbox\"\n  },\n  pageTitle: \"sd-title sd-page__title\",\n  pageDescription: \"sd-description sd-page__description\",\n  row: \"sd-row sd-clearfix\",\n  rowMultiple: \"sd-row--multiple\",\n  rowCompact: \"sd-row--compact\",\n  rowEnter: \"sd-row--enter\",\n  rowDelayedEnter: \"sd-row--delayed-enter\",\n  rowLeave: \"sd-row--leave\",\n  rowReplace: \"sd-row--replace\",\n  pageRow: \"sd-page__row\",\n  question: {\n    contentEnter: \"sd-element__content--enter\",\n    contentLeave: \"sd-element__content--leave\",\n    enter: \"sd-element-wrapper--enter\",\n    leave: \"sd-element-wrapper--leave\",\n    mobile: \"sd-question--mobile\",\n    mainRoot: \"sd-element sd-question sd-row__question\",\n    flowRoot: \"sd-element sd-question sd-row__question sd-row__question--flow\",\n    withFrame: \"sd-element--with-frame\",\n    asCell: \"sd-table__cell\",\n    answered: \"sd-question--answered\",\n    header: \"sd-question__header sd-element__header\",\n    headerLeft: \"sd-question__header--location--left\",\n    headerTop: \"sd-question__header--location-top sd-element__header--location-top\",\n    headerBottom: \"sd-question__header--location--bottom\",\n    content: \"sd-element__content sd-question__content\",\n    contentSupportContainerQueries: \"sd-question__content--support-container-queries\",\n    contentLeft: \"sd-question__content--left\",\n    titleNumInline: \"sd-element__title--num-inline\",\n    titleLeftRoot: \"sd-question--left\",\n    titleTopRoot: \"sd-question--title-top\",\n    descriptionUnderInputRoot: \"sd-question--description-under-input\",\n    titleBottomRoot: \"sd-question--title-bottom\",\n    titleOnAnswer: \"sd-question__title--answer\",\n    titleEmpty: \"sd-question__title--empty\",\n    titleOnError: \"sd-question__title--error\",\n    title: \"sd-title sd-element__title sd-question__title\",\n    titleExpandable: \"sd-element__title--expandable\",\n    titleExpandableSvg: \"sd-element__title-expandable-svg\",\n    titleExpanded: \"sd-element__title--expanded\",\n    titleCollapsed: \"sd-element__title--collapsed\",\n    titleDisabled: \"sd-element__title--disabled\",\n    titleReadOnly: \"sd-element__title--readonly\",\n    titleBar: \"sd-action-title-bar\",\n    requiredMark: \"sd-question__required-text\",\n    number: \"sd-element__num\",\n    description: \"sd-description sd-question__description\",\n    descriptionUnderInput: \"sd-question__description--under-input\",\n    comment: \"sd-input sd-comment\",\n    required: \"sd-question--required\",\n    titleRequired: \"sd-question__title--required\",\n    indent: 20,\n    footer: \"sd-question__footer\",\n    commentArea: \"sd-question__comment-area\",\n    formGroup: \"sd-question__form-group\",\n    hasError: \"sd-question--error\",\n    hasErrorTop: \"sd-question--error-top\",\n    hasErrorBottom: \"sd-question--error-bottom\",\n    collapsed: \"sd-element--collapsed\",\n    expandable: \"sd-element--expandable\",\n    expandableAnimating: \"sd-elemenet--expandable--animating\",\n    expanded: \"sd-element--expanded\",\n    nested: \"sd-element--nested\",\n    invisible: \"sd-element--invisible\",\n    composite: \"sd-element--complex sd-composite\",\n    disabled: \"sd-question--disabled\",\n    readOnly: \"sd-question--readonly\",\n    preview: \"sd-question--preview\",\n    noPointerEventsMode: \"sd-question--no-pointer-events\",\n    errorsContainer: \"sd-element__erbox sd-question__erbox\",\n    errorsContainerTop: \"sd-element__erbox--above-element sd-question__erbox--above-question\",\n    errorsContainerBottom: \"sd-question__erbox--below-question\",\n    confirmDialog: \"sd-popup--confirm sv-popup--confirm\",\n    singleInputTitle: \"sd-element__title--singleinput\",\n    singleInputWrapper: \"sd-question__singleinput-wrapper\",\n    breadcrumbsRoot: \"sd-breadcrumbs\",\n    breadcrumbsItem: \"sd-breadcrumbs-item\",\n    breadcrumbsItemButton: \"sd-breadcrumbs-item__button\",\n    breadcrumbsSeparator: \"sd-breadcrumbs-separator\",\n    summary: \"sd-summary\",\n    summaryRow: \"sd-summary-row\",\n    summaryRowContent: \"sd-summary-row__content\",\n    summaryRowActions: \"sd-summary-row__actions\",\n    summaryRowAction: \"sd-summary-row-action\",\n    summaryRowActionEdit: \"sd-summary-row-action sd-summary-row-action--edit\",\n    summaryRowActionDelete: \"sd-summary-row-action sd-summary-row-action--delete\",\n  },\n  image: {\n    mainRoot: \"sd-element sd-question sd-question--image\",\n    root: \"sd-image\",\n    image: \"sd-image__image\",\n    adaptive: \"sd-image__image--adaptive\",\n    noImage: \"sd-image__no-image\",\n    noImageSvgIconId: \"icon-no-image\",\n    withFrame: \"\"\n  },\n  html: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-question--html\",\n    root: \"sd-html\",\n    withFrame: \"\",\n    nested: \"sd-element--nested sd-html--nested\"\n  },\n  error: {\n    root: \"sd-error\",\n    icon: \"\",\n    item: \"\",\n    locationTop: \"\",\n    locationBottom: \"\"\n  },\n  checkbox: {\n    root: \"sd-selectbase\",\n    rootMobile: \"sd-selectbase--mobile\",\n    rootRow: \"sd-selectbase--row\",\n    rootMultiColumn: \"sd-selectbase--multi-column\",\n    item: \"sd-item sd-checkbox sd-selectbase__item\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    itemOnError: \"sd-item--error\",\n    itemSelectAll: \"sd-checkbox--selectall\",\n    itemNone: \"sd-checkbox--none\",\n    itemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-checkbox--readonly\",\n    itemPreview: \"sd-item--preview sd-checkbox--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemChecked: \"sd-item--checked sd-checkbox--checked\",\n    itemHover: \"sd-item--allowhover sd-checkbox--allowhover\",\n    itemInline: \"sd-selectbase__item--inline\",\n    label: \"sd-selectbase__label\",\n    labelChecked: \"\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    itemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    itemSvgIconId: \"#icon-check-16x16\",\n    controlLabel: \"sd-item__control-label\",\n    materialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    otherArea: \"sd-selectbase__other\",\n    column: \"sd-selectbase__column\",\n  },\n  radiogroup: {\n    root: \"sd-selectbase\",\n    rootMobile: \"sd-selectbase--mobile\",\n    rootRow: \"sd-selectbase--row\",\n    rootMultiColumn: \"sd-selectbase--multi-column\",\n    item: \"sd-item sd-radio sd-selectbase__item\",\n    itemOnError: \"sd-item--error\",\n    itemInline: \"sd-selectbase__item--inline\",\n    label: \"sd-selectbase__label\",\n    labelChecked: \"\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    itemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-radio--readonly\",\n    itemPreview: \"sd-item--preview sd-radio--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemChecked: \"sd-item--checked sd-radio--checked\",\n    itemHover: \"sd-item--allowhover sd-radio--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    itemDecorator: \"sd-item__svg sd-radio__svg\",\n    controlLabel: \"sd-item__control-label\",\n    materialDecorator: \"sd-item__decorator sd-radio__decorator\",\n    otherArea: \"sd-selectbase__other\",\n    clearButton: \"\",\n    column: \"sd-selectbase__column\"\n  },\n  boolean: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-question--boolean\",\n    root: \"sv_qcbc sv_qbln sd-scrollable-container sd-boolean-root\",\n    rootRadio: \"sv_qcbc sv_qbln sd-scrollable-container sd-scrollable-container--compact\",\n    item: \"sd-boolean\",\n    itemOnError: \"sd-boolean--error\",\n    control: \"sd-boolean__control sd-visuallyhidden\",\n    itemChecked: \"sd-boolean--checked\",\n    itemExchanged: \"sd-boolean--exchanged\",\n    itemIndeterminate: \"sd-boolean--indeterminate\",\n    itemDisabled: \"sd-boolean--disabled\",\n    itemReadOnly: \"sd-boolean--readonly\",\n    itemPreview: \"sd-boolean--preview\",\n    itemHover: \"sd-boolean--allowhover\",\n    label: \"sd-boolean__label\",\n    labelTrue: \"sd-boolean__label--true\",\n    labelFalse: \"sd-boolean__label--false\",\n    switch: \"sd-boolean__switch\",\n    disabledLabel: \"sd-checkbox__label--disabled\",\n    labelReadOnly: \"sd-checkbox__label--readonly\",\n    labelPreview: \"sd-checkbox__label--preview\",\n    sliderText: \"sd-boolean__thumb-text\",\n    slider: \"sd-boolean__thumb\",\n    sliderGhost: \"sd-boolean__thumb-ghost\",\n    //radio\n    radioItem: \"sd-item\",\n    radioItemChecked: \"sd-item--checked sd-radio--checked\",\n    radioItemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    radioItemReadOnly: \"sd-item--readonly sd-radio--readonly\",\n    radioItemPreview: \"sd-item--preview sd-radio--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    radioLabel: \"sd-selectbase__label\",\n    radioControlLabel: \"sd-item__control-label\",\n    radioFieldset: \"sd-selectbase\",\n    itemRadioDecorator: \"sd-item__svg sd-radio__svg\",\n    materialRadioDecorator: \"sd-item__decorator sd-radio__decorator\",\n    itemRadioControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    //end radio\n    //checkbox\n    rootCheckbox: \"sd-selectbase\",\n    checkboxItem: \"sd-item sd-selectbase__item sd-checkbox\",\n    checkboxLabel: \"sd-selectbase__label\",\n    checkboxItemOnError: \"sd-item--error\",\n    checkboxItemIndeterminate: \"sd-checkbox--intermediate\",\n    checkboxItemChecked: \"sd-item--checked sd-checkbox--checked\",\n    checkboxItemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    checkboxItemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    checkboxItemReadOnly: \"sd-item--readonly sd-checkbox--readonly\",\n    checkboxItemPreview: \"sd-item--preview sd-checkbox--preview\",\n    controlCheckbox: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    checkboxMaterialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    checkboxControlLabel: \"sd-item__control-label\",\n    svgIconCheckedId: \"#icon-check-16x16\",\n  },\n  text: {\n    root: \"sd-input sd-text\",\n    small: \"sd-row__question--small\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    constrolWithCharacterCounter: \"sd-text__character-counter\",\n    characterCounterBig: \"sd-text__character-counter--big\",\n    content: \"sd-text__content sd-question__content\",\n    remainingCharacterCounter: \"sd-remaining-character-counter\",\n    onError: \"sd-input--error\"\n  },\n  multipletext: {\n    root: \"sd-multipletext\",\n    rootMobile: \"sd-multipletext--mobile\",\n    itemLabel: \"sd-multipletext__item-container sd-input\",\n    itemLabelReadOnly: \"sd-input--readonly\",\n    itemLabelDisabled: \"sd-input--disabled\",\n    itemLabelPreview: \"sd-input--preview\",\n    itemLabelOnError: \"sd-multipletext__item-container--error\",\n    itemLabelAllowFocus: \"sd-multipletext__item-container--allow-focus\",\n    itemLabelAnswered: \"sd-multipletext__item-container--answered\",\n    itemWithCharacterCounter: \"sd-multipletext-item__character-counter\",\n    item: \"sd-multipletext__item\",\n    itemTitle: \"sd-multipletext__item-title\",\n    content: \"sd-multipletext__content sd-question__content\",\n    row: \"sd-multipletext__row\",\n    cell: \"sd-multipletext__cell\",\n    cellError: \"sd-multipletext__cell--error\",\n    cellErrorTop: \"sd-multipletext__cell--error-top\",\n    cellErrorBottom: \"sd-multipletext__cell--error-bottom\"\n  },\n  dropdown: {\n    root: \"sd-selectbase\",\n    popup: \"sv-dropdown-popup\",\n    small: \"sd-row__question--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    onError: \"sd-input--error\",\n    label: \"sd-selectbase__label\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    item: \"sd-item sd-radio sd-selectbase__item\",\n    itemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    itemChecked: \"sd-item--checked sd-radio--checked\",\n    itemHover: \"sd-item--allowhover sd-radio--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    itemDecorator: \"sd-item__svg sd-radio__svg\",\n    cleanButtonIconId: \"icon-cancel\",\n    chevronButton: \"sd-dropdown_chevron-button\",\n    chevronButtonSvg: \"sd-dropdown_chevron-button-svg\",\n    chevronButtonIconId: \"icon-chevron\",\n    control: \"sd-input sd-dropdown\",\n    controlInputFieldComponent: \"sd-dropdown__input-field-component\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    materialDecorator: \"sd-item__decorator sd-radio__decorator\",\n    hintPrefix: \"sd-dropdown__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix\"\n  },\n  imagepicker: {\n    mainRoot: \"sd-element sd-question sd-row__question\",\n    root: \"sd-selectbase sd-imagepicker\",\n    rootResponsive: \"sd-imagepicker--responsive\",\n    rootStatic: \"sd-imagepicker--static\",\n    rootColumn: \"sd-imagepicker--column\",\n    item: \"sd-imagepicker__item\",\n    itemOnError: \"sd-imagepicker__item--error\",\n    itemInline: \"sd-imagepicker__item--inline\",\n    itemChecked: \"sd-imagepicker__item--checked\",\n    itemDisabled: \"sd-imagepicker__item--disabled\",\n    itemReadOnly: \"sd-imagepicker__item--readonly\",\n    itemPreview: \"sd-imagepicker__item--preview\",\n    itemHover: \"sd-imagepicker__item--allowhover\",\n    label: \"sd-imagepicker__label\",\n    itemDecorator: \"sd-imagepicker__item-decorator\",\n    imageContainer: \"sd-imagepicker__image-container\",\n    itemControl: \"sd-imagepicker__control sd-visuallyhidden\",\n    image: \"sd-imagepicker__image\",\n    itemText: \"sd-imagepicker__text\",\n    itemNoImage: \"sd-imagepicker__no-image\",\n    itemNoImageSvgIcon: \"sd-imagepicker__no-image-svg\",\n    itemNoImageSvgIconId: \"icon-no-image\",\n    column: \"sd-selectbase__column sd-imagepicker__column\",\n    checkedItemDecorator: \"sd-imagepicker__check-decorator\",\n    checkedItemSvgIcon: \"sd-imagepicker__check-icon\",\n    checkedItemSvgIconId: \"icon-check-24x24\",\n  },\n  matrix: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    tableWrapper: \"sd-matrix sd-table-wrapper\",\n    root: \"sd-table sd-matrix__table\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    rootVerticalAlignTop: \"sd-table--align-top\",\n    rootVerticalAlignMiddle: \"sd-table--align-middle\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    rowError: \"sd-matrix__row--error\",\n    cell: \"sd-table__cell sd-matrix__cell\",\n    row: \"sd-table__row\",\n    rowDisabled: \"sd-table__row-disabled\",\n    rowReadOnly: \"sd-table__row-readonly\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-matrix__cell sd-table__cell--row-text\",\n    label: \"sd-item sd-{type} sd-matrix__label\",\n    itemOnError: \"sd-item--error\",\n    itemValue: \"sd-visuallyhidden sd-item__control sd-{type}__control\",\n    itemChecked: \"sd-item--checked sd-{type}--checked\",\n    itemDisabled: \"sd-item--disabled sd-{type}--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-{type}--readonly\",\n    itemPreview: \"sd-item--preview sd-{type}--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemHover: \"sd-{type}--allowhover\",\n    materialDecorator: \"sd-item__decorator sd-{type}__decorator\",\n    itemDecorator: \"sd-item__svg sd-{type}__svg\",\n    cellText: \"sd-matrix__text\",\n    cellTextSelected: \"sd-matrix__text--checked\",\n    cellTextDisabled: \"sd-matrix__text--disabled\",\n    cellResponsiveTitle: \"sd-matrix__responsive-title\",\n    compact: \"sd-element--with-frame sd-element--compact\"\n  },\n  matrixdropdown: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    rootScroll: \"sd-question--scroll\",\n    root: \"sd-table sd-matrixdropdown\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    hasFooter: \"sd-table--has-footer\",\n    rootVerticalAlignTop: \"sd-table--align-top\",\n    rootVerticalAlignMiddle: \"sd-table--align-middle\",\n    tableWrapper: \"sd-table-wrapper\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    cell: \"sd-table__cell\",\n    cellResponsiveTitle: \"sd-table__responsive-title\",\n    errorsCell: \"sd-table__cell--error\",\n    errorsCellTop: \"sd-table__cell--error-top\",\n    errorsCellBottom: \"sd-table__cell--error-bottom\",\n    itemCell: \"sd-table__cell--item\",\n    row: \"sd-table__row\",\n    rowDelayedEnter: \"sd-table__row--delayed-enter\",\n    rowEnter: \"sd-table__row--enter\",\n    rowLeave: \"sd-table__row--leave\",\n    expandedRow: \"sd-table__row--expanded\",\n    rowHasPanel: \"sd-table__row--has-panel\",\n    rowHasEndActions: \"sd-table__row--has-end-actions\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-table__cell--row-text\",\n    footerCell: \"sd-table__cell sd-table__cell--footer\",\n    footerTotalCell: \"sd-table__cell sd-table__cell--footer-total\",\n    columnTitleCell: \"sd-table__cell--column-title\",\n    cellRequiredMark: \"sd-question__required-text\",\n    detailButton: \"sd-table__cell--detail-button\",\n    detailButtonExpanded: \"sd-table__cell--detail-button--expanded\",\n    detailIcon: \"sd-detail-panel__icon\",\n    detailIconExpanded: \"sd-detail-panel__icon--expanded\",\n    detailIconId: \"icon-expanddetail\",\n    detailIconExpandedId: \"icon-collapsedetail\",\n    detailPanelCell: \"sd-table__cell--detail-panel\",\n    detailRowCell: \"sd-table__cell--detail\",\n    actionsCellPrefix: \"sd-table__cell-action\",\n    actionsCell: \"sd-table__cell sd-table__cell--actions\",\n    actionsCellDrag: \"sd-table__cell--drag\",\n    emptyCell: \"sd-table__cell--empty\",\n    verticalCell: \"sd-table__cell--vertical\",\n    cellQuestionWrapper: \"sd-matrix__question-wrapper sd-table__question-wrapper\",\n    compact: \"sd-element--with-frame sd-element--compact\"\n  },\n  matrixdynamic: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    rootScroll: \"sd-question--scroll\",\n    empty: \"sd-question--empty\",\n    root: \"sd-table sd-matrixdynamic\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    hasFooter: \"sd-table--has-footer\",\n    tableWrapper: \"sd-table-wrapper\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    content: \"sd-matrixdynamic__content sd-question__content\",\n    cell: \"sd-table__cell\",\n    cellResponsiveTitle: \"sd-table__responsive-title\",\n    row: \"sd-table__row\",\n    rowEmpty: \"sd-table__row--empty\",\n    rowDelayedEnter: \"sd-table__row--delayed-enter\",\n    rowEnter: \"sd-table__row--enter\",\n    rowLeave: \"sd-table__row--leave\",\n    rowHasPanel: \"sd-table__row--has-panel\",\n    rowHasEndActions: \"sd-table__row--has-end-actions\",\n    expandedRow: \"sd-table__row--expanded\",\n    itemCell: \"sd-table__cell--item\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-table__cell--row-text\",\n    footerCell: \"sd-table__cell sd-table__cell--footer\",\n    columnTitleCell: \"sd-table__cell--column-title\",\n    cellRequiredMark: \"sd-question__required-text\",\n    button: \"sd-action sd-matrixdynamic__btn\",\n    detailRow: \"sd-table__row sd-table__row--detail\",\n    detailButton: \"sd-table__cell--detail-button\",\n    detailButtonExpanded: \"sd-table__cell--detail-button--expanded\",\n    detailIcon: \"sd-detail-panel__icon\",\n    detailIconExpanded: \"sd-detail-panel__icon--expanded\",\n    detailIconId: \"icon-expanddetail\",\n    detailIconExpandedId: \"icon-collapsedetail\",\n    detailPanelCell: \"sd-table__cell--detail-panel\",\n    detailRowCell: \"sd-table__cell--detail\",\n    actionsCellPrefix: \"sd-table__cell-action\",\n    actionsCell: \"sd-table__cell sd-table__cell--actions\",\n    actionsCellDrag: \"sd-table__cell--drag\",\n    buttonAdd: \"sd-matrixdynamic__add-btn\",\n    buttonRemove: \"sd-action--negative sd-matrixdynamic__remove-btn\",\n    iconAdd: \"sd-hidden\",\n    iconRemove: \"\",\n    dragElementDecorator: \"sd-drag-element__svg\",\n    iconDragElement: \"#icon-drag-24x24\",\n    footer: \"sd-matrixdynamic__footer\",\n    footerTotalCell: \"sd-table__cell sd-table__cell--footer-total\",\n    noRowsSection: \"sd-matrixdynamic__placeholder sd-question__placeholder\",\n    iconDrag: \"sv-matrixdynamic__drag-icon\",\n    ghostRow: \"sv-matrix-row--drag-drop-ghost-mod\",\n    draggedRow: \"sv-matrixdynamic-dragged-row\",\n    emptyCell: \"sd-table__cell--empty\",\n    verticalCell: \"sd-table__cell--vertical\",\n    cellQuestionWrapper: \"sd-matrix__question-wrapper sd-table__question-wrapper\",\n    errorsCell: \"sd-table__cell--error\",\n    errorsCellTop: \"sd-table__cell--error-top\",\n    errorsCellBottom: \"sd-table__cell--error-bottom\",\n    compact: \"sd-element--with-frame sd-element--compact\",\n  },\n  rating: {\n    rootDropdown: \"sd-scrollable-container sd-scrollable-container--compact sd-selectbase\",\n    root: \"sd-scrollable-container sd-rating\",\n    rootWrappable: \"sd-rating--wrappable\",\n    rootLabelsTop: \"sd-rating--labels-top\",\n    rootLabelsBottom: \"sd-rating--labels-bottom\",\n    rootLabelsDiagonal: \"sd-rating--labels-diagonal\",\n    item: \"sd-rating__item\",\n    itemOnError: \"sd-rating__item--error\",\n    itemHover: \"sd-rating__item--allowhover\",\n    selected: \"sd-rating__item--selected\",\n    itemStar: \"sd-rating__item-star\",\n    itemStarOnError: \"sd-rating__item-star--error\",\n    itemStarHover: \"sd-rating__item-star--allowhover\",\n    itemStarSelected: \"sd-rating__item-star--selected\",\n    itemStarDisabled: \"sd-rating__item-star--disabled\",\n    itemStarReadOnly: \"sd-rating__item-star--readonly\",\n    itemStarPreview: \"sd-rating__item-star--preview\",\n    itemStarHighlighted: \"sd-rating__item-star--highlighted\",\n    itemStarUnhighlighted: \"sd-rating__item-star--unhighlighted\",\n    itemStarSmall: \"sd-rating__item-star--small\",\n    itemSmiley: \"sd-rating__item-smiley\",\n    itemSmileyOnError: \"sd-rating__item-smiley--error\",\n    itemSmileyHover: \"sd-rating__item-smiley--allowhover\",\n    itemSmileySelected: \"sd-rating__item-smiley--selected\",\n    itemSmileyDisabled: \"sd-rating__item-smiley--disabled\",\n    itemSmileyReadOnly: \"sd-rating__item-smiley--readonly\",\n    itemSmileyPreview: \"sd-rating__item-smiley--preview\",\n    itemSmileyHighlighted: \"sd-rating__item-star--highlighted\",\n    itemSmileyScaleColored: \"sd-rating__item-smiley--scale-colored\",\n    itemSmileyRateColored: \"sd-rating__item-smiley--rate-colored\",\n    itemSmileySmall: \"sd-rating__item-smiley--small\",\n    minText: \"sd-rating__item-text sd-rating__min-text\",\n    itemText: \"sd-rating__item-text\",\n    maxText: \"sd-rating__item-text sd-rating__max-text\",\n    itemDisabled: \"sd-rating__item--disabled\",\n    itemReadOnly: \"sd-rating__item--readonly\",\n    itemPreview: \"sd-rating__item--preview\",\n    itemFixedSize: \"sd-rating__item--fixed-size\",\n    control: \"sd-input sd-dropdown\",\n    itemSmall: \"sd-rating--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    chevronButtonIconId: \"icon-chevron\",\n    popup: \"sv-dropdown-popup\",\n    onError: \"sd-input--error\",\n  },\n  slider: {\n    root: \"sd-slider\",\n    rootSingleMode: \"sd-slider--single\",\n    rootNegativeScaleMode: \"sd-slider--negative-scale\",\n    rootDesignMode: \"sd-slider--design-mode\",\n    rootAnimatedThumbMode: \"sd-slider--animated-thumb-mode\",\n    visualContainer: \"sd-slider-container\",\n    visualContainerSlider: \"sd-slider-container__slider\",\n    rangeTrack: \"sd-slider__track sd-slider__range-track\",\n    inverseTrackLeft: \"sd-slider__track sd-slider__inverse-track sd-slider__inverse-track--left\",\n    inverseTrackRight: \"sd-slider__track sd-slider__inverse-track sd-slider__inverse-track--right\",\n    thumbContainer: \"sd-slider__thumb-container\",\n    thumbContainerIndeterminateMode: \"sd-slider__thumb-container--indeterminate\",\n    thumbContainerFocusedMode: \"sd-slider__thumb-container--focused\",\n    thumb: \"sd-slider__thumb\",\n    thumbDot: \"sd-slider__thumb-dot\",\n    tooltip: \"sd-slider__tooltip\",\n    tooltipPanel: \"sd-slider__tooltip-panel\",\n    tooltipOnHoverMode: \"sd-slider__tooltip--on-hover\",\n    tooltipValue: \"sd-slider__tooltip-value\",\n    input: \"sd-slider__input\",\n    labelsContainer: \"sd-slider-labels-container\",\n    label: \"sd-slider__label\",\n    labelLongMod: \"sd-slider__label--long\",\n    labelTick: \"sd-slider__label-tick\",\n    labelText: \"sd-slider__label-text\",\n    clearButton: \"\",\n  },\n  comment: {\n    root: \"sd-input sd-comment\",\n    small: \"sd-row__question--small\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    content: \"sd-comment__content sd-question__content\",\n    remainingCharacterCounter: \"sd-remaining-character-counter\",\n    onError: \"sd-input--error\"\n  },\n  expression: \"sd-expression\",\n  file: {\n    root: \"sd-file\",\n    rootDragging: \"sd-file--dragging\",\n    rootAnswered: \"sd-file--answered\",\n    rootDisabled: \"sd-file--disabled\",\n    rootReadOnly: \"sd-file--readonly\",\n    rootPreview: \"sd-file--preview\",\n    placeholderInput: \"sd-visuallyhidden\",\n    previewItem: \"sd-file__preview-item\",\n    fileSign: \"\",\n    fileList: \"sd-file__list\",\n    fileSignBottom: \"sd-file__sign\",\n    dragArea: \"sd-file__drag-area\",\n    dragAreaActive: \"sd-file__drag-area--active\",\n    fileDecorator: \"sd-file__decorator\",\n    onError: \"sd-file__decorator--error\",\n    fileDecoratorDrag: \"sd-file__decorator--drag\",\n    fileInput: \"sd-visuallyhidden\",\n    chooseFile: \"sd-file__choose-btn\",\n    chooseFileAsText: \"sd-action sd-file__choose-btn--text\",\n    chooseFileAsTextDisabled: \"sd-action--disabled\",\n    chooseFileAsIcon: \"sd-file__choose-btn--icon\",\n    chooseFileIconId: \"icon-choosefile\",\n    disabled: \"sd-file__choose-btn--disabled\",\n    controlDisabled: \"sd-file__choose-file-btn--disabled\",\n    //todo: remove it in v2\n    removeButton: \"sd-context-btn--negative\",\n    removeButtonBottom: \"\",\n    //\n    removeButtonIconId: \"icon-clear\",\n    removeFile: \"sd-hidden\",\n    removeFileSvg: \"\",\n    removeFileSvgIconId: \"icon-close_16x16\",\n    wrapper: \"sd-file__wrapper\",\n    defaultImage: \"sd-file__default-image\",\n    defaultImageIconId: \"icon-defaultfile\",\n    leftIconId: \"icon-arrowleft\",\n    rightIconId: \"icon-arrowright\",\n    removeFileButton: \"sd-context-btn--small sd-context-btn--with-border sd-context-btn--colorful sd-context-btn--negative sd-file__remove-file-button\",\n    dragAreaPlaceholder: \"sd-file__drag-area-placeholder\",\n    imageWrapper: \"sd-file__image-wrapper\",\n    imageWrapperDefaultImage: \"sd-file__image-wrapper--default-image\",\n    single: \"sd-file--single\",\n    singleImage: \"sd-file--single-image\",\n    mobile: \"sd-file--mobile\",\n    videoContainer: \"sd-file__video-container\",\n    contextButton: \"sd-context-btn\",\n    video: \"sd-file__video\",\n    actionsContainer: \"sd-file__actions-container\",\n    closeCameraButton: \"sd-file__close-camera-button\",\n    changeCameraButton: \"sd-file__change-camera-button\",\n    takePictureButton: \"sd-file__take-picture-button\",\n    loadingIndicator: \"sd-file__loading-indicator\",\n    page: \"sd-file__page\"\n  },\n  signaturepad: {\n    mainRoot: \"sd-element sd-question sd-question--signature sd-row__question\",\n    root: \"sd-signaturepad sjs_sp_container\",\n    small: \"sd-row__question--small\",\n    controls: \"sjs_sp_controls sd-signaturepad__controls\",\n    placeholder: \"sjs_sp_placeholder\",\n    canvas: \"sjs_sp_canvas sd-signaturepad__canvas\",\n    backgroundImage: \"sjs_sp__background-image sd-signaturepad__background-image\",\n    clearButton: \"sjs_sp_clear sd-context-btn sd-context-btn--negative sd-signaturepad__clear\",\n    clearButtonIconId: \"icon-clear\",\n    loadingIndicator: \"sd-signaturepad__loading-indicator\"\n  },\n  saveData: {\n    root: \"sv-save-data_root\",\n    rootWithButtons: \"sv-save-data_root--with-buttons\",\n    info: \"sv-save-data_info\",\n    error: \"sv-save-data_error\",\n    success: \"sv-save-data_success\",\n    button: \"sv-save-data_button\",\n    shown: \"sv-save-data_root--shown\"\n  },\n  window: {\n    root: \"sv_window\",\n    rootCollapsedMod: \"sv_window--collapsed\",\n    rootFullScreenMode: \"sv_window--full-screen\",\n    rootContent: \"sv_window_root-content\",\n    body: \"sv_window_content\",\n    header: {\n      root: \"sv_window_header\",\n      titleCollapsed: \"sv_window_header_title_collapsed\",\n      buttonsContainer: \"sv_window_buttons_container\",\n      button: \"sv_window_button\",\n      buttonExpanded: \"\",\n      buttonCollapsed: \"\",\n      collapseButton: \"sv_window_button sv_window_button_collapse\",\n      closeButton: \"sv_window_button sv_window_button_close\",\n      fullScreenButton: \"sv_window_button sv_window_button_full_screen\"\n    }\n  },\n  ranking: {\n    root: \"sv-ranking\",\n    rootMobileMod: \"sv-ranking--mobile\",\n    rootDragMod: \"sv-ranking--drag\",\n    rootDisabled: \"sd-ranking--disabled\",\n    rootReadOnly: \"sd-ranking--readonly\",\n    rootPreview: \"sd-ranking--preview\",\n    rootDesignMode: \"sv-ranking--design-mode\",\n    rootDragHandleAreaIcon: \"sv-ranking--drag-handle-area-icon\",\n    rootSelectToRankMod: \"sv-ranking--select-to-rank\",\n    rootSelectToRankEmptyValueMod: \"sv-ranking--select-to-rank-empty-value\",\n    rootSelectToRankAlignVertical: \"sv-ranking--select-to-rank-vertical\",\n    rootSelectToRankAlignHorizontal: \"sv-ranking--select-to-rank-horizontal\",\n    rootSelectToRankSwapAreas: \"sv-ranking--select-to-rank-swap-areas\",\n    item: \"sv-ranking-item\",\n    itemContent: \"sv-ranking-item__content sd-ranking-item__content\",\n    itemIndex: \"sv-ranking-item__index sd-ranking-item__index\",\n    itemIndexEmptyMode: \"sv-ranking-item__index--empty sd-ranking-item__index--empty\",\n    // itemText: \"sv-ranking-item__text\",\n    itemDisabled: \"sv-ranking-item--disabled\",\n    itemReadOnly: \"sv-ranking-item--readonly\",\n    itemPreview: \"sv-ranking-item--preview\",\n    controlLabel: \"sv-ranking-item__text\",\n    itemGhostNode: \"sv-ranking-item__ghost\",\n    itemIconContainer: \"sv-ranking-item__icon-container\",\n    itemIcon: \"sv-ranking-item__icon\",\n    itemIconHoverMod: \"sv-ranking-item__icon--hover\",\n    itemIconFocusMod: \"sv-ranking-item__icon--focus\",\n    itemGhostMod: \"sv-ranking-item--ghost\",\n    itemDragMod: \"sv-ranking--drag\",\n    itemOnError: \"sv-ranking-item--error\",\n    container: \"sv-ranking__container\",\n    containerEmptyMode: \"sv-ranking__container--empty\",\n    containerFromMode: \"sv-ranking__container--from\",\n    containerToMode: \"sv-ranking__container--to\",\n    containerPlaceholder: \"sv-ranking__container-placeholder\",\n    containersDivider: \"sv-ranking__containers-divider\",\n  },\n  buttongroup: {\n    root: \"sd-button-group-scrollable-container sv-button-group\",\n    item: \"sv-button-group__item\",\n    itemIcon: \"sv-button-group__item-icon\",\n    itemDecorator: \"sv-button-group__item-decorator\",\n    itemCaption: \"sv-button-group__item-caption\",\n    itemHover: \"sv-button-group__item--hover\",\n    itemSelected: \"sv-button-group__item--selected\",\n    itemDisabled: \"sv-button-group__item--disabled\",\n    itemControl: \"sv-visuallyhidden\",\n\n    rootDropdown: \"sd-button-group-scrollable-container sd-scrollable-container--compact sd-selectbase\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    control: \"sd-input sd-dropdown\",\n    controlEmpty: \"sd-dropdown--empty\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    chevronButtonIconId: \"icon-chevron\",\n    popup: \"sv-dropdown-popup\",\n    cleanButtonIconId: \"icon-cancel\",\n    hintPrefix: \"sd-dropdown__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix\"\n  },\n  list: {\n    root: \"sv-list__container sd-list\",\n    item: \"sv-list__item sd-list__item\",\n    itemBody: \"sv-list__item-body sd-list__item-body\",\n    itemSelected: \"sv-list__item--selected sd-list__item--selected\",\n    itemFocused: \"sv-list__item--focused sd-list__item--focused\",\n    itemHovered: \"sv-list__item--hovered sd-list__item--hovered\",\n  },\n  actionBar: {\n    root: \"sd-action-bar\",\n    item: \"sd-action\",\n    defaultSizeMode: \"\",\n    smallSizeMode: \"\",\n    itemPressed: \"sd-action--pressed\",\n    itemAsIcon: \"sd-action--icon\",\n    itemIcon: \"sd-action__icon\",\n    itemTitle: \"sd-action__title\",\n  },\n  variables: {\n    mobileWidth: \"--sd-mobile-width\",\n    themeMark: \"--sv-defaultV2-mark\"\n  },\n  tagbox: {\n    root: \"sd-selectbase\",\n    popup: \"sv-dropdown-popup\",\n    small: \"sd-row__question--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    onError: \"sd-input--error\",\n    label: \"sd-selectbase__label\",\n    itemSvgIconId: \"#icon-check-16x16\",\n    item: \"sd-item sd-checkbox sd-selectbase__item\",\n    itemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    itemChecked: \"sd-item--checked sd-checkbox--checked\",\n    itemHover: \"sd-item--allowhover sd-checkbox--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    itemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    // cleanButton: \"sd-tagbox_clean-button sd-editor-clean-button\",\n    cleanButtonIconId: \"icon-cancel-24x24\",\n    cleanItemButton: \"sd-tagbox-item_clean-button\",\n    cleanItemButtonSvg: \"sd-tagbox-item_clean-button-svg\",\n    cleanItemButtonIconId: \"icon-clear_16x16\",\n    chevronButtonIconId: \"icon-chevron\",\n    control: \"sd-input sd-tagbox sd-dropdown\",\n    controlValue: \"sd-tagbox__value sd-dropdown__value\",\n    controlValueItems: \"sd-tagbox__value-items\",\n    placeholderInput: \"sd-tagbox__placeholder\",\n    controlEditable: \"sd-input--editable\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty sd-tagbox--empty\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-tagbox__filter-string-input sd-dropdown__filter-string-input\",\n    materialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    hint: \"sd-tagbox__hint\",\n    hintPrefix: \"sd-dropdown__hint-prefix sd-tagbox__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix sd-tagbox__hint-suffix\",\n    hintSuffixWrapper: \"sd-tagbox__hint-suffix-wrapper\"\n  },\n};\n\nexport const defaultThemeName = \"default\";\nsurveyCss[defaultThemeName] = defaultCss;", "import { EventBase } from \"./base\";\n\nexport var surveyTimerFunctions = {\n  setTimeout: (func: () => any): number => {\n    return surveyTimerFunctions.safeTimeOut(func, 1000);\n  },\n  clearTimeout: (timerId: number): void => {\n    clearTimeout(timerId);\n  },\n  safeTimeOut: (func:() => any, delay: number): number | any => {\n    if (delay <= 0) {\n      func();\n      return 0;\n    } else {\n      return setTimeout(func, delay);\n    }\n  },\n  now(): number { return Date.now(); }\n};\n\nexport interface SurveyTimerEvent {\n  seconds: number;\n}\n\nexport class SurveyTimer {\n  private static instanceValue: SurveyTimer = null;\n  public static get instance(): SurveyTimer {\n    if (!SurveyTimer.instanceValue) {\n      SurveyTimer.instanceValue = new SurveyTimer();\n    }\n    return SurveyTimer.instanceValue;\n  }\n  private listenerCounter = 0;\n  private timerId = -1;\n  private prevTimeInMs: number;\n  public onTimerTick: EventBase<SurveyTimer, SurveyTimerEvent> = new EventBase<SurveyTimer, SurveyTimerEvent>();\n  public onTimer: EventBase<SurveyTimer, SurveyTimerEvent> = this.onTimerTick;\n  public start(func: (timer: SurveyTimer, options: SurveyTimerEvent) => void = null): void {\n    if (func) {\n      this.onTimerTick.add(func);\n    }\n    this.prevTimeInMs = surveyTimerFunctions.now();\n    if (this.timerId < 0) {\n      this.timerId = surveyTimerFunctions.setTimeout(() => {\n        this.doTimer();\n      });\n    }\n    this.listenerCounter++;\n  }\n  public stop(func: (timer: SurveyTimer, options: SurveyTimerEvent) => any = null): void {\n    if (func) {\n      this.onTimerTick.remove(func);\n    }\n    this.listenerCounter--;\n    if (this.listenerCounter == 0 && this.timerId > -1) {\n      surveyTimerFunctions.clearTimeout(this.timerId);\n      this.timerId = -1;\n    }\n  }\n  public doTimer(): void {\n    if (this.onTimerTick.isEmpty || this.listenerCounter == 0) {\n      this.timerId = -1;\n    }\n    if (this.timerId < 0) return;\n    const newTimer = surveyTimerFunctions.now();\n    let seconds = Math.floor((newTimer - this.prevTimeInMs) / 1000);\n    this.prevTimeInMs = newTimer;\n    if (seconds < 0) {\n      seconds = 1;\n    }\n    const prevItem = this.timerId;\n    this.onTimerTick.fire(this, { seconds: seconds });\n    //We have to check that we have the same timerId\n    //It could be changed during events execution and it will lead to double timer events\n    if (prevItem !== this.timerId) return;\n    this.timerId = surveyTimerFunctions.setTimeout(() => {\n      this.doTimer();\n    });\n  }\n}\n", "import { ISurvey } from \"./base-interfaces\";\nimport { Base, EventBase } from \"./base\";\nimport { SurveyTimer, SurveyTimerEvent } from \"./surveytimer\";\nimport { property } from \"./jsonobject\";\nimport { PageModel } from \"./page\";\nimport { SurveyModel } from \"./survey\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\nexport interface ISurveyTimerText {\n  timerInfoText: string;\n  timerInfo: { spent: number, limit?: number };\n  timerClock: { majorText: string, minorText?: string };\n  getCss(): any;\n  isTimerPanelShowingOnBottom: boolean;\n  isTimerPanelShowingOnTop: boolean;\n  onCurrentPageChanged: EventBase<SurveyModel>;\n}\n\nexport class SurveyTimerModel extends Base {\n  public onTimerTick: (page: PageModel) => void;\n  private surveyValue: ISurvey;\n  constructor(survey: ISurvey) {\n    super();\n    this.surveyValue = survey;\n    this.onCreating();\n  }\n  @property() text: string;\n  @property() progress: number;\n  @property() clockMajorText: string;\n  @property() clockMinorText: string;\n  @property({ defaultValue: 0 }) spent: number;\n  public get survey(): ISurveyTimerText { return <any>this.surveyValue; }\n  public onCreating(): void { }\n  private timerFunc: any = null;\n  public start(): void {\n    if (!this.survey) return;\n    if (this.isRunning || this.isDesignMode) return;\n    this.survey.onCurrentPageChanged.add(() => {\n      this.update();\n    });\n    this.timerFunc = (sender: SurveyTimer, options: SurveyTimerEvent): void => { this.doTimer(options.seconds); };\n    this.setIsRunning(true);\n    this.update();\n    SurveyTimer.instance.start(this.timerFunc);\n  }\n  public stop(): void {\n    if (!this.isRunning) return;\n    this.setIsRunning(false);\n    SurveyTimer.instance.stop(this.timerFunc);\n  }\n  public get isRunning(): boolean {\n    return this.getPropertyValue(\"isRunning\", false);\n  }\n  private setIsRunning(val: boolean): void {\n    this.setPropertyValue(\"isRunning\", val);\n  }\n  private update() {\n    this.updateText();\n    this.updateProgress();\n  }\n  private doTimer(seconds: number): void {\n    var page = <PageModel>(<ISurvey><any>this.survey).currentPage;\n    if (page) {\n      const pageMaxTime = page.getMaxTimeToFinish();\n      if (pageMaxTime > 0 && pageMaxTime < page.timeSpent + seconds) {\n        seconds = pageMaxTime - page.timeSpent;\n      }\n      page.timeSpent = page.timeSpent + seconds;\n    }\n    this.spent = this.spent + seconds;\n    this.update();\n    if (this.onTimerTick) {\n      this.onTimerTick(page);\n    }\n  }\n  private updateProgress() {\n    let { spent, limit } = this.survey.timerInfo;\n    if (!limit) {\n      this.progress = undefined;\n    } else {\n      if (spent == 0) {\n        this.progress = 0;\n        setTimeout(() => {\n          this.progress = Math.floor((spent + 1) / limit * 100) / 100;\n        }, 0);\n      } else if (spent <= limit) {\n        this.progress = Math.floor((spent + 1) / limit * 100) / 100;\n      }\n      if (this.progress > 1) {\n        this.progress = undefined;\n      }\n    }\n  }\n  private updateText(): void {\n    let timerClock = this.survey.timerClock;\n    this.clockMajorText = timerClock.majorText;\n    this.clockMinorText = timerClock.minorText;\n    this.text = this.survey.timerInfoText;\n  }\n  public get showProgress(): boolean {\n    return this.progress !== undefined;\n  }\n  public get showTimerAsClock(): boolean {\n    return !!this.survey.getCss().clockTimerRoot;\n  }\n\n  public get rootCss(): string {\n    return new CssClassBuilder()\n      .append(this.survey.getCss().clockTimerRoot)\n      .append(this.survey.getCss().clockTimerRootTop, this.survey.isTimerPanelShowingOnTop)\n      .append(this.survey.getCss().clockTimerRootBottom, this.survey.isTimerPanelShowingOnBottom)\n      .toString();\n  }\n  public getProgressCss(): string {\n    return new CssClassBuilder()\n      .append(this.survey.getCss().clockTimerProgress)\n      .append(this.survey.getCss().clockTimerProgressAnimation, this.progress > 0)\n      .toString();\n  }\n  public get textContainerCss(): string {\n    return this.survey.getCss().clockTimerTextContainer;\n  }\n  public get minorTextCss(): string {\n    return this.survey.getCss().clockTimerMinorText;\n  }\n\n  public get majorTextCss(): string {\n    return this.survey.getCss().clockTimerMajorText;\n  }\n}", "import { Base } from \"./base\";\nimport { settings } from \"./settings\";\nimport { property } from \"./jsonobject\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { ActionContainer, defaultActionBarCss } from \"./actions/container\";\nimport { IAction } from \"./actions/action\";\n\ninterface INotifierCssClasses {\n  root: string;\n  rootWithButtons: string;\n  info: string;\n  error: string;\n  success: string;\n  button: string;\n  shown: string;\n}\n\nexport class Notifier extends Base {\n  @property({ defaultValue: false }) active: boolean;\n  @property({ defaultValue: false }) isDisplayed: boolean;\n  @property() message: string;\n  @property() css: string;\n  timeout = settings.notifications.lifetime;\n  timer: any = undefined;\n  private actionsVisibility: { [key: string]: string } = {};\n  public actionBar: ActionContainer;\n  public showActions: boolean = true;\n\n  constructor(private cssClasses: INotifierCssClasses) {\n    super();\n    this.actionBar = new ActionContainer();\n    this.actionBar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode,\n    }, false);\n    this.css = this.cssClasses.root;\n  }\n\n  getCssClass(type: string): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootWithButtons, this.actionBar.getVisibleActions().length > 0)\n      .append(this.cssClasses.info, type !== \"error\" && type !== \"success\")\n      .append(this.cssClasses.error, type === \"error\")\n      .append(this.cssClasses.success, type === \"success\")\n      .append(this.cssClasses.shown, this.active)\n      .toString();\n  }\n\n  updateActionsVisibility(type: string): void {\n    this.actionBar.actions.forEach(action => action.visible = this.showActions && (this.actionsVisibility[action.id] === type));\n  }\n\n  notify(message: string, type: string = \"info\", waitUserAction = false): void {\n    this.isDisplayed = true;\n    setTimeout(() => {\n\n      this.updateActionsVisibility(type);\n      this.message = message;\n      this.active = true;\n      this.css = this.getCssClass(type);\n\n      if (!!this.timer) {\n        clearTimeout(this.timer);\n        this.timer = undefined;\n      }\n      if (!waitUserAction) {\n        this.timer = setTimeout(() => {\n          this.timer = undefined;\n          this.active = false;\n          this.css = this.getCssClass(type);\n        }, this.timeout);\n      }\n    }, 1);\n  }\n\n  public addAction(action: IAction, notificationType: string): void {\n    action.visible = false;\n    action.innerCss = this.cssClasses.button;\n    const res = this.actionBar.addAction(action);\n    this.actionsVisibility[res.id] = notificationType;\n  }\n}\n", "import { Base, ArrayChanges } from \"./base\";\nimport { HorizontalAlignment, VerticalAlignment } from \"./base-interfaces\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\nimport { Serializer, property } from \"./jsonobject\";\nimport { SurveyModel } from \"./survey\";\nimport { ITheme } from \"./themes\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { wrapUrlForBackgroundImage } from \"./utils/utils\";\n\nexport class CoverCell {\n  static CLASSNAME = \"sv-header__cell\";\n\n  private calcRow(positionY: VerticalAlignment): any {\n    return positionY === \"top\" ? 1 : (positionY === \"middle\" ? 2 : 3);\n  }\n  private calcColumn(positionX: HorizontalAlignment): any {\n    return positionX === \"left\" ? 1 : (positionX === \"center\" ? 2 : 3);\n  }\n  private calcAlignItems(positionX: HorizontalAlignment) {\n    return positionX === \"left\" ? \"flex-start\" : (positionX === \"center\" ? \"center\" : \"flex-end\");\n  }\n  private calcAlignText(positionX: HorizontalAlignment) {\n    return positionX === \"left\" ? \"start\" : (positionX === \"center\" ? \"center\" : \"end\");\n  }\n  private calcJustifyContent(positionY: VerticalAlignment) {\n    return positionY === \"top\" ? \"flex-start\" : (positionY === \"middle\" ? \"center\" : \"flex-end\");\n  }\n  private calcGridRow(): number {\n    const rowNumber = this.calcRow(this.positionY);\n    if (!!this.cover.renderedHeight) return rowNumber;\n\n    const visibleRows = this.cover.getVisibleRows();\n    const visibleRowIndex = visibleRows.indexOf(rowNumber);\n    if (visibleRowIndex === -1) return 0;\n\n    const visibleRowsCount = visibleRows.length;\n    if (visibleRowsCount === 3) return rowNumber;\n    if (visibleRowsCount === 1) return 1;\n    return visibleRowIndex + 1;\n  }\n\n  constructor(private cover: Cover, private positionX: HorizontalAlignment, private positionY: VerticalAlignment) {\n  }\n  get survey(): SurveyModel {\n    return this.cover.survey;\n  }\n  get css(): string {\n    const result = new CssClassBuilder()\n      .append(CoverCell.CLASSNAME)\n      .append(`${CoverCell.CLASSNAME}--${this.positionX}`)\n      .append(`${CoverCell.CLASSNAME}--${this.positionY}`)\n      .append(CoverCell.CLASSNAME + \"--empty\", this.isEmpty)\n      .toString();\n\n    return result;\n  }\n  get style(): any {\n    const gridRow = this.calcGridRow();\n    const result: any = {};\n    result[\"gridRow\"] = gridRow;\n    result[\"gridColumn\"] = gridRow !== 0 ? this.calcColumn(this.positionX) : 0;\n    result[\"width\"] = !!this.width ? this.width + \"px\" : undefined;\n    if (gridRow === 0) { result[\"display\"] = \"none\"; }\n    return result;\n  }\n  get contentStyle(): any {\n    const result: any = {};\n    result[\"textAlign\"] = this.calcAlignText(this.positionX);\n    result[\"alignItems\"] = this.calcAlignItems(this.positionX);\n    result[\"justifyContent\"] = this.calcJustifyContent(this.positionY);\n    result[\"maxWidth\"] = this.contentMaxWidth;\n    return result;\n  }\n  get showLogo(): boolean {\n    return this.survey.hasLogo && this.positionX === this.cover.logoPositionX && this.positionY === this.cover.logoPositionY;\n  }\n  get showTitle(): boolean {\n    return this.survey.hasTitle && this.positionX === this.cover.titlePositionX && this.positionY === this.cover.titlePositionY;\n  }\n  get showDescription(): boolean {\n    return this.survey.renderedHasDescription && this.positionX === this.cover.descriptionPositionX && this.positionY === this.cover.descriptionPositionY;\n  }\n  get isEmpty(): boolean {\n    return !this.showLogo && !this.showTitle && !this.showDescription;\n  }\n  get textAreaWidth(): string {\n    return this.cover.renderedTextAreaWidth;\n  }\n  get width(): number {\n    if (this.cover.width) {\n      return Math.ceil(this.cover.width / 3);\n    }\n    return undefined;\n  }\n  get contentMaxWidth(): string {\n    return this.cover.getContentMaxWidth(this);\n  }\n}\n\nexport class Cover extends Base {\n  private _survey: SurveyModel;\n\n  private calcBackgroundSize(backgroundImageFit: \"cover\" | \"fill\" | \"contain\" | \"tile\"): string {\n    if (backgroundImageFit === \"fill\") {\n      return \"100% 100%\";\n    }\n    if (backgroundImageFit === \"tile\") {\n      return \"auto\";\n    }\n    return backgroundImageFit;\n  }\n  private updateHeaderClasses(): void {\n    const backgroundColorNone = !this.backgroundColor || this.backgroundColor === \"transparent\";\n    const backgroundColorAccent = this.backgroundColor === \"var(--sjs-primary-backcolor)\";\n    const backgroundColorCustom = !backgroundColorNone && !backgroundColorAccent;\n    this.headerClasses = new CssClassBuilder()\n      .append(\"sv-header\")\n      .append(\"sv-header--height-auto\", !this.renderedHeight)\n      .append(\"sv-header__without-background\", backgroundColorNone && !this.backgroundImage)\n      .append(\"sv-header__background-color--none\", backgroundColorNone && !this.titleColor && !this.descriptionColor)\n      .append(\"sv-header__background-color--accent\", backgroundColorAccent && !this.titleColor && !this.descriptionColor)\n      .append(\"sv-header__background-color--custom\", backgroundColorCustom && !this.titleColor && !this.descriptionColor)\n      .append(\"sv-header__overlap\", this.overlapEnabled)\n      .toString();\n  }\n  private updateContentClasses(): void {\n    const surveyWidthMode = !!this.survey && this.survey.calculateWidthMode();\n    const useSurveyWidth = this.inheritWidthFrom === \"survey\" && !!surveyWidthMode && surveyWidthMode === \"static\";\n    this.maxWidth = useSurveyWidth ? this.survey.width : undefined;\n    if (!!this.maxWidth) {\n      const maxWidthString = this.maxWidth.toString();\n      if (maxWidthString.indexOf(\"px\") === -1 && maxWidthString.indexOf(\"%\") === -1) {\n        this.maxWidth = parseFloat(maxWidthString) + \"px\";\n      }\n    }\n    this.contentClasses = new CssClassBuilder()\n      .append(\"sv-header__content\")\n      .append(\"sv-header__content--static\", useSurveyWidth)\n      .append(\"sv-header__content--responsive\", this.inheritWidthFrom === \"container\" || (!!surveyWidthMode && surveyWidthMode === \"responsive\"))\n      .toString();\n  }\n  private updateBackgroundImageClasses(): void {\n    this.backgroundImageClasses = new CssClassBuilder()\n      .append(\"sv-header__background-image\")\n      .append(\"sv-header__background-image--contain\", this.backgroundImageFit === \"contain\")\n      .append(\"sv-header__background-image--tile\", this.backgroundImageFit === \"tile\")\n      .toString();\n  }\n  public fromTheme(theme: ITheme): void {\n    super.fromJSON(theme.header || {});\n    if (!!theme.cssVariables) {\n      this.backgroundColor = theme.cssVariables[\"--sjs-header-backcolor\"];\n      this.titleColor = theme.cssVariables[\"--sjs-font-headertitle-color\"];\n      this.descriptionColor = theme.cssVariables[\"--sjs-font-headerdescription-color\"];\n    }\n    this.init();\n  }\n  private init() {\n    this.renderBackgroundImage = wrapUrlForBackgroundImage(this.backgroundImage);\n    this.updateHeaderClasses();\n    this.updateContentClasses();\n    this.updateBackgroundImageClasses();\n  }\n\n  constructor() {\n    super();\n    [\"top\", \"middle\", \"bottom\"].forEach((positionY: VerticalAlignment) =>\n      [\"left\", \"center\", \"right\"].forEach((positionX: HorizontalAlignment) => this.cells.push(new CoverCell(this, positionX, positionY)))\n    );\n    this.init();\n  }\n\n  public getType(): string {\n    return \"cover\";\n  }\n\n  public cells: CoverCell[] = [];\n  @property() public height: number;\n  @property() public mobileHeight: number;\n  @property() public inheritWidthFrom: \"survey\" | \"container\";\n  @property() public textAreaWidth: number;\n  @property() public textGlowEnabled: boolean;\n  @property() public overlapEnabled: boolean;\n  @property({ defaultValue: \"transparent\" }) public backgroundColor: string;\n  @property() public titleColor: string;\n  @property() public descriptionColor: string;\n  @property({\n    onSet: (newVal: string, target: Cover) => {\n      target.renderBackgroundImage = wrapUrlForBackgroundImage(newVal);\n    }\n  }) public backgroundImage: string;\n  @property() public renderBackgroundImage: string;\n  @property() public backgroundImageFit: \"cover\" | \"fill\" | \"contain\" | \"tile\";\n  @property() public backgroundImageOpacity: number;\n  @property() public logoPositionX: HorizontalAlignment;\n  @property() public logoPositionY: VerticalAlignment;\n  @property() public titlePositionX: HorizontalAlignment;\n  @property() public titlePositionY: VerticalAlignment;\n  @property() public descriptionPositionX: HorizontalAlignment;\n  @property() public descriptionPositionY: VerticalAlignment;\n  @property() logoStyle: { gridColumn: number, gridRow: number };\n  @property() titleStyle: { gridColumn: number, gridRow: number };\n  @property() descriptionStyle: { gridColumn: number, gridRow: number };\n  @property() headerClasses: string;\n  @property() contentClasses: string;\n  @property() width: number;\n  @property() maxWidth: string;\n  @property() backgroundImageClasses: string;\n\n  public get renderedHeight(): string {\n    if (this.survey && !this.survey.isMobile || !this.survey) {\n      return this.height ? this.height + \"px\" : undefined;\n    }\n    if (this.survey && this.survey.isMobile) {\n      return this.mobileHeight ? this.mobileHeight + \"px\" : undefined;\n    }\n    return undefined;\n  }\n  public get renderedTextAreaWidth(): string {\n    return this.textAreaWidth ? this.textAreaWidth + \"px\" : undefined;\n  }\n  public get isEmpty(): boolean {\n    return !this.survey.hasLogo && !this.survey.hasTitle && !this.survey.renderedHasDescription;\n  }\n  public get survey(): SurveyModel {\n    return this._survey;\n  }\n  public set survey(newValue: SurveyModel) {\n    if (this._survey === newValue) return;\n\n    this._survey = newValue;\n    if (!!newValue) {\n      this.updateContentClasses();\n      this._survey.onPropertyChanged.add((sender: any, options: any) => {\n        if (options.name == \"widthMode\" || options.name == \"width\") {\n          this.updateContentClasses();\n        }\n      });\n    }\n  }\n\n  public get backgroundImageStyle() {\n    if (!this.backgroundImage) return null;\n    return {\n      opacity: this.backgroundImageOpacity,\n      backgroundImage: this.renderBackgroundImage,\n      backgroundSize: this.calcBackgroundSize(this.backgroundImageFit),\n    };\n  }\n\n  protected propertyValueChanged(name: string, oldValue: any, newValue: any, arrayChanges?: ArrayChanges, target?: Base): void {\n    super.propertyValueChanged(name, oldValue, newValue);\n    if (name === \"height\" || name === \"backgroundColor\" || name === \"backgroundImage\" || name === \"overlapEnabled\") {\n      this.updateHeaderClasses();\n    }\n    if (name === \"inheritWidthFrom\") {\n      this.updateContentClasses();\n    }\n    if (name === \"backgroundImageFit\") {\n      this.updateBackgroundImageClasses();\n    }\n  }\n\n  public getVisibleRows(): Array<number> {\n    const result = [];\n    for (let rowIndex = 0; rowIndex < 3; rowIndex++) {\n      const startCellIndex = rowIndex * 3;\n      if (!this.cells[startCellIndex].isEmpty || !this.cells[startCellIndex + 1].isEmpty || !this.cells[startCellIndex + 2].isEmpty) {\n        result.push(rowIndex + 1);\n      }\n    }\n\n    return result.length !== 0 ? result : [1, 2, 3];\n  }\n\n  // public calculateActualHeight(logoHeight: number, titleHeight: number, descriptionHeight: number): number {\n  //   const positionsY = [\"top\", \"middle\", \"bottom\"];\n  //   const logoIndex = positionsY.indexOf(this.logoPositionY);\n  //   const titleIndex = positionsY.indexOf(this.titlePositionY);\n  //   const descriptionIndex = positionsY.indexOf(this.descriptionPositionY);\n  //   const positionsX = [\"left\", \"center\", \"right\"];\n  //   const logoIndexX = positionsX.indexOf(this.logoPositionX);\n  //   const titleIndexX = positionsX.indexOf(this.titlePositionX);\n  //   const descriptionIndexX = positionsX.indexOf(this.descriptionPositionX);\n  //   const heights = [\n  //     [0, 0, 0],\n  //     [0, 0, 0],\n  //     [0, 0, 0]\n  //   ];\n  //   heights[logoIndex][logoIndexX] = logoHeight;\n  //   heights[titleIndex][titleIndexX] += titleHeight;\n  //   heights[descriptionIndex][descriptionIndexX] += descriptionHeight;\n  //   return heights.reduce((total, rowArr) => total + Math.max(...rowArr), 0);\n  // }\n\n  public getContentMaxWidth(cell: CoverCell): string {\n    if (cell.isEmpty || cell.showLogo) {\n      return undefined;\n    }\n    const cellIndex = this.cells.indexOf(cell);\n    const rowIndex = Math.floor(cellIndex / 3);\n    const colIndex = cellIndex % 3;\n    if (colIndex == 1) {\n      if (!this.cells[rowIndex * 3].isEmpty || !this.cells[rowIndex * 3 + 2].isEmpty) {\n        return \"100%\";\n      }\n    } else if (colIndex == 0) {\n      let rightFreeCells = 0;\n      let index = colIndex + 1;\n      while(index < 3 && this.cells[rowIndex * 3 + index].isEmpty) {\n        if (this.cells[rowIndex * 3 + index].isEmpty) {\n          rightFreeCells++;\n        }\n        index++;\n      }\n      return (100 * (rightFreeCells + 1)) + \"%\";\n    } else if (colIndex == 2) {\n      let leftFreeCells = 0;\n      let index = colIndex - 1;\n      while(index > 0 && this.cells[rowIndex * 3 + index].isEmpty) {\n        if (this.cells[rowIndex * 3 + index].isEmpty) {\n          leftFreeCells++;\n        }\n        index--;\n      }\n      return (100 * (leftFreeCells + 1)) + \"%\";\n    }\n    return undefined;\n  }\n\n  public processResponsiveness(): void {\n    if (this.survey && this.survey.rootElement) {\n      if (!this.survey.isMobile) {\n        const headerEl = this.survey.rootElement.querySelectorAll(\".sv-header__content\")[0];\n        if (!headerEl) return;\n\n        let elWidth = headerEl.getBoundingClientRect().width;\n        const headerComputedStyle = DomDocumentHelper.getComputedStyle(headerEl);\n        const paddingLeft = (parseFloat(headerComputedStyle.paddingLeft) || 0);\n        const paddingRight = (parseFloat(headerComputedStyle.paddingRight) || 0);\n        const columnGap = (parseFloat(headerComputedStyle.columnGap) || 0);\n        this.width = elWidth - paddingLeft - paddingRight - 2 * columnGap;\n      }\n    }\n  }\n\n  get hasBackground(): boolean {\n    return !!this.backgroundImage || this.backgroundColor !== \"transparent\";\n  }\n}\n\nSerializer.addClass(\n  \"cover\",\n  [\n    { name: \"height:number\", minValue: 0, default: 0 },\n    { name: \"mobileHeight:number\", minValue: 0, default: 0 },\n    { name: \"inheritWidthFrom\", default: \"survey\" },\n    { name: \"textAreaWidth:number\", minValue: 0, default: 0 },\n    { name: \"textGlowEnabled:boolean\" },\n    { name: \"overlapEnabled:boolean\" },\n    { name: \"backgroundImage:file\" },\n    { name: \"backgroundImageOpacity:number\", minValue: 0, maxValue: 1, default: 1 },\n    { name: \"backgroundImageFit\", default: \"cover\", choices: [\"cover\", \"fill\", \"contain\"] },\n    { name: \"logoPositionX\", default: \"left\" },\n    { name: \"logoPositionY\", default: \"top\" },\n    { name: \"titlePositionX\", default: \"left\" },\n    { name: \"titlePositionY\", default: \"bottom\" },\n    { name: \"descriptionPositionX\", default: \"left\" },\n    { name: \"descriptionPositionY\", default: \"bottom\" }\n\n  ],\n  function () {\n    return new Cover();\n  },\n);", "import { Base, EventBase } from \"./base\";\nimport { property } from \"./jsonobject\";\n\nclass SurveyTaskModel {\n  private timestamp: Date;\n  constructor(public type: string) {\n    this.timestamp = new Date();\n  }\n}\n\nexport class SurveyTaskManagerModel extends Base {\n  private taskList: SurveyTaskModel[] = [];\n  constructor() {\n    super();\n  }\n\n  private onAllTasksCompleted: EventBase<SurveyTaskManagerModel> = this.addEvent<SurveyTaskManagerModel>();\n  //@property() text: string;\n  @property({ defaultValue: false }) hasActiveTasks: boolean;\n\n  public runTask(type: string, func: (done: any) => void): SurveyTaskModel {\n    const task = new SurveyTaskModel(type);\n    this.taskList.push(task);\n    this.hasActiveTasks = true;\n    func(() => this.taskFinished(task));\n    return task;\n  }\n\n  public waitAndExecute(action: any): void {\n    if (!this.hasActiveTasks) {\n      action();\n      return;\n    }\n    this.onAllTasksCompleted.add(()=> { action(); });\n  }\n\n  private taskFinished(task: SurveyTaskModel) {\n    const index = this.taskList.indexOf(task);\n    if (index > -1) {\n      this.taskList.splice(index, 1);\n    }\n    if (this.hasActiveTasks && this.taskList.length == 0) {\n      this.hasActiveTasks = false;\n      this.onAllTasksCompleted.fire(this, {});\n    }\n  }\n}", "import { property, Serializer } from \"./jsonobject\";\nimport { Base } from \"./base\";\n\nexport class PanelLayoutColumnModel extends Base {\n  @property() width: number;\n  @property({\n    onSet: (newValue, target, prevVal) => {\n      if (newValue !== prevVal) {\n        target.width = newValue;\n      }\n    }\n  }) effectiveWidth: number;\n  @property() questionTitleWidth: string;\n\n  constructor(width?: number, questionTitleWidth?: string) {\n    super();\n    this.effectiveWidth = width;\n    this.questionTitleWidth = questionTitleWidth;\n  }\n\n  public getType(): string {\n    return \"panellayoutcolumn\";\n  }\n  public isEmpty(): boolean {\n    return !this.width && !this.questionTitleWidth;\n  }\n}\n\nSerializer.addClass(\"panellayoutcolumn\",\n  [\n    { name: \"effectiveWidth:number\", isSerializable: false, minValue: 0 },\n    { name: \"width:number\", visible: false },\n    \"questionTitleWidth\",\n  ],\n  (value: any) => new PanelLayoutColumnModel()\n);", "import { property, Serializer } from \"./jsonobject\";\nimport { HashTable, Helpers } from \"./helpers\";\nimport { ArrayChanges, Base } from \"./base\";\nimport {\n  ISurveyImpl,\n  IPage,\n  IPanel,\n  IConditionRunner,\n  IElement,\n  ISurveyElement,\n  IQuestion,\n  ISurveyErrorOwner,\n  ITitleOwner,\n  IProgressInfo,\n  ISurvey,\n  IFindElement\n} from \"./base-interfaces\";\nimport { SurveyElement, RenderingCompletedAwaiter } from \"./survey-element\";\nimport { Question } from \"./question\";\nimport { ElementFactory, QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { OneAnswerRequiredError } from \"./error\";\nimport { settings } from \"./settings\";\nimport { cleanHtmlElementAfterAnimation, findScrollableParent, getElementWidth, isElementVisible, floorTo2Decimals, prepareElementForVerticalAnimation, setPropertiesOnElementForAnimation } from \"./utils/utils\";\nimport { SurveyError } from \"./survey-error\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IAction } from \"./actions/action\";\nimport { ActionContainer } from \"./actions/container\";\nimport { SurveyModel } from \"./survey\";\nimport { AnimationGroup, IAnimationGroupConsumer } from \"./utils/animation\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { PanelLayoutColumnModel } from \"./panel-layout-column\";\nimport { ValidationContext } from \"./question\";\n\nexport class QuestionRowModel extends Base {\n  private static rowCounter = 100;\n  private static getRowId(): string {\n    return \"pr_\" + QuestionRowModel.rowCounter++;\n  }\n  protected _scrollableParent: any = undefined;\n  protected _updateVisibility: any = undefined;\n  private get allowRendering(): boolean {\n    return !this.panel || !this.panel.survey || !(this.panel.survey as any)[\"isLazyRenderingSuspended\"];\n  }\n  private lazyRenderingTimeout: ReturnType<typeof setTimeout>;\n  public startLazyRendering(rowContainerDiv: HTMLElement, findScrollableContainer = findScrollableParent): void {\n    if (!DomDocumentHelper.isAvailable()) return;\n    this._scrollableParent = findScrollableContainer(rowContainerDiv);\n    // if  this._scrollableParent is html the scroll event isn't fired, so we should use window\n    if (this._scrollableParent === DomDocumentHelper.getDocumentElement()) {\n      this._scrollableParent = DomWindowHelper.getWindow();\n    }\n    const hasScroll = this._scrollableParent.scrollHeight > this._scrollableParent.clientHeight;\n    this.isNeedRender = !hasScroll;\n    if (hasScroll) {\n      this._updateVisibility = () => {\n        if (!this.allowRendering) {\n          return;\n        }\n        var isRowContainerDivVisible = isElementVisible(rowContainerDiv, 50);\n        if (!this.isNeedRender && isRowContainerDivVisible) {\n          this.isNeedRender = true;\n          this.stopLazyRendering();\n        }\n      };\n      this.lazyRenderingTimeout = setTimeout(() => {\n        if (\n          !!this._scrollableParent &&\n          !!this._scrollableParent.addEventListener\n        ) {\n          this._scrollableParent.addEventListener(\n            \"scroll\",\n            this._updateVisibility\n          );\n        }\n        this.ensureVisibility();\n      }, 10);\n    }\n  }\n  public ensureVisibility() {\n    if (!!this._updateVisibility) {\n      this._updateVisibility();\n    }\n  }\n  public stopLazyRendering() {\n    if (\n      !!this._scrollableParent &&\n      !!this._updateVisibility &&\n      !!this._scrollableParent.removeEventListener\n    ) {\n      this._scrollableParent.removeEventListener(\n        \"scroll\",\n        this._updateVisibility\n      );\n    }\n    clearTimeout(this.lazyRenderingTimeout);\n    this._scrollableParent = undefined;\n    this._updateVisibility = undefined;\n  }\n  private idValue: string;\n  constructor(public panel: PanelModelBase) {\n    super();\n    this.idValue = QuestionRowModel.getRowId();\n    this.visible = panel.areInvisibleElementsShowing;\n    this.createNewArray(\"elements\");\n    this.createNewArray(\"visibleElements\");\n  }\n  private isLazyRenderingValue: boolean;\n  public setIsLazyRendering(val: boolean) {\n    this.isLazyRenderingValue = val;\n    this.isNeedRender = !val;\n  }\n  public isLazyRendering(): boolean {\n    return this.isLazyRenderingValue === true;\n  }\n  public get id(): string {\n    return this.idValue;\n  }\n  protected equalsCore(obj: Base): boolean {\n    return this == obj;\n  }\n  public get elements(): Array<IElement> {\n    return this.getPropertyValue(\"elements\");\n  }\n  protected getIsAnimationAllowed(): boolean {\n    return super.getIsAnimationAllowed() && this.visible && this.panel?.animationAllowed;\n  }\n  private getVisibleElementsAnimationOptions(): IAnimationGroupConsumer<IElement> {\n    const beforeRunAnimation = (el: HTMLElement) => {\n      prepareElementForVerticalAnimation(el);\n      setPropertiesOnElementForAnimation(el, { width: getElementWidth(el) + \"px\" });\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      isAnimationEnabled: () => this.animationAllowed,\n      allowSyncRemovalAddition: false,\n      getAnimatedElement: (element: IElement) => (element as any as SurveyElement).getWrapperElement(),\n      getLeaveOptions: (element: IElement) => {\n        const surveyElement = element as unknown as SurveyElement;\n        const cssClasses = element.isPanel ? surveyElement.cssClasses.panel : surveyElement.cssClasses;\n        return {\n          cssClass: cssClasses.leave,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      },\n      getEnterOptions: (element: IElement) => {\n        const surveyElement = element as unknown as SurveyElement;\n        const cssClasses = element.isPanel ? surveyElement.cssClasses.panel : surveyElement.cssClasses;\n        return {\n          cssClass: cssClasses.enter,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  public visibleElementsAnimation: AnimationGroup<IElement> = new AnimationGroup(this.getVisibleElementsAnimationOptions(), (value) => {\n    this.setWidth(value);\n    this.setPropertyValue(\"visibleElements\", value);\n  }, () => this.visibleElements);\n  public set visibleElements(val: Array<IElement>) {\n    if (!val.length) {\n      this.visible = false;\n      this.visibleElementsAnimation.cancel();\n      return;\n    } else {\n      this.visible = true;\n    }\n    this.visibleElementsAnimation.sync(val);\n  }\n  public get visibleElements(): Array<IElement> {\n    return this.getPropertyValue(\"visibleElements\");\n  }\n\n  public onVisibleChangedCallback: () => void;\n  public get visible(): boolean {\n    return this.getPropertyValue(\"visible\", true);\n  }\n  public set visible(val: boolean) {\n    this.setPropertyValue(\"visible\", val);\n    this.onVisibleChangedCallback && this.onVisibleChangedCallback();\n  }\n  public get isNeedRender(): boolean {\n    return this.getPropertyValue(\"isneedrender\", true);\n  }\n  public set isNeedRender(val: boolean) {\n    this.setPropertyValue(\"isneedrender\", val);\n  }\n\n  public updateVisible() {\n    var visElements: Array<IElement> = [];\n    for (var i = 0; i < this.elements.length; i++) {\n      if (this.elements[i].isVisible) {\n        visElements.push(this.elements[i]);\n      }\n      if (this.elements[i].isPanel || this.elements[i].getType() === \"paneldynamic\") {\n        this.setIsLazyRendering(false);\n        this.stopLazyRendering();\n      }\n    }\n    this.visibleElements = visElements;\n    return;\n  }\n  public addElement(q: IElement) {\n    this.elements.push(q);\n    this.updateVisible();\n  }\n  public get index(): number {\n    return this.panel.rows.indexOf(this);\n  }\n  private setWidth(visibleElement: Array<IElement>) {\n    var visCount = visibleElement.length;\n    if (visCount == 0) return;\n    const isSingleInRow = visibleElement.length === 1;\n    var counter = 0;\n    var preSetWidthElements = [];\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n\n      if (el.isVisible) {\n        (<any>el).isSingleInRow = isSingleInRow;\n        var width = this.getElementWidth(el);\n        if (!!width) {\n          el.renderWidth = this.getRenderedWidthFromWidth(width);\n          preSetWidthElements.push(el);\n        }\n        el.rightIndent = 0;\n        counter++;\n      } else {\n        el.renderWidth = \"\";\n      }\n    }\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n      if (!el.isVisible || preSetWidthElements.indexOf(el) > -1) continue;\n      if (preSetWidthElements.length == 0) {\n        el.renderWidth = `${Number.parseFloat((100 / visCount).toFixed(6))}%`;\n      } else {\n        el.renderWidth = this.getRenderedCalcWidth(\n          el,\n          preSetWidthElements,\n          visCount\n        );\n      }\n    }\n  }\n\n  private getRenderedCalcWidth(\n    el: IElement,\n    preSetWidthElements: Array<IElement>,\n    visCount: number\n  ): string {\n    var expression = \"100%\";\n    for (var i = 0; i < preSetWidthElements.length; i++) {\n      expression += \" - \" + preSetWidthElements[i].renderWidth;\n    }\n    var calcWidthEl = visCount - preSetWidthElements.length;\n    if (calcWidthEl > 1) {\n      expression = \"(\" + expression + \")/\" + calcWidthEl.toString();\n    }\n    return \"calc(\" + expression + \")\";\n  }\n  private getElementWidth(el: IElement): string {\n    var width = el.width;\n    if (!width || typeof width !== \"string\") return \"\";\n    return width.trim();\n  }\n  private getRenderedWidthFromWidth(width: string): string {\n    return Helpers.isNumber(width) ? width + \"px\" : width;\n  }\n  public dispose(): void {\n    super.dispose();\n    this.stopLazyRendering();\n  }\n  public getRowCss() {\n    return new CssClassBuilder()\n      .append(this.panel.cssClasses.row)\n      .append(this.panel.cssClasses.rowCompact, this.panel[\"isCompact\"])\n      .append(this.panel.cssClasses.pageRow, this.panel.isPage || (this.panel as PanelModel).showPanelAsPage)\n      .append(this.panel.cssClasses.rowMultiple, this.visibleElements.length > 1)\n      .toString();\n  }\n  private rootElement?: HTMLElement;\n  public setRootElement(element?: HTMLElement) {\n    this.rootElement = element;\n  }\n  public getRootElement(): HTMLElement {\n    return this.rootElement;\n  }\n}\n\n/**\n * A base class for the [`PanelModel`](https://surveyjs.io/form-library/documentation/panelmodel) and [`PageModel`](https://surveyjs.io/form-library/documentation/pagemodel) classes.\n */\nexport class PanelModelBase extends SurveyElement<Question>\n  implements IPanel, IConditionRunner, ISurveyErrorOwner, ITitleOwner {\n  private static panelCounter = 100;\n  private static getPanelId(): string {\n    return \"sp_\" + PanelModelBase.panelCounter++;\n  }\n\n  private elementsValue: Array<IElement>;\n  private isQuestionsReady: boolean = false;\n  private questionsValue: Array<Question> = new Array<Question>();\n  private _columns: Array<PanelLayoutColumnModel> = undefined;\n  private _columnsReady = false;\n\n  /**\n   * An array of columns used to arrange survey elements within this page or panel. Applies only if you set the `SurveyModel`'s [`gridLayoutEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#gridLayoutEnabled) property to `true`.\n   *\n   * Each object in this array configures a single layout column and has the following properties:\n   *\n   * - `width`: `number`\\\n   * Column width, in percentage.\n   *\n   * - `questionTitleWidth`: `string`\\\n   * The width of question titles, in pixels.\n   *\n   * The `gridLayoutColumns` array is generated automatically based on the maximum number of questions and panels in the same row. To arrange the survey elements in one or several rows, disable the [`startWithNewLine`](https://surveyjs.io/form-library/documentation/api-reference/question#startWithNewLine) property for those elements that should occupy the same row as the previous question or panel. You can also set the [`colSpan`](https://surveyjs.io/form-library/documentation/api-reference/question#colSpan) property for individual questions and panels to specify how many layout columns they span.\n   */\n  public get gridLayoutColumns(): Array<PanelLayoutColumnModel> {\n    let res = this.getPropertyValue(\"gridLayoutColumns\");\n    if (!this._columns) {\n      this.generateColumns([].concat(res));\n      res = this._columns;\n      this.gridLayoutColumns = res;\n    }\n    return res;\n  }\n  public set gridLayoutColumns(val: Array<PanelLayoutColumnModel>) {\n    this.setPropertyValue(\"gridLayoutColumns\", val);\n  }\n\n  addElementCallback: (element: IElement) => void;\n  removeElementCallback: (element: IElement) => void;\n  onGetQuestionTitleLocation: () => string;\n  onGetQuestionTitleWidth: () => string;\n\n  public onAddRow(row: QuestionRowModel): void {\n    this.onRowVisibleChanged();\n    row.onVisibleChangedCallback = () => this.onRowVisibleChanged();\n  }\n  private getRowsAnimationOptions(): IAnimationGroupConsumer<QuestionRowModel> {\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      isAnimationEnabled: () => this.animationAllowed,\n      getAnimatedElement: (row: QuestionRowModel) => row.getRootElement(),\n      getLeaveOptions: (row: QuestionRowModel, info) => {\n        return {\n          cssClass: this.cssClasses.rowLeave,\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation,\n\n        };\n      },\n      getEnterOptions: (_: QuestionRowModel, animationInfo) => {\n        const cssClasses = this.cssClasses;\n        return {\n          cssClass: new CssClassBuilder().append(cssClasses.rowEnter).append(cssClasses.rowDelayedEnter, animationInfo.isDeletingRunning).toString(),\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  private rowsAnimation: AnimationGroup<QuestionRowModel> = new AnimationGroup(this.getRowsAnimationOptions(), (value) => {\n    this.setPropertyValue(\"visibleRows\", value);\n  }, () => this.visibleRows);\n  get visibleRows(): Array<QuestionRowModel> {\n    return this.getPropertyValue(\"visibleRows\");\n  }\n  set visibleRows(val: Array<QuestionRowModel>) {\n    this.rowsAnimation.sync(val);\n  }\n\n  public onRemoveRow(row: QuestionRowModel): void {\n    row.visibleElementsAnimation.cancel();\n    this.visibleRows = this.rows.filter(row => row.visible);\n    row.onVisibleChangedCallback = undefined;\n  }\n  onRowVisibleChanged() {\n    this.visibleRows = this.rows.filter(row => row.visible);\n  }\n  constructor(name: string = \"\") {\n    super(name);\n    this.createNewArray(\"rows\", (el: QuestionRowModel, index: number) => { this.onAddRow(el); }, (el: QuestionRowModel) => { this.onRemoveRow(el); });\n    this.createNewArray(\"visibleRows\");\n    this.createNewArray(\"gridLayoutColumns\", (col: PanelLayoutColumnModel) => {\n      col.onPropertyValueChangedCallback = this.onColumnPropertyValueChangedCallback;\n    });\n\n    this.elementsValue = this.createNewArray(\n      \"elements\",\n      this.onAddElement.bind(this),\n      this.onRemoveElement.bind(this)\n    );\n    this.setPropertyValueDirectly(\"id\", PanelModelBase.getPanelId());\n\n    this.addExpressionProperty(\"visibleIf\",\n      (obj: Base, res: any) => { this.visible = res === true; },\n      (obj: Base) => { return !this.areInvisibleElementsShowing; });\n    this.addExpressionProperty(\"enableIf\", (obj: Base, res: any) => { this.readOnly = res === false; });\n    this.addExpressionProperty(\"requiredIf\", (obj: Base, res: any) => { this.isRequired = res === true; });\n\n    this.createLocalizableString(\"requiredErrorText\", this);\n    this.createLocalizableString(\"navigationTitle\", this, true).onGetTextCallback = (text: string) => {\n      return text || this.title || this.name;\n    };\n    this.registerPropertyChangedHandlers([\"questionTitleLocation\"], () => {\n      this.onVisibleChanged.bind(this);\n      this.updateElementCss(true);\n    });\n    this.registerPropertyChangedHandlers(\n      [\"questionStartIndex\", \"showQuestionNumbers\"],\n      () => {\n        this.updateVisibleIndexes();\n      }\n    );\n    this.registerPropertyChangedHandlers([\"title\"], () => {\n      this.resetHasTextInTitle();\n    });\n  }\n  public getType(): string {\n    return \"panelbase\";\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    //if(this.surveyImpl === value) return; TODO refactor\n    this.blockAnimations();\n    super.setSurveyImpl(value, isLight);\n    if (this.isDesignMode)this.onVisibleChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].setSurveyImpl(value, isLight);\n    }\n    this.releaseAnimations();\n  }\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n    this.markQuestionListDirty();\n    this.onRowsChanged();\n  }\n\n  @property({ defaultValue: true }) showTitle: boolean;\n\n  public get hasTextInTitle(): boolean {\n    return this.getPropertyValue(\"hasTextInTitle\", undefined, (): boolean => !!this.title);\n  }\n  private resetHasTextInTitle(): void {\n    this.resetPropertyValue(\"hasTextInTitle\");\n  }\n  get hasTitle(): boolean {\n    return (\n      (this.canShowTitle(this.survey) && (this.hasTextInTitle || this.locTitle.textOrHtml.length > 0)) ||\n      (this.isDesignMode && !this.isPanel && this.showTitle && settings.designMode.showEmptyTitles)\n    );\n  }\n  public delete(doDispose: boolean = true): void {\n    this.deletePanel();\n    this.removeFromParent();\n    if (doDispose) {\n      this.dispose();\n    }\n  }\n  private deletePanel(): void {\n    const els = this.elements;\n    for (let i = 0; i < els.length; i ++) {\n      const el = els[i];\n      if (el.isPanel) {\n        (<PanelModelBase><any>el).deletePanel();\n      }\n      this.onRemoveElementNotifySurvey(el);\n    }\n  }\n  protected removeFromParent(): void {}\n  protected canShowTitle(survey: ISurvey): boolean { return true; }\n\n  protected getDefaultTitleTagName(): string {\n    return settings.titleTags.panel;\n  }\n\n  @property({ defaultValue: true }) showDescription: boolean;\n  get _showDescription(): boolean {\n    if (!this.hasTitle && this.isDesignMode) return false;\n    return this.survey && (<any>this.survey).showPageTitles && this.hasDescription ||\n      (this.showDescription && this.isDesignMode &&\n        settings.designMode.showEmptyDescriptions);\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      (<Base>(<any>this.elements[i])).localeChanged();\n    }\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].locStrsChanged();\n    }\n  }\n  getMarkdownHtml(text: string, name: string, item?: any): string {\n    if (name === \"navigationTitle\" && this.locNavigationTitle.isEmpty) {\n      return this.locTitle.renderedHtml || this.name;\n    }\n    return super.getMarkdownHtml(text, name, item);\n  }\n  public get locNavigationTitle(): LocalizableString {\n    return this.getLocalizableString(\"navigationTitle\");\n  }\n  public get renderedNavigationTitle(): string {\n    return this.locNavigationTitle.renderedHtml;\n  }\n  /**\n   * Returns a character or text string that indicates a required panel/page.\n   * @see SurveyModel.requiredMark\n   * @see isRequired\n   */\n  public get requiredMark(): string {\n    return !!this.survey && this.isRequired\n      ? this.survey.requiredMark\n      : \"\";\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#requiredMark) property instead.\n   */\n  public get requiredText(): string {\n    return this.requiredMark;\n  }\n  protected get titlePattern(): string {\n    return !!this.survey ? this.survey.questionTitlePattern : \"numTitleRequire\";\n  }\n  public get isRequireTextOnStart() {\n    return this.isRequired && this.titlePattern == \"requireNumTitle\";\n  }\n  public get isRequireTextBeforeTitle() {\n    return this.isRequired && this.titlePattern == \"numRequireTitle\";\n  }\n  public get isRequireTextAfterTitle() {\n    return this.isRequired && this.titlePattern == \"numTitleRequire\";\n  }\n  /**\n   * Specifies a custom error message for a required panel/page.\n   * @see isRequired\n   * @see requiredIf\n   */\n  public get requiredErrorText(): string {\n    return this.getLocalizableStringText(\"requiredErrorText\");\n  }\n  public set requiredErrorText(val: string) {\n    this.setLocalizableStringText(\"requiredErrorText\", val);\n  }\n  get locRequiredErrorText(): LocalizableString {\n    return this.getLocalizableString(\"requiredErrorText\");\n  }\n  /**\n   * Specifies the sort order of questions in the panel/page.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` - Preserves the original order of questions.\n   * - `\"random\"` - Displays questions in random order.\n   * - `\"default\"` (default) - Inherits the setting from the `SurveyModel`'s [`questionOrder`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionOrder) property.\n   * @see areQuestionsRandomized\n   */\n  public get questionOrder(): string {\n    return this.getPropertyValue(\"questionOrder\");\n  }\n  public set questionOrder(val: string) {\n    this.setPropertyValue(\"questionOrder\", val);\n  }\n  /**\n   * @deprecated Use the [`questionOrder`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#questionOrder) property instead.\n   */\n  public get questionsOrder(): string {\n    return this.questionOrder;\n  }\n  public set questionsOrder(val: string) {\n    this.questionOrder = val;\n  }\n  public addNoFromChild(no: string): string { return no; }\n  private canRandomize(isRandom: boolean): boolean {\n    return isRandom && (this.questionOrder !== \"initial\") || this.questionOrder === \"random\";\n  }\n  protected isRandomizing = false;\n  randomizeElements(isRandom: boolean): boolean {\n    if (!this.canRandomize(isRandom) || this.isRandomizing) return false;\n    this.isRandomizing = true;\n    var oldElements = [];\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      oldElements.push(elements[i]);\n    }\n    const newElements = Helpers.randomizeArray<IElement>(oldElements);\n    this.setArrayPropertyDirectly(\"elements\", newElements, false);\n    this.updateRows();\n    this.updateVisibleIndexes();\n    this.isRandomizing = false;\n    return true;\n  }\n  /**\n   * Returns `true` if elements in this panel/page are arranged in random order.\n   * @see questionOrder\n   */\n  public get areQuestionsRandomized(): boolean {\n    var order =\n      this.questionOrder == \"default\" && this.survey\n        ? this.survey.questionOrder\n        : this.questionOrder;\n    return order == \"random\";\n  }\n  /**\n   * Returns a survey element (panel or page) that contains this panel and allows you to move the panel to a different survey element.\n   *\n   * For `PageModel` objects, the `parent` property is `null`, except in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and the `parent` property contains this object.\n   */\n  public get parent(): PanelModelBase {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  public set parent(val: PanelModelBase) {\n    this.setPropertyValue(\"parent\", val);\n  }\n  public get depth(): number {\n    if (this.parent == null) return 0;\n    return this.parent.depth + 1;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this panel/page becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visible\n   * @see isVisible\n   */\n  public get visibleIf(): string {\n    return this.getPropertyValue(\"visibleIf\", \"\");\n  }\n  public set visibleIf(val: string) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  protected calcCssClasses(css: any): any {\n    var classes = { panel: {}, error: {}, row: \"\", rowEnter: \"\", rowLeave: \"\", rowDelayedEnter: \"\", rowMultiple: \"\", pageRow: \"\", rowCompact: \"\" };\n    this.copyCssClasses(classes.panel, css.panel);\n    this.copyCssClasses(classes.error, css.error);\n    if (!!css.pageRow) {\n      classes.pageRow = css.pageRow;\n    }\n    if (!!css.rowCompact) {\n      classes.rowCompact = css.rowCompact;\n    }\n    if (!!css.row) {\n      classes.row = css.row;\n    }\n    if (!!css.rowEnter) {\n      classes.rowEnter = css.rowEnter;\n    }\n    if (!!css.rowLeave) {\n      classes.rowLeave = css.rowLeave;\n    }\n    if (!!css.rowDelayedEnter) {\n      classes.rowDelayedEnter = css.rowDelayedEnter;\n    }\n    if (!!css.rowMultiple) {\n      classes.rowMultiple = css.rowMultiple;\n    }\n    if (this.survey) {\n      this.survey.updatePanelCssClasses(this, classes);\n    }\n    return classes;\n  }\n  /**\n   * An auto-generated unique element identifier.\n   */\n  public get id(): string {\n    return this.getPropertyValue(\"id\");\n  }\n  public set id(val: string) {\n    this.setPropertyValue(\"id\", val);\n  }\n  public get isPanel(): boolean {\n    return false;\n  }\n  public getPanel(): IPanel {\n    return this;\n  }\n  getLayoutType(): string {\n    return \"row\";\n  }\n  isLayoutTypeSupported(layoutType: string): boolean {\n    return layoutType !== \"flow\";\n  }\n  /**\n   * An array of all questions within this panel/page. Includes questions within nested panels.\n   * @see elements\n   */\n  public get questions(): Array<Question> {\n    if (!this.isQuestionsReady) {\n      this.questionsValue = this.getQuestionsCore(false);\n      this.isQuestionsReady = true;\n    }\n\n    return this.questionsValue;\n  }\n  public get visibleQuestions(): Array<Question> {\n    return this.getQuestionsCore(true);\n  }\n  private getQuestionsCore(isVisible: boolean): Array<Question> {\n    const res = new Array<Question>();\n    for (let i = 0; i < this.elements.length; i++) {\n      const el = this.elements[i];\n      if (isVisible && !el.isVisible) continue;\n      if (el.isPanel) {\n        var qs = (<PanelModel>el).getQuestionsCore(isVisible);\n        for (let j = 0; j < qs.length; j++) {\n          res.push(qs[j]);\n        }\n      } else {\n        res.push(<Question>el);\n      }\n    }\n    return res;\n  }\n  public getQuestions(includeNested: boolean): Array<Question> {\n    const res = this.questions;\n    if (!includeNested) return res;\n    const res2: Array<Question> = [];\n    res.forEach(q => {\n      res2.push(q);\n      q.getNestedQuestions().forEach(nQ => res2.push(nQ));\n    });\n    return res2;\n  }\n  protected getValidName(name: string): string {\n    if (!!name) return name.trim();\n    return name;\n  }\n  /**\n   * Returns a question with a specified `name`. This method does not find questions within nested panels.\n   * @param name A question name.\n   */\n  public getQuestionByName(name: string): Question {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].name == name) return questions[i];\n    }\n    return null;\n  }\n  /**\n   * Returns a survey element with a specified `name`. This method can find survey elements within nested panels.\n   * @param name An element name.\n   */\n  public getElementByName(name: string): IElement {\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (el.name == name) return el;\n      var pnl = el.getPanel();\n      if (!!pnl) {\n        var res = (<PanelModelBase>pnl).getElementByName(name);\n        if (!!res) return res;\n      }\n    }\n    return null;\n  }\n  public getQuestionByValueName(valueName: string, caseInsensitive: boolean = false): Question {\n    const res = this.getQuestionsByValueName(valueName, caseInsensitive);\n    return res.length > 0 ? res[0] : null;\n  }\n  public getQuestionsByValueName(valueName: string, caseInsensitive: boolean = false): Array<Question> {\n    const res = [];\n    if (caseInsensitive) {\n      valueName = valueName.toLowerCase();\n    }\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      let name = questions[i].getValueName();\n      if (caseInsensitive) {\n        name = name.toLowerCase();\n      }\n      if (name == valueName) res.push(questions[i]);\n    }\n    return res;\n  }\n  /**\n   * Returns a JSON object with question values nested in the panel/page.\n   * @see getDisplayValue\n   */\n  public getValue(): any {\n    var data: any = {};\n    this.collectValues(data, 0);\n    return Helpers.getUnbindValue(data);\n  }\n  public hasValueAnyQuestion(visibleOnly?: boolean): boolean {\n    const questions = visibleOnly ? this.visibleQuestions : this.questions;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  collectValues(data: any, level: number): boolean {\n    let elements = this.elements;\n    if (level === 0) {\n      elements = this.questions;\n    }\n    let hasValue = false;\n    for (var i = 0; i < elements.length; i++) {\n      const el = elements[i];\n      if (el.isPanel || el.isPage) {\n        const panelData = {};\n        if ((<PanelModelBase><any>el).collectValues(panelData, level - 1)) {\n          data[el.name] = panelData;\n          hasValue = true;\n        }\n      } else {\n        const q = <Question>el;\n        if (!q.isEmpty()) {\n          var valueName = q.getValueName();\n          data[valueName] = q.getStructuredValue(level - 1);\n          if (!!this.data) {\n            var comment = this.data.getComment(valueName);\n            if (!!comment) {\n              data[valueName + Base.commentSuffix] = comment;\n            }\n          }\n        }\n        hasValue = true;\n      }\n    }\n    return true;\n  }\n  /**\n   * Returns a JSON object with display texts that correspond to question values nested in the panel/page.\n   * @param keysAsText Pass `true` if not only values in the object should be display texts, but also keys. Default value: `false`.\n   * @see getValue\n   */\n  public getDisplayValue(keysAsText: boolean): any {\n    var data: any = {};\n    var questions = this.questions;\n\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      if (q.isEmpty()) continue;\n      var valueName = keysAsText ? q.title : q.getValueName();\n      data[valueName] = q.getDisplayValue(keysAsText);\n    }\n    return data;\n  }\n  /**\n   * Returns a JSON object with comments left to questions within this panel/page. Question names are used as keys.\n   */\n  public getComments(): any {\n    var comments = {};\n    if (!this.data) return comments;\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      var comment = this.data.getComment(q.getValueName());\n      if (!!comment) {\n        (<any>comments)[q.getValueName()] = comment;\n      }\n    }\n    return comments;\n  }\n  /**\n   * Removes values that cannot be assigned to nested questions, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values for invisible questions and values that fail validation. Call the `validate()` method to validate newly assigned values.\n   *\n   * @see validate\n   */\n  public clearIncorrectValues() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].clearIncorrectValues();\n    }\n  }\n  /**\n   * Empties the `errors` array for this panel/page and all its child elements (panels and questions).\n   * @see errors\n   */\n  public clearErrors() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].clearErrors();\n    }\n    this.errors = [];\n  }\n  private markQuestionListDirty() {\n    this.isQuestionsReady = false;\n    if (this.parent)this.parent.markQuestionListDirty();\n  }\n  /**\n   * An array of all survey elements (questions or panels) within this panel/page. Does not include questions within nested panels.\n   * @see questions\n   */\n  public get elements(): Array<IElement> {\n    Base.collectDependency(this, \"elements\");\n    return this.elementsValue;\n  }\n  public getElementsInDesign(includeHidden: boolean = false): Array<IElement> {\n    return this.elements;\n  }\n  /**\n   * Checks whether a given element belongs to this panel/page or nested panels.\n   * @param element A survey element to check.\n   */\n  public containsElement(element: IElement): boolean {\n    for (var i = 0; i < this.elements.length; i++) {\n      var el: any = this.elements[i];\n      if (el == element) return true;\n      var pnl = el.getPanel();\n      if (!!pnl) {\n        if ((<PanelModelBase>pnl).containsElement(element)) return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Makes the panel/page require an answer at least in one nested question. If a respondent leaves the panel/page without any answers, the survey displays a validation error.\n   * @see requiredIf\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  public get isRequired(): boolean {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  public set isRequired(val: boolean) {\n    this.setPropertyValue(\"isRequired\", val);\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this panel/page becomes required (at least one question in the panel/page should have an answer).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  public get requiredIf(): string {\n    return this.getPropertyValue(\"requiredIf\", \"\");\n  }\n  public set requiredIf(val: string) {\n    this.setPropertyValue(\"requiredIf\", val);\n  }\n  public searchText(text: string, founded: Array<IFindElement>): void {\n    super.searchText(text, founded);\n    for (var i = 0; i < this.elements.length; i++) {\n      (<Base>(<any>this.elements[i])).searchText(text, founded);\n    }\n  }\n  public hasErrors(fireCallback: boolean = true, focusOnFirstError: boolean = false): boolean {\n    return !this.validate(fireCallback, focusOnFirstError);\n  }\n  /**\n   * Validates questions within this panel or page and returns `false` if the validation fails.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @param focusFirstError *(Optional)* Pass `true` if you want to focus the first question with a validation error.\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  public validate(fireCallback: boolean = true, focusFirstError: boolean = false, callbackResult?: (res: boolean, question: Question) => void): boolean {\n    const context = new ValidationContext({\n      fireCallback: fireCallback,\n      focusOnFirstError: focusFirstError,\n      callbackResult: callbackResult\n    });\n    this.validateCore(context);\n    context.finish();\n    return context.runningResult;\n  }\n  public validateContainerOnly(): void {\n    this.validateInPanels(new ValidationContext({ fireCallback: true, isOnValueChanged: false }));\n    if (!!this.parent) {\n      this.parent.validateContainerOnly();\n    }\n  }\n  onQuestionValueChanged(el: IElement): void {\n    const index = this.questions.indexOf(<any>el);\n    if (index < 0) return;\n    const dif = 5;\n    const max = this.questions.length - 1;\n    const start = index - dif > 0 ? index - dif : 0;\n    const end = index + dif < max ? index + dif : max;\n    for (let i = start; i <= end; i ++) {\n      if (i === index) continue;\n      const q = this.questions[i];\n      if (q.errors.length > 0 && q.validate(false)) {\n        q.validate(true);\n      }\n    }\n  }\n  private validateInPanels(context: ValidationContext): void {\n    var errors = <Array<any>>[];\n    this.validateRequired(context, errors);\n    if (this.survey) {\n      this.survey.validatePanel(this, errors, context.fireCallback);\n      if (errors.length > 0) {\n        context.setError(this);\n      }\n    }\n    if (!!context.fireCallback) {\n      this.errors = errors;\n    }\n  }\n  //ISurveyErrorOwner\n  getErrorCustomText(text: string, error: SurveyError): string {\n    if (!!this.survey) return this.survey.getSurveyErrorCustomText(this, text, error);\n    return text;\n  }\n\n  private validateRequired(context: ValidationContext, errors: Array<SurveyError>): void {\n    if (!this.isRequired) return;\n    var visQuestions = <Array<any>>[];\n    this.addQuestionsToList(visQuestions, true);\n    if (visQuestions.length == 0) return;\n    for (var i = 0; i < visQuestions.length; i++) {\n      if (!visQuestions[i].isEmpty()) return;\n    }\n    errors.push(new OneAnswerRequiredError(this.requiredErrorText, this));\n    context.setError(visQuestions[0]);\n  }\n  public validateElement(context: ValidationContext): boolean {\n    const errorCount = context.errorCount;\n    this.validateCore(context);\n    return context.errorCount <= errorCount;\n  }\n  protected validateCore(context: ValidationContext): void {\n    let singleQ = <Question>this.survey?.currentSingleQuestion;\n    if (singleQ && this.questions.indexOf(singleQ) < 0) {\n      singleQ = undefined;\n    }\n    const elements = singleQ ? [singleQ] : this.elements;\n    let element = null;\n    for (var i = 0; i < elements.length; i++) {\n      element = elements[i];\n      if (!element.isVisible) continue;\n      if (element.isPanel) {\n        (<PanelModelBase>(<any>element)).validateCore(context);\n      } else {\n        var question = <Question>element;\n        question.validateElement(context);\n      }\n    }\n    if (!singleQ) {\n      this.validateInPanels(context);\n      this.updateContainsErrors();\n    }\n  }\n  protected getContainsErrors(): boolean {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      if (elements[i].containsErrors) return true;\n    }\n    return false;\n  }\n  updateElementVisibility(): void {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].updateElementVisibility();\n    }\n    super.updateElementVisibility();\n  }\n  getFirstQuestionToFocus(withError: boolean = false, ignoreCollapseState: boolean = false): Question {\n    if (!withError && !ignoreCollapseState && this.isCollapsed) return null;\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (!el.isVisible || !ignoreCollapseState && el.isCollapsed) continue;\n      if (el.isPanel) {\n        var res = (<PanelModelBase>(<any>el)).getFirstQuestionToFocus(withError, ignoreCollapseState);\n        if (!!res) return res;\n      } else {\n        const q = (<Question>el).getFirstQuestionToFocus(withError);\n        if (!!q) return q;\n      }\n    }\n    return null;\n  }\n  getFirstVisibleQuestion(): Question {\n    const qs = this.questions;\n    for (let i = 0; i < qs.length; i++) {\n      if (qs[i].isVisible) return qs[i];\n    }\n    return null;\n  }\n  getFirstVisibleElement(): IElement {\n    const els = this.elements;\n    for (let i = 0; i < els.length; i++) {\n      if (els[i].isVisible) return els[i];\n    }\n    return null;\n  }\n  /**\n   * Focuses the first question in this panel/page.\n   * @see focusFirstErrorQuestion\n   */\n  public focusFirstQuestion(): void {\n    const q = this.getFirstQuestionToFocus();\n    if (!!q) {\n      q.focus();\n    }\n  }\n  /**\n   * Focuses the first question with a validation error in this panel/page.\n   * @see validate\n   * @see focusFirstQuestion\n   */\n  public focusFirstErrorQuestion() {\n    var q = this.getFirstQuestionToFocus(true);\n    if (!!q) {\n      q.focus();\n    }\n  }\n  public addQuestionsToList(\n    list: Array<IQuestion>,\n    visibleOnly: boolean = false,\n    includingDesignTime: boolean = false\n  ) {\n    this.addElementsToList(list, visibleOnly, includingDesignTime, false);\n  }\n  public addPanelsIntoList(\n    list: Array<IPanel>,\n    visibleOnly: boolean = false,\n    includingDesignTime: boolean = false\n  ) {\n    this.addElementsToList(\n      <Array<IElement>>(<Array<any>>list),\n      visibleOnly,\n      includingDesignTime,\n      true\n    );\n  }\n  private addElementsToList(\n    list: Array<IElement>,\n    visibleOnly: boolean,\n    includingDesignTime: boolean,\n    isPanel: boolean\n  ) {\n    if (visibleOnly && !this.visible) return;\n    this.addElementsToListCore(\n      list,\n      this.elements,\n      visibleOnly,\n      includingDesignTime,\n      isPanel\n    );\n  }\n  private addElementsToListCore(\n    list: Array<IElement>,\n    elements: Array<IElement>,\n    visibleOnly: boolean,\n    includingDesignTime: boolean,\n    isPanel: boolean\n  ) {\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (visibleOnly && !el.visible) continue;\n      if ((isPanel && el.isPanel) || (!isPanel && !el.isPanel)) {\n        list.push(el);\n      }\n      if (el.isPanel) {\n        (<PanelModel>el).addElementsToListCore(\n          list,\n          (<PanelModel>el).elements,\n          visibleOnly,\n          includingDesignTime,\n          isPanel\n        );\n      } else {\n        if (includingDesignTime) {\n          this.addElementsToListCore(\n            list,\n            (<SurveyElement>(<any>el)).getElementsInDesign(false),\n            visibleOnly,\n            includingDesignTime,\n            isPanel\n          );\n        }\n      }\n    }\n  }\n  private calcMaxRowColSpan(): number {\n    let maxRowColSpan = 0;\n    this.rows.forEach(row => {\n      let curRowSpan = 0;\n      let userDefinedRow = false;\n      row.elements.forEach(el => {\n        if (!!el.width) {\n          userDefinedRow = true;\n        }\n        curRowSpan += (el.colSpan || 1);\n      });\n      if (!userDefinedRow && curRowSpan > maxRowColSpan) maxRowColSpan = curRowSpan;\n    });\n    return maxRowColSpan;\n  }\n  private updateColumnWidth(columns: Array<PanelLayoutColumnModel>): void {\n    let remainingSpace = 0, remainingColCount = 0;\n    columns.forEach(col => {\n      if (!col.width) {\n        remainingColCount++;\n      } else {\n        remainingSpace += col.width;\n        col.setPropertyValue(\"effectiveWidth\", col.width);\n      }\n    });\n    if (!!remainingColCount) {\n      const oneColumnWidth = floorTo2Decimals((100 - remainingSpace) / remainingColCount);\n      for (let index = 0; index < columns.length; index++) {\n        if (!columns[index].width) {\n          columns[index].setPropertyValue(\"effectiveWidth\", oneColumnWidth);\n        }\n      }\n    }\n  }\n  private onColumnPropertyValueChangedCallback = (\n    name: string,\n    oldValue: any,\n    newValue: any,\n    sender: Base,\n    arrayChanges: ArrayChanges\n  ) => {\n    if (this._columnsReady) {\n      this.updateColumnWidth(this.gridLayoutColumns);\n      this.updateRootStyle();\n    }\n  };\n  public updateColumns() {\n    this._columns = undefined;\n    this.updateRootStyle();\n  }\n  public updateRootStyle() {\n    super.updateRootStyle();\n    this.elements?.forEach(el => el.updateRootStyle());\n  }\n  public updateCustomWidgets() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].updateCustomWidgets();\n    }\n  }\n  /**\n   * Sets a title location relative to the input field for questions that belong to this panel/page.\n   *\n   * Use this property to override the [`questionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionTitleLocation) property specified for the survey or parent page. You can also set the [`titleLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#titleLocation) property for individual questions.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionTitleLocation` property specified for the survey or parent page.\n   * - `\"top\"` - Displays the title above the input field.\n   * - `\"bottom\"` - Displays the title below the input field.\n   * - `\"left\"` - Displays the title to the left of the input field.\n   * - `\"hidden\"` - Hides the question title.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/vertically-align-input-fields/ (linkStyle))\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   */\n  public get questionTitleLocation(): string {\n    return this.getPropertyValue(\"questionTitleLocation\");\n  }\n  public set questionTitleLocation(value: string) {\n    this.setPropertyValue(\"questionTitleLocation\", value.toLowerCase());\n  }\n  getQuestionTitleLocation(): string {\n    if (this.onGetQuestionTitleLocation)\n      return this.onGetQuestionTitleLocation();\n    if (this.questionTitleLocation != \"default\")\n      return this.questionTitleLocation;\n    if (this.parent) return this.parent.getQuestionTitleLocation();\n    return this.survey ? this.survey.questionTitleLocation : \"top\";\n  }\n  availableQuestionTitleWidth(): boolean {\n    return this.getQuestionTitleLocation() === \"left\" || this.hasElementWithTitleLocationLeft();\n  }\n  hasElementWithTitleLocationLeft(): boolean {\n    const result = this.elements.some(el => {\n      if (el instanceof PanelModelBase) {\n        return el.hasElementWithTitleLocationLeft();\n      } else if (el instanceof Question) {\n        return el.getTitleLocation() === \"left\";\n      }\n    });\n    return result;\n  }\n  /**\n   * Sets consistent width for question titles in CSS values. Applies only when [`questionTitleLocation`](#questionTitleLocation) evaluates to `\"left\"`.\n   *\n   * Default value: `undefined`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/vertically-align-input-fields/ (linkStyle))\n   */\n  @property() questionTitleWidth: string;\n  getQuestionTitleWidth(): string {\n    const width = this.onGetQuestionTitleWidth ? this.onGetQuestionTitleWidth() : this.questionTitleWidth;\n    return width || this.parent && this.parent.getQuestionTitleWidth();\n  }\n  public get columns(): Array<PanelLayoutColumnModel> {\n    if (!this._columns) {\n      this.generateColumns(this.gridLayoutColumns);\n      this.gridLayoutColumns = this._columns;\n    }\n    return this._columns || [];\n  }\n\n  private generateColumns(gridColumns: Array<PanelLayoutColumnModel>): void {\n    const isEnabled = this.survey?.gridLayoutEnabled;\n    let columns = [].concat(gridColumns);\n    if (isEnabled) {\n      let maxRowColSpan = this.calcMaxRowColSpan();\n      if (maxRowColSpan <= gridColumns.length) {\n        columns = gridColumns.slice(0, maxRowColSpan);\n      } else {\n        for (let index = gridColumns.length; index < maxRowColSpan; index++) {\n          const newCol = new PanelLayoutColumnModel();\n          columns.push(newCol);\n        }\n      }\n    }\n    this._columns = columns;\n    try {\n      this._columnsReady = false;\n      this.updateColumnWidth(columns);\n    } finally {\n      this._columnsReady = true;\n    }\n  }\n  private createGridLayoutColumns(): Array<PanelLayoutColumnModel> {\n    this.generateColumns([]);\n    return this._columns;\n  }\n  public updateGridColumns(): void {\n    this.updateColumns();\n    this.elements.forEach(el => {\n      el.isPanel && (<any>el as PanelModelBase).updateGridColumns();\n    });\n  }\n  public getColumsForElement(el: IElement): Array<PanelLayoutColumnModel> {\n    const row = this.findRowByElement(el);\n    if (!row || !this.survey || !this.survey.gridLayoutEnabled) return [];\n\n    let lastExpandableElementIndex = row.elements.length - 1;\n    while(lastExpandableElementIndex >= 0) {\n      if (!(row.elements[lastExpandableElementIndex] as any).getPropertyValueWithoutDefault(\"colSpan\")) {\n        break;\n      }\n      lastExpandableElementIndex--;\n    }\n\n    const elementIndex = row.elements.indexOf(el);\n    let startIndex = 0;\n    for (let index = 0; index < elementIndex; index++) {\n      startIndex += row.elements[index].colSpan;\n    }\n    let currentColSpan = (el as any).getPropertyValueWithoutDefault(\"colSpan\");\n    if (!currentColSpan && elementIndex === lastExpandableElementIndex) {\n      let usedSpans = 0;\n      for (let index = 0; index < row.elements.length; index++) {\n        if (index !== lastExpandableElementIndex) {\n          usedSpans += row.elements[index].colSpan;\n        }\n      }\n      currentColSpan = this.columns.length - usedSpans;\n    }\n    const result = this.columns.slice(startIndex, startIndex + (currentColSpan || 1));\n    (el as any).setPropertyValueDirectly(\"effectiveColSpan\", result.length);\n    return result;\n  }\n  protected getStartIndex(): string {\n    if (!!this.parent) return this.parent.getQuestionStartIndex();\n    if (!!this.survey) return this.survey.questionStartIndex;\n    return \"\";\n  }\n  getQuestionStartIndex(): string {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType(): string {\n    return \"row\";\n  }\n  public getProgressInfo(): IProgressInfo {\n    return SurveyElement.getProgressInfoByElements(\n      <Array<SurveyElement>>(<any>this.elements),\n      this.isRequired\n    );\n  }\n  public get root(): PanelModelBase {\n    var res = <PanelModelBase>this;\n    while(res.parent) res = res.parent;\n    return res;\n  }\n  protected childVisibilityChanged() {\n    if (this.isRunningConditions) return;\n    var newIsVisibleValue = this.getIsPageVisible(null);\n    var oldIsVisibleValue = this.getPropertyValue(\"isVisible\", true);\n    if (newIsVisibleValue !== oldIsVisibleValue) {\n      this.onVisibleChanged();\n    }\n  }\n  protected canRenderFirstRows(): boolean {\n    return this.isPage;\n  }\n  private isLazyRenderInRow(rowIndex: number): boolean {\n    if (!this.survey || !this.survey.isLazyRendering) return false;\n    return (\n      rowIndex >= this.survey.lazyRenderFirstBatchSize ||\n      !this.canRenderFirstRows()\n    );\n  }\n  private createRowAndSetLazy(index: number): QuestionRowModel {\n    const row = this.createRow();\n    row.setIsLazyRendering(this.isLazyRenderInRow(index));\n    return row;\n  }\n  protected createRow(): QuestionRowModel {\n    return new QuestionRowModel(this);\n  }\n  public onSurveyLoad(): void {\n    this.blockAnimations();\n    super.onSurveyLoad();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].onSurveyLoad();\n    }\n    this.onElementVisibilityChanged(this);\n    this.releaseAnimations();\n  }\n  protected onFirstRenderingCore(): void {\n    super.onFirstRenderingCore();\n    this.onRowsChanged();\n    this.elements.forEach(el => el.onFirstRendering());\n  }\n  public updateRows(): void {\n    if (this.isLoadingFromJson) return;\n    this.getElementsForRows().forEach(el => {\n      if (el.isPanel) {\n        (<PanelModel>el).updateRows();\n      }\n    });\n    this.onRowsChanged();\n  }\n  get rows(): Array<QuestionRowModel> {\n    return this.getPropertyValue(\"rows\");\n  }\n\n  public ensureRowsVisibility(): void {\n    this.rows.forEach((row) => {\n      row.ensureVisibility();\n    });\n  }\n\n  protected onRowsChanged(): void {\n    if (this.isLoadingFromJson) return;\n    this.blockAnimations();\n    this.setArrayPropertyDirectly(\"rows\", this.buildRows());\n    this.updateColumns();\n    this.releaseAnimations();\n  }\n\n  private locCountRowUpdates = 0;\n  private blockRowsUpdates() {\n    this.locCountRowUpdates++;\n  }\n  private releaseRowsUpdates() {\n    this.locCountRowUpdates--;\n  }\n  private updateRowsBeforeElementRemoved(element: IElement): void {\n    const elementRow = this.findRowByElement(element);\n    const elementRowIndex = this.rows.indexOf(elementRow);\n    const elementIndexInRow = elementRow.elements.indexOf(element);\n    elementRow.elements.splice(elementIndexInRow, 1);\n    if (elementRow.elements.length == 0) {\n      this.rows.splice(elementRowIndex, 1);\n    } else if (!elementRow.elements[0].startWithNewLine && this.rows[elementRowIndex - 1]) {\n      elementRow.elements.forEach(el => this.rows[elementRowIndex - 1].addElement(el));\n      this.rows.splice(elementRowIndex, 1);\n    } else {\n      elementRow.updateVisible();\n    }\n  }\n  private updateRowsOnElementAdded(element: IElement): void {\n    if (!this.wasRendered && this.rows.length === 0 && this.elements.length > 1) return;\n    const index = this.elements.indexOf(element);\n    const targetElement = this.elements[index + 1];\n    const createRowAtIndex = (index: number) => {\n      const row = this.createRowAndSetLazy(index);\n      if (this.isDesignMode) {\n        row.setIsLazyRendering(false);\n      }\n      this.rows.splice(index, 0, row);\n      return row;\n    };\n    const updateRow = (row: QuestionRowModel, start: number, deleteCount: number, ...elements: IElement[]) => {\n      const removedElements = row.elements.splice(start, deleteCount, ...elements);\n      row.updateVisible();\n      return removedElements;\n    };\n    if (!targetElement) {\n      if (index == 0 || element.startWithNewLine) {\n        updateRow(createRowAtIndex(this.rows.length), 0, 0, element);\n      } else {\n        this.rows[this.rows.length - 1].addElement(element);\n      }\n      return;\n    }\n    const targetRow = this.findRowByElement(targetElement);\n    if (!targetRow) return;\n    const targetRowIndex = this.rows.indexOf(targetRow);\n    const targetElementIndexInRow = targetRow.elements.indexOf(targetElement);\n    if (targetElementIndexInRow == 0) {\n      if (!targetElement.startWithNewLine) {\n        updateRow(targetRow, 0, 0, element);\n      } else if (element.startWithNewLine || targetRowIndex < 1) {\n        createRowAtIndex(targetRowIndex).addElement(element);\n      } else {\n        this.rows[targetRowIndex - 1].addElement(element);\n      }\n    } else {\n      if (element.startWithNewLine) {\n        updateRow(createRowAtIndex(targetRowIndex + 1), 0, 0, ...[element].concat(updateRow(targetRow, targetElementIndexInRow, targetRow.elements.length)));\n      } else {\n        updateRow(targetRow, targetElementIndexInRow, 0, element);\n      }\n    }\n  }\n  private canFireAddRemoveNotifications(element: IElement): boolean {\n    return !!this.survey && (<any>element).prevSurvey !== this.survey;\n  }\n  protected onAddElement(element: IElement, index: number): void {\n    const survey = this.survey;\n    const fireNotification = this.canFireAddRemoveNotifications(element);\n    if (!!this.surveyImpl) {\n      element.setSurveyImpl(this.surveyImpl);\n    }\n    element.parent = this;\n    this.markQuestionListDirty();\n    if (this.canBuildRows()) {\n      this.updateRowsOnElementAdded(element);\n    }\n    if (fireNotification) {\n      if (element.isPanel) {\n        survey.panelAdded(<PanelModel>element, index, this, this.root);\n      } else {\n        survey.questionAdded(<Question>element, index, this, this.root);\n      }\n    }\n    if (!!this.addElementCallback)this.addElementCallback(element);\n    (<Base>(<any>element)).registerPropertyChangedHandlers(\n      [\"visible\", \"isVisible\"], () => {\n        this.onElementVisibilityChanged(element);\n      },\n      this.id\n    );\n    (<Base>(<any>element)).registerPropertyChangedHandlers([\"startWithNewLine\"], () => {\n      this.onElementStartWithNewLineChanged(element);\n    }, this.id);\n    this.onElementVisibilityChanged(this);\n  }\n  protected onRemoveElement(element: IElement): void {\n    element.parent = null;\n    this.unregisterElementPropertiesChanged(element);\n    this.markQuestionListDirty();\n    this.updateRowsOnElementRemoved(element);\n    if (this.isRandomizing) return;\n    this.onRemoveElementNotifySurvey(element);\n    if (!!this.removeElementCallback)this.removeElementCallback(element);\n    this.onElementVisibilityChanged(this);\n  }\n  protected unregisterElementPropertiesChanged(element: IElement): void {\n    (<Base>(<any>element)).unregisterPropertyChangedHandlers([\"visible\", \"isVisible\", \"startWithNewLine\"], this.id);\n  }\n  private onRemoveElementNotifySurvey(element: IElement): void {\n    if (!this.canFireAddRemoveNotifications(element)) return;\n    if (!element.isPanel) {\n      this.survey.questionRemoved(<Question>element);\n    } else {\n      this.survey.panelRemoved(element);\n    }\n  }\n  private onElementVisibilityChanged(element: any) {\n    if (this.isLoadingFromJson || this.isRandomizing) return;\n    this.updateRowsVisibility(element);\n    this.childVisibilityChanged();\n    if (!!this.parent) {\n      this.parent.onElementVisibilityChanged(this);\n    }\n  }\n  private onElementStartWithNewLineChanged(element: any) {\n    if (this.locCountRowUpdates > 0) return;\n    this.blockAnimations();\n    this.updateRowsBeforeElementRemoved(element);\n    this.updateRowsOnElementAdded(element);\n    this.releaseAnimations();\n  }\n  private updateRowsVisibility(element: any) {\n    var rows = this.rows;\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      if (row.elements.indexOf(element) > -1) {\n        row.updateVisible();\n        if (row.visible && !row.isNeedRender) {\n          row.isNeedRender = true;\n        }\n        break;\n      }\n    }\n  }\n  public canBuildRows(): boolean {\n    return !this.isLoadingFromJson && this.getChildrenLayoutType() == \"row\";\n  }\n  private buildRows(): Array<QuestionRowModel> {\n    if (!this.canBuildRows()) return [];\n    const res = new Array<QuestionRowModel>();\n    const els = this.getElementsForRows();\n    for (let i = 0; i < els.length; i++) {\n      const el = els[i];\n      const isNewRow = i == 0 || el.startWithNewLine;\n      const row = isNewRow ? this.createRowAndSetLazy(res.length) : res[res.length - 1];\n      if (isNewRow) res.push(row);\n      row.addElement(el);\n    }\n    res.forEach(row => row.updateVisible());\n    return res;\n  }\n  protected getElementsForRows(): Array<IElement> {\n    return this.elements;\n  }\n  public getDragDropInfo(): any {\n    const page: PanelModelBase = <any>this.getPage(this.parent);\n    return !!page ? page.getDragDropInfo() : undefined;\n  }\n  private updateRowsOnElementRemoved(element: IElement) {\n    if (!this.canBuildRows()) return;\n    this.updateRowsRemoveElementFromRow(element, this.findRowByElement(element));\n    this.updateColumns();\n  }\n  private updateRowsRemoveElementFromRow(element: IElement, row: QuestionRowModel): void {\n    if (!row || !row.panel) return;\n    var elIndex = row.elements.indexOf(element);\n    if (elIndex < 0) return;\n    row.elements.splice(elIndex, 1);\n    if (row.elements.length > 0) {\n      this.blockRowsUpdates();\n      row.elements[0].startWithNewLine = true;\n      this.releaseRowsUpdates();\n      row.updateVisible();\n    } else {\n      if (row.index >= 0) {\n        row.panel.rows.splice(row.index, 1);\n      }\n    }\n  }\n  public getAllRows(): Array<QuestionRowModel> {\n    const allRows: Array<QuestionRowModel> = [];\n    this.rows.forEach(row => {\n      const nestedRows: Array<QuestionRowModel> = [];\n      row.elements.forEach(element => {\n        if (element.isPanel) {\n          nestedRows.push(...(<any>element as PanelModelBase).getAllRows());\n        } else if (element.getType() == \"paneldynamic\") {\n          if (this.isDesignMode) {\n            nestedRows.push(...(element as any).template.getAllRows());\n          } else {\n            (element as any).panels.forEach((panel: PanelModelBase) => nestedRows.push(...panel.getAllRows()));\n          }\n        }\n      });\n      allRows.push(row);\n      allRows.push(...nestedRows);\n    });\n    return allRows;\n  }\n  private findRowAndIndexByElement(el: IElement, rows?: Array<QuestionRowModel>): { row: QuestionRowModel, index: number } {\n    if (!el) {\n      return { row: undefined, index: this.rows.length - 1 };\n    }\n    rows = rows || this.rows;\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].elements.indexOf(el) > -1) return { row: rows[i], index: i };\n    }\n    return { row: null, index: -1 };\n  }\n  private forceRenderRow(row: QuestionRowModel): void {\n    if (!!row && !row.isNeedRender) {\n      row.isNeedRender = true;\n      row.stopLazyRendering();\n    }\n  }\n  public forceRenderElement(el: IElement, elementsRendered = () => { }, gap = 0): void {\n    const allRows = this.getAllRows();\n    const { row, index } = this.findRowAndIndexByElement(el, allRows);\n    if (index >= 0 && index < allRows.length) {\n      const rowsToRender = [];\n      rowsToRender.push(row);\n      for (let i = index - 1; i >= index - gap && i >= 0; i--) {\n        rowsToRender.push(allRows[i]);\n      }\n      this.forceRenderRows(rowsToRender, elementsRendered);\n    }\n  }\n  public forceRenderRows(rows: Array<QuestionRowModel>, elementsRendered = () => { }): void {\n    const rowRenderedHandler = (rowsCount => () => {\n      rowsCount--;\n      if (rowsCount <= 0) {\n        elementsRendered();\n      }\n    })(rows.length);\n    rows.forEach(row => new RenderingCompletedAwaiter(row.visibleElements as any, rowRenderedHandler));\n    rows.forEach(row => this.forceRenderRow(row));\n  }\n  public findRowByElement(el: IElement): QuestionRowModel {\n    return this.findRowAndIndexByElement(el).row;\n  }\n  elementWidthChanged(el: IElement) {\n    if (this.isLoadingFromJson) return;\n    var row = this.findRowByElement(el);\n    if (!!row) {\n      row.updateVisible();\n    }\n  }\n  public get ariaTitleId(): string {\n    return this.id + \"_ariaTitle\";\n  }\n  public get ariaLabelledBy(): string {\n    return this.hasTitle ? this.ariaTitleId : null;\n  }\n  public get ariaLabel(): string {\n    return this.hasTitle ? null : (this.title || this.name || null);\n  }\n  public get ariaRole(): string {\n    return \"group\";\n  }\n  public get processedTitle() {\n    return this.getRenderedTitle(this.locTitle.textOrHtml);\n  }\n  protected getRenderedTitle(str: string): string {\n    return this.textProcessor != null\n      ? this.textProcessor.processText(str, true)\n      : str;\n  }\n  /**\n   * Gets or sets panel/page visibility.\n   *\n   * If you want to display or hide a survey element based on a condition, specify the `visibleIf` property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see isVisible\n   */\n  public get visible(): boolean {\n    return this.getPropertyValue(\"visible\");\n  }\n  public set visible(value: boolean) {\n    if (value === this.visible) return;\n    this.setPropertyValue(\"visible\", value);\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n    if (!this.isLoadingFromJson)this.onVisibleChanged();\n  }\n  public onHidingContent(): void {\n    this.questions.forEach(q => q.onHidingContent());\n  }\n  protected onVisibleChanged(): void {\n    if (this.isRandomizing) return;\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n\n    if (this.canUpdateValueOnVisibleChanged()) {\n      const questions = this.questions;\n      const isVisible = this.isVisible;\n      for (var i = 0; i < questions.length; i++) {\n        const q = questions[i];\n        if (!isVisible) {\n          q.clearValueIfInvisible(\"onHiddenContainer\");\n          q.onHidingContent();\n        } else {\n          q.updateValueWithDefaults();\n        }\n      }\n    }\n  }\n  protected notifyStateChanged(prevState: string): void {\n    super.notifyStateChanged(prevState);\n    if (this.isCollapsed) {\n      this.questions.forEach(q => q.onHidingContent());\n    }\n  }\n\n  /**\n   * Returns `true` if the panel/page is visible or the survey is currently in design mode.\n   *\n   * If you want to display or hide a question based on a condition, specify the `visibleIf` property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visible\n   */\n  public get isVisible(): boolean {\n    return this.areInvisibleElementsShowing || this.getIsPageVisible(null);\n  }\n  getIsContentVisible(exceptionQuestion?: IQuestion) {\n    if (this.areInvisibleElementsShowing) return true;\n    for (var i = 0; i < this.elements.length; i++) {\n      if (this.elements[i] == exceptionQuestion) continue;\n      if (this.elements[i].isVisible) return true;\n    }\n    return false;\n  }\n  getIsPageVisible(exceptionQuestion?: IQuestion): boolean {\n    const isContentVisible = this.getIsContentVisible(exceptionQuestion);\n    return this.visible && isContentVisible;\n  }\n  private lastVisibleIndex: number;\n  public setVisibleIndex(index: number): number {\n    if (!this.isVisible || index < 0) {\n      this.resetVisibleIndexes();\n      return 0;\n    }\n    this.lastVisibleIndex = index;\n    var startIndex = index;\n    index += this.beforeSetVisibleIndex(index);\n    var panelStartIndex = this.getPanelStartIndex(index);\n    var panelIndex = panelStartIndex;\n    const elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      panelIndex += elements[i].setVisibleIndex(panelIndex);\n    }\n    if (this.isContinueNumbering()) {\n      index += panelIndex - panelStartIndex;\n    }\n    return index - startIndex;\n  }\n  private updateVisibleIndexes() {\n    if (this.lastVisibleIndex === undefined) return;\n    this.resetVisibleIndexes();\n    this.setVisibleIndex(this.lastVisibleIndex);\n  }\n  private resetVisibleIndexes() {\n    const elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      elements[i].setVisibleIndex(-1);\n    }\n  }\n  protected beforeSetVisibleIndex(index: number): number {\n    return 0;\n  }\n  protected getPanelStartIndex(index: number): number {\n    return index;\n  }\n  protected isContinueNumbering(): boolean { return true; }\n  public get isReadOnly(): boolean {\n    var isParentReadOnly = !!this.parent && this.parent.isReadOnly;\n    var isSurveyReadOnly = !!this.survey && this.survey.isDisplayMode;\n    return this.readOnly || isParentReadOnly || isSurveyReadOnly;\n  }\n  protected onReadOnlyChanged(): void {\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = <SurveyElement>(<any>this.elements[i]);\n      el.setPropertyValue(\"isReadOnly\", el.isReadOnly);\n    }\n    super.onReadOnlyChanged();\n  }\n  public updateElementCss(reNew?: boolean): void {\n    super.updateElementCss(reNew);\n    for (let i = 0; i < this.elements.length; i++) {\n      const el = <SurveyElement>(<any>this.elements[i]);\n      el.updateElementCss(reNew);\n    }\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this panel/page becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see readOnly\n   * @see isReadOnly\n   */\n  public get enableIf(): string {\n    return this.getPropertyValue(\"enableIf\", \"\");\n  }\n  public set enableIf(val: string) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  /**\n   * Adds a survey element (question or panel) to this panel/page. Returns `true` if the element was added successfully; `false` otherwise.\n   * @param element A survey element to add.\n   * @param index A desired index of this element in the `elements` array.\n   * @see addNewQuestion\n   * @see addNewPanel\n   */\n  public addElement(element: IElement, index: number = -1): boolean {\n    if (!this.canAddElement(element)) return false;\n    if (index < 0 || index >= this.elements.length) {\n      this.elements.push(element);\n    } else {\n      this.elements.splice(index, 0, element);\n    }\n    if (this.wasRendered) {\n      element.onFirstRendering();\n    }\n    this.updateColumns();\n    return true;\n  }\n  public insertElement(element: IElement, dest?: IElement, location: \"bottom\" | \"top\" | \"left\" | \"right\" = \"bottom\"): void {\n    if (!dest) {\n      this.addElement(element);\n      return;\n    }\n    this.blockRowsUpdates();\n    let index = this.elements.indexOf(dest);\n    const destRow = this.findRowByElement(dest);\n    if (location == \"left\" || location == \"right\") {\n      if (location == \"right\") {\n        element.startWithNewLine = false;\n        index++;\n      } else {\n        if (destRow.elements.indexOf(dest) == 0) {\n          dest.startWithNewLine = false;\n          element.startWithNewLine = true;\n        } else {\n          element.startWithNewLine = false;\n        }\n      }\n    } else {\n      element.startWithNewLine = true;\n      if (location == \"top\") {\n        index = this.elements.indexOf(destRow.elements[0]);\n      } else {\n        index = this.elements.indexOf(destRow.elements[destRow.elements.length - 1]) + 1;\n      }\n    }\n    this.releaseRowsUpdates();\n    this.addElement(element, index);\n  }\n  public insertElementAfter(element: IElement, after: IElement) {\n    const index = this.elements.indexOf(after);\n    if (index >= 0)this.addElement(element, index + 1);\n  }\n  public insertElementBefore(element: IElement, before: IElement) {\n    const index = this.elements.indexOf(before);\n    if (index >= 0)this.addElement(element, index);\n  }\n\n  protected canAddElement(element: IElement): boolean {\n    return (\n      !!element && element.isLayoutTypeSupported(this.getChildrenLayoutType())\n    );\n  }\n  public addQuestion(question: Question, index: number = -1): boolean {\n    return this.addElement(question, index);\n  }\n  public addPanel(panel: PanelModel, index: number = -1): boolean {\n    return this.addElement(panel, index);\n  }\n  /**\n   * Creates a new question of a given type and adds it to the `elements` array at a specified index.\n   *\n   * This method returns `null` if the question cannot be created or added to this panel/page; otherwise, the method returns the created question.\n   *\n   * @param questionType A [question type](https://surveyjs.io/form-library/documentation/question#getType).\n   * @param name A question name.\n   * @param index A desired index of the new question in the `elements` array.\n   * @see elements\n   * @see addElement\n   */\n  public addNewQuestion(\n    questionType: string,\n    name: string = null,\n    index: number = -1\n  ): Question {\n    var question = QuestionFactory.Instance.createQuestion(questionType, name);\n    if (!this.addQuestion(question, index)) return null;\n    return question;\n  }\n  /**\n   * Creates a new panel and adds it to the end of the `elements` array.\n   *\n   * This method returns `null` if the panel cannot be created or added to this panel/page; otherwise, the method returns the created panel.\n   * @param name A panel name.\n   * @see elementsup\n   * @see addElement\n   */\n  public addNewPanel(name: string = null): PanelModel {\n    var panel = this.createNewPanel(name);\n    if (!this.addPanel(panel)) return null;\n    return panel;\n  }\n  public indexOf(element: IElement): number {\n    return this.elements.indexOf(element);\n  }\n  protected createNewPanel(name: string): PanelModel {\n    var res = Serializer.createClass(\"panel\");\n    res.name = name;\n    return res;\n  }\n  /**\n   * Deletes a survey element (question or panel) from this panel/page. Returns `true` if the element was deleted successfully; `false` otherwise.\n   * @param element A survey element to delete.\n   * @see elements\n   */\n  public removeElement(element: IElement): boolean {\n    var index = this.elements.indexOf(element);\n    if (index < 0) {\n      for (var i = 0; i < this.elements.length; i++) {\n        if (this.elements[i].removeElement(element)) return true;\n      }\n      return false;\n    }\n    this.elements.splice(index, 1);\n    this.updateColumns();\n    return true;\n  }\n  public removeQuestion(question: Question) {\n    this.removeElement(question);\n  }\n  private isRunningConditions: boolean;\n  runCondition(properties: HashTable<any>) {\n    if (this.isDesignMode || this.isLoadingFromJson) return;\n    var elements = this.elements.slice();\n    const prevContentVisibility = this.getIsPageVisible();\n    this.isRunningConditions = true;\n    for (var i = 0; i < elements.length; i++) {\n      elements[i].runCondition(properties);\n    }\n    this.runConditionCore(properties);\n    const newContentVisibility = this.getIsPageVisible();\n    this.isRunningConditions = false;\n    if (prevContentVisibility !== newContentVisibility) {\n      this.childVisibilityChanged();\n    }\n  }\n  onAnyValueChanged(name: string, questionName: string): void {\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      els[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  checkBindings(valueName: string, value: any) {\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      (<Base>(<any>els[i])).checkBindings(valueName, value);\n    }\n  }\n\n  public needResponsiveWidth() {\n    let result = false;\n    this.elements.forEach((e) => {\n      if (e.needResponsiveWidth())\n        result = true;\n    });\n    this.rows.forEach((r) => {\n      if (r.elements.length > 1)\n        result = true;\n    });\n\n    return result;\n  }\n\n  public get hasDescriptionUnderTitle(): boolean {\n    return this.hasDescription;\n  }\n  public get cssHeader(): string {\n    return this.cssClasses.panel.header;\n  }\n  public get cssDescription(): string {\n    return this.cssClasses.panel.description;\n  }\n  /**\n   * Specifies the error message position for questions that belong to this page/panel.\n   *\n   * Use this property to override the [`questionErrorLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionErrorLocation) property specified for the survey. You can also set the [`errorLocation`](https://surveyjs.io/form-library/documentation/question#errorLocation) property for individual questions.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionErrorLocation` property specified for the survey.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/ (linkStyle))\n   */\n  public get questionErrorLocation(): string {\n    return this.getPropertyValue(\"questionErrorLocation\");\n  }\n  public set questionErrorLocation(val: string) {\n    this.setPropertyValue(\"questionErrorLocation\", val);\n  }\n  public getQuestionErrorLocation(): string {\n    if (this.questionErrorLocation !== \"default\") return this.questionErrorLocation;\n    if (this.parent) return this.parent.getQuestionErrorLocation();\n    return this.survey ? this.survey.questionErrorLocation : \"top\";\n  }\n  //ITitleOwner\n  public getTitleOwner(): ITitleOwner { return this; }\n  public get no(): string { return \"\"; }\n  public get cssTitleNumber(): string {\n    return this.cssClasses.panel.number;\n  }\n  public get cssRequiredMark(): string {\n    return this.cssClasses.panel.requiredMark;\n  }\n\n  public get cssError(): string {\n    return this.getCssError(this.cssClasses);\n  }\n  protected getCssError(cssClasses: any): string {\n    return new CssClassBuilder().append(cssClasses.error.root).toString();\n  }\n\n  public getSerializableColumnsValue(): Array<PanelLayoutColumnModel> {\n    let tailIndex = -1;\n    for (let index = this.gridLayoutColumns.length - 1; index >= 0; index--) {\n      if (!this.gridLayoutColumns[index].isEmpty()) {\n        tailIndex = index;\n        break;\n      }\n    }\n    return this.gridLayoutColumns.slice(0, tailIndex + 1);\n  }\n  public afterRender(el: HTMLElement): void {\n    this.afterRenderCore(el);\n  }\n  public dispose(): void {\n    super.dispose();\n    if (this.rows) {\n      for (let i = 0; i < this.rows.length; i++) {\n        this.rows[i].dispose();\n      }\n      this.rows.splice(0, this.rows.length);\n    }\n    this.disposeElements();\n    this.elements.splice(0, this.elements.length);\n  }\n  protected disposeElements(): void {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].dispose();\n    }\n  }\n}\n\n/**\n * A class that describes the Panel container element.\n *\n * A panel can contain questions and other panels. Refer to the following help topic for an illustration: [Survey Structure](https://surveyjs.io/form-library/documentation/design-survey-create-a-simple-survey#survey-structure).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-panel/ (linkStyle))\n */\nexport class PanelModel extends PanelModelBase implements IElement {\n  constructor(name: string = \"\") {\n    super(name);\n    this.createNewArray(\"footerActions\");\n    this.registerPropertyChangedHandlers([\"width\"], () => {\n      if (!!this.parent) {\n        this.parent.elementWidthChanged(this);\n      }\n    });\n    this.registerPropertyChangedHandlers(\n      [\"indent\", \"innerIndent\", \"rightIndent\"], () => { this.resetIndents(); });\n    this.registerPropertyChangedHandlers([\"colSpan\"], () => { this.parent?.updateColumns(); });\n  }\n  public getType(): string {\n    return \"panel\";\n  }\n  public get contentId(): string {\n    return this.id + \"_content\";\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    if (live && this.isPanel) {\n      return !!this.parent ? this.parent.getSurvey(live) : null;\n    }\n    return super.getSurvey(live);\n  }\n  public get isPanel(): boolean {\n    return true;\n  }\n  /**\n   * Returns a page to which the panel belongs and allows you to move this panel to a different page.\n   * @see PanelModelBase.parent\n   */\n  public get page(): IPage {\n    return this.getPage(this.parent);\n  }\n  public set page(val: IPage) {\n    this.setPage(this.parent, val);\n  }\n  protected removeFromParent(): void {\n    if (!!this.parent) {\n      this.removeSelfFromList(this.parent.elements);\n    }\n  }\n  public moveTo(container: IPanel, insertBefore: any = null): boolean {\n    return this.moveToBase(this.parent, container, insertBefore);\n  }\n  /**\n   * Returns the visible index of the panel in the survey. Commonly it is -1 and it doesn't show.\n   * You have to set showNumber to true to show index/numbering for the Panel\n   * @see showNumber\n   */\n  public get visibleIndex(): number {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  /**\n   * Specifies whether to show the panel number in the title.\n   *\n   * Default value: `false`\n   * @see SurveyModel.showQuestionNumbers\n   * @see SurveyModel.questionTitlePattern\n   */\n  public get showNumber(): boolean {\n    return this.getPropertyValue(\"showNumber\");\n  }\n  public set showNumber(val: boolean) {\n    this.setPropertyValue(\"showNumber\", val);\n    this.notifySurveyOnVisibilityChanged();\n  }\n  public addNoFromChild(no: string): string {\n    if (this.isQuestionIndexRecursive)\n      return this.calcNo() + no;\n    return super.addNoFromChild(no);\n  }\n  /**\n   * Specifies whether to display survey element numbers within this page/panel and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` - Inherits the setting from the parent panel, page, or survey.\n   * - `\"recursive\"` - Applies recursive numbering to elements nested within this page/panel (for example, 1 -> 1.1 -> 1.1.1, etc.).\n   * - `\"onpanel\"` - Starts numbering within this page/panel from scratch.\n   * - `false` or `\"off\"` - Hides question numbers within this page/panel.\n   * @see [SurveyModel.showQuestionNumbers](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers)\n   * @see showNumber\n   */\n  public get showQuestionNumbers(): string {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  public set showQuestionNumbers(value: string) {\n    this.setPropertyValue(\"showQuestionNumbers\", value);\n    this.notifySurveyOnVisibilityChanged();\n  }\n  /**\n   * Specifies a number or letter used to start numbering of elements inside the panel.\n   *\n   * You can include desired prefixes and postfixes alongside the number or letter:\n   *\n   * ```js\n   * \"questionStartIndex\": \"a.\", // a., b., c., ...\n   * \"questionStartIndex\": \"#3\", // #3, #4, #5, ...\n   * \"questionStartIndex\": \"(B).\" // (B)., (C)., (D)., ...\n   * ```\n   * Default value: `\"1.\"` (inherited from `SurveyModel`'s `questionStartIndex` property)\n   * @see SurveyModel.questionStartIndex\n   * @see showQuestionNumbers\n   */\n  public get questionStartIndex(): string {\n    return this.getPropertyValue(\"questionStartIndex\", \"\");\n  }\n  public set questionStartIndex(val: string) {\n    this.setPropertyValue(\"questionStartIndex\", val);\n  }\n  getQuestionStartIndex(): string {\n    if (!!this.questionStartIndex) return this.questionStartIndex;\n    return super.getQuestionStartIndex();\n  }\n  /**\n   * A question number or letter (depends on the `questionStartIndex` property).\n   *\n   * When the question number, title, or the entire question is invisible, this property returns an empty string.\n   * @see questionStartIndex\n   * @see showNumber\n   * @see visibleIf\n   */\n  public get no(): string {\n    return this.getPropertyValue(\"no\", undefined, () => this.calcNo());\n  }\n  onGetNoCallback : (no: string) => string;\n  private calcNo(): string {\n    let no = Helpers.getNumberByIndex(this.visibleIndex, this.getStartIndex());\n    if (this.onGetNoCallback) {\n      no = this.onGetNoCallback(no);\n    }\n    if (!!this.parent) {\n      no = (<any>this.parent).addNoFromChild(no);\n    }\n    if (this.survey) {\n      no = this.survey.getUpdatedPanelNo(this, no);\n    }\n    return no || \"\";\n  }\n  protected notifyStateChanged(prevState: string): void {\n    if (!this.isLoadingFromJson) {\n      this.locTitle.strChanged();\n    }\n    super.notifyStateChanged(prevState);\n  }\n  protected createLocTitleProperty(): LocalizableString {\n    const locTitleValue = super.createLocTitleProperty();\n    locTitleValue.onGetTextCallback = (text: string): string => {\n      if (!text && (this.state !== \"default\")) {\n        text = this.name;\n      }\n      return text;\n    };\n    return locTitleValue;\n  }\n  protected beforeSetVisibleIndex(index: number): number {\n    if (this.isPage) return super.beforeSetVisibleIndex(index);\n    let visibleIndex = -1;\n    if ((this.showNumber || this.isQuestionIndexRecursive) && (this.isDesignMode || !this.locTitle.isEmpty || this.hasParentInQuestionIndex())) {\n      visibleIndex = index;\n    }\n    this.setPropertyValue(\"visibleIndex\", visibleIndex);\n    this.resetPropertyValue(\"no\");\n    return visibleIndex < 0 ? 0 : 1;\n  }\n  protected getPanelStartIndex(index: number): number {\n    if (this.showQuestionNumbers === \"off\") return -1;\n    if (this.isQuestionIndexOnPanel) return 0;\n    return index;\n  }\n  private get isQuestionIndexOnPanel(): boolean {\n    return this.showQuestionNumbers === \"onpanel\" || this.isQuestionIndexRecursive;\n  }\n  private get isQuestionIndexRecursive(): boolean {\n    if (this.isPage) return false;\n    const val = this.showQuestionNumbers;\n    if (val !== \"default\") return val === \"recursive\";\n    return !!this.survey && this.survey.showQuestionNumbers === \"recursive\";\n  }\n  private hasParentInQuestionIndex(): boolean {\n    if (!this.isQuestionIndexOnPanel) return false;\n    const str = this.questionStartIndex;\n    const index = str.indexOf(\".\");\n    return index > -1 && index < str.length - 1;\n  }\n  protected isContinueNumbering(): boolean {\n    return this.showQuestionNumbers !== \"off\" && !this.isQuestionIndexOnPanel;\n  }\n  private notifySurveyOnVisibilityChanged() {\n    if (this.survey != null && !this.isLoadingFromJson) {\n      this.survey.panelVisibilityChanged(this, this.isVisible);\n    }\n  }\n  protected getRenderedTitle(str: string): string {\n    if (this.isPanel && !str) {\n      if (this.isCollapsed || this.isExpanded) return this.name;\n      if (this.isDesignMode) return \"[\" + this.name + \"]\";\n    }\n    return super.getRenderedTitle(str);\n  }\n  /**\n   * Increases or decreases an indent of panel content from the left edge. Accepts positive integer values and 0.\n   */\n  public get innerIndent(): number {\n    return this.getPropertyValue(\"innerIndent\");\n  }\n  public set innerIndent(val: number) {\n    this.setPropertyValue(\"innerIndent\", val);\n  }\n  /**\n   * Disable this property if you want to render the current panel on the same line or row with the previous question or panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/arrange-multiple-questions-in-single-line/ (linkStyle))\n   */\n  public get startWithNewLine(): boolean {\n    return this.getPropertyValue(\"startWithNewLine\");\n  }\n  public set startWithNewLine(value: boolean) {\n    this.setPropertyValue(\"startWithNewLine\", value);\n  }\n  public get allowAdaptiveActions(): boolean {\n    return this.getPropertyValue(\"allowAdaptiveActions\");\n  }\n  public set allowAdaptiveActions(val: boolean) {\n    this.setPropertyValue(\"allowAdaptiveActions\", val);\n  }\n  get innerPaddingLeft(): string {\n    const func = (): string => {\n      return this.getIndentSize(this.innerIndent);\n    };\n    return this.getPropertyValue(\"innerPaddingLeft\", undefined, func);\n  }\n  set innerPaddingLeft(val: string) {\n    this.setPropertyValue(\"innerPaddingLeft\", val);\n  }\n  protected calcPaddingLeft(): string {\n    return this.getIndentSize(this.indent);\n  }\n  protected calcPaddingRight(): string {\n    return this.getIndentSize(this.rightIndent);\n  }\n  protected resetIndents(): void {\n    this.resetPropertyValue(\"innerPaddingLeft\");\n    super.resetIndents();\n  }\n\n  private getIndentSize(indent: number): string {\n    if (!this.survey) return undefined;\n    if (indent < 1) return \"\";\n    var css = (<any>this).survey[\"css\"];\n    if (!css || !css.question || !css.question.indent) return \"\";\n    return indent * css.question.indent + \"px\";\n  }\n  public clearOnDeletingContainer(): void {\n    this.elements.forEach((element) => {\n      if (element instanceof Question || element instanceof PanelModel) {\n        element.clearOnDeletingContainer();\n      }\n    });\n  }\n  public get footerActions(): Array<IAction> {\n    return this.getPropertyValue(\"footerActions\");\n  }\n  private footerToolbarValue: ActionContainer;\n\n  public onGetFooterActionsCallback: () => Array<IAction>;\n  public onGetFooterToolbarCssCallback: () => string;\n  public getFooterToolbar(): ActionContainer {\n    if (!this.footerToolbarValue) {\n      var actions = this.footerActions;\n      if (this.hasEditButton) {\n        actions.push({\n          id: \"cancel-preview\",\n          locTitle: this.survey.locEditText,\n          innerCss: this.survey.cssNavigationEdit,\n          component: \"sv-nav-btn\",\n          action: () => { this.cancelPreview(); }\n        });\n      }\n      if (!!this.onGetFooterActionsCallback) {\n        actions = this.onGetFooterActionsCallback();\n      } else {\n        actions = this.survey?.getUpdatedPanelFooterActions(this, actions);\n      }\n      this.footerToolbarValue = this.createActionContainer(this.allowAdaptiveActions);\n      let footerCss = this.onGetFooterToolbarCssCallback ? this.onGetFooterToolbarCssCallback() : \"\";\n      if (!footerCss) {\n        footerCss = this.cssClasses.panel?.footer;\n      }\n      if (footerCss) {\n        this.footerToolbarValue.containerCss = footerCss;\n      }\n      this.footerToolbarValue.setItems(actions);\n      this.footerToolbarValue.flushUpdates();\n    }\n    return this.footerToolbarValue;\n  }\n  public get hasEditButton(): boolean { return false; }\n  public cancelPreview(): void {\n    if (!this.hasEditButton) return;\n    this.survey.cancelPreviewByPage(this);\n  }\n  public get cssTitle(): string {\n    return this.getCssPanelTitle();\n  }\n  protected getCssPanelTitle(): string {\n    return this.getCssTitle(this.cssClasses.panel);\n  }\n  public getCssTitleExpandableSvg(): string {\n    if (this.state === \"default\") return null;\n    return this.cssClasses.panel.titleExpandableSvg;\n  }\n  public get showErrorsAbovePanel(): boolean {\n    return !this.showPanelAsPage;\n  }\n  protected getCssError(cssClasses: any): string {\n    if (this.isPage) return super.getCssError(cssClasses);\n    const builder = new CssClassBuilder()\n      .append(super.getCssError(cssClasses))\n      .append(cssClasses.panel.errorsContainer);\n    return builder.append(\"panel-error-root\", builder.isEmpty()).toString();\n  }\n  protected onVisibleChanged() {\n    super.onVisibleChanged();\n    this.notifySurveyOnVisibilityChanged();\n  }\n  public needResponsiveWidth() {\n    if (!this.startWithNewLine) {\n      return true;\n    } else {\n      return super.needResponsiveWidth();\n    }\n  }\n  public focusIn(): void {\n    if (!this.survey) return;\n    (this.survey as SurveyModel).whenPanelFocusIn(this);\n  }\n  protected getHasFrameV2(): boolean {\n    return super.getHasFrameV2() && !this.showPanelAsPage;\n  }\n  protected getIsNested(): boolean {\n    return super.getIsNested() && this.parent !== undefined;\n  }\n  public get showPanelAsPage(): boolean {\n    return false;\n  }\n  private forcusFirstQuestionOnExpand = true;\n  /**\n   * Expands the panel.\n   * @param focusFirstQuestion Specifies whether to focus the first question within the expanded panel. Default value: `true`.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  public expand(focusFirstQuestion: boolean = true): void {\n    this.forcusFirstQuestionOnExpand = focusFirstQuestion;\n    super.expand();\n  }\n  protected onElementExpanded(elementIsRendered: boolean): void {\n    if (!this.forcusFirstQuestionOnExpand) { return; }\n    if (this.survey != null && !this.isLoadingFromJson) {\n      const q = this.getFirstQuestionToFocus(false);\n      if (!!q) {\n        setTimeout(() => {\n          if (!this.isDisposed && !!this.survey) {\n            this.survey.scrollElementToTop(q, q, null, q.inputId, false, { behavior: \"smooth\" });\n          }\n        }, elementIsRendered ? 0 : 15);\n      }\n    }\n  }\n  protected getCssRoot(cssClasses: { [index: string]: string }): string {\n    return new CssClassBuilder()\n      .append(super.getCssRoot(cssClasses))\n      .append(cssClasses.container)\n      .append(cssClasses.asPage, this.showPanelAsPage)\n      .append(cssClasses.invisible, !this.isDesignMode && this.areInvisibleElementsShowing && !this.visible)\n      .toString();\n  }\n  public getContainerCss(): string {\n    return this.getCssRoot(this.cssClasses.panel);\n  }\n  public afterRenderCore(element: HTMLElement): void {\n    super.afterRenderCore(element);\n    if (this.isPanel) {\n      this.survey?.afterRenderPanel(this, element);\n    }\n  }\n}\n\nSerializer.addClass(\n  \"panelbase\",\n  [\n    \"name\",\n    {\n      name: \"elements\",\n      alternativeName: \"questions\",\n      baseClassName: \"question\",\n      visible: false,\n      isLightSerializable: false,\n    },\n    { name: \"visible:switch\", default: true, overridingProperty: \"visibleIf\" },\n    { name: \"readOnly:boolean\", overridingProperty: \"enableIf\" },\n    \"visibleIf:condition\",\n    \"enableIf:condition\",\n    \"requiredIf:condition\",\n    {\n      name: \"questionTitleWidth\",\n      visibleIf: function (obj: any) {\n        return !!obj && obj[\"availableQuestionTitleWidth\"]();\n      }\n    },\n    {\n      name: \"questionTitleLocation\",\n      default: \"default\",\n      choices: [\"default\", \"top\", \"bottom\", \"left\", \"hidden\"],\n    },\n    {\n      name: \"gridLayoutColumns:panellayoutcolumns\",\n      className: \"panellayoutcolumn\", isArray: true,\n      onSerializeValue: (obj: any): any => { return obj.getSerializableColumnsValue(); },\n      visibleIf: function (obj: any) { return !!obj && !!obj.survey && obj.survey.gridLayoutEnabled; }\n    },\n    { name: \"title:text\", serializationProperty: \"locTitle\" },\n    { name: \"description:text\", serializationProperty: \"locDescription\" },\n    {\n      name: \"questionOrder\", alternativeName: \"questionsOrder\",\n      default: \"default\",\n      choices: [\"default\", \"initial\", \"random\"],\n    },\n    { name: \"questionErrorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"] }\n  ],\n  function () {\n    return new PanelModelBase();\n  }\n);\n\nSerializer.addClass(\n  \"panel\",\n  [\n    { name: \"state\", default: \"default\", choices: [\"default\", \"collapsed\", \"expanded\"] },\n    { name: \"isRequired:switch\", overridingProperty: \"requiredIf\" },\n    { name: \"requiredErrorText:text\", serializationProperty: \"locRequiredErrorText\" },\n    { name: \"startWithNewLine:boolean\", default: true },\n    { name: \"width\" },\n    { name: \"minWidth\", defaultFunc: () => \"auto\" },\n    { name: \"maxWidth\", defaultFunc: () => settings.maxWidth },\n    { name: \"colSpan:number\", visible: false, onSerializeValue: (obj) => { return obj.getPropertyValue(\"colSpan\"); } },\n    {\n      name: \"effectiveColSpan:number\", minValue: 1, isSerializable: false,\n      visibleIf: function (obj: any) { return !!obj.survey && obj.survey.gridLayoutEnabled; }\n    },\n    { name: \"innerIndent:number\", default: 0, choices: [0, 1, 2, 3] },\n    { name: \"indent:number\", default: 0, choices: [0, 1, 2, 3], visible: false },\n    {\n      name: \"page\",\n      isSerializable: false,\n      visibleIf: function (obj: any) {\n        var survey = obj ? obj.survey : null;\n        return !survey || !survey.pages || survey.pages.length > 1;\n      },\n      choices: function (obj: any) {\n        var survey = obj ? obj.survey : null;\n        return survey\n          ? survey.pages.map((p: any) => {\n            return { value: p.name, text: p.title };\n          })\n          : [];\n      },\n    },\n    { name: \"showNumber:boolean\" },\n    { name: \"showQuestionNumbers\", default: \"default\", choices: [\"default\", \"onpanel\", \"recursive\", \"off\"] },\n    { name: \"questionStartIndex\", visibleIf: (obj: PanelModel): boolean => obj.isPanel },\n    { name: \"allowAdaptiveActions:boolean\", default: true, visible: false },\n  ],\n  function () {\n    return new PanelModel();\n  },\n  \"panelbase\"\n);\n\nElementFactory.Instance.registerElement(\"panel\", (name) => {\n  return new PanelModel(name);\n});\n", "import { property, Serializer } from \"./jsonobject\";\nimport { Helpers } from \"./helpers\";\nimport {\n  IPage,\n  IPanel,\n  IElement,\n  ISurveyElement,\n  ISurveyImpl,\n  ISurvey,\n} from \"./base-interfaces\";\nimport { PanelModelBase, PanelModel } from \"./panel\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { settings } from \"./settings\";\n\n/**\n * The `PageModel` object describes a survey page and contains properties and methods that allow you to control the page and access its elements (panels and questions).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n */\nexport class PageModel extends PanelModel implements IPage {\n  public isPageContainer: boolean;\n\n  constructor(name: string = \"\") {\n    super(name);\n    this.createLocalizableString(\"navigationDescription\", this, true);\n  }\n  public getType(): string {\n    return \"page\";\n  }\n  public toString(): string {\n    return this.name;\n  }\n  public get isPage(): boolean {\n    return !this.isPanel;\n  }\n  public get isPanel(): boolean {\n    return !!this.parent;\n  }\n  public get showPanelAsPage(): boolean {\n    return true;\n  }\n  public get hasEditButton(): boolean {\n    return this.isPanel && this.survey && this.survey.state === \"preview\"\n     && !!this.parent && !this.parent.isPanel;\n  }\n  protected getElementsForRows(): Array<IElement> {\n    if (!this.isStartPage) {\n      const q = this.survey?.currentSingleElement;\n      if (!!q) {\n        if ((<any>q).page === this) return [q];\n        return [];\n      }\n    }\n    return super.getElementsForRows();\n  }\n  protected disposeElements(): void {\n    if (!this.isPageContainer) {\n      super.disposeElements();\n    }\n  }\n  protected onRemoveElement(element: IElement): void {\n    if (this.isPageContainer) {\n      element.parent = null;\n      this.unregisterElementPropertiesChanged(element);\n    } else {\n      super.onRemoveElement(element);\n    }\n  }\n  public getTemplate(): string {\n    return this.isPanel ? \"panel\" : super.getTemplate();\n  }\n  public get no(): string {\n    if (!this.canShowPageNumber() || !this.survey) return \"\";\n    let no = this.isStartPage ? \"\" : this.num + \". \";\n    return this.survey.getUpdatedPageNo(this, no);\n  }\n  public get cssTitleNumber(): string {\n    return this.isPanel ? this.cssClasses.panel.number : this.cssClasses.page.number;\n  }\n  public getCssTitleExpandableSvg(): string {\n    return null;\n  }\n  public get cssRequiredMark(): string {\n    return \"\";\n  }\n  protected canShowPageNumber(): boolean {\n    return this.survey && (<any>this.survey).showPageNumbers;\n  }\n  protected canShowTitle(survey: ISurvey): boolean {\n    return !survey || (<any>survey).showPageTitles;\n  }\n  protected setTitleValue(val: string): void {\n    super.setTitleValue(val);\n    this.navigationLocStrChanged();\n  }\n  protected getDefaultTitleTagName(): string {\n    return settings.titleTags.page;\n  }\n  /**\n   * A caption displayed on a navigation button in the TOC or progress bar. Applies when [`showTOC`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTOC) is `true` or when the [progress bar is visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar), [`progressBarType`](https://surveyjs.io/form-library/documentation/surveymodel#progressBarType) is set to `\"pages\"`, and [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/surveymodel#progressBarShowPageTitles) is `true`.\n   *\n   * [Table of Contents Demo](https://surveyjs.io/form-library/examples/table-of-contents/ (linkStyle))\n   *\n   * [Progress Bar Demo](https://surveyjs.io/form-library/examples/configure-form-navigation-with-progress-indicators/ (linkStyle))\n   *\n   * > If navigation titles are unspecified, the navigation buttons display page [titles](https://surveyjs.io/form-library/documentation/api-reference/page-model#title) or [names](https://surveyjs.io/form-library/documentation/pagemodel#name).\n   */\n  public get navigationTitle(): string {\n    return this.getLocalizableStringText(\"navigationTitle\");\n  }\n  public set navigationTitle(val: string) {\n    this.setLocalizableStringText(\"navigationTitle\", val);\n  }\n  public get navigationDescription(): string {\n    return this.getLocalizableStringText(\"navigationDescription\");\n  }\n  public set navigationDescription(val: string) {\n    this.setLocalizableStringText(\"navigationDescription\", val);\n  }\n  public get locNavigationDescription(): LocalizableString {\n    return this.getLocalizableString(\"navigationDescription\");\n  }\n  public navigationLocStrChanged(): void {\n    if (this.locNavigationTitle.isEmpty) {\n      this.locTitle.strChanged();\n    }\n    this.locNavigationTitle.strChanged();\n    this.locNavigationDescription.strChanged();\n  }\n  getMarkdownHtml(text: string, name: string, item?: any): string {\n    const result = super.getMarkdownHtml(text, name, item);\n    if (name === \"navigationTitle\" && this.canShowPageNumber() && result) {\n      return this.num + \". \" + result;\n    }\n    return result;\n  }\n  public get passed(): boolean {\n    return this.getPropertyValue(\"passed\", false);\n  }\n  public set passed(val: boolean) {\n    this.setPropertyValue(\"passed\", val);\n  }\n  protected removeFromParent(): void {\n    if (!!this.survey) {\n      this.removeSelfFromList(this.survey.pages);\n    }\n  }\n  /**\n   * The visible index of the page. It has values from 0 to visible page count - 1.\n   * @see SurveyModel.visiblePages\n   * @see SurveyModel.pages\n   */\n  public get visibleIndex(): number {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  public set visibleIndex(val: number) {\n    this.setPropertyValue(\"visibleIndex\", val);\n  }\n  protected canRenderFirstRows(): boolean {\n    return !this.isDesignMode || this.visibleIndex == 0;\n  }\n  /**\n   * Returns `true` if this page is a start page.\n   *\n   * Refer to the following help topic for more information on how to configure a start page: [Start Page](https://surveyjs.io/form-library/documentation/design-survey-create-a-multi-page-survey#start-page).\n   */\n  public get isStartPage(): boolean {\n    return this.survey && this.survey.isPageStarted(this);\n  }\n  public get isStarted(): boolean { return this.isStartPage; }\n  protected calcCssClasses(css: any): any {\n    if (this.isPanel) return super.calcCssClasses(css);\n    const classes = { page: {}, error: {}, pageTitle: \"\", pageDescription: \"\", row: \"\", rowMultiple: \"\", pageRow: \"\", rowCompact: \"\", rowEnter: \"\", rowLeave: \"\", rowDelayedEnter: \"\", rowReplace: \"\" };\n    this.copyCssClasses(classes.page, css.page);\n    this.copyCssClasses(classes.error, css.error);\n    if (!!css.pageTitle) {\n      classes.pageTitle = css.pageTitle;\n    }\n    if (!!css.pageDescription) {\n      classes.pageDescription = css.pageDescription;\n    }\n    if (!!css.row) {\n      classes.row = css.row;\n    }\n    if (!!css.pageRow) {\n      classes.pageRow = css.pageRow;\n    }\n    if (!!css.rowMultiple) {\n      classes.rowMultiple = css.rowMultiple;\n    }\n    if (!!css.rowCompact) {\n      classes.rowCompact = css.rowCompact;\n    }\n    if (!!css.rowEnter) {\n      classes.rowEnter = css.rowEnter;\n    }\n    if (!!css.rowDelayedEnter) {\n      classes.rowDelayedEnter = css.rowDelayedEnter;\n    }\n    if (!!css.rowLeave) {\n      classes.rowLeave = css.rowLeave;\n    }\n    if (!!css.rowReplace) {\n      classes.rowReplace = css.rowReplace;\n    }\n    if (this.survey) {\n      this.survey.updatePageCssClasses(this, classes);\n    }\n    return classes;\n  }\n  protected getCssPanelTitle(): string {\n    if (this.isPanel) return super.getCssPanelTitle();\n    if (!this.cssClasses.page) return \"\";\n    return new CssClassBuilder()\n      .append(this.cssClasses.page.title)\n      .toString();\n  }\n  public get cssRoot(): string {\n    if (this.isPanel || !this.cssClasses.page || !this.survey) return \"\";\n    return new CssClassBuilder()\n      .append(this.cssClasses.page.root)\n      .append(this.cssClasses.page.emptyHeaderRoot, !(<any>this.survey).renderedHasHeader &&\n        !((<any>this.survey).isShowProgressBarOnTop && !(<any>this.survey).isStaring))\n      .toString();\n  }\n  protected getCssError(cssClasses: any): string {\n    if (this.isPanel) return super.getCssError(cssClasses);\n    return new CssClassBuilder()\n      .append(super.getCssError(cssClasses))\n      .append(cssClasses.page.errorsContainer).toString();\n  }\n  @property({ defaultValue: -1, onSet: (val: number, target: PageModel) => target.onNumChanged(val) }) num: number;\n  /**\n   * @deprecated Use the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/page-model#showNavigationButtons) property instead.\n   */\n  public get navigationButtonsVisibility(): string {\n    const result = this.showNavigationButtons;\n    if (result === undefined || result === null) {\n      return \"inherit\";\n    }\n    return result ? \"show\" : \"hide\";\n  }\n  public set navigationButtonsVisibility(val: string) {\n    if (typeof val == \"string\") {\n      val = val.toLowerCase();\n    }\n    this.showNavigationButtons = val;\n  }\n  /**\n   * Gets or sets the visibility of the Start, Next, Previous, and Complete navigation buttons on this page. Overrides the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showNavigationButtons) property specified on the survey-level.\n   *\n   * Default value: `undefined` (the visibility depends on the survey-level setting)\n   */\n  public get showNavigationButtons(): boolean | string {\n    return this.getPropertyValue(\"showNavigationButtons\", undefined);\n  }\n  public set showNavigationButtons(val: boolean | string) {\n    this.setShowNavigationButtonsProperty(val);\n  }\n  public setShowNavigationButtonsProperty(val: boolean | string) {\n    if (val === true || val === false) {\n      this.setPropertyValue(\"showNavigationButtons\", val);\n    } else if (val === \"show\") {\n      this.setPropertyValue(\"showNavigationButtons\", true);\n    } else if (val === \"hide\") {\n      this.setPropertyValue(\"showNavigationButtons\", false);\n    } else {\n      this.setPropertyValue(\"showNavigationButtons\", undefined);\n    }\n  }\n  /**\n   * Returns `true` if this is the current page.\n   * @see SurveyModel.currentPage\n   */\n  public get isActive(): boolean {\n    return !!this.survey && <PageModel>this.survey.currentPage === this;\n  }\n  /**\n   * Returns `true` if the respondent has already seen this page during the current session.\n   */\n  public get wasShown(): boolean {\n    return this.wasRendered;\n  }\n  get hasShown(): boolean {\n    return this.wasRendered;\n  }\n  public setWasShown(val: boolean): void {\n    if (!val) {\n      this.resetWasRendered();\n    }\n  }\n  protected onFirstRenderingCore(): void {\n    super.onFirstRenderingCore();\n    if (this.isDesignMode) return;\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      if (els[i].isPanel) {\n        (<PanelModelBase><any>els[i]).randomizeElements(this.areQuestionsRandomized);\n      }\n    }\n    if (this.randomizeElements(this.areQuestionsRandomized)) {\n      const singleQuestion: any = this.survey?.currentSingleElement;\n      if (singleQuestion?.page === this) {\n        this.survey.currentSingleElement = this.getFirstVisibleElement();\n      }\n    }\n  }\n  /**\n   * Scrolls this page to the top.\n   */\n  public scrollToTop() {\n    if (!!this.survey) {\n      this.survey.scrollElementToTop(this, null, this, this.id, false, { block: \"start\" });\n    }\n  }\n  /**\n   * A time period that a respondent has spent on this page so far; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   * @see timeLimit\n   */\n  public timeSpent = 0;\n  /**\n   * Returns a list of all panels on this page.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible panels.\n   * @param includingDesignTime For internal use.\n   */\n  public getAllPanels(\n    visibleOnly: boolean = false,\n    includingDesignTime: boolean = false\n  ): Array<IPanel> {\n    var result = new Array<IPanel>();\n    this.addPanelsIntoList(result, visibleOnly, includingDesignTime);\n    return result;\n  }\n  public getPanels(visibleOnly: boolean = false, includingDesignTime: boolean = false): Array<IPanel> {\n    return this.getAllPanels(visibleOnly, includingDesignTime);\n  }\n  /**\n   * A time period that a respondent has to complete this page; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * Alternatively, you can use the `SurveyModel`'s [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/surveymodel#timeLimitPerPage) property to specify identical time periods for all survey pages.\n   * @see timeSpent\n   */\n  public get timeLimit(): number {\n    return this.getPropertyValue(\"timeLimit\", 0);\n  }\n  public set timeLimit(val: number) {\n    this.setPropertyValue(\"timeLimit\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeLimit) property instead.\n   */\n  public get maxTimeToFinish(): number {\n    return this.timeLimit;\n  }\n  public set maxTimeToFinish(val: number) {\n    this.timeLimit = val;\n  }\n  public getMaxTimeToFinish(): number {\n    if (this.timeLimit !== 0) return this.timeLimit;\n    const res = !!this.survey ? this.survey.timeLimitPerPage : 0;\n    return res > 0 ? res : 0;\n  }\n  protected onNumChanged(value: number) { }\n  protected onVisibleChanged() {\n    if (this.isRandomizing) return;\n    super.onVisibleChanged();\n    if (this.survey != null) {\n      this.survey.pageVisibilityChanged(this, this.isVisible);\n    }\n  }\n\n  public ensureRowsVisibility() {\n    super.ensureRowsVisibility();\n    this.getPanels().forEach((panel) => panel.ensureRowsVisibility());\n  }\n\n  private _isReadyForClean: boolean = true;\n  public get isReadyForClean(): boolean {\n    return this._isReadyForClean;\n  }\n  public set isReadyForClean(val: boolean) {\n    const oldValue = this._isReadyForClean;\n    this._isReadyForClean = val;\n    if (this._isReadyForClean !== oldValue) {\n      this.isReadyForCleanChangedCallback && this.isReadyForCleanChangedCallback();\n    }\n  }\n  public isReadyForCleanChangedCallback: () => void;\n  public enableOnElementRerenderedEvent(): void {\n    super.enableOnElementRerenderedEvent();\n    this.isReadyForClean = false;\n  }\n  public disableOnElementRerenderedEvent(): void {\n    super.disableOnElementRerenderedEvent();\n    this.isReadyForClean = true;\n  }\n}\n\nSerializer.addClass(\n  \"page\",\n  [\n    {\n      name: \"showNavigationButtons:boolean\",\n      defaultFunc: () => undefined,\n      onSetValue: function (obj: any, value: any) {\n        obj && obj.setShowNavigationButtonsProperty(value);\n      },\n      alternativeName: \"navigationButtonsVisibility\"\n    },\n    {\n      name: \"timeLimit:number\",\n      alternativeName: \"maxTimeToFinish\",\n      default: 0,\n      minValue: 0,\n      visibleIf: (obj: any) => {\n        return !!obj.survey && obj.survey.showTimer;\n      }\n    },\n    {\n      name: \"navigationTitle\",\n      serializationProperty: \"locNavigationTitle\",\n    },\n    {\n      name: \"navigationDescription\",\n      visibleIf: function (obj: any) {\n        return !!obj.survey && obj.survey.progressBarType === \"buttons\";\n      },\n      serializationProperty: \"locNavigationDescription\",\n    },\n    { name: \"title:text\", serializationProperty: \"locTitle\" },\n    { name: \"description:text\", serializationProperty: \"locDescription\" },\n    { name: \"state\", visible: false },\n    { name: \"isRequired\", visible: false },\n    { name: \"startWithNewLine\", visible: false },\n    { name: \"width\", visible: false },\n    { name: \"minWidth\", visible: false },\n    { name: \"maxWidth\", visible: false },\n    { name: \"colSpan\", visible: false, isSerializable: false },\n    { name: \"effectiveColSpan:number\", visible: false, isSerializable: false },\n    { name: \"innerIndent\", visible: false },\n    { name: \"indent\", visible: false },\n    { name: \"page\", visible: false, isSerializable: false },\n    { name: \"showNumber\", visible: false },\n    { name: \"showQuestionNumbers\", visible: false },\n    { name: \"questionStartIndex\", visible: false },\n    { name: \"allowAdaptiveActions\", visible: false },\n    { name: \"requiredErrorText:text\", serializationProperty: \"locRequiredErrorText\", visible: false },\n  ],\n  function () {\n    return new PageModel();\n  },\n  \"panel\"\n);\n", "import { Base, EventBase } from \"./base\";\nimport { surveyCss } from \"./defaultCss/defaultCss\";\nimport { PageModel } from \"./page\";\nimport { SurveyModel } from \"./survey\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\nexport class ProgressButtons extends Base {\n  constructor(public survey: SurveyModel) {\n    super();\n  }\n  public isListElementClickable(index: number | any): boolean {\n    if (!this.survey.onServerValidateQuestions ||\n      (<EventBase<SurveyModel>>this.survey.onServerValidateQuestions).isEmpty ||\n      this.survey.checkErrorsMode === \"onComplete\") {\n      return true;\n    }\n    return index <= this.survey.currentPageNo + 1;\n  }\n  public getRootCss(container: string = \"center\"): string {\n    let result = this.survey.css.progressButtonsContainerCenter;\n    if (this.survey.css.progressButtonsRoot) {\n      result += \" \" + this.survey.css.progressButtonsRoot + \" \" + this.survey.css.progressButtonsRoot + \"--\" + ([\"footer\", \"contentBottom\"].indexOf(container) !== -1 ? \"bottom\" : \"top\");\n      result += \" \" + this.survey.css.progressButtonsRoot + \"--\" + (this.showItemTitles ? \"with-titles\" : \"no-titles\");\n    }\n    if (this.showItemNumbers && this.survey.css.progressButtonsNumbered) {\n      result += \" \" + this.survey.css.progressButtonsNumbered;\n    }\n    if (this.isFitToSurveyWidth) {\n      result += \" \" + this.survey.css.progressButtonsFitSurveyWidth;\n    }\n    return result;\n  }\n  public getListElementCss(index: number | any): string {\n    if (index >= this.survey.visiblePages.length) return;\n    return new CssClassBuilder()\n      .append(this.survey.css.progressButtonsListElementPassed, this.survey.visiblePages[index].passed)\n      .append(this.survey.css.progressButtonsListElementCurrent, this.survey.currentPageNo === index)\n      .append(this.survey.css.progressButtonsListElementNonClickable, !this.isListElementClickable(index))\n      .toString();\n  }\n  public getScrollButtonCss(hasScroller: boolean, isLeftScroll: boolean): string {\n    return new CssClassBuilder()\n      .append(this.survey.css.progressButtonsImageButtonLeft, isLeftScroll)\n      .append(this.survey.css.progressButtonsImageButtonRight, !isLeftScroll)\n      .append(this.survey.css.progressButtonsImageButtonHidden, !hasScroller)\n      .toString();\n  }\n  public clickListElement(element: number | PageModel): void {\n    if (!(element instanceof PageModel)) {\n      element = this.survey.visiblePages[element];\n    }\n    this.survey.tryNavigateToPage(element);\n  }\n  public isListContainerHasScroller(element: HTMLElement): boolean {\n    const listContainerElement: HTMLElement = element.querySelector(\".\" + this.survey.css.progressButtonsListContainer);\n    if (!!listContainerElement) {\n      return listContainerElement.scrollWidth > listContainerElement.offsetWidth;\n    }\n    return false;\n  }\n  public isCanShowItemTitles(element: HTMLElement): boolean {\n    const listContainerElement = element.querySelector(\"ul\");\n    if (!listContainerElement || listContainerElement.children.length < 2) return true;\n    if (listContainerElement.clientWidth > listContainerElement.parentElement.clientWidth) {\n      return false;\n    }\n    const expectedElementWidth = listContainerElement.children[0].clientWidth;\n    for (let i = 0; i < listContainerElement.children.length; i++) {\n      if (Math.abs(listContainerElement.children[i].clientWidth - expectedElementWidth) > 5) {\n        return false;\n      }\n    }\n    return true;\n  }\n  public clearConnectorsWidth(element: HTMLElement): void {\n    const listContainerElements = element.querySelectorAll(\".sd-progress-buttons__connector\");\n    for (let i = 0; i < listContainerElements.length; i++) {\n      (listContainerElements[i] as HTMLDivElement).style.width = \"\";\n    }\n  }\n  public adjustConnectors(element: HTMLElement): void {\n    const listContainerElement = element.querySelector(\"ul\");\n    if (!listContainerElement) return;\n    const listContainerElements = element.querySelectorAll(\".sd-progress-buttons__connector\");\n    const circleWidth = this.showItemNumbers ? 36 : 20;\n    // const sideCorrection = this.survey.isMobile ? circleWidth : listContainerElement.children[0].clientWidth;\n    // const connectorWidth = (listContainerElement.clientWidth - sideCorrection) / (listContainerElement.children.length - 1) - circleWidth;\n    const connectorWidth = (listContainerElement.clientWidth - circleWidth) / (listContainerElement.children.length - 1) - circleWidth;\n    for (let i = 0; i < listContainerElements.length; i++) {\n      (listContainerElements[i] as HTMLDivElement).style.width = connectorWidth + \"px\";\n    }\n  }\n  public get isFitToSurveyWidth(): boolean {\n    if (surveyCss.currentType !== \"default\") {\n      return false;\n    }\n    return this.survey.progressBarInheritWidthFrom === \"survey\" && this.survey.widthMode == \"static\";\n  }\n  public get progressWidth(): string {\n    if (this.isFitToSurveyWidth) {\n      return this.survey.renderedWidth;\n    }\n    return \"\";\n  }\n  public get showItemNumbers(): boolean {\n    if (surveyCss.currentType !== \"default\") {\n      return false;\n    }\n    return this.survey.progressBarShowPageNumbers;\n  }\n  public get showItemTitles(): boolean {\n    if (surveyCss.currentType !== \"default\") {\n      return true;\n    }\n    return this.survey.progressBarShowPageTitles;\n  }\n  public getItemNumber(page: PageModel): string {\n    let result = \"\";\n    if (this.showItemNumbers) {\n      result += this.survey.visiblePages.indexOf(page) + 1;\n    }\n    return result;\n  }\n  public get headerText(): string {\n    return this.survey.currentPage ? this.survey.currentPage.renderedNavigationTitle : \"\";\n  }\n  public get footerText(): string {\n    return this.progressText;\n  }\n  public get progressText(): string {\n    return this.getPropertyValue(\"progressText\", undefined, () => this.survey.getProgressText());\n  }\n  public get progressBarAriaLabel(): string {\n    return getLocaleString(\"progressbar\", this.survey.getLocale());\n  }\n  public resetProgressText(): void {\n    this.resetPropertyValue(\"progressText\");\n  }\n  public onResize: EventBase<ProgressButtons, any> = this.addEvent<ProgressButtons, any>();\n  public processResponsiveness(width: number): void {\n    this.onResize.fire(this, { width });\n  }\n}\n\nexport interface IProgressButtonsViewModel {\n  container: string;\n  onResize(canShowItemTitles: boolean): void;\n  onUpdateScroller(hasScroller: boolean): void;\n  onUpdateSettings(): void;\n}\n\nexport class ProgressButtonsResponsivityManager {\n  private criticalProperties = [\"progressBarType\", \"progressBarShowPageTitles\"];\n  private timer: any;\n  private prevWidth: number;\n  private canShowItemTitles = true;\n  constructor(private model: ProgressButtons, private element: HTMLElement, private viewModel: IProgressButtonsViewModel) {\n    this.model.survey.registerFunctionOnPropertiesValueChanged(this.criticalProperties, () => this.forceUpdate(), \"ProgressButtonsResponsivityManager\" + this.viewModel.container);\n    this.model.onResize.add(this.processResponsiveness);\n    this.forceUpdate();\n  }\n  private forceUpdate() {\n    this.viewModel.onUpdateSettings();\n    this.processResponsiveness(this.model, {} as any);\n  }\n  private processResponsiveness = (model: ProgressButtons, options: { width: number }) => {\n    this.viewModel.onUpdateScroller(model.isListContainerHasScroller(this.element));\n    this.model.clearConnectorsWidth(this.element);\n    if (!model.showItemTitles) {\n      this.model.adjustConnectors(this.element);\n      return;\n    }\n    if (model.survey.isMobile) {\n      this.prevWidth = options.width;\n      this.canShowItemTitles = false;\n      this.model.adjustConnectors(this.element);\n      this.viewModel.onResize(this.canShowItemTitles);\n      return;\n    }\n    if (this.timer !== undefined) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(() => {\n      if (this.prevWidth === undefined || this.prevWidth < options.width && !this.canShowItemTitles || this.prevWidth > options.width && this.canShowItemTitles) {\n        this.prevWidth = options.width;\n        this.canShowItemTitles = model.isCanShowItemTitles(this.element);\n        this.viewModel.onResize(this.canShowItemTitles);\n        this.timer = undefined;\n      }\n    }, 10);\n  };\n  dispose(): void {\n    clearTimeout(this.timer);\n    this.model.onResize.remove(this.processResponsiveness);\n    this.model.survey.unRegisterFunctionOnPropertiesValueChanged(this.criticalProperties, \"ProgressButtonsResponsivityManager\" + this.viewModel.container);\n    this.element = undefined;\n    this.model = undefined;\n  }\n}", "import { Action, IAction } from \"./actions/action\";\nimport { ComputedUpdater } from \"./base\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\nimport { IListModel, ListModel } from \"./list\";\nimport { PageModel } from \"./page\";\nimport { PanelModelBase } from \"./panel\";\nimport { PopupModel } from \"./popup\";\nimport { Question } from \"./question\";\nimport { SurveyModel } from \"./survey\";\nimport { getLocaleString } from \"./surveyStrings\";\n\nexport function tryFocusPage(survey: SurveyModel, panel: PanelModelBase): boolean {\n  if (survey.isDesignMode) return true;\n  panel.focusFirstQuestion();\n  return true;\n}\n\nfunction getPage(question: Question): PageModel {\n  if (!!question.parentQuestion) {\n    return getPage(question.parentQuestion);\n  }\n  let parent = question.parent;\n  while(parent && parent.getType() !== \"page\" && parent.parent) {\n    parent = parent.parent;\n  }\n  if (parent && parent.getType() === \"page\") {\n    return <PageModel>(<any>parent);\n  }\n  return null;\n}\n\nexport function createTOCListModel(survey: SurveyModel, onAction?: () => void): ListModel<Action> {\n  var items: Action[] = getTOCItems(survey, onAction);\n  const listOptions: IListModel = {\n    items: items,\n    searchEnabled: false,\n    locOwner: survey,\n    listRole: \"menu\",\n    listItemRole: \"menuitemradio\",\n    listAriaLabel: getLocaleString(\"toc\", survey.getLocale())\n  };\n  var listModel = new ListModel(listOptions as any);\n  listModel.allowSelection = false;\n  const updateSelectedItem = (currentPage: PageModel, defaultSelection?: IAction) => {\n    listModel.selectedItem = !!currentPage && listModel.actions.filter(i => i.id === currentPage.name)[0] || defaultSelection;\n  };\n  updateSelectedItem(survey.currentPage, items[0]);\n  survey.onCurrentPageChanged.add((s, o) => {\n    updateSelectedItem(survey.currentPage);\n  });\n  survey.onFocusInQuestion.add((s, o) => {\n    updateSelectedItem(getPage(o.question));\n  });\n  const updatePagesFunc = () => {\n    listModel.setItems(getTOCItems(survey, onAction));\n  };\n  survey.registerFunctionOnPropertyValueChanged(\"pages\", updatePagesFunc, \"toc\");\n  survey.onEndLoadingFromJson.add(updatePagesFunc);\n  return listModel;\n}\n\nfunction getTOCItems(survey: SurveyModel, onAction: () => void) {\n  const pagesSource: PanelModelBase[] = survey.pages;\n  var items = (pagesSource || []).map(page => {\n    return new Action({\n      id: page.name,\n      locTitle: page.locNavigationTitle,\n      action: () => {\n        DomDocumentHelper.activeElementBlur();\n        !!onAction && onAction();\n        if (page.isPage) {\n          return survey.tryNavigateToPage(page as PageModel);\n        } else if (page.isPanel) {\n          return tryFocusPage(survey, page as PanelModelBase);\n        }\n      },\n      visible: <any>new ComputedUpdater(() => {\n        return page.isVisible && !((<any>page)[\"isStartPage\"]);\n      })\n    });\n  });\n  return items;\n}\n\nexport function getTocRootCss(survey: SurveyModel, isMobile = false): string {\n  let rootCss = TOCModel.RootStyle;\n  if (isMobile) {\n    return rootCss + \" \" + TOCModel.RootStyle + \"--mobile\";\n  }\n  rootCss += (\" \" + TOCModel.RootStyle + \"--\" + (survey.tocLocation || \"\").toLowerCase());\n  if (TOCModel.StickyPosition) {\n    rootCss += \" \" + TOCModel.RootStyle + \"--sticky\";\n  }\n  return rootCss;\n}\n\nexport class TOCModel {\n  public static RootStyle = \"sv_progress-toc\";\n  public static StickyPosition = true;\n  constructor(public survey: SurveyModel) {\n    this.listModel = createTOCListModel(survey, () => { this.popupModel.isVisible = false; });\n    this.popupModel = new PopupModel(\"sv-list\", { model: this.listModel });\n    this.popupModel.overlayDisplayMode = \"tablet-dropdown-overlay\";\n    this.popupModel.displayMode = <any>new ComputedUpdater(() => this.isMobile ? \"overlay\" : \"popup\");\n    if (TOCModel.StickyPosition) {\n      survey.onAfterRenderSurvey.add((s, o) => this.initStickyTOCSubscriptions(o.htmlElement));\n      this.initStickyTOCSubscriptions(survey.rootElement);\n    }\n  }\n\n  private initStickyTOCSubscriptions(rootElement: HTMLElement) {\n    if (TOCModel.StickyPosition && !!rootElement) {\n      rootElement.addEventListener(\"scroll\", (event) => {\n        this.updateStickyTOCSize(rootElement);\n      });\n      this.updateStickyTOCSize(rootElement);\n    }\n  }\n\n  public updateStickyTOCSize(rootElement: HTMLElement): void {\n    if (!rootElement) {\n      return;\n    }\n    const tocRootElement = rootElement.querySelector(\".\" + TOCModel.RootStyle) as HTMLDivElement;\n    if (!!tocRootElement) {\n      tocRootElement.style.height = \"\";\n      if (!this.isMobile && TOCModel.StickyPosition && !!rootElement) {\n        const rootHeight = rootElement.getBoundingClientRect().height;\n        const headerLayoutElement = this.survey.findLayoutElement(\"advanced-header\");\n        const advHeader = headerLayoutElement && headerLayoutElement.data;\n        let isBelowHeader = !advHeader || advHeader.hasBackground;\n        const titleSelector = this.survey.headerView === \"advanced\" ? \".sv-header\" : \".sv_custom_header+div div.\" + (this.survey.css.title || \"sd-title\");\n        const titleElement = rootElement.querySelector(titleSelector) as HTMLDivElement;\n        const titleElementHeight = titleElement && isBelowHeader ? titleElement.getBoundingClientRect().height : 0;\n        const scrollElement = rootElement.querySelector(\".sv-scroll__scroller\") as HTMLDivElement || rootElement;\n        const scrollCompensationHeight = scrollElement.scrollTop > titleElementHeight ? 0 : titleElementHeight - scrollElement.scrollTop;\n        tocRootElement.style.height = (rootHeight - scrollCompensationHeight - 1) + \"px\";\n      }\n    }\n  }\n\n  get isMobile(): boolean {\n    return this.survey.isMobile;\n  }\n  get containerCss(): string {\n    return getTocRootCss(this.survey, this.isMobile);\n  }\n  listModel: ListModel<Action>;\n  popupModel: PopupModel;\n  icon = \"icon-navmenu_24x24\";\n  togglePopup = (): void => {\n    this.popupModel.toggleVisibility();\n  };\n  public dispose(): void {\n    const [handler] = this.survey.unRegisterFunctionOnPropertyValueChanged(\"pages\", \"toc\");\n    this.survey.onEndLoadingFromJson.remove(handler);\n    this.survey.onPageAdded.remove(handler);\n    this.popupModel.dispose();\n    this.listModel.dispose();\n  }\n}\n", "import { HashTable, Helpers } from \"./helpers\";\nimport { JsonObject, JsonError, Serializer, property, propertyArray } from \"./jsonobject\";\nimport { Base, EventBase, ComputedUpdater } from \"./base\";\nimport {\n  ISurvey,\n  ISurveyData,\n  ISurveyImpl,\n  ITextProcessor,\n  IQuestion,\n  IPanel,\n  IElement,\n  IPage,\n  ISurveyErrorOwner,\n  ISurveyElement,\n  IProgressInfo,\n  IFindElement,\n  ISurveyLayoutElement,\n  IPlainDataOptions,\n  LayoutElementContainer,\n  IValueItemCustomPropValues,\n  ILoadFromJSONOptions,\n  IDropdownMenuOptions,\n  ITextProcessorProp,\n  ITextProcessorResult\n} from \"./base-interfaces\";\nimport { SurveyElementCore, SurveyElement } from \"./survey-element\";\nimport { surveyCss } from \"./defaultCss/defaultCss\";\nimport { ISurveyTriggerOwner, SurveyTrigger, Trigger } from \"./trigger\";\nimport { CalculatedValue } from \"./calculatedValue\";\nimport { PageModel } from \"./page\";\nimport { TextPreProcessor, TextPreProcessorValue } from \"./textPreProcessor\";\nimport { IValueGetterContext, IValueGetterInfo, IValueGetterItem, ProcessValue, ValueGetter, ValueGetterContextCore, VariableGetterContext } from \"./conditionProcessValue\";\nimport { getLocaleString, surveyLocalization } from \"./surveyStrings\";\nimport { CustomError } from \"./error\";\nimport { LocalizableString } from \"./localizablestring\";\n// import { StylesManager } from \"./stylesmanager\";\nimport { SurveyTimerModel, ISurveyTimerText } from \"./surveyTimerModel\";\nimport { IQuestionPlainData, Question, ValidationContext } from \"./question\";\nimport { QuestionSelectBase } from \"./question_baseselect\";\nimport { ItemValue } from \"./itemvalue\";\nimport { PanelModelBase, PanelModel, QuestionRowModel } from \"./panel\";\nimport {\n  HtmlConditionItem,\n  UrlConditionItem,\n  ExpressionItem,\n} from \"./expressionItems\";\nimport { ExpressionRunner, ConditionRunner } from \"./conditions\";\nimport { settings } from \"./settings\";\nimport { isContainerVisible, isMobile, mergeValues, activateLazyRenderingChecks, navigateToUrl, getRenderedStyleSize, getRenderedSize, wrapUrlForBackgroundImage, chooseFiles, classesToSelector } from \"./utils/utils\";\nimport { SurveyError } from \"./survey-error\";\nimport { IAction, Action } from \"./actions/action\";\nimport { ActionContainer } from \"./actions/container\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { QuestionPanelDynamicModel } from \"./question_paneldynamic\";\nimport { Notifier } from \"./notifier\";\nimport {\n  TriggerExecutedEvent, CompletingEvent, CompleteEvent, ShowingPreviewEvent, NavigateToUrlEvent, CurrentPageChangingEvent, CurrentPageChangedEvent,\n  ValueChangingEvent, ValueChangedEvent, VariableChangedEvent, QuestionVisibleChangedEvent, PageVisibleChangedEvent, PanelVisibleChangedEvent, QuestionCreatedEvent,\n  QuestionAddedEvent, QuestionRemovedEvent, PanelAddedEvent, PanelRemovedEvent, PageAddedEvent, ValidateQuestionEvent, SettingQuestionErrorsEvent, ValidatePanelEvent,\n  ErrorCustomTextEvent, ValidatePageEvent, ValidatedErrorsOnCurrentPageEvent, ProcessHtmlEvent, GetQuestionTitleEvent, GetTitleTagNameEvent, GetQuestionNumberEvent, GetPageNumberEvent,\n  GetPanelNumberEvent, GetProgressTextEvent, TextMarkdownEvent, TextRenderAsEvent, SendResultEvent, GetResultEvent, UploadFilesEvent, DownloadFileEvent, ClearFilesEvent,\n  ChoicesLoadedEvent, ProcessDynamicTextEvent, UpdateQuestionCssClassesEvent, UpdatePanelCssClassesEvent, UpdatePageCssClassesEvent, UpdateChoiceItemCssEvent, AfterRenderSurveyEvent,\n  AfterRenderPageEvent, AfterRenderQuestionEvent, AfterRenderQuestionInputEvent, AfterRenderPanelEvent, FocusInQuestionEvent, FocusInPanelEvent,\n  ShowingChoiceItemEvent, ChoicesLazyLoadEvent, GetChoiceDisplayValueEvent, MatrixRowAddedEvent, MatrixBeforeRowAddedEvent, MatrixRowRemovingEvent, MatrixRowRemovedEvent,\n  MatrixAllowRemoveRowEvent, MatrixDetailPanelVisibleChangedEvent, MatrixCellCreatingEvent, MatrixCellCreatedEvent, MatrixAfterCellRenderEvent, MatrixCellValueChangedEvent,\n  MatrixCellValueChangingEvent, MatrixCellValidateEvent, DynamicPanelModifiedEvent, DynamicPanelRemovingEvent, TimerPanelInfoTextEvent,\n  DynamicPanelItemValueChangedEvent, DynamicPanelValueChangedEvent, DynamicPanelValueChangingEvent,\n  DynamicPanelGetTabTitleEvent, DynamicPanelCurrentIndexChangedEvent, CheckAnswerCorrectEvent, DragDropAllowEvent, ScrollToTopEvent, GetQuestionTitleActionsEvent,\n  GetPanelTitleActionsEvent, GetPageTitleActionsEvent, GetPanelFooterActionsEvent, GetMatrixRowActionsEvent, GetExpressionDisplayValueEvent, CheckSingleInputPerPageModeEvent,\n  ServerValidateQuestionsEvent, MultipleTextItemAddedEvent, MatrixColumnAddedEvent, GetQuestionDisplayValueEvent, PopupVisibleChangedEvent, ChoicesSearchEvent,\n  OpenFileChooserEvent, OpenDropdownMenuEvent, ResizeEvent,\n  GetTitleActionsEventMixin, ProgressTextEvent, ScrollingElementToTopEvent, IsAnswerCorrectEvent,\n  LoadChoicesFromServerEvent,\n  ProcessTextValueEvent,\n  CreateCustomChoiceItemEvent,\n  MatrixRowDragOverEvent,\n  ExpressionRunningEvent\n} from \"./survey-events-api\";\nimport { QuestionMatrixDropdownModelBase } from \"./question_matrixdropdownbase\";\nimport { QuestionMatrixDynamicModel } from \"./question_matrixdynamic\";\nimport { QuestionFileModel } from \"./question_file\";\nimport { QuestionMultipleTextModel } from \"./question_multipletext\";\nimport { ITheme, ImageFit, ImageAttachment } from \"./themes\";\nimport { PopupModel } from \"./popup\";\nimport { Cover } from \"./header\";\nimport { surveyTimerFunctions } from \"./surveytimer\";\nimport { QuestionSignaturePadModel } from \"./question_signaturepad\";\nimport { SurveyTaskManagerModel } from \"./surveyTaskManager\";\nimport { ProgressButtons } from \"./progress-buttons\";\nimport { TOCModel } from \"./surveyToc\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { ConsoleWarnings } from \"./console-warnings\";\n\nclass SurveyValueGetterContext extends ValueGetterContextCore {\n  constructor (private survey: SurveyModel, private valuesHash: HashTable<any>, private variablesHash: HashTable<any>) {\n    super();\n  }\n\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length === 1) {\n      const name = path[0].name;\n      let val: any = this.getBuiltInVariableValue(name);\n      if (name === \"locale\") {\n        val = this.survey.locale || surveyLocalization.defaultLocale;\n      }\n      if (val !== undefined) return { value: val, isFound: true };\n    }\n    let res = new VariableGetterContext(this.variablesHash).getValue(path, isRoot, index, createObjects);\n    if (!!res && res.isFound) return res;\n    res = super.getValue(path, isRoot, index, createObjects);\n    if (!!res && res.isFound) return res;\n    return new VariableGetterContext(this.valuesHash).getValue(path, isRoot, index, createObjects);\n  }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const unWrappedNameSuffix = settings.expressionVariables.unwrapPostfix;\n    const isUnwrapped = name.endsWith(unWrappedNameSuffix);\n    if (isUnwrapped) {\n      name = name.substring(0, name.length - unWrappedNameSuffix.length);\n    }\n    const question = this.survey.getQuestionByValueName(name, true);\n    if (question) {\n      res.isFound = true;\n      res.context = question.getValueGetterContext(isUnwrapped);\n    }\n  }\n  protected isSearchNameRevert(): boolean { return true; }\n  private getBuiltInVariableValue(name: string): number {\n    const survey = this.survey;\n    name = name.toLocaleLowerCase();\n    if (name === \"pageno\") {\n      var page = survey.currentPage;\n      return page != null ? survey.visiblePages.indexOf(page) + 1 : 0;\n    }\n    if (name === \"pagecount\") {\n      return survey.visiblePageCount;\n    }\n    if (name === \"correctedanswers\" || name === \"correctanswers\" || name === \"correctedanswercount\") {\n      return survey.getCorrectedAnswerCount();\n    }\n    if (name === \"incorrectedanswers\" || name === \"incorrectanswers\" || name === \"incorrectedanswercount\") {\n      return survey.getInCorrectedAnswerCount();\n    }\n    if (name === \"questioncount\") {\n      return survey.getQuizQuestionCount();\n    }\n    return undefined;\n  }\n\n}\n\n/**\n * The `SurveyModel` object contains properties and methods that allow you to control the survey and access its elements.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n */\nexport class SurveyModel extends SurveyElementCore\n  implements\n  ISurvey,\n  ISurveyData,\n  ISurveyImpl,\n  ISurveyTriggerOwner,\n  ISurveyErrorOwner,\n  ISurveyTimerText {\n  public static readonly TemplateRendererComponentName: string =\n    \"sv-template-renderer\";\n  // public static get cssType(): string {\n  //   return surveyCss.currentType;\n  // }\n  // public static set cssType(value: string) {\n  //   StylesManager.applyTheme(value);\n  // }\n\n  [index: string]: any;\n  // private static stylesManager: StylesManager = null;\n  public static platform: string = \"unknown\";\n  public get platformName(): string {\n    return SurveyModel.platform;\n  }\n  public notifier: Notifier;\n  public rootElement: HTMLElement;\n  /**\n   * A suffix added to the name of the property that stores comments.\n   *\n   * Default value: \"-Comment\"\n   *\n   * Many question types allow respondents to leave comments. To enable this functionality, set a question's [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#showCommentArea) property to `true`. Comment values are saved in a separate property. The property name is composed of the question `name` and `commentSuffix`.\n   *\n   * Respondents can also leave comments when they select \"Other\" in choice-based questions, such as Dropdown or Checkboxes. The property name for the comment value is composed according to the same rules. However, you can use the question `name` as a key to store the comment value instead. Disable the [`storeOthersAsComment`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#storeOthersAsComment) property in this case.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   */\n  public get commentSuffix(): string {\n    return settings.commentSuffix;\n  }\n  public set commentSuffix(val: string) {\n    settings.commentSuffix = val;\n  }\n  public get commentPrefix(): string {\n    return this.commentSuffix;\n  }\n  public set commentPrefix(val: string) {\n    this.commentSuffix = val;\n  }\n\n  private valuesHash: HashTable<any> = {};\n  private variablesHash: HashTable<any> = {};\n  private editingObjValue: Base;\n\n  private timerModelValue: SurveyTimerModel;\n\n  private navigationBarValue: ActionContainer;\n\n  //#region Event declarations\n  public onEndLoadingFromJson: EventBase<SurveyModel, Object> = this.addEvent<SurveyModel, Object>();\n  /**\n   * An event that is raised after a [trigger](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#triggers) is executed.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n   * @see triggers\n   * @see runTriggers\n   */\n  public onTriggerExecuted: EventBase<SurveyModel, TriggerExecutedEvent> = this.addEvent<SurveyModel, TriggerExecutedEvent>();\n\n  /**\n   * An event that is raised before the survey is completed. Use this event to prevent survey completion.\n   * @see onComplete\n   * @see doComplete\n   * @see autoAdvanceAllowComplete\n   */\n  public onCompleting: EventBase<SurveyModel, CompletingEvent> = this.addEvent<SurveyModel, CompletingEvent>();\n  /**\n   * An event that is raised after the survey is completed. Use this event to send survey results to the server.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * For an example of how to use the methods described above, refer to the following help topic: [Store Survey Results in Your Own Database](https://surveyjs.io/form-library/documentation/handle-survey-results-store#store-survey-results-in-your-own-database).\n   *\n   * > Do not disable the [`showCompletePage`](https://surveyjs.io/form-library/documentation/surveymodel#showCompletePage) property if you call one of the `options.showSave...` methods. This is required because the UI that indicates data saving progress is integrated into the complete page. If you hide the complete page, the UI also becomes invisible.\n   * @see onPartialSend\n   * @see doComplete\n   * @see autoAdvanceAllowComplete\n   */\n  public onComplete: EventBase<SurveyModel, CompleteEvent> = this.addEvent<SurveyModel, CompleteEvent>();\n  /**\n   * An event that is raised before the survey displays a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page). Use this event to cancel the preview.\n   * @see showPreviewBeforeComplete\n   * @see previewMode\n   * @see showPreview\n   * @see cancelPreview\n   */\n  public onShowingPreview: EventBase<SurveyModel, ShowingPreviewEvent> = this.addEvent<SurveyModel, ShowingPreviewEvent>();\n  /**\n   * An event that is raised before the survey navigates to a specified URL. Use this event to change the URL or cancel the navigation.\n   * @see navigateToUrl\n   * @see navigateToUrlOnCondition\n   */\n  public onNavigateToUrl: EventBase<SurveyModel, NavigateToUrlEvent> = this.addEvent<SurveyModel, NavigateToUrlEvent>();\n  /**\n   * An event that is raised when the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) changes to `\"running\"`.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/automatically-move-to-next-page-if-answer-selected/ (linkStyle))\n   * @see firstPageIsStartPage\n   */\n  public onStarted: EventBase<SurveyModel, {}> = this.addEvent<SurveyModel, {}>();\n  /**\n   * An event that is raised to save incomplete survey results. Enable the [`partialSendEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#partialSendEnabled) property for this event to occur.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * Alternatively, you can handle the [`onCurrentPageChanged`](#onCurrentPageChanged) and [`onValueChanged`](#onValueChanged) events, as shown in the following demo: [Continue an Incomplete Survey](https://surveyjs.io/form-library/examples/survey-editprevious/).\n   */\n  public onPartialSend: EventBase<SurveyModel, {}> = this.addEvent<SurveyModel, {}>();\n  /**\n   * An event that is raised before the current page is switched.\n   *\n   * @see currentPageNo\n   * @see nextPage\n   * @see prevPage\n   **/\n  public onCurrentPageChanging: EventBase<SurveyModel, CurrentPageChangingEvent> = this.addEvent<SurveyModel, CurrentPageChangingEvent>();\n  /**\n   * An event that is raised after the current page is switched.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/save-and-restore-user-responses-to-complete-survey/ (linkStyle))\n   * @see currentPageNo\n   * @see nextPage\n   * @see prevPage\n   */\n  public onCurrentPageChanged: EventBase<SurveyModel, CurrentPageChangedEvent> = this.addEvent<SurveyModel, CurrentPageChangedEvent>();\n  /**\n   * An event that is raised before a question value is changed.\n   * @see setValue\n   */\n  public onValueChanging: EventBase<SurveyModel, ValueChangingEvent> = this.addEvent<SurveyModel, ValueChangingEvent>();\n  /**\n   * An event that is raised after a question value is changed.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/save-and-restore-user-responses-to-complete-survey/ (linkStyle))\n   *\n   * To handle value changes in matrix cells or panels within a [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), use the [`onMatrixCellValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixCellValueChanged) or [`onDynamicPanelValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onDynamicPanelValueChanged) event.\n   * @see setValue\n   */\n  public onValueChanged: EventBase<SurveyModel, ValueChangedEvent> = this.addEvent<SurveyModel, ValueChangedEvent>();\n  /**\n   * An event that is raised after a [variable](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables) or [calculated value](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#calculated-values) is changed.\n   *\n   * @see setVariable\n   * @see calculatedValues\n   */\n  public onVariableChanged: EventBase<SurveyModel, VariableChangedEvent> = this.addEvent<SurveyModel, VariableChangedEvent>();\n  /**\n   * An event that is raised after question visibility is changed.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n   */\n  public onQuestionVisibleChanged: EventBase<SurveyModel, QuestionVisibleChangedEvent> = this.addEvent<SurveyModel, QuestionVisibleChangedEvent>();\n  public onVisibleChanged: EventBase<SurveyModel, any> = this.onQuestionVisibleChanged;\n  /**\n   * An event that is raised after page visibility is changed.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n   */\n  public onPageVisibleChanged: EventBase<SurveyModel, PageVisibleChangedEvent> = this.addEvent<SurveyModel, PageVisibleChangedEvent>();\n  /**\n   * An event that is raised after panel visibility is changed.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n   */\n  public onPanelVisibleChanged: EventBase<SurveyModel, PanelVisibleChangedEvent> = this.addEvent<SurveyModel, PanelVisibleChangedEvent>();\n  /**\n   * An event that is raised when the survey creates any new object derived from [`Question`](https://surveyjs.io/form-library/documentation/api-reference/question).\n   *\n   * In a survey, complex elements ([Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/), [Multiple Text](https://surveyjs.io/form-library/examples/questiontype-multipletext/), and [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/)) are composed of questions. Use this event to customize any question regardless of which survey element it belongs to.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * To use this event for questions loaded from JSON, create an empty survey model, add an event handler, and only then populate the model from the JSON object:\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = {\n   *    // ...\n   * };\n   * // Create an empty model\n   * const survey = new Model();\n   * // Add an event handler\n   * survey.onQuestionCreated.add((sender, options) => {\n   *   //...\n   * });\n   * // Load the survey JSON schema\n   * survey.fromJSON(surveyJson);\n   * ```\n   * @see onQuestionAdded\n   */\n  public onQuestionCreated: EventBase<SurveyModel, QuestionCreatedEvent> = this.addEvent<SurveyModel, QuestionCreatedEvent>();\n  /**\n   * An event that is raised when a new question is added to a panel or page.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * To use this event for questions loaded from JSON, create an empty survey model, add an event handler, and only then populate the model from the JSON object:\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = {\n   *    // ...\n   * };\n   * // Create an empty model\n   * const survey = new Model();\n   * // Add an event handler\n   * survey.onQuestionAdded.add((sender, options) => {\n   *   //...\n   * });\n   * // Load the survey JSON schema\n   * survey.fromJSON(surveyJson);\n   * ```\n   * @see onQuestionCreated\n   */\n  public onQuestionAdded: EventBase<SurveyModel, QuestionAddedEvent> = this.addEvent<SurveyModel, QuestionAddedEvent>();\n  /**\n   * An event that is raised after a question is deleted from the survey.\n   */\n  public onQuestionRemoved: EventBase<SurveyModel, QuestionRemovedEvent> = this.addEvent<SurveyModel, QuestionRemovedEvent>();\n  /**\n   * An event that is raised when a new panel is added to a page.\n   */\n  public onPanelAdded: EventBase<SurveyModel, PanelAddedEvent> = this.addEvent<SurveyModel, PanelAddedEvent>();\n  /**\n   * An event that is raised after a panel is deleted from the survey.\n   */\n  public onPanelRemoved: EventBase<SurveyModel, PanelRemovedEvent> = this.addEvent<SurveyModel, PanelRemovedEvent>();\n  /**\n   * An event that is raised when a new page is added to the survey.\n   * @see PanelModel\n   */\n  public onPageAdded: EventBase<SurveyModel, PageAddedEvent> = this.addEvent<SurveyModel, PageAddedEvent>();\n  /**\n   * An event that is raised when a question value is being validated. Use this event to add/remove/modify errors or specify a custom error message.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-input-validation/ (linkStyle))\n   * @see onServerValidateQuestions\n   * @see onValidatePanel\n   * @see onMatrixCellValidate\n   */\n  public onValidateQuestion: EventBase<SurveyModel, ValidateQuestionEvent> = this.addEvent<SurveyModel, ValidateQuestionEvent>();\n  /**\n   * @deprecated Use the [`onValidateQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidateQuestion) property instead.\n   */\n  public onSettingQuestionErrors: EventBase<SurveyModel, SettingQuestionErrorsEvent> = this.addEvent<SurveyModel, SettingQuestionErrorsEvent>();\n  /**\n   * Use this event to validate data on your server.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-server-side-form-validation/ (linkStyle))\n   * @see onValidateQuestion\n   * @see onValidatePanel\n   * @see isValidatingOnServer\n   */\n  public onServerValidateQuestions: EventBase<SurveyModel, ServerValidateQuestionsEvent> = this.addEvent<SurveyModel, ServerValidateQuestionsEvent>();\n  /**\n   * An event that is raised when a panel is being validated. Use this event to add/remove/modify errors or specify a custom error message.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-custom-input-validation/ (linkStyle))\n   * @see onValidateQuestion\n   * @see onServerValidateQuestions\n   */\n  public onValidatePanel: EventBase<SurveyModel, ValidatePanelEvent> = this.addEvent<SurveyModel, ValidatePanelEvent>();\n  /**\n   * @deprecated Use the [`onValidateQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidateQuestion), [`onValidatePanel`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePanel), and [`onValidatePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePage) events instead.\n   */\n  public onErrorCustomText: EventBase<SurveyModel, ErrorCustomTextEvent> = this.addEvent<SurveyModel, ErrorCustomTextEvent>();\n  /**\n   * An event that is raised when a survey page is being validated. Use this event to add/remove/modify errors.\n   */\n  public onValidatePage: EventBase<SurveyModel, ValidatePageEvent> = this.addEvent<SurveyModel, ValidatePageEvent>();\n  /**\n   * @deprecated Use the [`onValidatePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePage) event instead.\n   */\n  public onValidatedErrorsOnCurrentPage: EventBase<SurveyModel, ValidatedErrorsOnCurrentPageEvent> = this.onValidatePage;\n  /**\n   * An event that is raised when the survey processes HTML content. Handle this event to modify HTML content before displaying.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-html-form-field/ (linkStyle))\n   * @see completedHtml\n   * @see loadingHtml\n   * @see [QuestionHtmlModel.html](https://surveyjs.io/form-library/documentation/api-reference/add-custom-html-to-survey#html)\n   */\n  public onProcessHtml: EventBase<SurveyModel, ProcessHtmlEvent> = this.addEvent<SurveyModel, ProcessHtmlEvent>();\n  /**\n   * Use this event to change a question's display text.\n   */\n  public onGetQuestionDisplayValue: EventBase<SurveyModel, GetQuestionDisplayValueEvent> = this.addEvent<SurveyModel, GetQuestionDisplayValueEvent>();\n  /**\n   * An event that is raised before the survey displays a question title. Handle this event to modify question titles.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * If you want to modify question numbers, handle the [`onGetQuestionNumber`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetQuestionNumber) event.\n   * @see requiredMark\n   */\n  public onGetQuestionTitle: EventBase<SurveyModel, GetQuestionTitleEvent> = this.addEvent<SurveyModel, GetQuestionTitleEvent>();\n  /**\n   * An event that is raised when the survey applies HTML tags to a survey, page, panel, and question title. Handle this event to change the HTML tag of individual titles.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * If you want to specify HTML tags for all titles, use the [`titleTags`](https://surveyjs.io/form-library/documentation/api-reference/settings#titleTags) object in [global settings](https://surveyjs.io/form-library/documentation/api-reference/settings).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-titletagnames/ (linkStyle))\n   * @see onGetQuestionTitle\n   * @see onGetQuestionNumber\n   */\n  public onGetTitleTagName: EventBase<SurveyModel, GetTitleTagNameEvent> = this.addEvent<SurveyModel, GetTitleTagNameEvent>();\n  /**\n   * An event that is raised before the survey calculates a question number. Handle this event to modify question numbers.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * If you want to hide question numbers, disable the [`showQuestionNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers) property.\n   * @see onGetQuestionTitle\n   * @see questionStartIndex\n   */\n  public onGetQuestionNumber: EventBase<SurveyModel, GetQuestionNumberEvent> = this.addEvent<SurveyModel, GetQuestionNumberEvent>();\n  /**\n   * @deprecated Use the [`onGetQuestionNumber`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetQuestionNumber) event instead.\n   */\n  public onGetQuestionNo: EventBase<SurveyModel, GetQuestionNumberEvent> = this.onGetQuestionNumber;\n  /**\n   * An event that is raised before the survey calculates a panel number. Handle this event to modify panel numbers.\n   *\n   * This event is raised only for the panels with a [specified title](https://surveyjs.io/form-library/documentation/api-reference/panel-model#title) and [visible number](https://surveyjs.io/form-library/documentation/api-reference/panel-model#showNumber).\n   */\n  public onGetPanelNumber: EventBase<SurveyModel, GetPanelNumberEvent> = this.addEvent<SurveyModel, GetPanelNumberEvent>();\n  /**\n   * An event that is raised before the survey calculates a page number. Handle this event to modify page numbers.\n   *\n   * This event is raised only if the [`showPageNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showPageNumbers) property is enabled.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   * @see onGetQuestionTitle\n   * @see questionStartIndex\n   */\n  public onGetPageNumber: EventBase<SurveyModel, GetPageNumberEvent> = this.addEvent<SurveyModel, GetPageNumberEvent>();\n  /**\n   * An event that is raised before the survey displays progress text. Handle this event to change the progress text in code.\n   * @see showProgressBar\n   * @see progressBarLocation\n   * @see progressBarType\n   */\n  public onGetProgressText: EventBase<SurveyModel, GetProgressTextEvent> = this.addEvent<SurveyModel, GetProgressTextEvent>();\n  /**\n   * @deprecated Use the [`onGetProgressText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetProgressText) event instead.\n   */\n  public onProgressText: EventBase<SurveyModel, ProgressTextEvent> = this.onGetProgressText;\n  /**\n   * An event that is raised to convert Markdown content to HTML.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/ (linkStyle))\n   */\n  public onTextMarkdown: EventBase<SurveyModel, TextMarkdownEvent> = this.addEvent<SurveyModel, TextMarkdownEvent>();\n\n  public onTextRenderAs: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public onSendResult: EventBase<SurveyModel, SendResultEvent> = this.addEvent<SurveyModel, SendResultEvent>();\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public onGetResult: EventBase<SurveyModel, GetResultEvent> = this.addEvent<SurveyModel, GetResultEvent>();\n  /**\n   * An event that is raised when a respondent opens a dialog window to select files.\n   * @see chooseFiles\n   */\n  public onOpenFileChooser: EventBase<SurveyModel, OpenFileChooserEvent> = this.addEvent<SurveyModel, OpenFileChooserEvent>();\n  /**\n   * An event that is raised when a File Upload or Signature Pad question starts to upload a file. Applies only if [`storeDataAsText`](https://surveyjs.io/form-library/documentation/api-reference/file-model#storeDataAsText) is `false`. Use this event to upload files to your server.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   * @see uploadFiles\n   * @see onDownloadFile\n   * @see onClearFiles\n   */\n  public onUploadFiles: EventBase<SurveyModel, UploadFilesEvent> = this.addEvent<SurveyModel, UploadFilesEvent>();\n  /**\n   * An event that is raised when a File Upload question starts to download a file. Use this event to implement file preview when your server stores only file names.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/store-file-names-in-survey-results/ (linkStyle))\n   * @see downloadFile\n   * @see onClearFiles\n   * @see onUploadFiles\n   */\n  public onDownloadFile: EventBase<SurveyModel, DownloadFileEvent> = this.addEvent<SurveyModel, DownloadFileEvent>();\n  /**\n   * An event that is raised when users clear files in a [File Upload](https://surveyjs.io/form-library/documentation/api-reference/file-model) question or clear signature in a [Signature Pad](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model) question. Use this event to delete files from your server.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   * @see clearFiles\n   * @see onDownloadFile\n   * @see onUploadFiles\n   */\n  public onClearFiles: EventBase<SurveyModel, ClearFilesEvent> = this.addEvent<SurveyModel, ClearFilesEvent>();\n  /**\n   * An event that is raised after choices are loaded from a server but before they are assigned to a choice-based question, such as [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model). Handle this event if you need to modify the loaded choices.\n   */\n  public onChoicesLoaded: EventBase<SurveyModel, ChoicesLoadedEvent> = this.addEvent<SurveyModel, ChoicesLoadedEvent>();\n  /**\n   * @deprecated Use the [`onChoicesLoaded`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onChoicesLoaded) event instead.\n   */\n  public onLoadChoicesFromServer: EventBase<SurveyModel, LoadChoicesFromServerEvent> = this.onChoicesLoaded;\n\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public onLoadedSurveyFromService: EventBase<SurveyModel, {}> = this.addEvent<SurveyModel, {}>();\n\n  /**\n   * An event that is raised when the survey processes [dynamic texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts) and any text in curly brackets. Use this event, for instance, to substitute parameters in a RESTful URL with real values when you [load choices by URL](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#choicesByUrl).\n   */\n  public onProcessDynamicText: EventBase<SurveyModel, ProcessDynamicTextEvent> = this.addEvent<SurveyModel, ProcessDynamicTextEvent>();\n  /**\n   * @deprecated Use the [`onProcessDynamicText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onProcessDynamicText) event instead.\n   */\n  public onProcessTextValue: EventBase<SurveyModel, ProcessTextValueEvent> = this.onProcessDynamicText;\n\n  /**\n   * An event that is raised before rendering a question. Use it to override default question CSS classes.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   * @see css\n   */\n  public onUpdateQuestionCssClasses: EventBase<SurveyModel, UpdateQuestionCssClassesEvent> = this.addEvent<SurveyModel, UpdateQuestionCssClassesEvent>();\n\n  /**\n   * An event that is raised before rendering a standalone panel and panels within [Dynamic Panel](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/). Use it to override default panel CSS classes.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   * @see css\n   */\n  public onUpdatePanelCssClasses: EventBase<SurveyModel, UpdatePanelCssClassesEvent> = this.addEvent<SurveyModel, UpdatePanelCssClassesEvent>();\n\n  /**\n   * An event that is raised before rendering a page. Use it to override default page CSS classes.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   * @see css\n   */\n  public onUpdatePageCssClasses: EventBase<SurveyModel, UpdatePageCssClassesEvent> = this.addEvent<SurveyModel, UpdatePageCssClassesEvent>();\n\n  /**\n   * An event that is raised before rendering a choice item in Radio Button Group, Checkboxes and Rating Scale questions. Use it to override default CSS classes applied to choice items.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   * @see css\n   */\n  public onUpdateChoiceItemCss: EventBase<SurveyModel, UpdateChoiceItemCssEvent> = this.addEvent<SurveyModel, UpdateChoiceItemCssEvent>();\n\n  /**\n   * An event that is raised after the survey is rendered to the DOM. Use this event to modify survey markup.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-animation/ (linkStyle))\n   */\n  public onAfterRenderSurvey: EventBase<SurveyModel, AfterRenderSurveyEvent> = this.addEvent<SurveyModel, AfterRenderSurveyEvent>();\n\n  public onAfterRenderHeader: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n\n  /**\n   * An event that is raised after a page is rendered to the DOM. Use it to modify page markup.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-afterrender/ (linkStyle))\n   */\n  public onAfterRenderPage: EventBase<SurveyModel, AfterRenderPageEvent> = this.addEvent<SurveyModel, AfterRenderPageEvent>();\n\n  /**\n   * An event that is raised after a question is rendered to the DOM. Use it to modify question markup.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-afterrender/ (linkStyle))\n   */\n  public onAfterRenderQuestion: EventBase<SurveyModel, AfterRenderQuestionEvent> = this.addEvent<SurveyModel, AfterRenderQuestionEvent>();\n\n  /**\n   * An event that is raised after a question with a single input field is rendered to the DOM. Use it to modify question markup.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * > This event is not raised for questions without input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)) or questions with multiple input fields ([Matrix](https://surveyjs.io/form-library/documentation/questionmatrixmodel), [Multiple Text](https://surveyjs.io/form-library/documentation/questionmultipletextmodel)).\n   */\n  public onAfterRenderQuestionInput: EventBase<SurveyModel, AfterRenderQuestionInputEvent> = this.addEvent<SurveyModel, AfterRenderQuestionInputEvent>();\n\n  /**\n   * An event that is raised after a panel is rendered to the DOM. Use it to modify panel markup.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * > This event is raised for static [Panels](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/) as well as panels within a [Dynamic Panel](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/).\n   */\n  public onAfterRenderPanel: EventBase<SurveyModel, AfterRenderPanelEvent> = this.addEvent<SurveyModel, AfterRenderPanelEvent>();\n\n  /**\n   * An event that is raised when an element (input field, checkbox, radio button) within a question gets focus.\n   * @see onFocusInPanel\n   * @see autoFocusFirstQuestion\n   * @see focusQuestion\n   */\n  public onFocusInQuestion: EventBase<SurveyModel, FocusInQuestionEvent> = this.addEvent<SurveyModel, FocusInQuestionEvent>();\n  /**\n   * An event that is raised when an element within a panel gets focus.\n   * @see onFocusInQuestion\n   * @see autoFocusFirstQuestion\n   * @see focusQuestion\n   */\n  public onFocusInPanel: EventBase<SurveyModel, FocusInPanelEvent> = this.addEvent<SurveyModel, FocusInPanelEvent>();\n\n  /**\n   * An event that is raised before a [choice item](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choices) is displayed. Use this event to change the visibility of individual choice items in [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model), [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model), [Radio Button Group](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model), and other similar question types.\n   */\n  public onShowingChoiceItem: EventBase<SurveyModel, ShowingChoiceItemEvent> = this.addEvent<SurveyModel, ShowingChoiceItemEvent>();\n\n  /**\n   * Use this event to load choice items in [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel) and [Tag Box](https://surveyjs.io/form-library/documentation/questiontagboxmodel) questions on demand.\n   *\n   * This event is raised only for those questions that have the [`choicesLazyLoadEnabled`](https://surveyjs.io/form-library/documentation/questiondropdownmodel#choicesLazyLoadEnabled) property set to `true`.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n   */\n  public onChoicesLazyLoad: EventBase<SurveyModel, ChoicesLazyLoadEvent> = this.addEvent<SurveyModel, ChoicesLazyLoadEvent>();\n\n  /**\n   * An event that is raised each time a search string in a [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Tag Box](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) question changes. Use this event to implement custom filtering of choice options.\n   * @see [QuestionDropdownModel.searchEnabled](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#searchEnabled)\n   * @see [QuestionDropdownModel.searchMode](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#searchMode)\n   */\n  public onChoicesSearch: EventBase<SurveyModel, ChoicesSearchEvent> = this.addEvent<SurveyModel, ChoicesSearchEvent>();\n\n  /**\n   * Use this event to load a display text for the [default choice item](https://surveyjs.io/form-library/documentation/questiondropdownmodel#defaultValue) in [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel) and [Tag Box](https://surveyjs.io/form-library/documentation/questiontagboxmodel) questions.\n   *\n   * If you load choices from a server (use [`choicesByUrl`](https://surveyjs.io/form-library/documentation/questiondropdownmodel#choicesByUrl) or [`onChoicesLazyLoad`](https://surveyjs.io/form-library/documentation/surveymodel#onChoicesLazyLoad)), display texts become available only when data is loaded, which does not happen until a user opens the drop-down menu. However, a display text for a default choice item is required before that. In this case, you can load data individually for the default item within the `onGetChoiceDisplayValue` event handler.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n   */\n  public onGetChoiceDisplayValue: EventBase<SurveyModel, GetChoiceDisplayValueEvent> = this.addEvent<SurveyModel, GetChoiceDisplayValueEvent>();\n\n  /**\n   * An event that is raised after a new row is added to a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   */\n  public onMatrixRowAdded: EventBase<SurveyModel, MatrixRowAddedEvent> = this.addEvent<SurveyModel, MatrixRowAddedEvent>();\n\n  /**\n   * An event that is raised before a new row is added to a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   */\n  public onMatrixRowAdding: EventBase<SurveyModel, MatrixBeforeRowAddedEvent> = this.addEvent<SurveyModel, MatrixBeforeRowAddedEvent>();\n  /**\n   * @deprecated Use the [`onMatrixRowAdding`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixRowAdding) event instead.\n   */\n  public onMatrixBeforeRowAdded: EventBase<SurveyModel, MatrixBeforeRowAddedEvent> = this.onMatrixRowAdding;\n\n  /**\n   * An event that is raised before a row is deleted from a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). You can cancel row deletion and clear row data instead.\n   * @see onMatrixRenderRemoveButton\n   */\n  public onMatrixRowRemoving: EventBase<SurveyModel, MatrixRowRemovingEvent> = this.addEvent<SurveyModel, MatrixRowRemovingEvent>();\n\n  /**\n   * An event that is raised after a row is deleted from a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   * @see onMatrixRenderRemoveButton\n   */\n  public onMatrixRowRemoved: EventBase<SurveyModel, MatrixRowRemovedEvent> = this.addEvent<SurveyModel, MatrixRowRemovedEvent>();\n\n  /**\n   * An event that is raised before rendering the Remove button in a row of a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). Use this event to hide the Remove button for individual matrix rows.\n   * @see onMatrixRowRemoving\n   * @see onMatrixRowRemoved\n   */\n  public onMatrixRenderRemoveButton: EventBase<SurveyModel, MatrixAllowRemoveRowEvent> = this.addEvent<SurveyModel, MatrixAllowRemoveRowEvent>();\n  /**\n   * @deprecated Use the [`onMatrixRenderRemoveButton`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixRenderRemoveButton) event instead.\n   */\n  public onMatrixAllowRemoveRow: EventBase<SurveyModel, MatrixAllowRemoveRowEvent> = this.onMatrixRenderRemoveButton;\n  /**\n   * An event that is raised after the visibility of an [expandable detail section](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/) is changed. This event can be raised for [Multi-Select](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) and [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model) questions.\n   */\n  public onMatrixDetailPanelVisibleChanged: EventBase<SurveyModel, MatrixDetailPanelVisibleChangedEvent> = this.addEvent<SurveyModel, MatrixDetailPanelVisibleChangedEvent>();\n  /**\n   * An event that is raised before a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is created. Use this event to change the type of individual matrix cells.\n   * @see onAfterRenderMatrixCell\n   */\n  public onMatrixCellCreating: EventBase<SurveyModel, MatrixCellCreatingEvent> = this.addEvent<SurveyModel, MatrixCellCreatingEvent>();\n\n  /**\n    * An event that is raised after a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is created.\n    * @see onAfterRenderMatrixCell\n    */\n  public onMatrixCellCreated: EventBase<SurveyModel, MatrixCellCreatedEvent> = this.addEvent<SurveyModel, MatrixCellCreatedEvent>();\n\n  /**\n   * An event that is raised after a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is rendered to the DOM.\n   * @see onMatrixCellCreated\n   */\n  public onAfterRenderMatrixCell: EventBase<SurveyModel, MatrixAfterCellRenderEvent> = this.addEvent<SurveyModel, MatrixAfterCellRenderEvent>();\n  /**\n   * @deprecated Use the [`onAfterRenderMatrixCell`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onAfterRenderMatrixCell) event instead.\n   */\n  public onMatrixAfterCellRender: EventBase<SurveyModel, MatrixAfterCellRenderEvent> = this.onAfterRenderMatrixCell;\n\n  /**\n   * An event that is raised after a cell value is changed in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   * @see onMatrixRowAdding\n   */\n  public onMatrixCellValueChanged: EventBase<SurveyModel, MatrixCellValueChangedEvent> = this.addEvent<SurveyModel, MatrixCellValueChangedEvent>();\n\n  /**\n   * An event that is raised before a cell value is changed in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). Use this event to change the cell value.\n   * @see onMatrixRowAdding\n   */\n  public onMatrixCellValueChanging: EventBase<SurveyModel, MatrixCellValueChangingEvent> = this.addEvent<SurveyModel, MatrixCellValueChangingEvent>();\n\n  /**\n   * An event that is raised for [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) and [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) questions when they validate a cell value. Use this event to display a custom error message based on a condition.\n   * @see onMatrixRowAdding\n   */\n  public onMatrixCellValidate: EventBase<SurveyModel, MatrixCellValidateEvent> = this.addEvent<SurveyModel, MatrixCellValidateEvent>();\n\n  /**\n   * An event that is raised after a new column is added to a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   */\n  public onMatrixColumnAdded: EventBase<SurveyModel, MatrixColumnAddedEvent> = this.addEvent<SurveyModel, MatrixColumnAddedEvent>();\n  /**\n   * An event that is raised on adding a new item in Multiple Text question.\n   */\n  public onMultipleTextItemAdded: EventBase<SurveyModel, MultipleTextItemAddedEvent> = this.addEvent<SurveyModel, MultipleTextItemAddedEvent>();\n  /**\n   * An event that is raised after a new panel is added to a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n   */\n  public onDynamicPanelAdded: EventBase<SurveyModel, DynamicPanelModifiedEvent> = this.addEvent<SurveyModel, DynamicPanelModifiedEvent>();\n\n  /**\n   * An event that is raised after a panel is deleted from a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n   */\n  public onDynamicPanelRemoved: EventBase<SurveyModel, DynamicPanelModifiedEvent> = this.addEvent<SurveyModel, DynamicPanelModifiedEvent>();\n  /**\n   * An event that is raised before a panel is deleted from a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question. Use this event to cancel the deletion.\n   */\n  public onDynamicPanelRemoving: EventBase<SurveyModel, DynamicPanelRemovingEvent> = this.addEvent<SurveyModel, DynamicPanelRemovingEvent>();\n  /**\n  * An event that is raised every second while the timer is running.\n  *\n  * Use the [`timeSpent`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeSpent) property to find out how many seconds have elapsed.\n  * @see timeLimit\n  * @see timeLimitPerPage\n  * @see showTimer\n  * @see timerLocation\n  * @see startTimer\n  */\n  public onTimerTick: EventBase<SurveyModel, {}> = this.addEvent<SurveyModel, {}>();\n  /**\n   * @deprecated Use the [`onTimerTick`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTimerTick) event instead.\n   */\n  public onTimer: EventBase<SurveyModel, {}> = this.onTimerTick;\n\n  public onTimerPanelInfoText: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n\n  /**\n   * An event that is raised after a value is changed in a panel within a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n   */\n  public onDynamicPanelValueChanged: EventBase<SurveyModel, DynamicPanelItemValueChangedEvent> = this.addEvent<SurveyModel, DynamicPanelValueChangedEvent>();\n  /**\n   * @deprecated Use the [`onDynamicPanelValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onDynamicPanelValueChanged) event instead.\n   */\n  public onDynamicPanelItemValueChanged: EventBase<SurveyModel, DynamicPanelItemValueChangedEvent> = this.onDynamicPanelValueChanged;\n  /**\n   * An event that is raised before a value is changed in a panel within a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n   */\n  public onDynamicPanelValueChanging: EventBase<SurveyModel, DynamicPanelValueChangingEvent> = this.addEvent<SurveyModel, DynamicPanelValueChangingEvent>();\n\n  /**\n   * An event that is raised before a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) renders [tab titles](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateTabTitle). Use this event to change individual tab titles.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/tabbed-interface-for-duplicate-group-option/ (linkStyle))\n   */\n  public onGetDynamicPanelTabTitle: EventBase<SurveyModel, DynamicPanelGetTabTitleEvent> = this.addEvent<SurveyModel, DynamicPanelGetTabTitleEvent>();\n\n  /**\n   * An event that is raised after the current panel is changed in a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n   */\n  public onDynamicPanelCurrentIndexChanged: EventBase<SurveyModel, DynamicPanelCurrentIndexChangedEvent> = this.addEvent<SurveyModel, DynamicPanelCurrentIndexChangedEvent>();\n\n  /**\n   * An event that is raised to define whether a question answer is correct. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   */\n  public onCheckAnswerCorrect: EventBase<SurveyModel, CheckAnswerCorrectEvent> = this.addEvent<SurveyModel, CheckAnswerCorrectEvent>();\n  /**\n   * @deprecated Use the [`onCheckAnswerCorrect`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCheckAnswerCorrect) event instead.\n   */\n  public onIsAnswerCorrect: EventBase<SurveyModel, IsAnswerCorrectEvent> = this.onCheckAnswerCorrect;\n\n  /**\n   * An event that is raised when users drag and drop survey elements while designing the survey in [Survey Creator](https://surveyjs.io/survey-creator/documentation/overview). Use this event to control drag and drop operations.\n   * @see isDesignMode\n   */\n  public onDragDropAllow: EventBase<SurveyModel, DragDropAllowEvent> = this.addEvent<SurveyModel, DragDropAllowEvent>();\n  public onMatrixRowDragOver: EventBase<SurveyModel, MatrixRowDragOverEvent> = this.addEvent<SurveyModel, MatrixRowDragOverEvent>();\n  /**\n   * An event that is raised when an [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) is about to be evaluated. Use this event to intercept or cancel the evaluation.\n   */\n  public onExpressionRunning: EventBase<SurveyModel, ExpressionRunningEvent> = this.addEvent<SurveyModel, ExpressionRunningEvent>();\n  /**\n   * An event this is raised before a survey element (usually page) is scrolled to the top. Use this event to cancel the scroll operation.\n   */\n  public onScrollToTop: EventBase<SurveyModel, ScrollToTopEvent> = this.addEvent<SurveyModel, ScrollToTopEvent>();\n  /**\n   * @deprecated Use the [`onScrollToTop`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onScrollToTop) event instead.\n   */\n  public onScrollingElementToTop: EventBase<SurveyModel, ScrollingElementToTopEvent> = this.onScrollToTop;\n\n  public onLocaleChangedEvent: EventBase<SurveyModel, {}> = this.addEvent<SurveyModel, {}>();\n\n  /**\n   * An event that allows you to add, delete, or modify actions in a question title.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-titleactions/ (linkStyle))\n   * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n  */\n  public onGetQuestionTitleActions: EventBase<SurveyModel, GetQuestionTitleActionsEvent> = this.addEvent<SurveyModel, GetQuestionTitleActionsEvent>();\n\n  /**\n   * An event that allows you to add, delete, or modify actions in a panel title.\n   * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n   */\n  public onGetPanelTitleActions: EventBase<SurveyModel, GetPanelTitleActionsEvent> = this.addEvent<SurveyModel, GetPanelTitleActionsEvent>();\n\n  /**\n   * An event that allows you to add, delete, or modify actions in a page title.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/modify-titles-of-survey-elements/ (linkStyle))\n   * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n   */\n  public onGetPageTitleActions: EventBase<SurveyModel, GetPageTitleActionsEvent> = this.addEvent<SurveyModel, GetPageTitleActionsEvent>();\n\n  /**\n   * An event that allows you to add, delete, or modify actions in the footer of a [Panel](https://surveyjs.io/form-library/documentation/panelmodel). This panel may belong to a [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model) or be a standalone survey element.\n   * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n   */\n  public onGetPanelFooterActions: EventBase<SurveyModel, GetPanelFooterActionsEvent> = this.addEvent<SurveyModel, GetPanelFooterActionsEvent>();\n  /**\n   * An event that allows you to add, delete, or modify actions in rows of a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/employee-information-form/ (linkStyle))\n   * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n   */\n  public onGetMatrixRowActions: EventBase<SurveyModel, GetMatrixRowActionsEvent> = this.addEvent<SurveyModel, GetMatrixRowActionsEvent>();\n\n  public onElementContentVisibilityChanged: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n\n  /**\n   * An event that is raised before an [Expression](https://surveyjs.io/form-library/documentation/api-reference/expression-model) question displays a value. Use this event to override the display value.\n   */\n  public onGetExpressionDisplayValue: EventBase<SurveyModel, GetExpressionDisplayValueEvent> = this.addEvent<SurveyModel, GetExpressionDisplayValueEvent>();\n\n  public onCheckSingleInputPerPageMode: EventBase<SurveyModel, CheckSingleInputPerPageModeEvent> = this.addEvent<SurveyModel, CheckSingleInputPerPageModeEvent>();\n\n  /**\n   * An event that is raised after the visibility of a popup is changed.\n   *\n   * This event can be raised for [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) and [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) questions and [Rating Scale](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) questions [rendered as drop-down menus](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#displayMode), and [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) questions that contain columns of the `\"dropdown\"` or `\"tagbox\"` [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType).\n   */\n  public onPopupVisibleChanged: EventBase<SurveyModel, PopupVisibleChangedEvent> = this.addEvent<SurveyModel, PopupVisibleChangedEvent>();\n\n  /**\n   * An event that is raised when users open a drop-down menu.\n   *\n   * This event can be raised for [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) and [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) questions, [Rating Scale](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) questions [rendered as drop-down menus](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#displayMode), and [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) questions that contain columns of the `\"dropdown\"` or `\"tagbox\"` [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType). Handle this event to change the drop-down menu type for specific questions or device types.\n   */\n  public onOpenDropdownMenu: EventBase<SurveyModel, OpenDropdownMenuEvent> = this.addEvent<SurveyModel, OpenDropdownMenuEvent>();\n\n  public onElementWrapperComponentName: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n  public onElementWrapperComponentData: EventBase<SurveyModel, any> = this.addEvent<SurveyModel, any>();\n  /**\n   * An event that is raised when users add a custom choice option to a [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) question. Handle this event to save the choice option in a data storage.\n   *\n   * For information on event handler parameters, refer to descriptions within the interface.\n   *\n   * To let users add their own choice options, enable the [`allowCustomChoices`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#allowCustomChoices) property for individual dropdown questions.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dropdown-custom-choice-options/ (linkStyle))\n   */\n  public onCreateCustomChoiceItem: EventBase<SurveyModel, CreateCustomChoiceItemEvent> = this.addEvent<SurveyModel, CreateCustomChoiceItemEvent>();\n  //#endregion\n\n  constructor(jsonObj: any = null, renderedElement: any = null) {\n    super();\n    this.onBeforeRunConstructor();\n    // if (DomDocumentHelper.isAvailable()) {\n    //   SurveyModel.stylesManager = new StylesManager();\n    // }\n    this.createHtmlLocString(\"completedHtml\", \"completingSurvey\");\n    this.createHtmlLocString(\"completedBeforeHtml\", \"completingSurveyBefore\", \"completed-before\");\n    this.createHtmlLocString(\"loadingHtml\", \"loadingSurvey\", \"loading\");\n    this.createLocalizableString(\"emptySurveyText\", this, true, \"emptySurvey\");\n    this.createLocalizableString(\"logo\", this, false);\n    this.createLocalizableString(\"startSurveyText\", this, false, true);\n    this.createLocalizableString(\"pagePrevText\", this, false, true);\n    this.createLocalizableString(\"pageNextText\", this, false, true);\n    this.createLocalizableString(\"completeText\", this, false, true);\n    this.createLocalizableString(\"previewText\", this, false, true);\n    this.createLocalizableString(\"editText\", this, false, true);\n    this.createLocalizableString(\"questionTitleTemplate\", this, true);\n\n    this.timerModelValue = new SurveyTimerModel(this);\n    this.timerModelValue.onTimerTick = (page: PageModel): void => {\n      this.doTimer(page);\n    };\n\n    this.createNewArray(\n      \"pages\",\n      (value: PageModel) => {\n        if (value.isReadyForCleanChangedCallback) {\n          value.isReadyForCleanChangedCallback();\n        }\n        this.doOnPageAdded(value);\n      },\n      (value: PageModel) => {\n        if (!value.isReadyForClean) {\n          value.isReadyForCleanChangedCallback = () => {\n            this.doOnPageRemoved(value);\n            value.isReadyForCleanChangedCallback = undefined;\n          };\n        } else {\n          this.doOnPageRemoved(value);\n        }\n      }\n    );\n    this.createNewArray(\"triggers\", (value: any) => {\n      value.setOwner(this);\n    });\n    this.createNewArray(\"calculatedValues\", (value: any) => {\n      value.setOwner(this);\n    });\n    this.createNewArray(\"completedHtmlOnCondition\", (value: any) => {\n      value.locOwner = this;\n    });\n    this.createNewArray(\"navigateToUrlOnCondition\", (value: any) => {\n      value.locOwner = this;\n    });\n    this.registerPropertyChangedHandlers([\"locale\"], () => {\n      this.onSurveyLocaleChanged();\n    });\n    this.registerPropertyChangedHandlers([\"firstPageIsStartPage\"], () => {\n      this.onFirstPageIsStartedChanged();\n    });\n    this.registerPropertyChangedHandlers([\"readOnly\"], () => {\n      this.onReadOnlyChanged();\n    });\n    this.registerPropertyChangedHandlers([\"progressBarType\"], () => {\n      this.updateProgressText();\n    });\n    this.registerPropertyChangedHandlers(\n      [\"questionStartIndex\", \"requiredMark\", \"questionTitlePattern\"],\n      () => {\n        this.resetVisibleIndexes();\n      }\n    );\n    this.registerPropertyChangedHandlers(\n      [\"isLoading\", \"isCompleted\", \"isCompletedBefore\", \"readOnly\", \"isStartedState\", \"currentPage\", \"isShowingPreview\"],\n      () => { this.updateState(); });\n    this.registerPropertyChangedHandlers([\"state\", \"currentPage\", \"showPreviewBeforeComplete\"],\n      () => { this.onStateAndCurrentPageChanged(); });\n    this.registerPropertyChangedHandlers([\"logo\", \"logoPosition\"], () => { this.resetHasLogo(); });\n    this.registerPropertyChangedHandlers([\"backgroundImage\"], () => { this.resetPropertyValue(\"renderBackgroundImage\"); });\n    this.registerPropertyChangedHandlers([\"backgroundImage\", \"backgroundOpacity\", \"backgroundImageFit\", \"fitToContainer\", \"backgroundImageAttachment\"], () => {\n      this.resetPropertyValue(\"backgroundImageStyle\");\n    });\n    this.registerPropertyChangedHandlers(\n      [\"showPrevButton\", \"showCompleteButton\"],\n      () => { this.updateButtonsVisibility(); });\n\n    this.onGetQuestionNumber.onCallbacksChanged = () => {\n      this.resetVisibleIndexes();\n    };\n    this.onGetPanelNumber.onCallbacksChanged = () => {\n      this.resetVisibleIndexes();\n    };\n    this.onGetProgressText.onCallbacksChanged = () => {\n      this.updateProgressText();\n    };\n    this.onTextMarkdown.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onProcessHtml.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onGetQuestionTitle.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onUpdatePageCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onUpdatePanelCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onUpdateQuestionCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onShowingChoiceItem.onCallbacksChanged = () => {\n      this.rebuildQuestionChoices();\n    };\n    this.locTitle.onStringChanged.add(() => this.resetPropertyValue(\"titleIsEmpty\"));\n    this.onBeforeCreating();\n    if (jsonObj) {\n      if (typeof jsonObj === \"string\" || jsonObj instanceof String) {\n        jsonObj = JSON.parse(jsonObj as string);\n      }\n      if (jsonObj && jsonObj.clientId) {\n        this.clientId = jsonObj.clientId;\n      }\n      this.fromJSON(jsonObj);\n      if (this.surveyId) {\n        this.loadSurveyFromService(this.surveyId, this.clientId);\n      }\n    }\n    this.onCreating();\n    if (!!renderedElement) {\n      this.render(renderedElement);\n    }\n    this.updateCss();\n    this.setCalculatedWidthModeUpdater();\n\n    this.notifier = new Notifier(this.css.saveData);\n    this.notifier.addAction(this.createTryAgainAction(), \"error\");\n\n    this.onPopupVisibleChanged.add((_, opt) => {\n      if (opt.visible) {\n        this.onScrollCallback = () => {\n          opt.popup.hide();\n        };\n      } else {\n        this.onScrollCallback = undefined;\n      }\n    });\n\n    this.layoutElements.push({\n      id: \"timerpanel\",\n      template: \"survey-timerpanel\",\n      component: \"sv-timerpanel\",\n      data: this.timerModel\n    });\n    this.layoutElements.push({\n      id: \"progress-buttons\",\n      component: \"sv-progress-buttons\",\n      getData: () => this.progressBar,\n      processResponsiveness: width => this.progressBar.processResponsiveness && this.progressBar.processResponsiveness(width)\n    });\n    this.layoutElements.push({\n      id: \"progress-questions\",\n      component: \"sv-progress-questions\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-pages\",\n      component: \"sv-progress-pages\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-correctquestions\",\n      component: \"sv-progress-correctquestions\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-requiredquestions\",\n      component: \"sv-progress-requiredquestions\",\n      data: this\n    });\n    this.addLayoutElement({\n      id: \"toc-navigation\",\n      component: \"sv-navigation-toc\",\n      getData: () => this.tocModel,\n      processResponsiveness: width => this.tocModel.updateStickyTOCSize(this.rootElement)\n    });\n    this.layoutElements.push({\n      id: \"buttons-navigation\",\n      component: \"sv-action-bar\",\n      getData: () => this.navigationBar\n    });\n\n  }\n  private tocModelValue: TOCModel;\n  private get tocModel(): TOCModel {\n    if (!this.tocModelValue) {\n      this.tocModelValue = new TOCModel(this);\n    }\n    return this.tocModelValue;\n  }\n  public get sjsVersion(): string {\n    return this.getPropertyValue(\"sjsVersion\");\n  }\n  public set sjsVersion(val: string) {\n    this.setPropertyValue(\"sjsVersion\", val);\n  }\n  processClosedPopup(question: IQuestion, popupModel: PopupModel<any>): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  protected createTryAgainAction(): IAction {\n    return <IAction>{\n      id: \"save-again\",\n      title: this.getLocalizationString(\"saveAgainButton\"),\n      action: () => {\n        if (this.isCompleted) {\n          this.saveDataOnComplete();\n        } else {\n          this.doComplete();\n        }\n      }\n    };\n  }\n  private createHtmlLocString(name: string, locName: string, reason?: string): void {\n    const res = this.createLocalizableString(name, this, false, locName);\n    if (reason) {\n      res.onGetTextCallback = (str: string): string => { return this.processHtml(str, reason); };\n    }\n  }\n  /**\n   * A list of errors in a survey JSON schema.\n   * @see ensureUniqueNames\n   */\n  public jsonErrors: Array<JsonError> = null;\n\n  public getType(): string {\n    return \"survey\";\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void {\n    if (name === \"questionsOnPageMode\") {\n      this.onQuestionsOnPageModeChanged(oldValue);\n    }\n  }\n\n  /**\n   * Returns an array of all pages in the survey.\n   *\n   * To get an array of only visible pages, use the [`visiblePages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePages) array.\n   * @see PageModel\n   */\n  public get pages(): Array<PageModel> {\n    return this.getPropertyValue(\"pages\");\n  }\n  renderCallback: () => void;\n  public render(element: any = null): void {\n    if (this.renderCallback) {\n      this.renderCallback();\n    }\n  }\n  public updateSurvey(newProps: any, oldProps?: any) {\n    for (var key in newProps) {\n      if (key == \"model\" || key == \"children\") continue;\n      if (key.indexOf(\"on\") == 0 && this[key] && this[key].add) {\n        let funcBody = newProps[key];\n        let func = function (sender: any, options: any) {\n          funcBody(sender, options);\n        };\n        this[key].add(func);\n      } else {\n        this[key] = newProps[key];\n      }\n    }\n\n    if (newProps && newProps.data)\n      this.onValueChanged.add((sender, options) => {\n        newProps.data[options.name] = options.value;\n      });\n  }\n  public getCss(): any {\n    return this.css;\n  }\n  private cssValue: any = null;\n  private updateCompletedPageCss() {\n    this.containerCss = this.css.container;\n    this.completedCss = new CssClassBuilder().append(this.css.body)\n      .append(this.css.completedPage).toString(); // for completed page\n    this.completedBeforeCss = new CssClassBuilder()\n      .append(this.css.body)\n      .append(this.css.completedBeforePage)\n      .toString();\n    this.loadingBodyCss = new CssClassBuilder()\n      .append(this.css.body)\n      .append(this.css.bodyLoading)\n      .toString();\n  }\n  private updateCss() {\n    this.rootCss = this.getRootCss();\n    this.updateNavigationCss();\n    this.updateCompletedPageCss();\n    this.updateWrapperFormCss();\n  }\n  /**\n   * Gets or sets an object in which keys are UI elements and values are CSS classes applied to them.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   */\n  public get css(): any {\n    if (!this.cssValue) {\n      this.cssValue = {};\n      this.copyCssClasses(this.cssValue, surveyCss.getCss());\n    }\n    return this.cssValue;\n  }\n  public set css(value: any) {\n    this.setCss(value);\n  }\n\n  public setCss(value: any, needMerge = true) {\n    if (needMerge) {\n      this.mergeValues(value, this.css);\n    } else {\n      this.cssValue = value;\n    }\n    this.updateElementCss(false);\n  }\n\n  public get cssTitle(): string {\n    return this.css.title;\n  }\n  public get cssNavigationComplete() {\n    return this.getNavigationCss(\n      this.cssSurveyNavigationButton,\n      this.css.navigation.complete\n    );\n  }\n  public get cssNavigationPreview() {\n    return this.getNavigationCss(\n      this.cssSurveyNavigationButton,\n      this.css.navigation.preview\n    );\n  }\n  public get cssNavigationEdit() {\n    return this.getNavigationCss(\n      this.css.navigationButton,\n      this.css.navigation.edit\n    );\n  }\n  public get cssNavigationPrev() {\n    return this.getNavigationCss(\n      this.cssSurveyNavigationButton,\n      this.css.navigation.prev\n    );\n  }\n  public get cssNavigationStart() {\n    return this.getNavigationCss(\n      this.cssSurveyNavigationButton,\n      this.css.navigation.start\n    );\n  }\n  public get cssNavigationNext() {\n    return this.getNavigationCss(\n      this.cssSurveyNavigationButton,\n      this.css.navigation.next\n    );\n  }\n  private get cssSurveyNavigationButton(): string {\n    return new CssClassBuilder().append(this.css.navigationButton).append(this.css.bodyNavigationButton).toString();\n  }\n  public get bodyCss(): string {\n    return new CssClassBuilder().append(this.css.body)\n      .append(this.css.bodyWithTimer, this.showTimer && this.state === \"running\")\n      .append(this.css.body + \"--\" + this.calculatedWidthMode).toString();\n  }\n  public get bodyContainerCss(): string {\n    return this.css.bodyContainer;\n  }\n  @property() completedCss: string;\n  @property() completedBeforeCss: string;\n  @property() loadingBodyCss: string;\n  @property() containerCss: string;\n  @property({ onSet: (newValue, target: SurveyModel) => { target.updateCss(); } }) fitToContainer: boolean;\n  /**\n   * @deprecated Use the [`headerView`](https://surveyjs.io/form-library/documentation/api-reference/itheme#headerView) property within a theme instead.\n   */\n  @property({\n    onSet: (newValue, target: SurveyModel) => {\n      if (newValue === \"basic\") {\n        target.removeLayoutElement(\"advanced-header\");\n      } else {\n        const layoutElement = target.findLayoutElement(\"advanced-header\");\n        if (!layoutElement) {\n          const advHeader = new Cover();\n          target.insertAdvancedHeader(advHeader);\n        }\n      }\n    }\n  }) headerView: \"advanced\" | \"basic\";\n\n  protected insertAdvancedHeader(advHeader: Cover): void {\n    advHeader.survey = this;\n    this.layoutElements.push({\n      id: \"advanced-header\",\n      container: \"header\",\n      component: \"sv-header\",\n      index: -100,\n      data: advHeader,\n      processResponsiveness: width => advHeader.processResponsiveness()\n    });\n  }\n\n  /**\n   * Specifies whether the [Complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page) should display the [survey header](https://surveyjs.io/form-library/examples/brand-your-survey-header/).\n   *\n   * Possible values:\n   *\n   * - `true` - Displays the survey header on the Complete page.\n   * - `false` - Hides the header when users reach the Complete page.\n   * - `\"auto\"` (default) - Displays a header with the basic view, but hides a header with the advanced view (see the [`headerView`](https://surveyjs.io/form-library/documentation/api-reference/itheme#headerView) property description).\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   */\n  public showHeaderOnCompletePage: true | false | \"auto\" = \"auto\";\n\n  private getNavigationCss(main: string, btn: string) {\n    return new CssClassBuilder().append(main)\n      .append(btn).toString();\n  }\n  private lazyRenderEnabledValue: boolean;\n  @property() showBrandInfo: boolean;\n  @property() enterKeyAction: \"moveToNextEditor\" | \"loseFocus\" | \"default\";\n  /**\n   * Specifies whether to enable lazy rendering.\n   *\n   * In default mode, a survey renders the entire current page. With lazy rendering, the survey renders the page gradually as a user scrolls it. This helps reduce survey startup time and optimizes large surveys for low-end devices.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-lazy/ (linkStyle))\n   * @see [settings.lazyRender](https://surveyjs.io/form-library/documentation/api-reference/settings#lazyRender)\n   */\n  public get lazyRenderEnabled(): boolean {\n    return this.lazyRenderEnabledValue === true;\n  }\n  public set lazyRenderEnabled(val: boolean) {\n    if (this.lazyRenderEnabled === val) return;\n    this.lazyRenderEnabledValue = val;\n    const page: PageModel = this.currentPage;\n    if (!!page) {\n      page.updateRows();\n    }\n  }\n  /**\n   * @deprecated Use the [`lazyRenderEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#lazyRenderEnabled) property instead.\n   */\n  public get lazyRendering(): boolean {\n    return this.lazyRenderEnabled;\n  }\n  public set lazyRendering(val: boolean) {\n    this.lazyRenderEnabled = val;\n  }\n  public get isLazyRendering(): boolean {\n    return this.lazyRenderEnabled || settings.lazyRender.enabled;\n  }\n  @property() lazyRenderFirstBatchSizeValue: number;\n  public get lazyRenderFirstBatchSize(): number {\n    return this.lazyRenderFirstBatchSizeValue || settings.lazyRender.firstBatchSize;\n  }\n  public set lazyRenderFirstBatchSize(val: number) {\n    this.lazyRenderFirstBatchSizeValue = val;\n  }\n\n  protected _isLazyRenderingSuspended = false;\n  public get isLazyRenderingSuspended(): boolean {\n    return this._isLazyRenderingSuspended;\n  }\n  protected suspendLazyRendering(): void {\n    if (!this.isLazyRendering) return;\n    this._isLazyRenderingSuspended = true;\n  }\n  protected releaseLazyRendering(): void {\n    if (!this.isLazyRendering) return;\n    this._isLazyRenderingSuspended = false;\n  }\n  private updateLazyRenderingRowsOnRemovingElements() {\n    if (!this.isLazyRendering) return;\n    var page = this.currentPage;\n    if (!!page) {\n      const htmlElement = (this.rootElement || this.creator?.rootElement)?.querySelector(`#${page.id}`);\n      activateLazyRenderingChecks(htmlElement);\n    }\n  }\n  /**\n   * A list of triggers in the survey.\n   *\n   * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n   * @see runTriggers\n   * @see onTriggerExecuted\n   */\n  public get triggers(): Array<SurveyTrigger> {\n    return this.getPropertyValue(\"triggers\");\n  }\n  public set triggers(val: Array<SurveyTrigger>) {\n    this.setPropertyValue(\"triggers\", val);\n  }\n  /**\n   * An array of [calculated values](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#calculated-values).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/custom-variables-for-background-form-calculations/ (linkStyle))\n   */\n  public get calculatedValues(): Array<CalculatedValue> {\n    return this.getPropertyValue(\"calculatedValues\");\n  }\n  public set calculatedValues(val: Array<CalculatedValue>) {\n    this.setPropertyValue(\"calculatedValues\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public get surveyId(): string {\n    return this.getPropertyValue(\"surveyId\", \"\");\n  }\n  public set surveyId(val: string) {\n    this.setPropertyValue(\"surveyId\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public get surveyPostId(): string {\n    return this.getPropertyValue(\"surveyPostId\", \"\");\n  }\n  public set surveyPostId(val: string) {\n    this.setPropertyValue(\"surveyPostId\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public get clientId(): string {\n    return this.getPropertyValue(\"clientId\", \"\");\n  }\n  public set clientId(val: string) {\n    this.setPropertyValue(\"clientId\", val);\n  }\n  /**\n   * A cookie name used to save information about survey completion.\n   *\n   * When this property has a value, the survey creates a cookie with the specified name on completion. This cookie helps ensure that users do not pass the same survey twice. On the second run, they will see the [Completed Before page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completedBeforeHtml).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-prevent-duplicate-form-submissions/ (linkStyle))\n   * @see clientId\n   */\n  public get cookieName(): string {\n    return this.getPropertyValue(\"cookieName\", \"\");\n  }\n  public set cookieName(val: string) {\n    this.setPropertyValue(\"cookieName\", val);\n  }\n  /**\n   * Specifies whether to save survey results when respondents switch between pages. Handle the [`onPartialSend`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onPartialSend) event to implement the save operation.\n   *\n   * Alternatively, you can handle the [`onCurrentPageChanged`](#onCurrentPageChanged) and [`onValueChanged`](#onValueChanged) events, as shown in the following demo: [Continue an Incomplete Survey](https://surveyjs.io/form-library/examples/survey-editprevious/).\n   */\n  public get partialSendEnabled(): boolean {\n    return this.getPropertyValue(\"partialSendEnabled\");\n  }\n  public set partialSendEnabled(val: boolean) {\n    this.setPropertyValue(\"partialSendEnabled\", val);\n  }\n  /**\n   * @deprecated Use the [`partialSendEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#partialSendEnabled) property instead.\n   */\n  public get sendResultOnPageNext(): boolean {\n    return this.partialSendEnabled;\n  }\n  public set sendResultOnPageNext(val: boolean) {\n    this.partialSendEnabled = val;\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public get surveyShowDataSaving(): boolean {\n    return this.getPropertyValue(\"surveyShowDataSaving\");\n  }\n  public set surveyShowDataSaving(val: boolean) {\n    this.setPropertyValue(\"surveyShowDataSaving\", val);\n  }\n  /**\n   * Specifies whether to focus the first question on the page on survey startup or when users switch between pages.\n   *\n   * Default value: `false` in v1.9.114 and later, `true` in earlier versions\n   * @see autoFocusFirstError\n   * @see focusFirstQuestion\n   * @see focusQuestion\n   */\n  public get autoFocusFirstQuestion(): boolean {\n    return this.getPropertyValue(\"autoFocusFirstQuestion\");\n  }\n  public set autoFocusFirstQuestion(val: boolean) {\n    this.setPropertyValue(\"autoFocusFirstQuestion\", val);\n  }\n  /**\n   * @deprecated Use the [`autoFocusFirstQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoFocusFirstQuestion) property instead.\n   */\n  public get focusFirstQuestionAutomatic(): boolean {\n    return this.autoFocusFirstQuestion;\n  }\n  public set focusFirstQuestionAutomatic(val: boolean) {\n    this.autoFocusFirstQuestion = val;\n  }\n  /**\n   * Specifies whether to focus the first question with a validation error on the current page.\n   *\n   * Default value: `true`\n   * @see validate\n   * @see autoFocusFirstQuestion\n   */\n  public get autoFocusFirstError(): boolean {\n    return this.getPropertyValue(\"autoFocusFirstError\");\n  }\n  public set autoFocusFirstError(val: boolean) {\n    this.setPropertyValue(\"autoFocusFirstError\", val);\n  }\n  /**\n   * @deprecated Use the [`autoFocusFirstError`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoFocusFirstError) property instead.\n   */\n  public get focusOnFirstError(): boolean {\n    return this.autoFocusFirstError;\n  }\n  public set focusOnFirstError(val: boolean) {\n    this.autoFocusFirstError = val;\n  }\n  /**\n   * Gets or sets the visibility of the Start, Next, Previous, and Complete navigation buttons.\n   *\n   * Possible values:\n   *\n   * - `true` (default) - Displays the navigation buttons.\n   * - `false` - Hides the navigation buttons. This setting may be useful if you [implement custom external navigation](https://surveyjs.io/form-library/examples/external-form-navigation-system/).\n   * @see navigationButtonsLocation\n   * @see autoAdvanceEnabled\n   * @see showPrevButton\n   * @see showCompleteButton\n   */\n  public get showNavigationButtons(): boolean | any {\n    return this.getPropertyValue(\"showNavigationButtons\");\n  }\n  public set showNavigationButtons(val: boolean | any) {\n    // if (val === true || val === undefined) {\n    //   val = \"bottom\";\n    // }\n    // if (val === false) {\n    //   val = \"none\";\n    // }\n    if (val === \"both\") {\n      val === \"topBottom\";\n    }\n    if (val === true || val === false) {\n      this.setPropertyValue(\"showNavigationButtons\", val);\n    } else if (val === \"none\") {\n      this.setPropertyValue(\"showNavigationButtons\", false);\n    } else if ([\"top\", \"bottom\", \"both\", \"topBottom\"].indexOf(val) > -1) {\n      this.setPropertyValue(\"showNavigationButtons\", true);\n      this.navigationButtonsLocation = val;\n    }\n  }\n  /**\n   * Gets or sets the position of the Start, Next, Previous, and Complete navigation buttons. Applies only if the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showNavigationButtons) property is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"bottom\"` (default) - Displays the navigation buttons below survey content.\n   * - `\"top\"` - Displays the navigation buttons above survey content.\n   * - `\"topBottom\"` - Displays the navigation buttons above and below survey content.\n   * @see autoAdvanceEnabled\n   * @see showPrevButton\n   * @see showCompleteButton\n   */\n  public get navigationButtonsLocation(): string | any {\n    return this.getPropertyValue(\"navigationButtonsLocation\");\n  }\n  public set navigationButtonsLocation(val: string | any) {\n    this.setPropertyValue(\"navigationButtonsLocation\", val);\n  }\n  /**\n   * Specifies whether to display the Previous button. Set this property to `false` if respondents should not move backward along the survey.\n   * @see showNavigationButtons\n   * @see showCompleteButton\n   */\n  public get showPrevButton(): boolean {\n    return this.getPropertyValue(\"showPrevButton\");\n  }\n  public set showPrevButton(val: boolean) {\n    this.setPropertyValue(\"showPrevButton\", val);\n  }\n  /**\n   * Specifies whether to display the Complete button. Set this property to `false` if respondents should not complete the survey.\n   * @see showNavigationButtons\n   * @see showPrevButton\n   */\n  public get showCompleteButton(): boolean {\n    return this.getPropertyValue(\"showCompleteButton\", true);\n  }\n  public set showCompleteButton(val: boolean) {\n    this.setPropertyValue(\"showCompleteButton\", val);\n  }\n  /**\n   * Gets or sets the visibility of the table of contents.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/toc-feature/ (linkStyle))\n   * @see tocLocation\n   */\n  public get showTOC(): boolean {\n    return this.getPropertyValue(\"showTOC\");\n  }\n  public set showTOC(val: boolean) {\n    this.setPropertyValue(\"showTOC\", val);\n  }\n  /**\n   * Gets or sets the position of the table of contents. Applies only when the table of contents is visible.\n   *\n   * Possible values:\n   *\n   * - `\"left\"` (default)\n   * - `\"right\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/toc-feature/ (linkStyle))\n   * @see showTOC\n   */\n  public get tocLocation(): \"left\" | \"right\" {\n    return this.getPropertyValue(\"tocLocation\");\n  }\n  public set tocLocation(val: \"left\" | \"right\") {\n    this.setPropertyValue(\"tocLocation\", val);\n  }\n  /**\n   * Specifies whether to display the [survey title](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/brand-your-survey-header/ (linkStyle))\n   * @see title\n   */\n  public get showTitle(): boolean {\n    return this.getPropertyValue(\"showTitle\");\n  }\n  public set showTitle(val: boolean) {\n    this.setPropertyValue(\"showTitle\", val);\n  }\n  /**\n   * Specifies whether to display [page titles](https://surveyjs.io/form-library/documentation/api-reference/page-model#title).\n   */\n  public get showPageTitles(): boolean {\n    return this.getPropertyValue(\"showPageTitles\");\n  }\n  public set showPageTitles(val: boolean) {\n    this.setPropertyValue(\"showPageTitles\", val);\n  }\n  /**\n   * Specifies whether to show the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   * @see onComplete\n   * @see navigateToUrl\n   */\n  public get showCompletePage(): boolean {\n    return this.getPropertyValue(\"showCompletePage\");\n  }\n  public set showCompletePage(val: boolean) {\n    this.setPropertyValue(\"showCompletePage\", val);\n  }\n  /**\n   * @deprecated Use the [`showCompletePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showCompletePage) property instead.\n   */\n  public get showCompletedPage(): boolean { return this.showCompletePage; }\n  public set showCompletedPage(val: boolean) { this.showCompletePage = val; }\n  /**\n   * A URL to which respondents should be navigated after survey completion.\n   * @see onNavigateToUrl\n   * @see navigateToUrlOnCondition\n   */\n  public get navigateToUrl(): string {\n    return this.getPropertyValue(\"navigateToUrl\");\n  }\n  public set navigateToUrl(val: string) {\n    this.setPropertyValue(\"navigateToUrl\", val);\n  }\n  /**\n   * An array of objects that allows you to navigate respondents to different URLs after survey completion.\n   *\n   * Each object should include the [`expression`](https://surveyjs.io/form-library/documentation/api-reference/urlconditionitem#url) and [`url`](https://surveyjs.io/form-library/documentation/api-reference/urlconditionitem#expression) properties. When `expression` evaluates to `true`, the survey navigates to the corresponding `url`. Refer to the following help topic for more information about expressions: [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   * @see onNavigateToUrl\n   * @see navigateToUrl\n   */\n  public get navigateToUrlOnCondition(): Array<UrlConditionItem> {\n    return this.getPropertyValue(\"navigateToUrlOnCondition\");\n  }\n  public set navigateToUrlOnCondition(val: Array<UrlConditionItem>) {\n    this.setPropertyValue(\"navigateToUrlOnCondition\", val);\n  }\n\n  public getNavigateToUrl(): string {\n    var item = this.getExpressionItemOnRunCondition(\n      this.navigateToUrlOnCondition\n    );\n    var url = !!item ? (<UrlConditionItem>item).url : this.navigateToUrl;\n    if (!!url) {\n      url = this.processText(url, false);\n    }\n    return url;\n  }\n  private navigateTo() {\n    var url = this.getNavigateToUrl();\n    var options = { url: url, allow: true };\n    this.onNavigateToUrl.fire(this, options);\n    if (!options.url || !options.allow) return;\n    navigateToUrl(options.url);\n  }\n  /**\n   * Specifies one or multiple characters that designate required questions.\n   *\n   * Default value: `*`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/modify-question-title/ (linkStyle))\n   */\n  public get requiredMark(): string {\n    return this.getPropertyValue(\"requiredMark\");\n  }\n  public set requiredMark(val: string) {\n    this.setPropertyValue(\"requiredMark\", val);\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#requiredMark) property instead.\n   */\n  public get requiredText(): string {\n    return this.requiredMark;\n  }\n  public set requiredText(val: string) {\n    this.requiredMark = val;\n  }\n  /**\n   * Specifies whether to hide validation errors thrown by the Required validation in the UI.\n   *\n   * [Built-In Client-Side Validators](https://surveyjs.io/form-library/documentation/data-validation#built-in-client-side-validators (linkStyle))\n   * @see validationEnabled\n   * @see validationAllowSwitchPages\n   */\n  public hideRequiredErrors: boolean = false;\n  private beforeSettingQuestionErrors(question: Question, errors: Array<SurveyError>): void {\n    this.makeRequiredErrorsInvisible(errors);\n    this.onSettingQuestionErrors.fire(this, {\n      question: question,\n      errors: errors,\n    });\n  }\n  private makeRequiredErrorsInvisible(errors: Array<SurveyError>) {\n    if (!this.hideRequiredErrors) return;\n    for (var i = 0; i < errors.length; i++) {\n      var erType = errors[i].getErrorType();\n      if (erType == \"required\" || erType == \"requireoneanswer\") {\n        errors[i].visible = false;\n      }\n    }\n  }\n  /**\n   * Specifies the initial number or letter from which to start question numbering.\n   *\n   * [Question Numbers](https://surveyjs.io/form-library/documentation/design-survey/configure-question-titles#question-numbers (linkStyle))\n   */\n  public get questionStartIndex(): string {\n    return this.getPropertyValue(\"questionStartIndex\", \"\");\n  }\n  public set questionStartIndex(val: string) {\n    this.setPropertyValue(\"questionStartIndex\", val);\n  }\n  /**\n   * Specifies whether to store the \"Other\" option response in a separate property.\n   *\n   * Default value: `true`\n   *\n   * Respondents can leave comments when they select \"Other\" in choice-based questions, such as Dropdown or Checkboxes. Comment values are saved in a separate property. The property name is composed of the question `name` and [`commentSuffix`](#commentSuffix). However, you can use the question `name` as a key to store the comment value instead. Disable the `storeOthersAsComment` property in this case.\n   * @see maxCommentLength\n   */\n  public get storeOthersAsComment(): boolean {\n    return this.getPropertyValue(\"storeOthersAsComment\");\n  }\n  public set storeOthersAsComment(val: boolean) {\n    this.setPropertyValue(\"storeOthersAsComment\", val);\n  }\n  /**\n   * Specifies the maximum text length in textual questions ([Single-Line Input](https://surveyjs.io/form-library/examples/text-entry-question/), [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/), [Multiple Textboxes](https://surveyjs.io/form-library/examples/multiple-text-box-question/)), measured in characters.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * You can override this setting for individual questions if you specify their [`maxLength`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maxLength) property.\n   * @see maxCommentLength\n   */\n  public get maxTextLength(): number {\n    return this.getPropertyValue(\"maxTextLength\");\n  }\n  public set maxTextLength(val: number) {\n    this.setPropertyValue(\"maxTextLength\", val);\n  }\n  /**\n   * Specifies the maximum text length for question comments. Applies to questions with the [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/question#showCommentArea) or [`showOtherItem`](https://surveyjs.io/form-library/documentation/api-reference/question#showOtherItem) property set to `true`.\n   *\n   * Default value: 0 (unlimited)\n   * @see maxTextLength\n   */\n  public get maxCommentLength(): number {\n    return this.getPropertyValue(\"maxCommentLength\");\n  }\n  public set maxCommentLength(val: number) {\n    this.setPropertyValue(\"maxCommentLength\", val);\n  }\n  /**\n   * @deprecated Use the [`maxCommentLength`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#maxCommentLength) property instead.\n   */\n  public get maxOthersLength(): number {\n    return this.maxCommentLength;\n  }\n  public set maxOthersLength(val: number) {\n    this.maxCommentLength = val;\n  }\n\n  /**\n   * Specifies whether the survey switches to the next page automatically after a user answers all questions on the current page.\n   *\n   * Default value: `false`\n   *\n   * If you enable this property, the survey is also completed automatically. Set the [`autoAdvanceAllowComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceAllowComplete) property to `false` if you want to disable this behavior.\n   *\n   * > If any of the following questions is answered last, the survey does not switch to the next page: Checkboxes, Yes/No (Boolean) (rendered as Checkbox), Long Text, Signature, Image Picker (with Multi Select), File Upload, Single-Select Matrix (not all rows are answered), Dynamic Matrix, Dynamic Panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/automatically-move-to-next-page-if-answer-selected/ (linkStyle))\n   * @see [`settings.autoAdvanceDelay`](https://surveyjs.io/form-library/documentation/api-reference/settings#autoAdvanceDelay)\n   */\n  public get autoAdvanceEnabled(): boolean {\n    return this.getPropertyValue(\"autoAdvanceEnabled\");\n  }\n  public set autoAdvanceEnabled(val: boolean) {\n    this.setPropertyValue(\"autoAdvanceEnabled\", val);\n  }\n  /**\n   * @deprecated Use the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property instead.\n   */\n  public get goNextPageAutomatic(): boolean {\n    return this.autoAdvanceEnabled;\n  }\n  public set goNextPageAutomatic(val: boolean) {\n    this.autoAdvanceEnabled = val;\n  }\n  /**\n   * Specifies whether to complete the survey automatically after a user answers all questions on the last page. Applies only if the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property is `true`.\n   *\n   * Default value: `true`\n   * @see [`settings.autoAdvanceDelay`](https://surveyjs.io/form-library/documentation/api-reference/settings#autoAdvanceDelay)\n   */\n  public get autoAdvanceAllowComplete(): boolean {\n    return this.getPropertyValue(\"autoAdvanceAllowComplete\");\n  }\n  public set autoAdvanceAllowComplete(val: boolean) {\n    this.setPropertyValue(\"autoAdvanceAllowComplete\", val);\n  }\n  /**\n   * @deprecated Use the [`autoAdvanceAllowComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceAllowComplete) property instead.\n   */\n  public get allowCompleteSurveyAutomatic(): boolean {\n    return this.autoAdvanceAllowComplete;\n  }\n  public set allowCompleteSurveyAutomatic(val: boolean) {\n    this.autoAdvanceAllowComplete = val;\n  }\n  /**\n   * Specifies when the survey validates answers.\n   *\n   * Possible values:\n   *\n   * - `\"onNextPage\"` (default) - Triggers validation before the survey is switched to the next page or completed.\n   * - `\"onValueChanged\"` - Triggers validation each time a question value is changed. [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/)\n   * - `\"onComplete\"` - Triggers validation when a user clicks the Complete button. If previous pages contain errors, the survey switches to the page with the first error.\n   *\n   * > In SurveyJS Form Library v1.12.5 and earlier, the `\"onValueChanged\"` mode doesn't work with date input fields because of the way browsers process date values. In most browsers, the value is considered changed as soon as a user starts entering the date in a text input field. This means that a user may only enter the day without having the chance to enter the month and year before validation is triggered. For this reason, date input fields are validated before the survey is switched to the next page or completed. Starting with v1.12.6, `\"onValueChanged\"` works for date input fields as well as for input fields of other types.\n   *\n   * Refer to the following help topic for more information: [Data Validation](https://surveyjs.io/form-library/documentation/data-validation).\n   * @see validationEnabled\n   * @see validationAllowSwitchPages\n   * @see validationAllowComplete\n   * @see validate\n   */\n  public get checkErrorsMode(): string {\n    return this.getPropertyValue(\"checkErrorsMode\");\n  }\n  public set checkErrorsMode(val: string) {\n    this.setPropertyValue(\"checkErrorsMode\", val);\n  }\n  /**\n   * Specifies whether to trigger validation when a user focuses on an empty input field and then leaves it without making any changes. Applies only if [`checkErrorsMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#checkErrorsMode) is set to `\"onValueChanged\"`.\n   *\n   * Default value: `false`\n   *\n   * This property changes validation behavior for the following question types:\n   *\n   * - [Single-Line Input](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [Long Text](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * @see validationEnabled\n   * @see validationAllowSwitchPages\n   * @see validationAllowComplete\n   * @see validate\n   */\n  public get validateVisitedEmptyFields(): boolean {\n    return this.getPropertyValue(\"validateVisitedEmptyFields\");\n  }\n  public set validateVisitedEmptyFields(val: boolean) {\n    this.setPropertyValue(\"validateVisitedEmptyFields\", val);\n  }\n  getValidateVisitedEmptyFields(): boolean { return this.validateVisitedEmptyFields && this.isValidateOnValueChange; }\n  /**\n   * Specifies whether to increase the height of [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/) questions and other text areas to accommodate multi-line text content.\n   *\n   * Default value: `false`\n   *\n   * You can override this property for individual Long Text questions: [`autoGrow`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#autoGrow).\n   * @see allowResizeComment\n   * @see commentAreaRows\n   */\n  public get autoGrowComment(): boolean {\n    return this.getPropertyValue(\"autoGrowComment\");\n  }\n  public set autoGrowComment(val: boolean) {\n    this.setPropertyValue(\"autoGrowComment\", val);\n  }\n  /**\n   * Specifies whether to display a resize handle for [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/) questions and other text areas intended for multi-line text content.\n   *\n   * Default value: `true`\n   *\n   * You can override this property for individual Long Text questions: [`allowResize`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#allowResize).\n   * @see autoGrowComment\n   * @see commentAreaRows\n   */\n  public get allowResizeComment(): boolean {\n    return this.getPropertyValue(\"allowResizeComment\");\n  }\n  public set allowResizeComment(val: boolean) {\n    this.setPropertyValue(\"allowResizeComment\", val);\n  }\n\n  /**\n   * Specifies the visible height of comment areas, measured in lines. Applies to the questions with the [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/question#showCommentArea) or [`showOtherItem`](https://surveyjs.io/form-library/documentation/api-reference/question#showOtherItem) property enabled.\n   *\n   * Default value: 2\n   *\n   * The value of this property is passed on to the `rows` attribute of the underlying `<textarea>` element.\n   * @see autoGrowComment\n   * @see allowResizeComment\n   */\n  public get commentAreaRows(): number {\n    return this.getPropertyValue(\"commentAreaRows\");\n  }\n  public set commentAreaRows(val: number) {\n    this.setPropertyValue(\"commentAreaRows\", val);\n  }\n  /**\n   * Specifies when to update the question value in questions with a text input field.\n   *\n   * Possible values:\n   *\n   * - `\"onBlur\"` (default) - Updates the value after the input field loses focus.\n   * - `\"onTyping\"` - Updates the value on every key press.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   *\n   * > Do not use the `\"onTyping\"` mode if your survey contains many expressions. Expressions are re-evaluated each time a question value is changed. In `\"onTyping\"` mode, the question value changes frequently. This may cause performance degradation.\n   *\n   * You can override this setting for individual questions: [`textUpdateMode`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#textUpdateMode).\n   */\n  public get textUpdateMode(): string {\n    return this.getPropertyValue(\"textUpdateMode\");\n  }\n  public set textUpdateMode(val: string) {\n    this.setPropertyValue(\"textUpdateMode\", val);\n  }\n  /**\n   * Specifies when to remove values of invisible questions from [survey results](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data).\n   *\n   * Possible values:\n   *\n   * - `\"onComplete\"` (default) - Clears invisible question values when the survey is complete.\n   * - `\"onHidden\"` - Clears a question value when the question becomes invisible. If the question is invisible initially, its value is removed on survey completion.\n   * - `\"onHiddenContainer\"` - Clears a question value when the question or its containter (page or panel) becomes invisible. If the question is invisible initially, its value is removed on survey completion.\n   * - `\"none\"` - Keeps invisible values in survey results.\n   * - `true` - Equivalent to `\"onComplete\"`.\n   * - `false` - Equivalent to `\"none\"`.\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   * @see onComplete\n   */\n  public get clearInvisibleValues(): any {\n    return this.getPropertyValue(\"clearInvisibleValues\");\n  }\n  public set clearInvisibleValues(val: any) {\n    if (val === true) val = \"onComplete\";\n    if (val === false) val = \"none\";\n    this.setPropertyValue(\"clearInvisibleValues\", val);\n  }\n  /**\n   * Removes values that cannot be assigned to a question, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values that fail validation. Call the [`validate()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#validate) method to validate newly assigned values.\n   * @param removeNonExistingRootKeys Pass `true` to remove values that do not correspond to any question or [calculated value](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#calculated-values).\n   */\n  public clearIncorrectValues(removeNonExistingRootKeys: boolean = false): void {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].clearIncorrectValues();\n    }\n    if (!removeNonExistingRootKeys) return;\n    var data = this.data;\n    var hasChanges = false;\n    for (var key in data) {\n      if (!!this.getQuestionByValueName(key)) continue;\n      if (\n        this.iscorrectValueWithPostPrefix(key, settings.commentSuffix) ||\n        this.iscorrectValueWithPostPrefix(key, settings.matrix.totalsSuffix)\n      )\n        continue;\n      var calcValue = this.getCalculatedValueByName(key);\n      if (!!calcValue && calcValue.includeIntoResult) continue;\n      hasChanges = true;\n      delete data[key];\n    }\n    if (hasChanges) {\n      this.data = data;\n    }\n  }\n  private iscorrectValueWithPostPrefix(\n    key: string,\n    postPrefix: string\n  ): boolean {\n    if (key.indexOf(postPrefix) !== key.length - postPrefix.length)\n      return false;\n    return !!this.getQuestionByValueName(\n      key.substring(0, key.indexOf(postPrefix))\n    );\n  }\n  /**\n   * Specifies whether to keep values that cannot be assigned to questions, for example, choices unlisted in the `choices` array.\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   * @see clearIncorrectValues\n   */\n  public get keepIncorrectValues(): boolean {\n    return this.getPropertyValue(\"keepIncorrectValues\");\n  }\n  public set keepIncorrectValues(val: boolean) {\n    this.setPropertyValue(\"keepIncorrectValues\", val);\n  }\n  /**\n   * Specifies the survey's locale.\n   *\n   * Default value: `\"\"` (a default locale is used)\n   *\n   * [Localization & Globalization help topic](https://surveyjs.io/form-library/documentation/survey-localization (linkStyle))\n   *\n   * [Survey Localization demo](https://surveyjs.io/form-library/examples/survey-localization/ (linkStyle))\n   */\n  public get locale(): string {\n    return this.getPropertyValueWithoutDefault(\"locale\") || surveyLocalization.currentLocale;\n  }\n  public set locale(value: string) {\n    if (value === surveyLocalization.defaultLocale && !surveyLocalization.currentLocale) {\n      value = \"\";\n    }\n    this.setPropertyValue(\"locale\", value);\n  }\n  private onSurveyLocaleChanged(): void {\n    this.notifyElementsOnAnyValueOrVariableChanged(\"locale\");\n    this.localeChanged();\n    this.onLocaleChangedEvent.fire(this, this.locale);\n  }\n  public get localeDir(): string {\n    return surveyLocalization.localeDirections[this.locale];\n  }\n  /**\n   * Returns an array of locales whose translations are used in the survey.\n   *\n   * [Localization & Globalization help topic](https://surveyjs.io/form-library/documentation/survey-localization (linkStyle))\n   *\n   * [Survey Localization demo](https://surveyjs.io/form-library/examples/survey-localization/ (linkStyle))\n   */\n  public getUsedLocales(): Array<string> {\n    var locs = new Array<string>();\n    this.addUsedLocales(locs);\n    //Replace the default locale with the real one\n    var index = locs.indexOf(\"default\");\n    if (index > -1) {\n      var defaultLoc = surveyLocalization.defaultLocale;\n      //Remove the defaultLoc\n      var defIndex = locs.indexOf(defaultLoc);\n      if (defIndex > -1) {\n        locs.splice(defIndex, 1);\n      }\n      index = locs.indexOf(\"default\");\n      locs[index] = defaultLoc;\n    }\n    return locs;\n  }\n  public localeChanged(): void {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].localeChanged();\n    }\n  }\n  //ILocalizableOwner\n  getLocale(): string {\n    return this.locale;\n  }\n  public locStrsChanged(): void {\n    if (this.isClearingUnsedValues) return;\n    super.locStrsChanged();\n    if (!this.currentPage) return;\n    if (this.isDesignMode) {\n      this.pages.forEach(page => page.locStrsChanged());\n    } else {\n      var page = this.activePage;\n      if (!!page) {\n        page.locStrsChanged();\n      }\n      const visPages = this.visiblePages;\n      for (var i = 0; i < visPages.length; i++) {\n        visPages[i].navigationLocStrChanged();\n      }\n    }\n    if (!this.isStartPageActive) {\n      this.updateProgressText();\n    }\n    if (!!this.navigationBarValue) {\n      this.navigationBar.locStrsChanged();\n    }\n  }\n  public getMarkdownHtml(text: string, name: string, item?: any): string {\n    return this.getSurveyMarkdownHtml(this, text, name, item);\n  }\n  public getRenderer(name: string): string {\n    return this.getRendererForString(this, name);\n  }\n  public getRendererContext(locStr: LocalizableString) {\n    return this.getRendererContextForString(this, locStr);\n  }\n  public getRendererForString(element: Question | PanelModel | PageModel | SurveyModel, name: string, item?: ItemValue): string {\n    let renderAs = this.getBuiltInRendererForString(element, name, item);\n    renderAs = this.elementWrapperComponentNameCore(renderAs, element, \"string\", name);\n    const options: TextRenderAsEvent = { element: element, name: name, renderAs: renderAs };\n    this.onTextRenderAs.fire(this, options);\n    return options.renderAs;\n  }\n  public getRendererContextForString(element: Base, locStr: LocalizableString, item?: ItemValue): any {\n    return this.elementWrapperDataCore(locStr, element, \"string\");\n  }\n  getExpressionDisplayValue(\n    question: Question,\n    value: any,\n    displayValue: string\n  ): string {\n    const options = {\n      question: question,\n      value: value,\n      displayValue: displayValue,\n    };\n    this.onGetExpressionDisplayValue.fire(this, options);\n    return options.displayValue;\n  }\n  private getBuiltInRendererForString(element: Base, name: string, item?: ItemValue): string {\n    if (this.isDesignMode) return LocalizableString.editableRenderer;\n    return undefined;\n  }\n  public getProcessedText(text: string) {\n    return this.processText(text, true);\n  }\n  getLocString(str: string) {\n    return this.getLocalizationString(str);\n  }\n  //ISurveyErrorOwner\n  getErrorCustomText(text: string, error: SurveyError): string {\n    return this.getSurveyErrorCustomText(this, text, error);\n  }\n  getSurveyErrorCustomText(obj: PanelModel | Question | SurveyModel, text: string, error: SurveyError): string {\n    const options: ErrorCustomTextEvent = {\n      text: text,\n      name: error.getErrorType(),\n      obj: obj,\n      error: error\n    };\n    this.onErrorCustomText.fire(this, options);\n    return options.text;\n  }\n  getQuestionDisplayValue(question: Question, displayValue: any): any {\n    const options = { question: question, displayValue: displayValue };\n    this.onGetQuestionDisplayValue.fire(this, options);\n    return options.displayValue;\n  }\n  /**\n   * A message that is displayed when a survey does not contain visible pages or questions.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  public get emptySurveyText(): string {\n    return this.getLocalizableStringText(\"emptySurveyText\");\n  }\n  public set emptySurveyText(val: string) {\n    this.setLocalizableStringText(\"emptySurveyText\", val);\n  }\n  //#region Title/Header options\n  /**\n   * An image URL or a Base64-encoded image to use as a survey logo.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logoPosition\n   * @see logoFit\n   */\n  public get logo(): string {\n    return this.getLocalizableStringText(\"logo\");\n  }\n  public set logo(value: string) {\n    this.setLocalizableStringText(\"logo\", value);\n  }\n  get locLogo(): LocalizableString {\n    return this.getLocalizableString(\"logo\");\n  }\n  /**\n   * A logo width in CSS-accepted values.\n   *\n   * Default value: `auto` (the width is calculated automatically based on the [`logoHeight`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#logoHeight) value to keep the original aspect ratio)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoPosition\n   * @see logoFit\n   */\n  public get logoWidth(): any {\n    return this.getPropertyValue(\"logoWidth\");\n  }\n  public set logoWidth(value: any) {\n    this.setPropertyValue(\"logoWidth\", value);\n  }\n\n  public get renderedLogoWidth(): number {\n    return this.logoWidth ? getRenderedSize(this.logoWidth) : undefined;\n  }\n  public get renderedStyleLogoWidth(): string {\n    return this.logoWidth ? getRenderedStyleSize(this.logoWidth) : undefined;\n  }\n\n  /**\n   * A logo height in CSS-accepted values.\n   *\n   * Default value: `40px`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logoWidth\n   * @see logo\n   * @see logoPosition\n   * @see logoFit\n   */\n  public get logoHeight(): any {\n    return this.getPropertyValue(\"logoHeight\");\n  }\n  public set logoHeight(value: any) {\n    this.setPropertyValue(\"logoHeight\", value);\n  }\n  public get renderedLogoHeight(): number {\n    return this.logoHeight ? getRenderedSize(this.logoHeight) : undefined;\n  }\n  public get renderedStyleLogoHeight(): string {\n    return this.logoHeight ? getRenderedStyleSize(this.logoHeight) : undefined;\n  }\n  /**\n   * A logo position relative to the [survey title](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title).\n   *\n   * Possible values:\n   *\n   * - `\"left\"` (default) - Places the logo to the left of the survey title.\n   * - `\"right\"` - Places the logo to the right of the survey title.\n   * - `\"none\"` - Hides the logo.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoFit\n   */\n  public get logoPosition(): string {\n    return this.getPropertyValue(\"logoPosition\");\n  }\n  public set logoPosition(value: string) {\n    this.setPropertyValue(\"logoPosition\", value);\n  }\n  public get hasLogo(): boolean {\n    return this.getPropertyValue(\"hasLogo\", undefined, () => !!this.logo && this.logoPosition !== \"none\");\n  }\n  private resetHasLogo(): void {\n    this.resetPropertyValue(\"hasLogo\");\n  }\n  public get isLogoBefore(): boolean {\n    if (this.isDesignMode) return false;\n    return (\n      this.renderedHasLogo &&\n      (this.logoPosition === \"left\" || this.logoPosition === \"top\")\n    );\n  }\n  public get isLogoAfter(): boolean {\n    if (this.isDesignMode) return this.renderedHasLogo;\n    return (\n      this.renderedHasLogo &&\n      (this.logoPosition === \"right\" || this.logoPosition === \"bottom\")\n    );\n  }\n  public get logoClassNames(): string {\n    const logoClasses: { [index: string]: string } = {\n      left: \"sv-logo--left\",\n      right: \"sv-logo--right\",\n      top: \"sv-logo--top\",\n      bottom: \"sv-logo--bottom\",\n    };\n    return new CssClassBuilder().append(this.css.logo)\n      .append(logoClasses[this.logoPosition]).toString();\n  }\n  public get titleIsEmpty(): boolean {\n    return this.getPropertyValue(\"titleIsEmpty\", undefined, () => this.locTitle.isEmpty);\n  }\n  public get renderedHasTitle(): boolean {\n    if (this.isDesignMode) return this.isPropertyVisible(\"title\");\n    return !this.titleIsEmpty && this.showTitle;\n  }\n  public get renderedHasDescription(): boolean {\n    if (this.isDesignMode) return this.isPropertyVisible(\"description\");\n    return !!this.hasDescription && this.showTitle;\n  }\n  public get hasTitle(): boolean {\n    return this.renderedHasTitle;\n  }\n  public get renderedHasLogo(): boolean {\n    if (this.isDesignMode) return this.isPropertyVisible(\"logo\");\n    return this.hasLogo;\n  }\n  public get renderedHasHeader(): boolean {\n    return this.renderedHasTitle || this.renderedHasLogo;\n  }\n  /**\n   * Specifies how to resize a logo to fit it into its container.\n   *\n   * Possible values:\n   *\n   * - `\"contain\"` (default)\n   * - `\"cover\"`\n   * - `\"fill\"`\n   * - `\"none\"`\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on the possible values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoPosition\n   */\n  public get logoFit(): string {\n    return this.getPropertyValue(\"logoFit\");\n  }\n  public set logoFit(val: string) {\n    this.setPropertyValue(\"logoFit\", val);\n  }\n  //#endregion\n\n  @property({ defaultValue: {} }) private cssVariables: { [index: string]: string } = {};\n  public get themeVariables() {\n    return Object.assign({}, this.cssVariables);\n  }\n\n  @property() _isMobile = false;\n  public setIsMobile(newVal = true) {\n    if (this._isMobile !== newVal) {\n      this._isMobile = newVal;\n      this.updateCss();\n      this.getAllQuestions().forEach(q => q.setIsMobile(newVal));\n    }\n  }\n  public get isMobile() {\n    return this._isMobile && !this.isDesignMode;\n  }\n  @property() private _isCompact: boolean = false;\n  public set isCompact(newVal: boolean) {\n    if (newVal !== this._isCompact) {\n      this._isCompact = newVal;\n      this.updateElementCss();\n      this.triggerResponsiveness(true);\n    }\n  }\n  public get isCompact(): boolean {\n    return this._isCompact;\n  }\n  protected isLogoImageChoosen() {\n    return this.locLogo.renderedHtml;\n  }\n  public get titleMaxWidth(): string {\n    return \"\";\n  }\n  /**\n   * An image to display in the background of the survey or form. Accepts a base64 or URL string value.\n   * @see backgroundOpacity\n   */\n  @property({\n    onSet: (newValue, target: SurveyModel) => {\n      target.updateCss();\n    }\n  }) backgroundImage: string;\n  public get renderBackgroundImage(): string {\n    return this.getPropertyValue(\"renderBackgroundImage\", undefined, () => wrapUrlForBackgroundImage(this.backgroundImage));\n  }\n  @property() backgroundImageFit: ImageFit;\n  @property({\n    onSet: (newValue, target: SurveyModel) => {\n      target.updateCss();\n    }\n  }) backgroundImageAttachment: ImageAttachment;\n  /**\n   * A value from 0 to 1 that specifies how transparent the [background image](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#backgroundImage) should be: 0 makes the image completely transparent, and 1 makes it opaque.\n   */\n  public get backgroundOpacity(): number {\n    return this.getPropertyValue(\"backgroundOpacity\");\n  }\n  public set backgroundOpacity(val: number) {\n    this.setPropertyValue(\"backgroundOpacity\", val);\n  }\n  public get backgroundImageStyle(): any {\n    return this.getPropertyValue(\"backgroundImageStyle\", undefined, () => this.calcBackgroundImageStyle());\n  }\n  private calcBackgroundImageStyle() {\n    return {\n      opacity: this.backgroundOpacity,\n      backgroundImage: this.renderBackgroundImage,\n      backgroundSize: this.backgroundImageFit,\n      backgroundAttachment: !this.fitToContainer ? this.backgroundImageAttachment : undefined\n    };\n  }\n  @property() wrapperFormCss: string;\n  public updateWrapperFormCss(): void {\n    this.wrapperFormCss = new CssClassBuilder()\n      .append(this.css.rootWrapper)\n      .append(this.css.rootWrapperHasImage, !!this.backgroundImage)\n      .append(this.css.rootWrapperFixed, !this.formScrollDisabled)\n      .toString();\n  }\n  /**\n   * HTML content displayed on the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/modify-survey-navigation-settings/ (linkStyle))\n   * @see showCompletePage\n   * @see completedHtmlOnCondition\n   */\n  public get completedHtml(): string {\n    return this.getLocalizableStringText(\"completedHtml\");\n  }\n  public set completedHtml(value: string) {\n    this.setLocalizableStringText(\"completedHtml\", value);\n  }\n  get locCompletedHtml(): LocalizableString {\n    return this.getLocalizableString(\"completedHtml\");\n  }\n  /**\n   * An array of objects that allows you to specify different HTML content for the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * Each object should include the [`expression`](https://surveyjs.io/form-library/documentation/api-reference/htmlconditionitem#expression) and [`html`](https://surveyjs.io/form-library/documentation/api-reference/htmlconditionitem#html) properties. When `expression` evaluates to `true`, the survey uses the corresponding HTML markup instead of [`completedHtml`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completedHtml). Refer to the following help topic for more information about expressions: [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n   */\n  public get completedHtmlOnCondition(): Array<HtmlConditionItem> {\n    return this.getPropertyValue(\"completedHtmlOnCondition\");\n  }\n  public set completedHtmlOnCondition(val: Array<HtmlConditionItem>) {\n    this.setPropertyValue(\"completedHtmlOnCondition\", val);\n  }\n  /**\n   * Calculates a given [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) and returns a result value.\n   * @param expression An expression to calculate.\n   * @param callback A callback function that you can use to access the calculation result if the expression uses asynchronous functions.\n   */\n  public runExpression(expression: string, callback?: (res: any) => void): any {\n    if (!expression) return null;\n    var properties = this.getFilteredProperties();\n    const exp = this.createExpressionRunner(expression);\n    let onCompleteRes: any = undefined;\n    exp.onRunComplete = (res: any) => {\n      onCompleteRes = res;\n      callback && callback(res);\n    };\n    return exp.runContext(this.getValueGetterContext(), properties) || onCompleteRes;\n  }\n  beforeExpressionRunning(obj: Base, propertyName: string, expression: string): string {\n    const opt: ExpressionRunningEvent = { element: obj, propertyName: propertyName, expression: expression, allow: true };\n    this.onExpressionRunning.fire(this, opt);\n    return opt.allow ? opt.expression : \"\";\n  }\n  private setValueOnExpressionCounter: number = 0;\n  public get isSettingValueOnExpression(): boolean { return this.setValueOnExpressionCounter > 0; }\n  startSetValueOnExpression(): void {\n    this.setValueOnExpressionCounter ++;\n  }\n  finishSetValueOnExpression(): void {\n    this.setValueOnExpressionCounter --;\n  }\n  /**\n   * Calculates a given [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) and returns `true` or `false`.\n   * @param expression An expression to calculate.\n   */\n  public runCondition(expression: string): boolean {\n    if (!expression) return false;\n    const properties = this.getFilteredProperties();\n    return new ConditionRunner(expression).runContext(this.getValueGetterContext(), properties);\n  }\n  /**\n   * Executes [all triggers](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#triggers), except [\"complete\"](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete).\n   *\n   * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n   * @see onTriggerExecuted\n   */\n  public runTriggers(): void {\n    this.checkTriggers(this.getFilteredValues(), false);\n  }\n  public get renderedCompletedHtml(): string {\n    var item = this.getExpressionItemOnRunCondition(\n      this.completedHtmlOnCondition\n    );\n    return !!item ? (<HtmlConditionItem>item).html : this.completedHtml;\n  }\n  private getExpressionItemOnRunCondition(\n    items: Array<ExpressionItem>\n  ): ExpressionItem {\n    if (items.length == 0) return null;\n    var properties = this.getFilteredProperties();\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].runCondition(properties)) {\n        return items[i];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * HTML content displayed to a user who has completed the survey before. To identify such users, the survey uses a [cookie name](#cookieName).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-prevent-duplicate-form-submissions/ (linkStyle))\n   * @see processedCompletedBeforeHtml\n   */\n  public get completedBeforeHtml(): string {\n    return this.getLocalizableStringText(\"completedBeforeHtml\");\n  }\n  public set completedBeforeHtml(value: string) {\n    this.setLocalizableStringText(\"completedBeforeHtml\", value);\n  }\n  get locCompletedBeforeHtml(): LocalizableString {\n    return this.getLocalizableString(\"completedBeforeHtml\");\n  }\n  /**\n   * HTML content displayed while a survey JSON schema is [being loaded](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#beginLoading).\n   * @see processedLoadingHtml\n   */\n  public get loadingHtml(): string {\n    return this.getLocalizableStringText(\"loadingHtml\");\n  }\n  public set loadingHtml(value: string) {\n    this.setLocalizableStringText(\"loadingHtml\", value);\n  }\n  get locLoadingHtml(): LocalizableString {\n    return this.getLocalizableString(\"loadingHtml\");\n  }\n  public get navigationBar(): ActionContainer {\n    if (!this.navigationBarValue) {\n      this.navigationBarValue = this.createNavigationBar();\n      this.updateNavigationCss();\n    }\n    return this.navigationBarValue;\n  }\n  /**\n   * Adds a custom navigation item similar to the Previous Page, Next Page, and Complete buttons. Accepts an object described in the [IAction](https://surveyjs.io/Documentation/Library?id=IAction) help section.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-changenavigation/ (linkStyle))\n  */\n  public addNavigationItem(val: IAction): Action {\n    if (!val.component) {\n      val.component = \"sv-nav-btn\";\n    }\n    if (!val.innerCss) {\n      val.innerCss = this.cssSurveyNavigationButton;\n    }\n    const originalActionFunc = val.action;\n    val.action = () => {\n      this.taskManager.waitAndExecute(() => originalActionFunc());\n    };\n    return this.navigationBar.addAction(val);\n  }\n  private removeNavigationItem(id: string): void {\n    const action = this.navigationBar.getActionById(id);\n    if (action) {\n      const actions = this.navigationBar.actions;\n      actions.splice(actions.indexOf(action), 1);\n    }\n  }\n  /**\n   * Gets or sets a caption for the Start button.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see firstPageIsStartPage\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  public get startSurveyText(): string {\n    return this.getLocalizableStringText(\"startSurveyText\");\n  }\n  public set startSurveyText(newValue: string) {\n    this.setLocalizableStringText(\"startSurveyText\", newValue);\n  }\n  get locStartSurveyText(): LocalizableString {\n    return this.getLocalizableString(\"startSurveyText\");\n  }\n  /**\n   * Gets or sets a caption for the Previous button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  public get pagePrevText(): string {\n    return this.getLocalizableStringText(\"pagePrevText\");\n  }\n  public set pagePrevText(newValue: string) {\n    this.setLocalizableStringText(\"pagePrevText\", newValue);\n  }\n  get locPagePrevText(): LocalizableString {\n    return this.getLocalizableString(\"pagePrevText\");\n  }\n  /**\n   * Gets or sets a caption for the Next button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  public get pageNextText(): string {\n    return this.getLocalizableStringText(\"pageNextText\");\n  }\n  public set pageNextText(newValue: string) {\n    this.setLocalizableStringText(\"pageNextText\", newValue);\n  }\n  get locPageNextText(): LocalizableString {\n    return this.getLocalizableString(\"pageNextText\");\n  }\n  /**\n   * Gets or sets a caption for the Complete button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  public get completeText(): string {\n    return this.getLocalizableStringText(\"completeText\");\n  }\n  public set completeText(newValue: string) {\n    this.setLocalizableStringText(\"completeText\", newValue);\n  }\n  get locCompleteText(): LocalizableString {\n    return this.getLocalizableString(\"completeText\");\n  }\n  /**\n   * Gets or sets a caption for the Preview button.\n   * @see showPreviewBeforeComplete\n   * @see showPreview\n   * @see editText\n   */\n  public get previewText(): string {\n    return this.getLocalizableStringText(\"previewText\");\n  }\n  public set previewText(newValue: string) {\n    this.setLocalizableStringText(\"previewText\", newValue);\n  }\n  get locPreviewText(): LocalizableString {\n    return this.getLocalizableString(\"previewText\");\n  }\n  /**\n   * Gets or sets a caption for the Edit button displayed when the survey shows a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   * @see showPreviewBeforeComplete\n   * @see cancelPreview\n   * @see previewText\n   */\n  public get editText(): string {\n    return this.getLocalizableStringText(\"editText\");\n  }\n  public set editText(newValue: string) {\n    this.setLocalizableStringText(\"editText\", newValue);\n  }\n  get locEditText(): LocalizableString {\n    return this.getLocalizableString(\"editText\");\n  }\n  getElementTitleTagName(element: Base, tagName: string): string {\n    if (this.onGetTitleTagName.isEmpty) return tagName;\n    const options: GetTitleTagNameEvent = { element: element, tagName: tagName };\n    this.onGetTitleTagName.fire(this, options);\n    return options.tagName;\n  }\n  /**\n   * Specifies a pattern for question titles.\n   *\n   * Refer to the following help topic for more information: [Title Pattern](https://surveyjs.io/form-library/documentation/design-survey/configure-question-titles#title-pattern).\n   */\n  public get questionTitlePattern(): string {\n    return this.getPropertyValue(\"questionTitlePattern\", \"numTitleRequire\");\n  }\n  public set questionTitlePattern(val: string) {\n    if (\n      val !== \"numRequireTitle\" &&\n      val !== \"requireNumTitle\" &&\n      val != \"numTitle\"\n    ) {\n      val = \"numTitleRequire\";\n    }\n    this.setPropertyValue(\"questionTitlePattern\", val);\n  }\n  getQuestionTitlePatternOptions(): Array<any> {\n    const res = new Array<any>();\n    const title = this.getLocalizationString(\"questionTitlePatternText\");\n    const num = !!this.questionStartIndex ? this.questionStartIndex : \"1.\";\n    res.push({\n      value: \"numTitleRequire\",\n      text: num + \" \" + title + \" \" + this.requiredMark\n    });\n    res.push({\n      value: \"numRequireTitle\",\n      text: num + \" \" + this.requiredMark + \" \" + title\n    });\n    // res.push({\n    //   value: \"requireNumTitle\",\n    //   text: this.requiredMark + \" \" + num + \" \" + title\n    // });\n    res.push({\n      value: \"numTitle\",\n      text: num + \" \" + title\n    });\n    return res;\n  }\n  public get questionTitleTemplate(): string {\n    return this.getLocalizableStringText(\"questionTitleTemplate\");\n  }\n  public set questionTitleTemplate(value: string) {\n    this.setLocalizableStringText(\"questionTitleTemplate\", value);\n    this.questionTitlePattern = this.getNewTitlePattern(value);\n    this.questionStartIndex = this.getNewQuestionTitleElement(\n      value,\n      \"no\",\n      this.questionStartIndex,\n      \"1\"\n    );\n    this.requiredMark = this.getNewQuestionTitleElement(\n      value,\n      \"require\",\n      this.requiredMark,\n      \"*\"\n    );\n  }\n  private getNewTitlePattern(template: string): string {\n    if (!!template) {\n      var strs = [];\n      while(template.indexOf(\"{\") > -1) {\n        template = template.substring(template.indexOf(\"{\") + 1);\n        var ind = template.indexOf(\"}\");\n        if (ind < 0) break;\n        strs.push(template.substring(0, ind));\n        template = template.substring(ind + 1);\n      }\n      if (strs.length > 1) {\n        if (strs[0] == \"require\") return \"requireNumTitle\";\n        if (strs[1] == \"require\" && strs.length == 3) return \"numRequireTitle\";\n        if (strs.indexOf(\"require\") < 0) return \"numTitle\";\n      }\n      if (strs.length == 1 && strs[0] == \"title\") {\n        return \"numTitle\";\n      }\n    }\n    return \"numTitleRequire\";\n  }\n  private getNewQuestionTitleElement(\n    template: string,\n    name: string,\n    currentValue: string,\n    defaultValue: string\n  ): string {\n    name = \"{\" + name + \"}\";\n    if (!template || template.indexOf(name) < 0) return currentValue;\n    var ind = template.indexOf(name);\n    var prefix = \"\";\n    var postfix = \"\";\n    var i = ind - 1;\n    for (; i >= 0; i--) {\n      if (template[i] == \"}\") break;\n    }\n    if (i < ind - 1) {\n      prefix = template.substring(i + 1, ind);\n    }\n    ind += name.length;\n    i = ind;\n    for (; i < template.length; i++) {\n      if (template[i] == \"{\") break;\n    }\n    if (i > ind) {\n      postfix = template.substring(ind, i);\n    }\n    i = 0;\n    while(i < prefix.length && prefix.charCodeAt(i) < 33) i++;\n    prefix = prefix.substring(i);\n    i = postfix.length - 1;\n    while(i >= 0 && postfix.charCodeAt(i) < 33) i--;\n    postfix = postfix.substring(0, i + 1);\n    if (!prefix && !postfix) return currentValue;\n    var value = !!currentValue ? currentValue : defaultValue;\n    return prefix + value + postfix;\n  }\n  get locQuestionTitleTemplate(): LocalizableString {\n    return this.getLocalizableString(\"questionTitleTemplate\");\n  }\n  getUpdatedQuestionTitle(question: Question, title: string): string {\n    if (this.onGetQuestionTitle.isEmpty) return title;\n    const options: GetQuestionTitleEvent = { question: question, title: title };\n    this.onGetQuestionTitle.fire(this, options);\n    return options.title;\n  }\n  getUpdatedQuestionNo(question: Question, no: string): string {\n    if (this.onGetQuestionNumber.isEmpty) return no;\n    const options: GetQuestionNumberEvent = { question: question, number: no, no: no };\n    this.onGetQuestionNumber.fire(this, options);\n    return options.no === no ? options.number : options.no;\n  }\n  getUpdatedPanelNo(panel: PanelModel, no: string): string {\n    if (this.onGetPanelNumber.isEmpty) return no;\n    const options: GetPanelNumberEvent = { panel: panel, number: no };\n    this.onGetPanelNumber.fire(this, options);\n    return options.number;\n  }\n  getUpdatedPageNo(page: PageModel, no: string): string {\n    if (this.onGetPageNumber.isEmpty) return no;\n    const options: GetPageNumberEvent = { page: page, number: no };\n    this.onGetPageNumber.fire(this, options);\n    return options.number;\n  }\n  /**\n   * Specifies whether page titles contain page numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-number-pages-and-questions/ (linkStyle))\n   * @see onGetPageNumber\n   */\n  public get showPageNumbers(): boolean {\n    return this.getPropertyValue(\"showPageNumbers\");\n  }\n  public set showPageNumbers(value: boolean) {\n    if (value === this.showPageNumbers) return;\n    this.setPropertyValue(\"showPageNumbers\", value);\n    this.updateVisibleIndexes();\n  }\n  /**\n   * Specifies whether to display survey element numbers and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `true` or `\"on\"` - Numbers survey elements in order, regardless of their nesting level.\n   * - `\"recursive\"` - Applies recursive numbering to elements nested in panels (for example, 1 -> 1.1 -> 1.1.1, etc.).\n   * - `\"onpage\"` - Starts numbering on each page from scratch.\n   * - `false` or `\"off\"` - Hides question numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-number-pages-and-questions/ (linkStyle))\n   *\n   * If you want to hide the number of an individual question, disable its [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property.\n   * @see onGetQuestionNumber\n   */\n  public get showQuestionNumbers(): string | boolean {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  public set showQuestionNumbers(value: string | boolean) {\n    if (value === true) {\n      value = \"on\";\n    }\n    if (value === false) {\n      value = \"off\";\n    }\n    value = value.toLowerCase();\n    value = value === \"onpage\" ? \"onPage\" : value;\n    if (value === this.showQuestionNumbers) return;\n    this.setPropertyValue(\"showQuestionNumbers\", value);\n    this.updateVisibleIndexes();\n  }\n  private progressBarValue: any;\n  public get progressBar(): any {\n    if (!this.progressBarValue) {\n      this.progressBarValue = new ProgressButtons(this);\n    }\n    return this.progressBarValue;\n  }\n  /**\n   * Specifies the visibility of the progress bar.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-default/ (linkStyle))\n   * @see progressBarLocation\n   * @see progressBarType\n   * @see progressValue\n   */\n  public get showProgressBar(): boolean {\n    return this.getPropertyValue(\"showProgressBar\");\n  }\n  public set showProgressBar(newValue: boolean | string) {\n    this.setShowProgressBar(newValue);\n  }\n  protected setShowProgressBar(newValue: boolean | string) {\n    if (newValue === \"off\") {\n      newValue = false;\n    }\n    if (newValue === true || newValue === false) {\n      this.setPropertyValue(\"showProgressBar\", newValue);\n    } else {\n      this.setPropertyValue(\"showProgressBar\", true);\n      this.progressBarLocation = newValue;\n    }\n  }\n  /**\n   * Specifies the alignment of the progress bar. Applies only if the [`showProgressBar`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar) property is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"aboveHeader\"` - Displays the progress bar above the survey header.\n   * - `\"belowHeader\"` - Displays the progress bar below the survey header.\n   * - `\"bottom\"` - Displays the progress bar below survey content.\n   * - `\"topBottom\"` - Displays the progress bar above and below survey content.\n   * - `\"auto\"` (default) - Displays the progress bar below the survey header if the header has a [background image](https://surveyjs.io/form-library/documentation/api-reference/iheader#backgroundImage) or color. Otherwise, the progress bar is displayed above the header.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-default/ (linkStyle))\n   * @see showProgressBar\n   * @see progressBarType\n   * @see progressValue\n   */\n  public get progressBarLocation(): string {\n    return this.getPropertyValue(\"progressBarLocation\");\n  }\n  public set progressBarLocation(newValue: string) {\n    this.setPropertyValue(\"progressBarLocation\", newValue.toLowerCase());\n  }\n  /**\n   * Specifies the type of information displayed by the progress bar. Applies only when [`showProgressBar`](#showProgressBar) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"pages\"` (default) - The number of completed pages.\n   * - `\"questions\"` - The number of answered questions.\n   * - `\"requiredQuestions\"` - The number of answered [required questions](https://surveyjs.io/form-library/documentation/api-reference/question#isRequired).\n   * - `\"correctQuestions\"` - The number of correct questions in a [quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * - `\"buttons\"` - *(Obsolete)* Use the `\"pages\"` property value with the [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageTitles) property set to `true` instead.\n   *\n   * > When `progressBarType` is set to `\"pages\"`, you can also enable the [`progressBarShowPageNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageNumbers) and [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageTitles) properties if you want to display page numbers and titles in the progress bar.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-buttons/ (linkStyle))\n   * @see progressValue\n   */\n  public get progressBarType(): string {\n    return this.getPropertyValue(\"progressBarType\");\n  }\n  public set progressBarType(newValue: string) {\n    if (newValue === \"correctquestion\") newValue = \"correctQuestion\";\n    if (newValue === \"requiredquestion\") newValue = \"requiredQuestion\";\n    // if (newValue === \"buttons\") {\n    //   newValue = \"pages\";\n    //   this.progressBarShowPageTitles = true;\n    // }\n    this.setPropertyValue(\"progressBarType\", newValue);\n  }\n  private get progressBarComponentName(): string {\n    let actualProgressBarType = this.progressBarType;\n    if (!settings.legacyProgressBarView && surveyCss.currentType === \"default\") {\n      if (isStrCiEqual(actualProgressBarType, \"pages\")) {\n        actualProgressBarType = \"buttons\";\n      }\n    }\n    return \"progress-\" + actualProgressBarType;\n  }\n  /**\n   * Specifies whether the progress bar displays page titles. Applies only when the [progress bar is visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar) and [`progressBarType`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarType) is `\"pages\"`.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/configure-form-navigation-with-progress-indicators/ (linkStyle))\n   * @see progressBarShowPageNumbers\n   * @see progressBarInheritWidthFrom\n   */\n  @property({\n    getDefaultValue: (self: SurveyModel) => {\n      return self.progressBarType === \"buttons\";\n    },\n  }) progressBarShowPageTitles: boolean;\n  /**\n   * Specifies whether the progress bar displays page numbers. Applies only when the [progress bar is visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar) and [`progressBarType`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarType) is `\"pages\"`.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/configure-form-navigation-with-progress-indicators/ (linkStyle))\n   * @see progressBarShowPageTitles\n   * @see progressBarInheritWidthFrom\n   */\n  @property() progressBarShowPageNumbers: boolean;\n  /**\n   * Specifies whether the progress bar spans the width of the survey or that of the survey container. Applies only when the [progress bar is visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar) and [`progressBarType`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarType) is `\"pages\"`.\n   *\n   * Possible values:\n   *\n   * - `\"survey\"`\\\n   * The progress bar width is the same as the survey width.\n   * - `\"container\"` (default)\\\n   * The progress bar width is the same as the survey container width.\n   * @see progressBarShowPageTitles\n   * @see progressBarShowPageNumbers\n   */\n  @property() progressBarInheritWidthFrom: \"survey\" | \"container\";\n  public get isShowProgressBarOnTop(): boolean {\n    if (!this.canShowProgressBar()) return false;\n    if (!this.showProgressBar) return false;\n    return [\"auto\", \"aboveheader\", \"belowheader\", \"topbottom\", \"top\", \"both\"].indexOf(this.progressBarLocation) !== -1;\n  }\n  public get isShowProgressBarOnBottom(): boolean {\n    if (!this.canShowProgressBar()) return false;\n    if (!this.showProgressBar) return false;\n    return this.progressBarLocation === \"bottom\" || this.progressBarLocation === \"both\" || this.progressBarLocation === \"topbottom\";\n  }\n  public getProgressTypeComponent(): string {\n    return \"sv-progress-\" + this.progressBarType.toLowerCase();\n  }\n  public getProgressCssClasses(container: string = \"\"): string {\n    return new CssClassBuilder()\n      .append(this.css.progress)\n      .append(this.css.progressTop, this.isShowProgressBarOnTop && (!container || container == \"header\"))\n      .append(this.css.progressBottom, this.isShowProgressBarOnBottom && (!container || container == \"footer\"))\n      .toString();\n  }\n  private canShowProgressBar(): boolean {\n    return (\n      !this.isShowingPreview ||\n      !this.showPreviewBeforeComplete || this.previewMode != \"allQuestions\"\n    );\n  }\n  public get processedTitle(): string {\n    return this.locTitle.renderedHtml;\n  }\n  /**\n   * Gets or sets question title location relative to the input field: `\"top\"`, `\"bottom\"`, or `\"left\"`.\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   *\n   * You can override this setting if you specify the `questionTitleLocation` property for an [individual page](https://surveyjs.io/form-library/documentation/pagemodel#questionTitleLocation) or [panel](https://surveyjs.io/form-library/documentation/panelmodel#questionTitleLocation) or set the `titleLocation` property for a [specific question](https://surveyjs.io/form-library/documentation/question#titleLocation).\n   */\n  public get questionTitleLocation(): string {\n    return this.getPropertyValue(\"questionTitleLocation\");\n  }\n  public set questionTitleLocation(value: string) {\n    this.setPropertyValue(\"questionTitleLocation\", value.toLowerCase());\n    if (!this.isLoadingFromJson) {\n      this.updateElementCss(true);\n    }\n  }\n  public updateElementCss(reNew?: boolean): void {\n    if (!!this.startPage) {\n      this.startPage.updateElementCss(reNew);\n    }\n    var pages = this.visiblePages;\n    for (var i = 0; i < pages.length; i++) {\n      pages[i].updateElementCss(reNew);\n    }\n    this.updateCss();\n  }\n  /**\n   * Specifies the error message position.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` (default) - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   *\n   * You can override this setting if you specify the `questionErrorLocation` property for an [individual page](https://surveyjs.io/form-library/documentation/pagemodel#questionErrorLocation) or [panel](https://surveyjs.io/form-library/documentation/panelmodel#questionErrorLocation) or set the `errorLocation` property for a [specific question](https://surveyjs.io/form-library/documentation/question#errorLocation).\n   */\n  public get questionErrorLocation(): string {\n    return this.getPropertyValue(\"questionErrorLocation\");\n  }\n  public set questionErrorLocation(value: string) {\n    this.setPropertyValue(\"questionErrorLocation\", value.toLowerCase());\n  }\n  /**\n   * Specifies where to display question descriptions.\n   *\n   * Possible values:\n   *\n   * - `\"underTitle\"` (default) - Displays descriptions under question titles.\n   * - `\"underInput\"` - Displays descriptions under the interactive area.\n   *\n   * You can override this setting for individual questions if you specify their [`descriptionLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#descriptionLocation) property.\n   *\n   */\n  public get questionDescriptionLocation(): string {\n    return this.getPropertyValue(\"questionDescriptionLocation\");\n  }\n  public set questionDescriptionLocation(value: string) {\n    this.setPropertyValue(\"questionDescriptionLocation\", value);\n  }\n  /**\n   * @deprecated Use the [`readOnly`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#readOnly) property.\n   */\n  public get mode(): string {\n    return this.readOnly ? \"display\" : \"edit\";\n  }\n  public set mode(value: string) {\n    value = value.toLowerCase();\n    if (value == this.mode) return;\n    if (value != \"edit\" && value != \"display\") return;\n    this.readOnly = value == \"display\";\n  }\n  /**\n   * Enables the read-only mode. If you set this property to `true`, users cannot take the survey.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/prevent-form-editing-with-read-only-mode/ (linkStyle))\n   */\n  public get readOnly(): boolean {\n    return this.getPropertyValue(\"readOnly\");\n  }\n  public set readOnly(val: boolean) {\n    this.setPropertyValue(\"readOnly\", val);\n  }\n\n  private onReadOnlyChanged() {\n    for (var i = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      page.setPropertyValue(\"isReadOnly\", page.isReadOnly);\n    }\n    this.updateButtonsVisibility();\n    this.updateCss();\n  }\n  /**\n   * Gets or sets an object with survey results. You can set this property with an object of the following structure:\n   *\n   * ```js\n   * {\n   *   question1Name: question1Value,\n   *   question2Name: question2Value,\n   *   // ...\n   * }\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/auto-populate-form-fields/ (linkStyle))\n   *\n   * When you set the `data` property in code, the new object overrides the old object that may contain default question values and entered data. If you want to *merge* the new and old objects, call the [`mergeData(newDataObj)`](https://surveyjs.io/form-library/documentation/surveymodel#mergeData) method.\n   *\n   * If you assign a new object while a respondent takes the survey, set the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property to 0 to start the survey from the beginning. This will also cause the survey to re-evaluate the [`visibleIf`](https://surveyjs.io/form-library/documentation/api-reference/question#visibleIf), [`enableIf`](https://surveyjs.io/form-library/documentation/api-reference/question#enableIf), and other [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   * @see setValue\n   * @see getValue\n   */\n  public get data(): any {\n    var result: { [index: string]: any } = {};\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var dataValue = this.getDataValueCore(this.valuesHash, key);\n      if (dataValue !== undefined) {\n        result[key] = dataValue;\n      }\n    }\n    this.setCalculatedValuesIntoResult(result);\n    return result;\n  }\n  public set data(data: any) {\n    this.valuesHash = {};\n    this.setDataCore(data, !data);\n  }\n  /**\n   * Merges a specified data object with the object from the [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) property.\n   *\n   * Refer to the following help topic for more information: [Populate Form Fields | Multiple Question Values](https://surveyjs.io/form-library/documentation/design-survey/pre-populate-form-fields#multiple-question-values).\n   *\n   * @param data A data object to merge. It should have the following structure: `{ questionName: questionValue, ... }`\n   * @see setValue\n   */\n  public mergeData(data: any): void {\n    if (!data) return;\n    const newData = this.data;\n    this.mergeValues(data, newData);\n    this.setDataCore(newData);\n  }\n  private isSettingDataValue: boolean;\n  public setDataCore(data: any, clearData: boolean = false): void {\n    if (clearData) {\n      this.valuesHash = {};\n    }\n    if (data) {\n      for (var key in data) {\n        const dataKey = typeof key === \"string\" ? key.trim() : key;\n        this.setDataValueCore(this.valuesHash, dataKey, data[key]);\n      }\n    }\n    this.isSettingDataValue = true;\n    this.updateAllQuestionsValue(clearData);\n    this.notifyAllQuestionsOnValueChanged();\n    this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n    this.isSettingDataValue = false;\n    this.runConditions();\n    this.updateAllQuestionsValue(clearData);\n  }\n  public isSettingData(): boolean { return this.isSettingDataValue === true; }\n  public get isSurvey(): boolean { return true; }\n  /**\n   * Returns an object with survey results.\n   *\n   * If you want to get a survey results object that mirrors the survey structure, call the `getData()` method with an object that has the `includePages` and `includePanels` properties enabled. Without this object, the `getData()` method returns the [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) property value.\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = { ... };\n   * const survey = new Model(surveyJson);\n   * survey.getData({ includePages: true, includePanels: true });\n   * ```\n   */\n  public getData(options?: { includePages?: boolean, includePanels?: boolean }): any {\n    const opt = options || { includePages: false, includePanels: false };\n    if (!opt.includePages && !opt.includePanels) return this.data;\n    return this.getStructuredData(!!opt.includePages, !opt.includePanels ? (opt.includePages ? 1 : 0) : 100);\n  }\n  public getStructuredData(includePages: boolean = true, level: number = -1): any {\n    if (level === 0) return this.data;\n    const data: any = {};\n    this.pages.forEach(p => {\n      if (includePages) {\n        const pageValues = {};\n        if (p.collectValues(pageValues, level - 1)) {\n          data[p.name] = pageValues;\n        }\n      } else {\n        p.collectValues(data, level);\n      }\n    });\n    return data;\n  }\n  public setStructuredData(data: any, doMerge: boolean = false): void {\n    if (!data) return;\n    const res: any = {};\n    for (let key in data) {\n      const q = this.getQuestionByValueName(key);\n      if (q) {\n        res[key] = data[key];\n      } else {\n        let panel: PanelModelBase = this.getPageByName(key);\n        if (!panel) {\n          panel = this.getPanelByName(key);\n        }\n        if (panel) {\n          this.collectDataFromPanel(panel, res, data[key]);\n        }\n      }\n    }\n    if (doMerge) {\n      this.mergeData(res);\n    } else {\n      this.data = res;\n    }\n  }\n  private collectDataFromPanel(panel: PanelModelBase, output: any, data: any): void {\n    for (let key in data) {\n      let el = panel.getElementByName(key);\n      if (!el) continue;\n      if (el.isPanel) {\n        this.collectDataFromPanel(<PanelModel>el, output, data[key]);\n      } else {\n        output[key] = data[key];\n      }\n    }\n  }\n  private onEditingObjPropertyChanged: (sender: Base, options: any) => void;\n  public get editingObj(): Base {\n    return this.editingObjValue;\n  }\n  public set editingObj(val: Base) {\n    if (this.editingObj == val) return;\n    this.unConnectEditingObj();\n    this.editingObjValue = val;\n    if (this.isDisposed) return;\n    if (!val) {\n      var questions = this.getAllQuestions();\n      for (var i = 0; i < questions.length; i++) {\n        questions[i].unbindValue();\n      }\n    }\n    if (!!this.editingObj) {\n      this.setDataCore({});\n      this.onEditingObjPropertyChanged = (sender: Base, options: any) => {\n        if (!Serializer.hasOriginalProperty(this.editingObj, options.name))\n          return;\n        if (options.name === \"locale\") {\n          this.setDataCore({});\n        }\n        this.updateOnSetValue(options.name, (<any>this.editingObj)[options.name], options.oldValue);\n      };\n      this.editingObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n    }\n  }\n  private unConnectEditingObj(): void {\n    if (!!this.editingObj && !this.editingObj.isDisposed) {\n      this.editingObj.onPropertyChanged.remove(\n        this.onEditingObjPropertyChanged\n      );\n    }\n  }\n  public get isEditingSurveyElement(): boolean {\n    return !!this.editingObj;\n  }\n  private setCalculatedValuesIntoResult(result: any) {\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      var calValue = this.calculatedValues[i];\n      if (\n        calValue.includeIntoResult &&\n        !!calValue.name &&\n        this.getVariable(calValue.name) !== undefined\n      ) {\n        result[calValue.name] = this.getVariable(calValue.name);\n      }\n    }\n  }\n  getAllValues(): any {\n    return this.data;\n  }\n  /**\n   * Returns survey results as an array of objects in which the question name, title, value, and other parameters are stored as individual properties.\n   *\n   * If a question can have more than one value (Matrix, Multiple Text), its object enables the `isNode` flag and stores information about these values in the `data` property. Refer to the following help topic for more information: [Access Full Survey Results](https://surveyjs.io/form-library/documentation/handle-survey-results-access#access-full-survey-results).\n   *\n   * If you want to skip empty answers, pass an object with the `includeEmpty` property set to `false`.\n   */\n  public getPlainData(options?: IPlainDataOptions): Array<IQuestionPlainData> {\n    if (!options) {\n      options = { includeEmpty: true, includeQuestionTypes: false, includeValues: false };\n    }\n    const result: Array<IQuestionPlainData> = [];\n    const questionValueNames: Array<string> = [];\n    this.getAllQuestions().forEach((question) => {\n      var resultItem = (<Question>question).getPlainData(options);\n      if (!!resultItem) {\n        result.push(resultItem);\n        questionValueNames.push(question.valueName || question.name);\n      }\n    });\n    if (!!options.includeValues) {\n      const keys = this.getValuesKeys();\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (questionValueNames.indexOf(key) == -1) {\n          var dataValue = this.getDataValueCore(this.valuesHash, key);\n          if (!!dataValue) {\n            result.push({\n              name: key,\n              title: key,\n              value: dataValue,\n              displayValue: dataValue,\n              isNode: false,\n              getString: (val: any) =>\n                typeof val === \"object\" ? JSON.stringify(val) : val,\n            });\n          }\n        }\n      }\n    }\n    return result;\n  }\n  getFilteredValues(): any {\n    const values: { [index: string]: any } = {};\n    for (var key in this.variablesHash) values[key] = this.variablesHash[key];\n    this.addCalculatedValuesIntoFilteredValues(values);\n    if (!this.isDesignMode) {\n      const keys = this.getValuesKeys();\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        values[key] = this.getDataValueCore(this.valuesHash, key);\n      }\n      this.getAllQuestions().forEach(q => {\n        if (q.hasFilteredValue) {\n          values[q.getFilteredName()] = q.getFilteredValue(true);\n        }\n      });\n    }\n    return values;\n  }\n  private addCalculatedValuesIntoFilteredValues(values: {\n    [index: string]: any,\n  }) {\n    var caclValues = this.calculatedValues;\n    for (var i = 0; i < caclValues.length; i++)\n      values[caclValues[i].name] = caclValues[i].value;\n  }\n  getFilteredProperties(): any {\n    return { survey: this };\n  }\n  private getValuesKeys(): Array<string> {\n    if (!this.editingObj) return Object.keys(this.valuesHash);\n    var props = Serializer.getPropertiesByObj(this.editingObj);\n    var res = [];\n    for (var i = 0; i < props.length; i++) {\n      res.push(props[i].name);\n    }\n    return res;\n  }\n  public getDataValueCore(valuesHash: any, key: string): any {\n    if (!!this.editingObj)\n      return Serializer.getObjPropertyValue(this.editingObj, key);\n    return this.getDataFromValueHash(valuesHash, key);\n  }\n  public setDataValueCore(valuesHash: any, key: string, value: any) {\n    if (!!this.editingObj) {\n      Serializer.setObjPropertyValue(this.editingObj, key, value);\n    } else {\n      this.setDataToValueHash(valuesHash, key, value);\n    }\n  }\n  public deleteDataValueCore(valuesHash: any, key: string) {\n    if (!!this.editingObj) {\n      (<any>this.editingObj)[key] = null;\n    } else {\n      this.deleteDataFromValueHash(valuesHash, key);\n    }\n  }\n  valueHashGetDataCallback: (valuesHash: any, key: string) => any;\n  valueHashSetDataCallback: (valuesHash: any, key: string, value: any) => void;\n  valueHashDeleteDataCallback: (valuesHash: any, key: string) => void;\n  private getDataFromValueHash(valuesHash: any, key: string): any {\n    if (!!this.valueHashGetDataCallback) return this.valueHashGetDataCallback(valuesHash, key);\n    return valuesHash[key];\n  }\n  private setDataToValueHash(valuesHash: any, key: string, value: any): void {\n    if (!!this.valueHashSetDataCallback) {\n      this.valueHashSetDataCallback(valuesHash, key, value);\n    } else {\n      valuesHash[key] = value;\n    }\n  }\n  private deleteDataFromValueHash(valuesHash: any, key: string): void {\n    if (!!this.valueHashDeleteDataCallback) {\n      this.valueHashDeleteDataCallback(valuesHash, key);\n    } else {\n      delete valuesHash[key];\n    }\n  }\n  /**\n   * An object with all comment values.\n   * @see Question.showCommentArea\n   * @see storeOthersAsComment\n   */\n  public get comments(): any {\n    var result: { [index: string]: any } = {};\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key.indexOf(this.commentSuffix) > 0) {\n        result[key] = this.getDataValueCore(this.valuesHash, key);\n      }\n    }\n    return result;\n  }\n  /**\n   * Returns an array of visible pages without the start page.\n   *\n   * To get an array of all pages, use the [`pages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#pages) property. If all pages are visible, the `pages` and `visiblePages` arrays are identical.\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   */\n  public get visiblePages(): Array<PageModel> {\n    if (this.isDesignMode) return this.pages;\n    if (!!this.pageContainerValue && (this.isShowingPreview || this.isSinglePage)) return [this.pageContainerValue];\n    var result = new Array<PageModel>();\n    for (var i = 0; i < this.pages.length; i++) {\n      if (this.isPageInVisibleList(this.pages[i])) {\n        result.push(this.pages[i]);\n      }\n    }\n    return result;\n  }\n  private isPageInVisibleList(page: PageModel): boolean {\n    return this.isDesignMode || page.isVisible && !page.isStartPage;\n  }\n  /**\n   * Returns `true` if the survey contains zero pages.\n   * @see emptySurveyText\n   */\n  public get isEmpty(): boolean {\n    return this.pages.length == 0;\n  }\n  get PageCount(): number {\n    return this.pageCount;\n  }\n  /**\n   * Returns a total number of survey pages.\n   *\n   * To get the number of visible pages, use the [`visiblePageCount`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePageCount) property.\n   * @see pages\n   */\n  public get pageCount(): number {\n    return this.pages.length;\n  }\n  /**\n   * Returns the number of visible survey pages.\n   *\n   * To get a total number of survey pages, use the [`pageCount`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#pageCount) property.\n   * @see visiblePages\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   */\n  public get visiblePageCount(): number {\n    return this.visiblePages.length;\n  }\n  /**\n   * Returns the start page. Applies only if the [`firstPageIsStartPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#firstPageIsStartPage) property is set to `true`.\n   *\n   * Refer to the following help topic for more information: [Start Page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see firstPageIsStartPage\n   * @see activePage\n   */\n  public get startPage(): PageModel {\n    var page =\n      this.firstPageIsStartPage && this.pages.length > 1 ? this.pages[0] : null;\n    if (!!page) {\n      page.onFirstRendering();\n    }\n    return page;\n  }\n  /**\n   * @deprecated Use the [`startPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startPage) property instead.\n   */\n  public get startedPage(): PageModel { return this.startPage; }\n  /**\n   * Gets or sets the current page.\n   *\n   * If you want to change the current page, set this property to a `PageModel` object. You can get this object in different ways. For example, you can call the [`getPageByName()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#getPageByName) method to obtain a `PageModel` object with a specific name:\n   *\n   * ```js\n   * survey.currentPage = survey.getPageByName(\"my-page-name\");\n   * ```\n   *\n   * Alternative ways to change the current page are listed below:\n   *\n   * - Set the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property to the index of the required page.\n   * - Assign a required page name to the [`currentElementName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentElementName) property.\n   * - Assign a required page to the [`currentElement`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentElement) property.\n   *\n   * The `currentPage` property does not return the start page even if it is current. Use the [`activePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#activePage) property instead if your survey contains a start page.\n   */\n  public get currentPage(): any {\n    return this.getPropertyValue(\"currentPage\", null);\n  }\n  public set currentPage(value: any) {\n    if (this.isLoadingFromJson) return;\n    var newPage = this.getPageByObject(value);\n    if (!!value && !newPage) return;\n    if (!newPage && this.isCurrentPageAvailable) return;\n    var vPages = this.visiblePages;\n    if (newPage != null && vPages.indexOf(newPage) < 0) return;\n    if (newPage == this.currentPage) return;\n    const curEl = this.currentSingleElement;\n    if (!this.isShowingPreview && !!curEl && newPage !== (<any>curEl).page) {\n      this.currentSingleElement = newPage.getFirstVisibleElement();\n      return;\n    }\n    var oldValue = this.currentPage;\n    if (!this.isShowingPreview && !curEl && !this.currentPageChanging(newPage, oldValue)) return;\n    this.setPropertyValue(\"currentPage\", newPage);\n    if (!!newPage) {\n      newPage.onFirstRendering();\n      newPage.updateCustomWidgets();\n    }\n    this.locStrsChanged();\n    if (!this.isShowingPreview) {\n      this.currentPageChanged(newPage, oldValue);\n    }\n  }\n  /**\n   * Specifies the current page, panel, or question (depends on the [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) value) using its [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   *\n   * The following table illustrates the dependency between `questionsOnPageMode` values and the types of survey elements that the `currentElementName` property can specify:\n   *\n   * | `questionsOnPageMode` | Survey element |\n   * | --------------------- | -------------- |\n   * | `\"standard\"` or `\"singlePage\"` | Page |\n   * | `\"questionPerPage\"` | Question or Panel |\n   * | `\"inputPerPage\"` | Question |\n   * @see currentElement\n   */\n  public get currentElementName(): string {\n    return this.currentElement?.name || \"\";\n  }\n  public set currentElementName(val: string) {\n    if (!!val) {\n      this.currentElement = this.getElementByName(val);\n    }\n  }\n  /**\n   * Gets or sets the current page, panel, or question (depends on the [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) value).\n   *\n   * The following table illustrates the dependency between `questionsOnPageMode` values and the types of survey elements that the `currentElement` property can contain:\n   *\n   * | `questionsOnPageMode` | Survey element |\n   * | --------------------- | -------------- |\n   * | `\"standard\"` or `\"singlePage\"` | Page |\n   * | `\"questionPerPage\"` | Question or Panel |\n   * | `\"inputPerPage\"` | Question |\n   */\n  public get currentElement(): ISurveyElement {\n    return this.currentSingleElement || this.currentPage;\n  }\n  public set currentElement(val: ISurveyElement) {\n    if (val) {\n      if (val.isPage) {\n        this.currentPage = <PageModel>val;\n      } else {\n        const page = (<any>val).page;\n        if (!!page && !this.isSingleVisibleQuestion) {\n          this.currentPage = page;\n        } else {\n          this.currentSingleElement = <IElement>val;\n        }\n      }\n    }\n  }\n  /**\n   * Returns a page, panel, or question with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   * @param name A survey element name.\n   * @returns A survey element with the specified name.\n   * @see currentElementName\n   */\n  public getElementByName(name: string): ISurveyElement {\n    if (!name) return null;\n    return this.getPageByName(name) || this.getPanelByName(name) || this.getQuestionByName(name);\n  }\n  public tryNavigateToPage(page: PageModel/*, serverValidationRes?: (res: boolean)=> void*/): boolean {\n    if (!this.performValidationOnPageChanging(page)) return false;\n    const index = this.visiblePages.indexOf(page);\n    const res = index < this.currentPageNo || !this.doServerValidation(false, false, page);\n    if (res) {\n      this.currentPage = page;\n    }\n    return res;\n  }\n  private performValidationOnPageChanging(page: PageModel): boolean {\n    if (this.isDesignMode) return false;\n    if (this.canGoTroughValidation()) return true;\n    const index = this.visiblePages.indexOf(page);\n    if (index < 0 || index >= this.visiblePageCount) return false;\n    if (index === this.currentPageNo) return false;\n    if (index < this.currentPageNo || this.checkErrorsMode === \"onComplete\" || this.validationAllowSwitchPages)\n      return true;\n    if (!this.validateCurrentPage()) return false;\n    for (let i = this.currentPageNo + 1; i < index; i++) {\n      const page = this.visiblePages[i];\n      if (!page.validate(true, true)) return false;\n      page.passed = true;\n    }\n    return true;\n  }\n\n  private updateCurrentPage(): void {\n    if (this.isCurrentPageAvailable) return;\n    this.currentPage = this.firstVisiblePage;\n  }\n  private get isCurrentPageAvailable(): boolean {\n    const page = this.currentPage;\n    return !!page && this.isPageInVisibleList(page) && this.isPageExistsInSurvey(page);\n  }\n  private isPageExistsInSurvey(page: PageModel): boolean {\n    if (this.pages.indexOf(page) > -1) return true;\n    return !!this.onContainsPageCallback && this.onContainsPageCallback(page);\n  }\n  /**\n   * Returns [`startPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startPage) if the survey currently displays a start page; otherwise, returns [`currentPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPage).\n   * @see startPage\n   * @see currentPage\n   * @see firstPageIsStartPage\n   */\n  public get activePage(): any {\n    return this.getPropertyValue(\"activePage\");\n  }\n  /**\n   * A Boolean value that indicates whether the [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page) is currently displayed.\n   */\n  public get isStartPageActive(): boolean {\n    return this.state === \"starting\";\n  }\n  /**\n   * @deprecated Use the [`isStartPageActive`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#isStartPageActive) property instead.\n   */\n  public get isShowStartingPage(): boolean {\n    return this.isStartPageActive;\n  }\n  /**\n   * Specifies which part of a matrix row responds to a drag gesture in [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) questions.\n   *\n   * Possible values:\n   *\n   * - `\"entireItem\"` (default) - Users can use the entire matrix row as a drag handle.\n   * - `\"icon\"` - Users can only use a drag icon as a drag handle.\n   */\n  public get matrixDragHandleArea(): string {\n    return this.getPropertyValue(\"matrixDragHandleArea\", \"entireItem\");\n  }\n  public set matrixDragHandleArea(val: string) {\n    this.setPropertyValue(\"matrixDragHandleArea\", val);\n  }\n  public get isShowingPage(): boolean {\n    return this.state == \"running\" || this.state == \"preview\" || this.isStartPageActive;\n  }\n  private updateActivePage(): void {\n    const newPage = this.isStartPageActive ? this.startPage : this.currentPage;\n    if (newPage !== this.activePage) {\n      this.setPropertyValue(\"activePage\", newPage);\n    }\n  }\n  private onStateAndCurrentPageChanged(): void {\n    this.updateActivePage();\n    this.updateButtonsVisibility();\n  }\n  private getPageByObject(value: any): PageModel {\n    if (!value) return null;\n    if (value.getType && value.getType() == \"page\") return value;\n    if (typeof value === \"string\" || value instanceof String)\n      return this.getPageByName(String(value));\n    if (!isNaN(value)) {\n      var index = Number(value);\n      var vPages = this.visiblePages;\n      if (value < 0 || value >= vPages.length) return null;\n      return vPages[index];\n    }\n    return value;\n  }\n  /**\n   * A zero-based index of the current page in the [`visiblePages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePages) array.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-editprevious/ (linkStyle))\n   * @see visiblePages\n   */\n  public get currentPageNo(): number {\n    return this.visiblePages.indexOf(this.currentPage);\n  }\n  public set currentPageNo(value: number) {\n    var vPages = this.visiblePages;\n    if (value < 0 || value >= vPages.length) return;\n    this.currentPage = vPages[value];\n  }\n  /**\n   * Specifies the sort order of questions in the survey.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` (default) - Preserves the original order of questions.\n   * - `\"random\"` - Displays questions in random order.\n   *\n   * You can override this property for individual pages and panels.\n   * @see PageModel.questionOrder\n   * @see PanelModel.questionOrder\n   */\n  public get questionOrder(): string {\n    return this.getPropertyValue(\"questionOrder\");\n  }\n  public set questionOrder(val: string) {\n    this.setPropertyValue(\"questionOrder\", val);\n  }\n  /**\n   * @deprecated Use the [`questionOrder`](#questionOrder) property instead.\n   */\n  public get questionsOrder(): string { return this.questionOrder; }\n  public set questionsOrder(val: string) { this.questionOrder = val; }\n  /**\n   * Focuses the first question on the current page.\n   * @see focusQuestion\n   * @see autoFocusFirstQuestion\n   */\n  public focusFirstQuestion() {\n    if (this.focusingQuestionInfo) return;\n    var page = this.activePage;\n    if (page) {\n      page.scrollToTop();\n      page.focusFirstQuestion();\n    }\n  }\n  scrollToTopOnPageChange(doScroll: boolean = true): void {\n    var page = this.activePage;\n    if (!page) return;\n    if (doScroll) {\n      page.scrollToTop();\n    }\n    if (this.isCurrentPageRendering && this.autoFocusFirstQuestion && !this.focusingQuestionInfo) {\n      page.focusFirstQuestion();\n      this.isCurrentPageRendering = false;\n    }\n  }\n  /**\n   * Returns the current survey state.\n   *\n   * Possible values:\n   *\n   * - `\"loading\"` - The survey is being loaded from a JSON schema.\n   * - `\"empty\"` - The survey has no elements to display.\n   * - `\"starting\"` - The survey displays a [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * - `\"running\"` - A respondent is taking the survey.\n   * - `\"preview\"` - A respondent is [previewing](https://surveyjs.io/form-library/examples/survey-showpreview/) answers before submitting them.\n   * - `\"completed\"` - A respondent has completed the survey and submitted the results.\n   */\n  public get state(): string {\n    return this.getPropertyValue(\"state\", \"empty\");\n  }\n  private updateState(): void {\n    this.setPropertyValue(\"state\", this.calcState());\n  }\n  private calcState(): string {\n    if (this.isLoading) return \"loading\";\n    if (this.isCompleted) return \"completed\";\n    if (this.isCompletedBefore) return \"completedbefore\";\n    if (\n      !this.isDesignMode &&\n      this.isEditMode &&\n      this.isStartedState &&\n      this.startPage\n    )\n      return \"starting\";\n    if (this.isShowingPreview) return this.currentPage ? \"preview\" : \"empty\";\n    return this.currentPage ? \"running\" : \"empty\";\n  }\n  private get isCompleted(): boolean {\n    return this.getPropertyValue(\"isCompleted\", false);\n  }\n  private set isCompleted(val: boolean) {\n    this.setPropertyValue(\"isCompleted\", val);\n  }\n  private get isShowingPreview(): boolean {\n    return this.getPropertyValue(\"isShowingPreview\", false);\n  }\n  private set isShowingPreview(val: boolean) {\n    if (this.isShowingPreview == val) return;\n    this.setPropertyValue(\"isShowingPreview\", val);\n    this.onShowingPreviewChanged();\n  }\n  private get isStartedState(): boolean {\n    return this.getPropertyValue(\"isStartedState\", false);\n  }\n  private set isStartedState(val: boolean) {\n    this.setPropertyValue(\"isStartedState\", val);\n  }\n  private get isCompletedBefore(): boolean {\n    return this.getPropertyValue(\"isCompletedBefore\", false);\n  }\n  private set isCompletedBefore(val: boolean) {\n    this.setPropertyValue(\"isCompletedBefore\", val);\n  }\n  private get isLoading(): boolean {\n    return this.getPropertyValue(\"isLoading\", false);\n  }\n  private set isLoading(val: boolean) {\n    this.setPropertyValue(\"isLoading\", val);\n  }\n  /**\n   * Displays the [Loading page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#loadingHtml).\n   * @see endLoading\n   */\n  public beginLoading(): void {\n    this.isLoading = true;\n  }\n  /**\n   * Stops displaying the [Loading page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#loadingHtml).\n   * @see beginLoading\n   */\n  public endLoading(): void {\n    this.isLoading = false;\n  }\n  public get completedState(): string {\n    return this.getPropertyValue(\"completedState\", \"\");\n  }\n  get completedStateText(): string {\n    return this.getPropertyValue(\"completedStateText\", \"\");\n  }\n  protected setCompletedState(value: string, text: string): void {\n    this.setPropertyValue(\"completedState\", value);\n    if (!text) {\n      if (value == \"saving\") text = this.getLocalizationString(\"savingData\");\n      if (value == \"error\") text = this.getLocalizationString(\"savingDataError\");\n      if (value == \"success\") text = this.getLocalizationString(\"savingDataSuccess\");\n    }\n    this.setPropertyValue(\"completedStateText\", text);\n    if (this.state === \"completed\" && this.showCompletePage && !!this.completedState) {\n      this.notify(this.completedStateText, this.completedState, value === \"error\");\n    }\n  }\n  /**\n   * Displays a toast notification with a specified message.\n   *\n   * Depending on the `type` argument, a survey can display the following notification types:\n   *\n   * ![Toast notification types in SurveyJS Form Library](https://surveyjs.io//Content/Images/docs/notification-types.png)\n   * @param message A message to display.\n   * @param type A notification type: `\"info\"` (default), `\"success\"`, or `\"error\"`.\n   * @param showActions For internal use.\n   */\n  public notify(message: string, type: string, showActions: boolean = false): void {\n    this.notifier.showActions = showActions;\n    this.notifier.notify(message, type, showActions);\n  }\n  /**\n   * Resets the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) and, optionally, [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data). If `state` is `\"completed\"`, it becomes `\"running\"`.\n   * @param clearData *(Optional)* Specifies whether to clear survey data. Default value: `true`.\n   * @param goToFirstPage *(Optional)* Specifies whether to switch the survey to the first page. Default value: `true`.\n   */\n  public clear(clearData: boolean = true, goToFirstPage: boolean = true): void {\n    this.isCompleted = false;\n    this.isCompletedBefore = false;\n    this.isLoading = false;\n    this.completedByTriggers = undefined;\n    this.skippedPages = [];\n    if (clearData) {\n      this.setDataCore(null, true);\n    }\n    this.timerModel.spent = 0;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].timeSpent = 0;\n      this.pages[i].setWasShown(false);\n      this.pages[i].passed = false;\n    }\n    this.onFirstPageIsStartedChanged();\n    if (goToFirstPage) {\n      this.currentPage = this.firstVisiblePage;\n      if (this.currentSingleElement) {\n        const questions = this.getSingleElements();\n        this.currentSingleElement = questions.length > 0 ? questions[0] : undefined;\n      }\n    }\n    if (clearData) {\n      this.updateValuesWithDefaults();\n    }\n  }\n  public mergeValues(src: any, dest: any): void {\n    mergeValues(src, dest);\n  }\n  private updateValuesWithDefaults(): void {\n    if (this.isDesignMode || this.isLoading) return;\n    for (var i = 0; i < this.pages.length; i++) {\n      var questions = this.pages[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        questions[j].updateValueWithDefaults();\n      }\n    }\n  }\n  protected updateCustomWidgets(page: PageModel): void {\n    if (!page) return;\n    page.updateCustomWidgets();\n  }\n  protected currentPageChanging(newValue: PageModel, oldValue: PageModel, newQuestion?: Question, oldQuestion?: Question): boolean {\n    const options = this.createPageChangeEventOptions(newValue, oldValue, newQuestion, oldQuestion);\n    return this.currentPageChangingFromOptions(options);\n  }\n  private currentPageChangingFromOptions(options: any): boolean {\n    options.allow = true;\n    options.allowChanging = true;\n    this.onCurrentPageChanging.fire(this, options);\n    const allow = options.allowChanging && options.allow;\n    if (allow && options.newCurrentPage !== options.oldCurrentPage) {\n      this.isCurrentPageRendering = true;\n    }\n    return allow;\n  }\n  protected currentPageChanged(newValue: PageModel, oldValue: PageModel): void {\n    this.notifyQuestionsOnHidingContent(oldValue);\n    if (oldValue && !oldValue.isDisposed && !oldValue.passed) {\n      if (oldValue.validate(false)) {\n        oldValue.passed = true;\n      }\n    }\n    if (this.isCurrentPageRendered === true) {\n      this.isCurrentPageRendered = false;\n    }\n    if (!this.currentSingleElement) {\n      const options = this.createPageChangeEventOptions(newValue, oldValue);\n      this.onCurrentPageChanged.fire(this, options);\n    }\n  }\n  private notifyQuestionsOnHidingContent(page: PageModel): void {\n    if (page && !page.isDisposed) {\n      page.questions.forEach(q => q.onHidingContent());\n    }\n  }\n  private createPageChangeEventOptions(newValue: PageModel, oldValue: PageModel, newQuestion?: Question, oldQuestion?: Question): CurrentPageChangedEvent {\n    const diff = !!newValue && !!oldValue ? newValue.visibleIndex - oldValue.visibleIndex : 0;\n    let qDiff = diff;\n    if (qDiff === 0 && !!oldQuestion && !!newQuestion) {\n      qDiff = newValue.elements.indexOf(newQuestion) - newValue.elements.indexOf(oldQuestion);\n    }\n    return {\n      oldCurrentQuestion: oldQuestion,\n      newCurrentQuestion: newQuestion,\n      oldCurrentPage: oldValue,\n      newCurrentPage: newValue,\n      isNextPage: diff === 1,\n      isPrevPage: diff === -1,\n      isGoingForward: qDiff > 0,\n      isGoingBackward: qDiff < 0,\n      isAfterPreview: this.changeCurrentPageFromPreview === true\n    };\n  }\n  public getProgress(): number {\n    if (this.currentPage == null) return 0;\n    if (this.progressBarType !== \"pages\") {\n      var info = this.getProgressInfo();\n      if (this.progressBarType === \"requiredQuestions\") {\n        return info.requiredQuestionCount >= 1\n          ? Math.ceil(\n            (info.requiredAnsweredQuestionCount * 100) /\n            info.requiredQuestionCount\n          )\n          : 100;\n      }\n      return info.questionCount >= 1\n        ? Math.ceil((info.answeredQuestionCount * 100) / info.questionCount)\n        : 100;\n    }\n    const visPages = this.visiblePages;\n    var index = visPages.indexOf(this.currentPage);\n    return Math.ceil((index * 100) / visPages.length);\n  }\n  public get isNavigationButtonsShowing(): string {\n    if (this.isDesignMode) return \"none\";\n    var page = this.activePage;\n    if (!page) return \"none\";\n    if (page.navigationButtonsVisibility === \"hide\") {\n      return \"none\";\n    }\n    if (page.navigationButtonsVisibility === \"show\") {\n      return !this.showNavigationButtons ? \"bottom\" : this.navigationButtonsLocation;\n    }\n    return !this.showNavigationButtons ? \"none\" : this.navigationButtonsLocation;\n  }\n  public get isNavigationButtonsShowingOnTop(): boolean {\n    return this.getIsNavigationButtonsShowingOn(\"top\");\n  }\n  public get isNavigationButtonsShowingOnBottom(): boolean {\n    return this.getIsNavigationButtonsShowingOn(\"bottom\");\n  }\n  private getIsNavigationButtonsShowingOn(buttonPosition: string): boolean {\n    var res = this.isNavigationButtonsShowing;\n    return res == \"both\" || res == \"topBottom\" || res == buttonPosition;\n  }\n  public get isEditMode(): boolean {\n    return !this.readOnly;\n  }\n  public get isDisplayMode(): boolean { //\n    return this.readOnly && !this.isDesignMode || this.state == \"preview\";\n  }\n  public get isUpdateValueTextOnTyping(): boolean {\n    return this.textUpdateMode == \"onTyping\";\n  }\n  /**\n   * Indicates whether the survey is being designed in [Survey Creator](https://surveyjs.io/survey-creator/documentation/overview).\n   */\n  public get isDesignMode(): boolean {\n    return this._isDesignMode;\n  }\n  private _isDesignMode: boolean = false;\n  public setDesignMode(value: boolean): void {\n    if (!!this._isDesignMode != !!value) {\n      this._isDesignMode = !!value;\n      this.onQuestionsOnPageModeChanged(\"standard\");\n    }\n  }\n  /**\n   * Specifies whether to show all survey elements, regardless of their visibility.\n   *\n   * Default value: `false`\n   */\n  public get showInvisibleElements(): boolean {\n    return this.getPropertyValue(\"showInvisibleElements\", false);\n  }\n  public set showInvisibleElements(val: boolean) {\n    var visPages = this.visiblePages;\n    this.setPropertyValue(\"showInvisibleElements\", val);\n    if (this.isLoadingFromJson) return;\n    this.runConditions();\n    this.updateAllElementsVisibility(visPages);\n  }\n  private updateAllElementsVisibility(visPages: Array<PageModel>) {\n    for (var i = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      page.updateElementVisibility();\n      if (visPages.indexOf(page) > -1 != page.isVisible) {\n        this.onPageVisibleChanged.fire(this, {\n          page: page,\n          visible: page.isVisible,\n        });\n      }\n    }\n  }\n  public get areInvisibleElementsShowing(): boolean {\n    return this.isDesignMode || this.showInvisibleElements;\n  }\n  public get areEmptyElementsHidden(): boolean {\n    return (\n      this.isShowingPreview &&\n      this.showPreviewBeforeComplete && this.previewMode == \"answeredQuestions\" && this.isAnyQuestionAnswered\n    );\n  }\n  private get isAnyQuestionAnswered(): boolean {\n    const questions = this.getAllQuestions(true);\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  /**\n   * Indicates whether the browser has a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName). If this property's value is `true`, the respondent has passed the survey previously.\n   * @see setCookie\n   * @see deleteCookie\n   */\n  public get hasCookie(): boolean {\n    if (!this.cookieName) return false;\n    var cookies = DomDocumentHelper.getCookie();\n    return cookies && cookies.indexOf(this.cookieName + \"=true\") > -1;\n  }\n  /**\n   * Sets a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) in the browser. If the `cookieName` property value is defined, this method is automatically called on survey completion.\n   * @see hasCookie\n   * @see deleteCookie\n   */\n  public setCookie() {\n    if (!this.cookieName) return;\n    DomDocumentHelper.setCookie(this.cookieName + \"=true; expires=Fri, 31 Dec 9999 0:0:0 GMT\");\n  }\n  /**\n   * Deletes a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) from the browser.\n   * @see hasCookie\n   * @see setCookie\n   */\n  public deleteCookie() {\n    if (!this.cookieName) return;\n    DomDocumentHelper.setCookie(this.cookieName + \"=;\");\n  }\n  /**\n   * @deprecated Use the [`validationEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#validationEnabled) property instead.\n   */\n  public get ignoreValidation(): boolean { return !this.validationEnabled; }\n  public set ignoreValidation(val: boolean) { this.validationEnabled = !val; }\n  /**\n   * Specifies whether data validation is enabled.\n   *\n   * Default value: `true`\n   * @see checkErrorsMode\n   * @see hideRequiredErrors\n   */\n  @property({ defaultValue: true }) validationEnabled: boolean;\n  /**\n   * Specifies whether respondents can switch the current page even if it contains validation errors.\n   *\n   * Default value: `false`\n   * @see checkErrorsMode\n   */\n  public validationAllowSwitchPages: boolean = false;\n  /**\n   * Specifies whether respondents can end a survey with validation errors.\n   *\n   * Default value: `false`\n   * @see checkErrorsMode\n   */\n  public validationAllowComplete: boolean = false;\n  /**\n   * Switches the survey to the next page.\n   *\n   * This method returns a Boolean value that indicates whether the page was successfully switched. `false` is returned if the current page is the last page or if it contains validation errors.\n   * @returns `true` if the page was successfully switched; `false` otherwise.\n   * @see isLastPage\n   * @see prevPage\n   * @see completeLastPage\n   */\n  public nextPage(): boolean {\n    if (this.currentSingleElement) return this.performNext();\n    if (this.isLastPage) return false;\n    return this.doCurrentPageComplete(false);\n  }\n  public performNext(): boolean {\n    const q: any = this.currentSingleElement;\n    if (!q) return this.nextPage();\n    this.resetNavigationButton();\n    if (this.isSingleVisibleInput) {\n      if (!q.validateSingleInput()) return false;\n      if (q.nextSingleInput()) {\n        this.updateButtonsVisibility();\n        return true;\n      }\n    }\n    if (!this.validationEnabled) {\n      this.performNextAfterValidation(q);\n      return true;\n    }\n    const questions = q.isQuestion ? [q] : q.visibleQuestions;\n    const res = this.validateElements(questions, true, false, (hasErrors: boolean) => {\n      if (!hasErrors) {\n        this.performNextAfterValidation(q);\n      }\n    });\n    return res === true;\n  }\n  private performNextAfterValidation(q: Question): boolean {\n    this.sendPartialResult();\n    const questions = this.getSingleElements();\n    const index = questions.indexOf(q);\n    if (index < 0 || index === questions.length - 1) return false;\n    let keys: any = {};\n    if (q.isQuestion) {\n      keys[q.name] = q.value;\n    } else {\n      if (q.isPanel) {\n        keys = q.getValue();\n      }\n    }\n    this.checkTriggers(keys, true, false, true, q.name);\n    if (q === this.currentSingleElement) {\n      this.currentSingleElement = questions[index + 1];\n    }\n  }\n  public performPrevious(): boolean {\n    return this.prevPage();\n  }\n  private validateOnNavigate(doComplete: boolean, isPreview?: boolean): boolean {\n    const skipValidation = this.canGoTroughValidation() || doComplete && this.validationAllowComplete\n    || !doComplete && (this.validationAllowSwitchPages || this.isValidateOnComplete) || isPreview && this.isValidateOnComplete;\n    const doFunc = (): void => {\n      if (isPreview) {\n        this.showPreviewCore();\n      } else {\n        this.doCurrentPageCompleteCore(doComplete);\n      }\n    };\n    if (skipValidation) {\n      doFunc();\n      return true;\n    }\n    const func = (hasErrors: boolean) => {\n      if (!hasErrors) {\n        doFunc();\n      }\n    };\n    if (this.isValidateOnComplete) {\n      if (!this.isLastPage) {\n        doFunc();\n        return true;\n      }\n      return this.validate(true, this.autoFocusFirstError, func, true) !== true;\n    }\n    return this.validateCurrentPage(func) !== false;\n  }\n  private canGoTroughValidation(): boolean { return !this.isEditMode || !this.validationEnabled; }\n  public get isCurrentPageHasErrors(): boolean {\n    return this.validateActivePage() === false;\n  }\n  /**\n   * Returns `true` if the current page does not contain errors.\n   * @see currentPage\n   */\n  public get isCurrentPageValid(): boolean {\n    return this.validateActivePage();\n  }\n  public hasCurrentPageErrors(onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    return this.hasPageErrors(undefined, onAsyncValidation);\n  }\n  /**\n   * Validates all questions on the current page and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validateCurrentPage` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see currentPage\n   * @see validate\n   * @see validateCurrentPage\n   */\n  public validateCurrentPage(onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    return this.validatePage(undefined, onAsyncValidation);\n  }\n  public hasPageErrors(page?: PageModel, onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    const res = this.validatePage(page, onAsyncValidation);\n    if (res === undefined) return res;\n    return !res;\n  }\n  /**\n   * Validates all questions on a specified page and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validatePage` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param page Pass the `PageModel` that you want to validate. You can pass `undefined` to validate the [`activePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#activePage).\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see validate\n   * @see validateCurrentPage\n   */\n  public validatePage(page?: PageModel, onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    if (!page) {\n      page = this.activePage;\n    }\n    if (!page) return true;\n    return this.validatePageCore(page, true, onAsyncValidation);\n  }\n  public hasErrors(fireCallback: boolean = true, focusOnFirstError: boolean = false, onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    const res = this.validate(fireCallback, focusOnFirstError, onAsyncValidation);\n    if (res === undefined) return res;\n    return !res;\n  }\n  /**\n   * Validates all questions and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validate` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @param focusFirstError *(Optional)* Pass `true` if you want to focus the first question with a validation error. The survey will be switched to the page that contains this question if required.\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see validateCurrentPage\n   * @see validatePage\n   */\n  public validate(fireCallback: boolean = true, focusFirstError: boolean = false, onAsyncValidation?: (hasErrors: boolean) => void, changeCurrentPage?: boolean): boolean {\n    return this.validateElements(this.visiblePages, fireCallback, focusFirstError, onAsyncValidation, changeCurrentPage);\n  }\n  private validateElements(elements: Array<PanelModelBase| Question>, fireCallback: boolean = true, focusFirstError: boolean = false, onAsyncValidation?: (hasErrors: boolean) => void, changeCurrentPage?: boolean): boolean {\n    if (!!onAsyncValidation) {\n      fireCallback = true;\n    }\n    const callbackResult = !!onAsyncValidation ? (res: boolean) => { onAsyncValidation(!res); } : undefined;\n    const context = new ValidationContext({ fireCallback: fireCallback, focusOnFirstError: focusFirstError, callbackResult: callbackResult, changeCurrentPage: !!changeCurrentPage });\n    for (const element of elements) {\n      element.validateElement(context);\n    }\n    context.finish();\n    return context.runningResult;\n  }\n  public ensureUniqueNames(element: ISurveyElement = null): void {\n    if (element == null) {\n      for (var i = 0; i < this.pages.length; i++) {\n        this.ensureUniqueName(this.pages[i]);\n      }\n    } else {\n      this.ensureUniqueName(element);\n    }\n  }\n  private ensureUniqueName(element: ISurveyElement) {\n    if (element.isPage) {\n      this.ensureUniquePageName(element);\n    }\n    if (element.isPanel) {\n      this.ensureUniquePanelName(element);\n    }\n    if (element.isPage || element.isPanel) {\n      var elements = (<IPanel>element).elements;\n      for (var i = 0; i < elements.length; i++) {\n        this.ensureUniqueNames(elements[i]);\n      }\n    } else {\n      this.ensureUniqueQuestionName(element);\n    }\n  }\n  private ensureUniquePageName(element: ISurveyElement) {\n    return this.ensureUniqueElementName(\n      element,\n      (name: string): ISurveyElement => {\n        return this.getPageByName(name);\n      }\n    );\n  }\n  private ensureUniquePanelName(element: ISurveyElement) {\n    return this.ensureUniqueElementName(\n      element,\n      (name: string): ISurveyElement => {\n        return this.getPanelByName(name);\n      }\n    );\n  }\n  private ensureUniqueQuestionName(element: ISurveyElement) {\n    return this.ensureUniqueElementName(\n      element,\n      (name: string): ISurveyElement => {\n        return this.getQuestionByName(name);\n      }\n    );\n  }\n  private ensureUniqueElementName(\n    element: ISurveyElement,\n    getElementByName: (name: string) => ISurveyElement\n  ) {\n    var existingElement = getElementByName(element.name);\n    if (!existingElement || existingElement == element) return;\n    var newName = this.getNewName(element.name);\n    while(!!getElementByName(newName)) {\n      var newName = this.getNewName(element.name);\n    }\n    element.name = newName;\n  }\n  private getNewName(name: string): string {\n    var pos = name.length;\n    while(pos > 0 && name[pos - 1] >= \"0\" && name[pos - 1] <= \"9\") {\n      pos--;\n    }\n    var base = name.substring(0, pos);\n    var num = 0;\n    if (pos < name.length) {\n      num = parseInt(name.substring(pos));\n    }\n    num++;\n    return base + num;\n  }\n  private validateActivePage(isFocuseOnFirstError?: boolean): boolean {\n    return this.validatePageCore(this.activePage, isFocuseOnFirstError);\n  }\n  private validatePageCore(page: PageModel, isFocuseOnFirstError?: boolean, onAsyncValidation?: (hasErrors: boolean) => void): boolean {\n    if (isFocuseOnFirstError === undefined) {\n      isFocuseOnFirstError = this.focusOnFirstError;\n    }\n    if (!page) return true;\n    let callback = undefined;\n    if (onAsyncValidation) {\n      callback = (res: boolean) => { onAsyncValidation(!res); };\n    }\n    const res = page.validate(true, isFocuseOnFirstError, callback);\n    this.fireValidatedErrorsOnPage(page);\n    return res;\n  }\n  private fireValidatedErrorsOnPage(page: PageModel) {\n    if (this.onValidatePage.isEmpty || !page) return;\n    const questionsOnPage = this.getNestedQuestionsByQuestionArray(page.questions, true);\n    var questions = new Array<Question>();\n    var errors = new Array<SurveyError>();\n    for (var i = 0; i < questionsOnPage.length; i++) {\n      var q = questionsOnPage[i];\n      if (q.errors.length > 0) {\n        questions.push(q);\n        for (var j = 0; j < q.errors.length; j++) {\n          errors.push(q.errors[j]);\n        }\n      }\n    }\n    this.onValidatePage.fire(this, {\n      questions: questions,\n      errors: errors,\n      page: page,\n    });\n  }\n  /**\n   * Switches the survey to the previous page.\n   *\n   * This method returns a Boolean value that indicates whether the page was successfully switched. `false` is returned if the current page is the first page.\n   * @returns `true` if the page was successfully switched; `false` otherwise.\n   * @see isFirstPage\n   * @see nextPage\n   */\n  public prevPage(): boolean {\n    if (this.isFirstPage || this.state === \"starting\") return false;\n    this.resetNavigationButton();\n    const curElement = this.currentSingleElement;\n    if (this.doSkipOnPrevPage(curElement)) return true;\n    if (curElement) return this.prevPageSingleElement(curElement);\n\n    const vPages = this.visiblePages;\n    const index = vPages.indexOf(this.currentPage);\n    this.currentPage = vPages[index - 1];\n    return true;\n  }\n  private doSkipOnPrevPage(curElement: IElement): boolean {\n    const toEl = curElement || this.currentPage;\n    const skipped = this.skippedPages.find(sp => sp.to === toEl);\n    let elTo: any = undefined;\n    if (!!skipped) {\n      this.skippedPages.splice(this.skippedPages.indexOf(skipped), 1);\n      const el = skipped.from;\n      if (!el.isDisposed && el.isVisible) {\n        elTo = el;\n      }\n    }\n    if (!!elTo) {\n      if (!!curElement) {\n        this.currentSingleElement = elTo;\n      } else {\n        this.currentPage = elTo;\n      }\n    }\n    return !!elTo;\n  }\n  private prevPageSingleElement(curElement: IElement): boolean {\n    if (this.isSingleVisibleInput) {\n      if ((<Question>curElement).prevSingleInput()) {\n        this.updateButtonsVisibility();\n        return true;\n      }\n    }\n    const questions = this.getSingleElements();\n    const index = questions.indexOf(curElement);\n    if (index === 0) return false;\n    this.currentSingleElement = questions[index - 1];\n    return true;\n  }\n  /**\n   * Completes the survey if it currently displays the last page and the page contains no validation errors. If both these conditions are met, this method returns `true`; otherwise, `false`.\n   *\n   * If you want to complete the survey regardless of the current page and validation errors, use the [`doComplete()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completeLastPage) event.\n   * @see isCurrentPageValid\n   * @see nextPage\n   */\n  public tryComplete(): boolean {\n    if (this.isValidateOnComplete) {\n      this.cancelPreview();\n    }\n    let res = this.doCurrentPageComplete(true);\n    return this.isCompleted;\n  }\n  /**\n   * @deprecated Use the [`tryComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#tryComplete) method instead.\n   */\n  public completeLastPage(): boolean {\n    return this.tryComplete();\n  }\n  private isNavigationButtonPressed: boolean = false;\n  public navigationMouseDown(): boolean {\n    this.isNavigationButtonPressed = true;\n    return true;\n  }\n  private resetNavigationButton() {\n    this.isNavigationButtonPressed = false;\n  }\n  private mouseDownPage: any = null;\n  public nextPageUIClick(): boolean {\n    if (!!this.mouseDownPage && this.mouseDownPage !== this.activePage) return false;\n    this.mouseDownPage = null;\n    return this.performNext();\n  }\n  public nextPageMouseDown(): boolean {\n    this.mouseDownPage = this.activePage;\n    return this.navigationMouseDown();\n  }\n  /**\n   * Displays a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page). Returns `false` if the preview cannot be displayed because of validation errors.\n   * @see cancelPreview\n   * @see showPreviewBeforeComplete\n   * @see onShowingPreview\n   * @see state\n   */\n  public showPreview(): boolean {\n    this.resetNavigationButton();\n    if (!this.isValidateOnComplete && this.doServerValidation(true, true)) return false;\n    if (!this.validateOnNavigate(true, true)) return false;\n    return this.isShowingPreview;\n  }\n  private showPreviewCore(): void {\n    var options = { allowShowPreview: true, allow: true };\n    this.onShowingPreview.fire(this, options);\n    this.isShowingPreview = options.allowShowPreview && options.allow;\n  }\n  /**\n   * Cancels a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page) and switches the survey to the page specified by the `currentPage` parameter.\n   * @param currentPage A new current page. If you do not specify this parameter, the survey displays the last page.\n   * @see showPreview\n   * @see showPreviewBeforeComplete\n   * @see state\n   */\n  public cancelPreview(currentPage: any = null): void {\n    if (!this.isShowingPreview) return;\n    this.gotoPageFromPreview = currentPage;\n    this.isShowingPreview = false;\n    const page = <PageModel>(<any>this.currentSingleElement)?.page;\n    if (!!page) {\n      page.updateRows();\n      this.currentPage = page;\n    }\n  }\n  private gotoPageFromPreview: PageModel;\n  public cancelPreviewByPage(panel: IPanel): any {\n    this.cancelPreview(<PageModel>panel);\n  }\n  protected doCurrentPageComplete(doComplete: boolean): boolean {\n    if (this.isValidatingOnServer) return false;\n    this.resetNavigationButton();\n    return this.validateOnNavigate(doComplete) === true;\n  }\n  private doCurrentPageCompleteCore(doComplete: boolean): boolean {\n    if (this.doServerValidation(doComplete)) return false;\n    if (doComplete) {\n      this.currentPage.passed = true;\n      const res = this.doComplete(this.canBeCompletedByTrigger, this.completedTrigger);\n      if (res) {\n        this.cancelPreview();\n      }\n      return res;\n    }\n    this.doNextPage();\n    return true;\n  }\n  public get isSinglePage(): boolean {\n    return this.questionsOnPageMode == \"singlePage\";\n  }\n  public set isSinglePage(val: boolean) {\n    this.questionsOnPageMode = val ? \"singlePage\" : \"standard\";\n  }\n  public get isSingleVisibleQuestion(): boolean {\n    return !this.isDesignMode && (this.isSingleVisibleQuestionVal(this.questionsOnPageMode) || this.isSingleVisibleInput);\n  }\n  public get isSingleVisibleInput(): boolean {\n    return !this.isDesignMode && this.questionsOnPageMode == \"inputPerPage\";\n  }\n  private isSingleVisibleQuestionVal(val: string): boolean {\n    return val === \"questionPerPage\" || val === \"questionOnPage\";\n  }\n  /**\n   * Specifies how to distribute survey elements between pages.\n   *\n   * Possible values:\n   *\n   * - `\"singlePage\"` - Combines all survey pages into a single page.\n   * - `\"questionPerPage\"` - Displays each question on a separate page.\n   * - `\"inputPerPage\"` - Displays each input field on a separate page. Complex questions&mdash;such as [Single-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model), [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list), [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model), [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), and [Multiple Textboxes](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model)&mdash;are split so that each input field appears on its own page. [View Demo](https://surveyjs.io/form-library/examples/loop-and-merge/)\n   * - `\"standard\"` (default) - Retains the original structure specified in the JSON schema.\n   */\n  public get questionsOnPageMode(): string {\n    return this.getPropertyValue(\"questionsOnPageMode\");\n  }\n  public set questionsOnPageMode(val: string) {\n    this.setPropertyValue(\"questionsOnPageMode\", val);\n  }\n  /**\n   * Gets or sets a Boolean value that specifies whether the first page is a start page.\n   *\n   * Refer to the following help topic for more information: [Start Page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see startPage\n   * @see activePage\n   */\n  public get firstPageIsStartPage(): boolean {\n    return this.getPropertyValue(\"firstPageIsStartPage\");\n  }\n  public set firstPageIsStartPage(val: boolean) {\n    this.setPropertyValue(\"firstPageIsStartPage\", val);\n  }\n  /**\n   * @deprecated Use the [`firstPageIsStartPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#firstPageIsStartPage) property instead.\n   */\n  public get firstPageIsStarted(): boolean {\n    return this.firstPageIsStartPage;\n  }\n  public set firstPageIsStarted(val: boolean) {\n    this.firstPageIsStartPage = val;\n  }\n  isPageStarted(page: IPage): boolean {\n    return (\n      this.firstPageIsStartPage && this.pages.length > 1 && this.pages[0] === page\n    );\n  }\n  /**\n   * Specifies whether to show a preview of given answers before they are submitted.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-preview/ (linkStyle))\n   * @see previewMode\n   * @see showPreview\n   * @see cancelPreview\n   */\n  public get showPreviewBeforeComplete(): boolean | any {\n    return this.getPropertyValue(\"showPreviewBeforeComplete\");\n  }\n  public set showPreviewBeforeComplete(val: boolean | any) {\n    this.setShowPreviewBeforeComplete(val);\n  }\n  public setShowPreviewBeforeComplete(val: boolean | any) {\n    if (val === undefined || val === \"noPreview\" || val === false) {\n      this.setPropertyValue(\"showPreviewBeforeComplete\", false);\n    } else {\n      this.setPropertyValue(\"showPreviewBeforeComplete\", true);\n      if (val === \"showAllQuestions\")this.previewMode = \"allQuestions\";\n      if (val === \"showAnsweredQuestions\")this.previewMode = \"answeredQuestions\";\n    }\n  }\n  /**\n   * Specifies whether the [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page) includes all or only answered questions.\n   *\n   * Possible values:\n   *\n   * - `\"allQuestions\"` (default)\n   * - `\"answeredQuestions\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-preview/ (linkStyle))\n   */\n  public get previewMode(): string {\n    return this.getPropertyValue(\"previewMode\");\n  }\n  public set previewMode(val: string) {\n    this.setPropertyValue(\"previewMode\", val);\n  }\n  protected onFirstPageIsStartedChanged(): void {\n    this.isStartedState = this.firstPageIsStartPage && this.pages.length > 1;\n    this.pageVisibilityChanged(this.pages[0], !this.isStartedState);\n  }\n  private runningPages: any;\n  private pageContainerValue: PageModel;\n  private onShowingPreviewChanged() {\n    this.updatePagesContainer();\n  }\n  private createRootPage(name: string, pages: Array<PageModel>): PageModel {\n    const container = Serializer.createClass(\"page\");\n    container.name = name;\n    container.isPageContainer = true;\n    pages.forEach(page => {\n      if (!page.isStartPage) {\n        container.addElement(page);\n      }\n    });\n    return container;\n  }\n  private disposeContainerPage(): void {\n    let cPage = this.pageContainerValue;\n    const elements = [].concat(cPage.elements);\n    elements.forEach(el => cPage.removeElement(el));\n    cPage.dispose();\n    this.pageContainerValue = undefined;\n  }\n  private updatePagesContainer(): void {\n    if (this.isDesignMode) return;\n    this.getAllQuestions().forEach(q => q.updateElementVisibility());\n    this.setPropertyValue(\"currentPage\", undefined);\n    const singleName = \"single-page\";\n    const previewName = \"preview-page\";\n    let rootPage: PageModel = undefined;\n    if (this.isSinglePage) {\n      const cPage = this.pageContainerValue;\n      if (cPage && cPage.name === previewName) {\n        rootPage = <PageModel>cPage.elements[0];\n        this.disposeContainerPage();\n      } else {\n        rootPage = this.createRootPage(singleName, this.pages);\n      }\n    }\n    if (this.isShowingPreview) {\n      rootPage = this.createRootPage(previewName, rootPage ? [rootPage] : this.pages);\n    }\n    if (rootPage) {\n      rootPage.setSurveyImpl(this);\n      this.pageContainerValue = rootPage;\n      this.currentPage = rootPage;\n      if (!!this.currentSingleElementValue) {\n        this.visiblePages.forEach(page => page.updateRows());\n      }\n    }\n    if (!this.isSinglePage && !this.isShowingPreview) {\n      this.disposeContainerPage();\n      let curPage = this.gotoPageFromPreview;\n      this.gotoPageFromPreview = null;\n      if (Helpers.isValueEmpty(curPage) && this.visiblePageCount > 0) {\n        curPage = this.visiblePages[this.visiblePageCount - 1];\n      }\n      if (!!curPage) {\n        this.changeCurrentPageFromPreview = true;\n        this.currentPage = curPage;\n        this.changeCurrentPageFromPreview = false;\n      }\n    }\n    if (!this.currentPage && this.visiblePageCount > 0) {\n      this.currentPage = this.visiblePages[0];\n    }\n    if (this.isShowingPreview) {\n      this.pages.forEach(page => {\n        page.onFirstRendering();\n      });\n    }\n    this.pages.forEach(page => {\n      if (page.wasRendered) {\n        page.updateElementCss(true);\n      }\n    });\n    this.updateButtonsVisibility();\n  }\n  private currentSingleElementValue: IElement;\n  private getSingleElements(includeEl?: IElement): Array<IElement> {\n    const res = new Array<IElement>();\n    const pages = this.pages;\n    const isSingleInput = this.isSingleVisibleInput;\n    for (var i: number = 0; i < pages.length; i++) {\n      const p = pages[i];\n      if (!p.isStartPage && p.isVisible) {\n        const els: Array<any> = [];\n        if (isSingleInput) {\n          p.addQuestionsToList(els, true);\n        } else {\n          p.elements.forEach(el => els.push(el));\n        }\n        els.forEach(el => { if (el === includeEl || el.isVisible) res.push(el); });\n      }\n    }\n    return res;\n  }\n  public get currentSingleElement(): IElement {\n    return !this.isShowingPreview ? this.currentSingleElementValue : undefined;\n  }\n  public set currentSingleElement(val: IElement) {\n    if (!!val && val.isQuestion && this.isSingleVisibleQuestionVal(this.questionsOnPageMode)) {\n      while(val.parent && val.parent.isPanel) {\n        val = <IElement>(<any>val.parent);\n      }\n    }\n    const oldVal = this.currentSingleElement;\n    if (val !== oldVal && !this.isCompleted) {\n      const valQuestion = val?.isQuestion ? <Question>val : undefined;\n      const oldValQuestion = oldVal?.isQuestion ? <Question>oldVal : undefined;\n      const page = <PageModel>(<any>val)?.page;\n      const options: any = !!page && !!oldVal ? this.createPageChangeEventOptions(page, <PageModel>(<any>oldVal).page, valQuestion, oldValQuestion) : undefined;\n      if (!!options && !this.currentPageChangingFromOptions(options)) return;\n      this.currentSingleElementValue = val;\n      if (!!val) {\n        if (this.isSingleVisibleInput && val.isQuestion) {\n          (<Question>val).onSetAsSingleInput();\n        }\n        page.updateRows();\n        if (page !== this.currentPage) {\n          this.currentPage = page;\n        } else {\n          if (!!valQuestion && this.autoFocusFirstQuestion) {\n            valQuestion.focus();\n          }\n        }\n        this.updateButtonsVisibility();\n        if (!!options) {\n          this.onCurrentPageChanged.fire(this, options);\n        }\n      } else {\n        this.visiblePages.forEach(page => page.updateRows());\n      }\n    }\n  }\n  public get currentSingleQuestion(): Question {\n    const res = this.currentSingleElement;\n    return !!res && res.isQuestion ? <Question>res : undefined;\n  }\n  public set currentSingleQuestion(val: Question) {\n    this.currentSingleElement = val;\n  }\n  public supportsNestedSingleInput(question: IQuestion): boolean {\n    const options = { question: <Question>question, enabled: true };\n    this.onCheckSingleInputPerPageMode.fire(this, options);\n    return options.enabled;\n  }\n  private changeCurrentSingleElementOnVisibilityChanged(): void {\n    const el = this.currentSingleElement;\n    if (!el || el.isVisible) return;\n    const els = this.getSingleElements(el);\n    const index = els.indexOf(el);\n    const newEl = (index > 0) ? els[index - 1] : (index < els.length - 1 ? els[index + 1] : undefined);\n    this.currentSingleElement = newEl;\n  }\n  private changeCurrentPageFromPreview: boolean;\n  protected onQuestionsOnPageModeChanged(oldValue: string): void {\n    if (this.isShowingPreview || this.isDesignMode) return;\n    this.skippedPages = [];\n    this.currentSingleElement = undefined;\n    if (oldValue === \"singlePage\") {\n      this.updatePagesContainer();\n    }\n    if (oldValue === \"inputPerPage\") {\n      this.getAllQuestions().forEach(q => q.resetSingleInput());\n    }\n    if (this.isSinglePage) {\n      this.updatePagesContainer();\n    }\n    this.setupSingleInputNavigationActions();\n    if (this.isSingleVisibleQuestion) {\n      const els = this.getSingleElements();\n      if (els.length > 0) {\n        this.currentSingleElement = els[0];\n      }\n    }\n  }\n  private setupSingleInputNavigationActions(): void {\n    const actionAddId = \"sv-singleinput-add\";\n    if (this.isSingleVisibleInput) {\n      const addItem = (): void => {\n        this.currentSingleQuestion.singleInputAddItem(true);\n        this.resetNavigationButton();\n      };\n      this.addNavigationItem({ id: actionAddId, visible: false, action: (): void => addItem() });\n    } else {\n      this.removeNavigationItem(actionAddId);\n    }\n  }\n  private getPageStartIndex(): number {\n    return this.firstPageIsStartPage && this.pages.length > 0 ? 1 : 0;\n  }\n  /**\n   * Indicates whether the [current page](#currentPage) is the first page.\n   *\n   * > If the survey displays the [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page), this property contains `false`. Use the [`isStartPageActive`](#isStartPageActive) property to find out whether the start page is currently displayed.\n   */\n  public get isFirstPage(): boolean {\n    return this.getPropertyValue(\"isFirstPage\");\n  }\n  /**\n   * Indicates whether the [current page](#currentPage) is the last page.\n   */\n  public get isLastPage(): boolean {\n    return this.getPropertyValue(\"isLastPage\");\n  }\n  public updateNavigationElements(): void {\n    this.updateButtonsVisibility();\n  }\n  private updateButtonsVisibility(): void {\n    this.updateIsFirstLastPageState();\n    this.setPropertyValue(\"isShowPrevButton\", this.calcIsShowPrevButton());\n    this.setPropertyValue(\"isShowNextButton\", this.calcIsShowNextButton());\n    this.setPropertyValue(\"isCompleteButtonVisible\", this.calcIsCompleteButtonVisible());\n    this.setPropertyValue(\"isPreviewButtonVisible\", this.calcIsPreviewButtonVisible());\n    this.setPropertyValue(\"isCancelPreviewButtonVisible\", this.calcIsCancelPreviewButtonVisible());\n    this.updateSingleInputActions();\n  }\n  private updateSingleInputActions() {\n    if (!this.isSingleVisibleInput) return;\n    const q = this.currentSingleQuestion;\n    if (!q) return;\n    const addBtn = this.navigationBar.getActionById(\"sv-singleinput-add\");\n    if (addBtn) {\n      addBtn.title = q.getSingleInputAddText();\n      addBtn.visible = !!addBtn.title;\n    }\n  }\n  public get isShowPrevButton(): boolean {\n    return this.getPropertyValue(\"isShowPrevButton\");\n  }\n  public get isShowNextButton(): boolean {\n    return this.getPropertyValue(\"isShowNextButton\");\n  }\n  public get isCompleteButtonVisible(): boolean {\n    return this.getPropertyValue(\"isCompleteButtonVisible\");\n  }\n  public get isPreviewButtonVisible(): boolean {\n    return this.getPropertyValue(\"isPreviewButtonVisible\");\n  }\n  public get isCancelPreviewButtonVisible(): boolean {\n    return this.getPropertyValue(\"isCancelPreviewButtonVisible\");\n  }\n  public get isFirstElement(): boolean | undefined {\n    return this.getPropertyValue(\"isFirstElement\");\n  }\n  public get isLastElement(): boolean | undefined {\n    return this.getPropertyValue(\"isLastElement\");\n  }\n  private updateIsFirstLastPageState() {\n    const curPage = this.currentPage;\n    let fVal: boolean | undefined = undefined;\n    let lVal: boolean | undefined = undefined;\n    const q = this.currentSingleElement;\n    if (!!q) {\n      let isFirstInput = true;\n      let isLastInput = true;\n      if (this.isSingleVisibleInput) {\n        const inputState = (<Question>q).getSingleInputElementPos();\n        if (inputState !== 0) {\n          isFirstInput = inputState === -1;\n          isLastInput = inputState === 1;\n        }\n      }\n      const questions = this.getSingleElements();\n      const index = questions.indexOf(q);\n      if (index >= 0) {\n        fVal = isFirstInput && index === 0;\n        lVal = isLastInput && index === questions.length - 1;\n      }\n    }\n    this.setPropertyValue(\"isFirstPage\", !!curPage && curPage === this.firstVisiblePage && (!q || fVal === true));\n    this.setPropertyValue(\"isLastPage\", !!curPage && curPage === this.lastVisiblePage && (!q || lVal === true));\n    this.setPropertyValue(\"isFirstElement\", fVal);\n    this.setPropertyValue(\"isLastElement\", lVal);\n  }\n  private get isLastPageOrElement(): boolean {\n    return this.isLastElement !== undefined ? this.isLastElement : this.isLastPage;\n  }\n  private get isFirstPageOrElement(): boolean {\n    return this.isFirstElement !== undefined ? this.isFirstElement : this.isFirstPage;\n  }\n  private calcIsShowPrevButton(): boolean {\n    if (this.isFirstPageOrElement || !this.showPrevButton || this.state !== \"running\") return false;\n    if (this.isFirstElement !== undefined) return true;\n    const page = this.visiblePages[this.currentPageNo - 1];\n    return page && page.getMaxTimeToFinish() <= 0;\n  }\n  private calcIsShowNextButton(): boolean {\n    return this.state === \"running\" && !this.isLastPageOrElement && !this.canBeCompletedByTrigger;\n  }\n  public calcIsCompleteButtonVisible(): boolean {\n    const state = this.state;\n    return this.isEditMode && (this.state === \"running\" &&\n      (this.isLastPageOrElement && !this.showPreviewBeforeComplete || this.canBeCompletedByTrigger)\n      || state === \"preview\") && this.showCompleteButton;\n  }\n  private calcIsPreviewButtonVisible(): boolean {\n    return (\n      this.isEditMode &&\n      this.showPreviewBeforeComplete &&\n      this.state == \"running\" && this.isLastPageOrElement\n    );\n  }\n  private calcIsCancelPreviewButtonVisible(): boolean {\n    return (\n      this.isEditMode &&\n      this.showPreviewBeforeComplete &&\n      this.state == \"preview\"\n    );\n  }\n  private get firstVisiblePage(): PageModel {\n    if (this.visiblePageCount === 1) return this.visiblePages[0];\n    const pages = this.pages;\n    for (let i = 0; i < pages.length; i++) {\n      if (this.isPageInVisibleList(pages[i])) return pages[i];\n    }\n    return null;\n  }\n  private get lastVisiblePage(): PageModel {\n    if (this.visiblePageCount === 1) return this.visiblePages[0];\n    const pages = this.pages;\n    for (let i = pages.length - 1; i >= 0; i--) {\n      if (this.isPageInVisibleList(pages[i])) return pages[i];\n    }\n    return null;\n  }\n  /**\n   * Completes the survey.\n   *\n   * When you call this method, Form Library performs the following actions:\n   *\n   * 1. Saves a cookie if the [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) property is set.\n   * 1. Switches the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) to `\"completed\"`.\n   * 1. Raises the [`onComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onComplete) event.\n   * 1. Navigates the user to a URL specified by the [`navigateToUrl`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#navigateToUrl) or [`navigateToUrlOnCondition`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#navigateToUrlOnCondition) property.\n   *\n   * The `doComplete()` method completes the survey regardless of validation errors and the current page. If you need to ensure that survey results are valid and full, call the [`completeLastPage()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completeLastPage) method instead.\n   *\n   * @param isCompleteOnTrigger For internal use.\n   * @param completeTrigger For internal use.\n   * @returns `false` if survey completion is cancelled within the [`onCompleting`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCompleting) event handler; otherwise, `true`.\n   */\n  public doComplete(isCompleteOnTrigger: boolean = false, completeTrigger?: Trigger): boolean {\n    if (this.isCompleted) return;\n    if (!this.checkOnCompletingEvent(isCompleteOnTrigger, completeTrigger)) {\n      this.isCompleted = false;\n      return false;\n    }\n    this.checkOnPageTriggers(true);\n    this.stopTimer();\n    this.notifyQuestionsOnHidingContent(this.currentPage);\n    this.isCompleted = true;\n    this.clearUnusedValues();\n    this.saveDataOnComplete(isCompleteOnTrigger, completeTrigger);\n    this.setCookie();\n    return true;\n  }\n  private saveDataOnComplete(isCompleteOnTrigger: boolean = false, completeTrigger?: Trigger) {\n    let previousCookie = this.hasCookie;\n    const showSaveInProgress = (text: string) => {\n      savingDataStarted = true;\n      this.setCompletedState(\"saving\", text);\n    };\n    const showSaveError = (text: string) => {\n      this.setCompletedState(\"error\", text);\n    };\n    const showSaveSuccess = (text: string) => {\n      this.setCompletedState(\"success\", text);\n      this.navigateTo();\n    };\n    const clearSaveMessages = (text: string) => {\n      this.setCompletedState(\"\", \"\");\n    };\n    var savingDataStarted = false;\n    var onCompleteOptions = {\n      isCompleteOnTrigger: isCompleteOnTrigger,\n      completeTrigger: completeTrigger,\n      showSaveInProgress: showSaveInProgress,\n      showSaveError: showSaveError,\n      showSaveSuccess: showSaveSuccess,\n      clearSaveMessages: clearSaveMessages,\n      //Obsolete functions\n      showDataSaving: showSaveInProgress,\n      showDataSavingError: showSaveError,\n      showDataSavingSuccess: showSaveSuccess,\n      showDataSavingClear: clearSaveMessages\n    };\n    this.onComplete.fire(this, onCompleteOptions);\n    if (!previousCookie && this.surveyPostId) {\n      this.sendResult();\n    }\n    if (!savingDataStarted) {\n      this.navigateTo();\n    }\n  }\n  private checkOnCompletingEvent(isCompleteOnTrigger: boolean, completeTrigger?: Trigger): boolean {\n    var options = {\n      allowComplete: true,\n      allow: true,\n      isCompleteOnTrigger: isCompleteOnTrigger,\n      completeTrigger: completeTrigger\n    };\n    this.onCompleting.fire(this, options);\n    return options.allowComplete && options.allow;\n  }\n  /**\n   * Starts the survey. Applies only if the survey has a [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see firstPageIsStartPage\n   * @see completeLastPage\n   */\n  public start(): boolean {\n    if (!this.firstPageIsStartPage) return false;\n    this.isCurrentPageRendering = true;\n    if (!this.validatePageCore(this.startPage, true)) return false;\n    this.isStartedState = false;\n    this.notifyQuestionsOnHidingContent(this.pages[0]);\n    this.startTimerFromUI();\n    this.onStarted.fire(this, {});\n    this.updateVisibleIndexes();\n    this.currentPageNo = 0;\n    if (!!this.currentPage) {\n      this.currentPage.locStrsChanged();\n    }\n    return true;\n  }\n  /**\n   * Indicates whether the current page is being [validated on a server](#onServerValidateQuestions).\n   */\n  public get isValidatingOnServer(): boolean {\n    return this.getPropertyValue(\"isValidatingOnServer\", false);\n  }\n  private serverValidationEventCount: number;\n  private setIsValidatingOnServer(val: boolean) {\n    if (val == this.isValidatingOnServer) return;\n    this.setPropertyValue(\"isValidatingOnServer\", val);\n    this.onIsValidatingOnServerChanged();\n  }\n  private createServerValidationOptions(doComplete: boolean, isPreview: boolean, page: PageModel): ServerValidateQuestionsEvent {\n    var self = this;\n    const options = {\n      data: <{ [index: string]: any }>{},\n      errors: {},\n      survey: this,\n      complete: function () {\n        self.completeServerValidation(options, isPreview, page);\n      },\n    };\n    if (doComplete && this.isValidateOnComplete) {\n      options.data = this.data;\n    } else {\n      var questions = this.activePage.questions;\n      for (var i = 0; i < questions.length; i++) {\n        var question = questions[i];\n        if (!question.visible) continue;\n        var value = this.getValue(question.getValueName());\n        if (!this.isValueEmpty(value))\n          options.data[question.getValueName()] = value;\n      }\n    }\n    return options;\n  }\n  protected onIsValidatingOnServerChanged() { }\n  protected doServerValidation(doComplete: boolean, isPreview: boolean = false, page?: PageModel): boolean {\n    if (\n      !this.onServerValidateQuestions ||\n      (<EventBase<SurveyModel>>this.onServerValidateQuestions).isEmpty\n    )\n      return false;\n    if (!doComplete && this.isValidateOnComplete) return false;\n    this.setIsValidatingOnServer(true);\n    const isFunc = typeof this.onServerValidateQuestions === \"function\";\n    this.serverValidationEventCount = !isFunc ? this.onServerValidateQuestions.length : 1;\n    if (isFunc) {\n      (<Function><any>this.onServerValidateQuestions)(this, this.createServerValidationOptions(doComplete, isPreview, page));\n    } else {\n      (<EventBase<SurveyModel, ServerValidateQuestionsEvent>>this.onServerValidateQuestions).fireByCreatingOptions(this, () => { return this.createServerValidationOptions(doComplete, isPreview, page); });\n    }\n    return true;\n  }\n  private completeServerValidation(options: any, isPreview: boolean, page: PageModel) {\n    if (this.serverValidationEventCount > 1) {\n      this.serverValidationEventCount--;\n      if (!!options && !!options.errors && Object.keys(options.errors).length === 0) return;\n    }\n    this.serverValidationEventCount = 0;\n    this.setIsValidatingOnServer(false);\n    if (!options && !options.survey) return;\n    var self = options.survey;\n    let isValid = true;\n    if (options.errors) {\n      var hasToFocus = this.autoFocusFirstError;\n      for (var name in options.errors) {\n        var question = self.getQuestionByName(name);\n        if (question && question[\"errors\"]) {\n          isValid = false;\n          question.addError(new CustomError(options.errors[name], this));\n          if (hasToFocus) {\n            hasToFocus = false;\n            if (!!question.page) {\n              this.currentPage = question.page;\n            }\n            question.focus(true);\n          }\n        }\n      }\n      this.fireValidatedErrorsOnPage(this.currentPage);\n    }\n    if (isValid) {\n      if (isPreview) {\n        this.showPreviewCore();\n      } else {\n        if (page) {\n          this.currentPage = page;\n        } else {\n          if (self.isLastPage) self.doComplete();\n          else self.doNextPage();\n        }\n      }\n    }\n  }\n  protected doNextPage() {\n    var curPage = this.currentPage;\n    this.checkOnPageTriggers(false);\n    this.sendPartialResult();\n    if (!this.isCompleted) {\n      if (curPage === this.currentPage) {\n        var vPages = this.visiblePages;\n        var index = vPages.indexOf(this.currentPage);\n        this.currentPage = vPages[index + 1];\n      }\n    } else {\n      this.doComplete(true);\n    }\n  }\n  public setCompleted(trigger: Trigger): void {\n    this.doComplete(true, trigger);\n  }\n  private sendPartialResult(): void {\n    if (this.partialSendEnabled && !this.isCompleted) {\n      this.sendResult(this.surveyPostId, this.clientId, true);\n    }\n  }\n  canBeCompleted(trigger: Trigger, isCompleted: boolean): void {\n    if (!settings.triggers.changeNavigationButtonsOnComplete) return;\n    const prevCanBeCompleted = this.canBeCompletedByTrigger;\n    if (!this.completedByTriggers)this.completedByTriggers = {};\n    if (isCompleted) {\n      this.completedByTriggers[trigger.id] = { trigger: trigger, pageId: this.currentPage?.id };\n    } else {\n      delete this.completedByTriggers[trigger.id];\n    }\n    if (prevCanBeCompleted !== this.canBeCompletedByTrigger) {\n      this.updateButtonsVisibility();\n    }\n  }\n  private completedByTriggers: HashTable<any>;\n  private get canBeCompletedByTrigger(): boolean {\n    if (!this.completedByTriggers) return false;\n    const keys = Object.keys(this.completedByTriggers);\n    if (keys.length === 0) return false;\n    const id = this.currentPage?.id;\n    if (!id) return true;\n    for (let i = 0; i < keys.length; i++) {\n      if (id === this.completedByTriggers[keys[i]].pageId) return true;\n    }\n    return false;\n  }\n  private get completedTrigger(): Trigger {\n    if (!this.canBeCompletedByTrigger) return undefined;\n    const key = Object.keys(this.completedByTriggers)[0];\n    return this.completedByTriggers[key].trigger;\n  }\n  /**\n   * Returns HTML content displayed on the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * To specify HTML content, use the [`completedHtml`](#completedHtml) property.\n   */\n  public get processedCompletedHtml(): string {\n    var html = this.renderedCompletedHtml;\n    return !!html ? this.processHtml(html, \"completed\") : \"\";\n  }\n  /**\n   * Returns HTML content displayed to a user who has completed the survey before. To identify such users, the survey uses a [cookie name](#cookieName).\n   *\n   * To specify HTML content, use the [`completedBeforeHtml`](#completedBeforeHtml) property.\n   */\n  public get processedCompletedBeforeHtml(): string {\n    return this.locCompletedBeforeHtml.textOrHtml;\n  }\n  /**\n   * Returns HTML content displayed while a survey JSON schema is [being loaded](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#beginLoading).\n   *\n   * To specify HTML content, use the [`loadingHtml`](#loadingHtml) property.\n   */\n  public get processedLoadingHtml(): string {\n    return this.locLoadingHtml.textOrHtml;\n  }\n  public getProgressInfo(): IProgressInfo {\n    var pages = this.isDesignMode ? this.pages : this.visiblePages;\n    return SurveyElement.getProgressInfoByElements(pages, false);\n  }\n  public get progressBarAriaLabel(): string {\n    return getLocaleString(\"progressbar\", this.getLocale());\n  }\n  /**\n   * Returns text displayed by the progress bar (for instance, \"Page 2 of 3\" or \"Answered 3/8 questions\"). Handle the [`onGetProgressText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetProgressText) event to change this text.\n   * @see progressValue\n   * @see showProgressBar\n   * @see progressBarType\n   */\n  public get progressText(): string {\n    return this.progressBar.progressText;\n  }\n  /**\n   * Returns a percentage value that indicates user progress in the survey.\n   * @see showProgressBar\n   * @see progressBarType\n   * @see progressText\n   */\n  public get progressValue(): number {\n    return this.getPropertyValue(\"progressValue\", undefined, () => this.getProgress());\n  }\n  public updateProgressText(onValueChanged: boolean = false): void {\n    if (this.isShowingPreview) return;\n    if (onValueChanged && this.progressBarType == \"pages\" && this.onGetProgressText.isEmpty) return;\n    if (this.progressBarValue) {\n      this.progressBarValue.resetProgressText();\n    }\n    this.resetPropertyValue(\"progressValue\");\n  }\n  public getProgressText(): string {\n    if (!this.isDesignMode && this.currentPage == null) return \"\";\n    const options: GetProgressTextEvent = {\n      questionCount: 0,\n      answeredQuestionCount: 0,\n      requiredQuestionCount: 0,\n      requiredAnsweredQuestionCount: 0,\n      text: \"\",\n    };\n    var type = this.progressBarType.toLowerCase();\n    if (\n      type === \"questions\" ||\n      type === \"requiredquestions\" ||\n      type === \"correctquestions\" ||\n      !this.onGetProgressText.isEmpty\n    ) {\n      var info = this.getProgressInfo();\n      options.questionCount = info.questionCount;\n      options.answeredQuestionCount = info.answeredQuestionCount;\n      options.requiredQuestionCount = info.requiredQuestionCount;\n      options.requiredAnsweredQuestionCount =\n        info.requiredAnsweredQuestionCount;\n    }\n\n    options.text = this.getProgressTextCore(options);\n    this.onGetProgressText.fire(this, options);\n    return options.text;\n  }\n  private getProgressTextCore(info: IProgressInfo): string {\n    var type = this.progressBarType.toLowerCase();\n    if (type === \"questions\") {\n      return this.getLocalizationFormatString(\"questionsProgressText\",\n        info.answeredQuestionCount,\n        info.questionCount\n      );\n    }\n    if (type === \"requiredquestions\") {\n      return this.getLocalizationFormatString(\"questionsProgressText\",\n        info.requiredAnsweredQuestionCount,\n        info.requiredQuestionCount\n      );\n    }\n    if (type === \"correctquestions\") {\n      var correctAnswersCount = this.getCorrectedAnswerCount();\n      return this.getLocalizationFormatString(\"questionsProgressText\",\n        correctAnswersCount,\n        info.questionCount\n      );\n    }\n    var vPages = this.isDesignMode ? this.pages : this.visiblePages;\n    var index = vPages.indexOf(this.currentPage) + 1;\n    return this.getLocalizationFormatString(\"progressText\", index, vPages.length);\n  }\n  @property() rootCss: string;\n  public getRootCss(): string {\n    return new CssClassBuilder()\n      .append(this.css.root)\n      .append(this.css.rootProgress + \"--\" + this.progressBarType)\n      .append(this.css.rootMobile, this.isMobile)\n      .append(this.css.rootAnimationDisabled, !settings.animationEnabled)\n      .append(this.css.rootReadOnly, this.readOnly && !this.isDesignMode)\n      .append(this.css.rootCompact, this.isCompact)\n      .append(this.css.rootFitToContainer, this.fitToContainer)\n      .toString();\n  }\n  private isSmoothScrollEnabled = false;\n  private resizeObserver: ResizeObserver;\n  afterRenderSurvey(htmlElement: any) {\n    if (!DomWindowHelper.isAvailable()) return;\n    this.destroyResizeObserver();\n    if (Array.isArray(htmlElement)) {\n      htmlElement = SurveyElement.GetFirstNonTextElement(htmlElement);\n    }\n    let observedElement: HTMLElement = htmlElement;\n    const cssVariables = this.css.variables;\n    if (!!cssVariables) {\n      const mobileWidth = Number.parseFloat(DomDocumentHelper.getComputedStyle(observedElement).getPropertyValue(cssVariables.mobileWidth));\n      if (!!mobileWidth) {\n        let isProcessed = false;\n        this.resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n          DomWindowHelper.requestAnimationFrame((): void | undefined => {\n            if (isProcessed || !isContainerVisible(observedElement)) {\n              isProcessed = false;\n            } else {\n              isProcessed = this.processResponsiveness(observedElement.offsetWidth, mobileWidth, observedElement.offsetHeight);\n            }\n          });\n        });\n        this.resizeObserver.observe(observedElement);\n      }\n    }\n    this.onAfterRenderSurvey.fire(this, {\n      survey: this,\n      htmlElement: htmlElement,\n    });\n    this.rootElement = htmlElement;\n    this.scrollerElement = htmlElement.getElementsByClassName(\"sv-scroll__scroller\")[0];\n    this.addScrollEventListener();\n  }\n  beforeDestroySurveyElement() {\n    this.destroyResizeObserver();\n    this.removeScrollEventListener();\n    this.rootElement = undefined;\n    this.scrollerElement = undefined;\n  }\n  /**\n   * An event that is raised when the survey's width or height is changed.\n   */\n  onResize: EventBase<SurveyModel, ResizeEvent> = new EventBase();\n  private processResponsiveness(width: number, mobileWidth: number, height: number): boolean {\n    const isMobile = width < mobileWidth;\n    const isMobileChanged = this.isMobile !== isMobile;\n    this.setIsMobile(isMobile);\n    this.layoutElements.forEach(layoutElement => layoutElement.processResponsiveness && layoutElement.processResponsiveness(width));\n    const options = {\n      height,\n      width,\n    };\n    this.onResize.fire(this, options);\n    // this.setResponsiveStartWidth(width);\n    return isMobileChanged;\n  }\n\n  public triggerResponsiveness(hard: boolean) {\n    this.getAllQuestions().forEach(question => {\n      question.triggerResponsiveness(hard);\n    });\n  }\n\n  public destroyResizeObserver(): void {\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = undefined;\n    }\n  }\n  updateQuestionCssClasses(question: Question, cssClasses: any) {\n    this.onUpdateQuestionCssClasses.fire(this, {\n      question: question,\n      cssClasses: cssClasses,\n    });\n  }\n  updatePanelCssClasses(panel: PanelModel, cssClasses: any) {\n    this.onUpdatePanelCssClasses.fire(this, {\n      panel: panel,\n      cssClasses: cssClasses,\n    });\n  }\n  updatePageCssClasses(page: PageModel, cssClasses: any) {\n    this.onUpdatePageCssClasses.fire(this, {\n      page: page,\n      cssClasses: cssClasses,\n    });\n  }\n  updateChoiceItemCss(question: IQuestion, options: any): void {\n    options.question = question;\n    this.onUpdateChoiceItemCss.fire(this, options);\n  }\n  private isCurrentPageRendering: boolean = true;\n  private isCurrentPageRendered: boolean = undefined;\n  afterRenderPage(htmlElement: HTMLElement) {\n    if (!this.isDesignMode && !this.focusingQuestionInfo) {\n      const doScroll = this.isCurrentPageRendered === false;\n      setTimeout(() => this.scrollToTopOnPageChange(doScroll), 1);\n    }\n    this.focusQuestionInfo();\n    this.isCurrentPageRendered = true;\n    if (this.onAfterRenderPage.isEmpty) return;\n    this.onAfterRenderPage.fire(this, {\n      page: this.activePage,\n      htmlElement: htmlElement,\n    });\n  }\n  afterRenderHeader(htmlElement: HTMLElement) {\n    if (this.onAfterRenderHeader.isEmpty) return;\n    this.onAfterRenderHeader.fire(this, {\n      htmlElement: htmlElement,\n    });\n  }\n  afterRenderQuestion(question: Question, htmlElement: HTMLElement) {\n    this.onAfterRenderQuestion.fire(this, {\n      question: question,\n      htmlElement: htmlElement,\n    });\n  }\n  afterRenderQuestionInput(question: Question, htmlElement: HTMLElement) {\n    if (this.onAfterRenderQuestionInput.isEmpty) return;\n    let id = (<Question>question).inputId;\n    const { root } = settings.environment;\n    if (!!id && (!htmlElement || htmlElement.id !== id) && typeof root !== \"undefined\") {\n      let el = root.getElementById(id);\n      if (!!el) {\n        htmlElement = el;\n      }\n    }\n    this.onAfterRenderQuestionInput.fire(this, {\n      question: question,\n      htmlElement: htmlElement,\n    });\n  }\n  afterRenderPanel(panel: IElement, htmlElement: HTMLElement) {\n    this.onAfterRenderPanel.fire(this, {\n      panel: <PanelModel><any>panel,\n      htmlElement: htmlElement,\n    });\n  }\n  whenQuestionFocusIn(question: Question) {\n    this.onFocusInQuestion.fire(this, {\n      question: question\n    });\n  }\n  whenPanelFocusIn(panel: PanelModel) {\n    this.onFocusInPanel.fire(this, {\n      panel: panel\n    });\n  }\n\n  private rebuildQuestionChoices() {\n    this.getAllQuestions().forEach(q => q.surveyChoiceItemVisibilityChange());\n  }\n  canChangeChoiceItemsVisibility(): boolean {\n    return !this.onShowingChoiceItem.isEmpty;\n  }\n  getChoiceItemVisibility(question: Question, item: any, val: boolean): boolean {\n    const options: ShowingChoiceItemEvent = { question: question, item: item, visible: val };\n    this.onShowingChoiceItem.fire(this, options);\n    return options.visible;\n  }\n  loadQuestionChoices(options: { question: Question, filter: string, skip: number, take: number, setItems: (items: Array<any>, totalCount: number) => void }): void {\n    this.onChoicesLazyLoad.fire(this, options);\n  }\n  getChoiceDisplayValue(options: { question: Question, values: Array<any>, setItems: (displayValues: Array<string>, ...customValues: Array<IValueItemCustomPropValues>) => void }): void {\n    if (this.onGetChoiceDisplayValue.isEmpty) {\n      options.setItems(null);\n    } else {\n      this.onGetChoiceDisplayValue.fire(this, options);\n    }\n  }\n  matrixBeforeRowAdded(options: any) {\n    this.onMatrixRowAdding.fire(this, options);\n  }\n  matrixRowAdded(question: QuestionMatrixDynamicModel, row: any) {\n    this.onMatrixRowAdded.fire(this, { question: question, row: row });\n  }\n  matrixColumnAdded(question: Question, column: any): void {\n    this.onMatrixColumnAdded.fire(this, { question: question, column: column });\n  }\n  multipleTextItemAdded(question: QuestionMultipleTextModel, item: any): void {\n    this.onMultipleTextItemAdded.fire(this, { question: question, item: item });\n  }\n  getQuestionByValueNameFromArray(\n    valueName: string,\n    name: string,\n    index: number\n  ): IQuestion {\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!questions) return;\n    for (var i = 0; i < questions.length; i++) {\n      var res = questions[i].getQuestionFromArray(name, index);\n      if (!!res) return res;\n    }\n    return null;\n  }\n  matrixRowRemoved(question: QuestionMatrixDynamicModel, rowIndex: number, row: any) {\n    this.onMatrixRowRemoved.fire(this, {\n      question: question,\n      rowIndex: rowIndex,\n      row: row,\n    });\n  }\n  matrixRowRemoving(question: QuestionMatrixDynamicModel, rowIndex: number, row: any): boolean {\n    var options = {\n      question: question,\n      rowIndex: rowIndex,\n      row: row,\n      allow: true,\n    };\n    this.onMatrixRowRemoving.fire(this, options);\n    return options.allow;\n  }\n  matrixAllowRemoveRow(question: QuestionMatrixDynamicModel, rowIndex: number, row: any): boolean {\n    const options = { question: question, rowIndex: rowIndex, row: row, allow: true };\n    this.onMatrixRenderRemoveButton.fire(this, options);\n    return options.allow;\n  }\n  matrixDetailPanelVisibleChanged(question: QuestionMatrixDropdownModelBase, rowIndex: number, row: any, visible: boolean): void {\n    const options = { question: question, rowIndex: rowIndex, row: row, visible: visible, detailPanel: row.detailPanel };\n    this.onMatrixDetailPanelVisibleChanged.fire(this, options);\n  }\n  matrixCellCreating(question: QuestionMatrixDropdownModelBase, options: any): void {\n    options.question = question;\n    this.onMatrixCellCreating.fire(this, options);\n  }\n  matrixCellCreated(question: QuestionMatrixDropdownModelBase, options: any): void {\n    options.question = question;\n    this.onMatrixCellCreated.fire(this, options);\n  }\n  matrixAfterCellRender(options: any): void {\n    const evt = this.onAfterRenderMatrixCell;\n    if (!evt.isEmpty) {\n      options.question = options.cellQuestion?.parentQuestion;\n      evt.fire(this, options);\n    }\n  }\n  matrixCellValueChanged(question: QuestionMatrixDropdownModelBase, options: any): void {\n    options.question = question;\n    this.onMatrixCellValueChanged.fire(this, options);\n  }\n  matrixCellValueChanging(question: QuestionMatrixDropdownModelBase, options: MatrixCellValueChangingEvent): void {\n    options.question = question;\n    this.onMatrixCellValueChanging.fire(this, options);\n  }\n  get isValidateOnValueChanging(): boolean {\n    return this.checkErrorsMode === \"onValueChanging\";\n  }\n  get isValidateOnValueChanged(): boolean {\n    return this.checkErrorsMode === \"onValueChanged\";\n  }\n  private get isValidateOnValueChange(): boolean {\n    return this.isValidateOnValueChanged || this.isValidateOnValueChanging;\n  }\n  private get isValidateOnComplete(): boolean {\n    return this.checkErrorsMode === \"onComplete\" || this.validationAllowSwitchPages && !this.validationAllowComplete;\n  }\n  matrixCellValidate(question: QuestionMatrixDropdownModelBase, options: MatrixCellValidateEvent): SurveyError {\n    options.question = question;\n    this.onMatrixCellValidate.fire(this, options);\n    return options.error ? new CustomError(options.error, this) : null;\n  }\n  dynamicPanelAdded(question: QuestionPanelDynamicModel, panelIndex: number, panel: PanelModel, updateIndexes: boolean): void {\n    if (!this.isLoadingFromJson && updateIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    this.onDynamicPanelAdded.fire(this, { question: question, panel: panel, panelIndex: panelIndex });\n  }\n  dynamicPanelRemoved(question: QuestionPanelDynamicModel, panelIndex: number, panel: PanelModel, updateIndexes: boolean): void {\n    var questions = !!panel ? (<PanelModelBase>panel).questions : [];\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearOnDeletingContainer();\n    }\n    if (updateIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    this.onDynamicPanelRemoved.fire(this, {\n      question: question,\n      panelIndex: panelIndex,\n      panel: panel,\n    });\n  }\n  dynamicPanelRemoving(question: QuestionPanelDynamicModel, panelIndex: number, panel: PanelModel): boolean {\n    const options = {\n      question: question,\n      panelIndex: panelIndex,\n      panel: panel,\n      allow: true\n    };\n    this.onDynamicPanelRemoving.fire(this, options);\n    return options.allow;\n  }\n  dynamicPanelGetTabTitle(question: IQuestion, options: any): void {\n    options.question = question;\n    this.onGetDynamicPanelTabTitle.fire(this, options);\n  }\n  dynamicPanelCurrentIndexChanged(question: IQuestion, options: any): void {\n    options.question = question;\n    this.onDynamicPanelCurrentIndexChanged.fire(this, options);\n  }\n  dragAndDropAllow(options: DragDropAllowEvent): boolean {\n    this.onDragDropAllow.fire(this, options);\n    return options.allow;\n  }\n  elementContentVisibilityChanged(element: ISurveyElement): void {\n    if (this.currentPage) {\n      this.currentPage.ensureRowsVisibility();\n    }\n    this.onElementContentVisibilityChanged.fire(this, { element });\n  }\n  public getUpdatedPanelFooterActions(\n    panel: PanelModel,\n    actions: Array<IAction>, question?: QuestionPanelDynamicModel): Array<IAction> {\n    const options: GetPanelFooterActionsEvent = {\n      question: question,\n      panel: panel,\n      actions: actions,\n    };\n    this.onGetPanelFooterActions.fire(this, options);\n    return options.actions;\n  }\n  getUpdatedElementTitleActions(\n    element: ISurveyElement,\n    titleActions: Array<IAction>\n  ): Array<IAction> {\n    if (element.isPage)\n      return this.getUpdatedPageTitleActions(<PageModel>element, titleActions);\n    if (element.isPanel)\n      return this.getUpdatedPanelTitleActions(<PanelModel>element, titleActions);\n    return this.getUpdatedQuestionTitleActions(<Question>element, titleActions);\n  }\n\n  private getTitleActionsResult(titleActions: Array<IAction>, options: GetTitleActionsEventMixin) {\n    if (titleActions != options.actions) return options.actions;\n    if (titleActions != options.titleActions) return options.titleActions;\n    return titleActions;\n  }\n\n  private getUpdatedQuestionTitleActions(\n    question: Question,\n    titleActions: Array<IAction>\n  ) {\n    const options: GetQuestionTitleActionsEvent = {\n      question: question,\n      actions: titleActions,\n      titleActions: titleActions,\n    };\n    this.onGetQuestionTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n\n  private getUpdatedPanelTitleActions(\n    panel: PanelModel,\n    titleActions: Array<IAction>\n  ) {\n    const options: GetPanelTitleActionsEvent = {\n      panel: panel,\n      actions: titleActions,\n      titleActions: titleActions,\n    };\n    this.onGetPanelTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n  private getUpdatedPageTitleActions(\n    page: PageModel,\n    titleActions: Array<IAction>\n  ) {\n    var options: GetPageTitleActionsEvent = {\n      page: page,\n      actions: titleActions,\n      titleActions: titleActions,\n    };\n    this.onGetPageTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n\n  getUpdatedMatrixRowActions(\n    question: QuestionMatrixDropdownModelBase,\n    row: any,\n    actions: Array<IAction>\n  ) {\n    const options: GetMatrixRowActionsEvent = {\n      question: question,\n      actions: actions,\n      row: row,\n    };\n    this.onGetMatrixRowActions.fire(this, options);\n    return options.actions;\n  }\n\n  public skeletonHeight: number = undefined;\n\n  scrollElementToTop(\n    element: ISurveyElement, question: Question, page: PageModel,\n    id: string, scrollIfVisible?: boolean, scrollIntoViewOptions?: ScrollIntoViewOptions,\n    passedRootElement?: HTMLElement,\n    onScolledCallback?: () => void\n  ): any {\n    const options: ScrollToTopEvent = {\n      element: element,\n      question: question,\n      page: page,\n      elementId: id,\n      cancel: false,\n      allow: true,\n    };\n    this.onScrollToTop.fire(this, options);\n    if (!options.cancel && options.allow) {\n      const elementPage = this.getPageByElement(element as IElement);\n      const { rootElement } = settings.environment;\n      const surveyRootElement = this.rootElement || passedRootElement || rootElement as any;\n      if (this.isLazyRendering && !!elementPage) {\n        let elementsToRenderBefore = 1;\n        if (!!this.skeletonHeight && !!surveyRootElement && typeof surveyRootElement.getBoundingClientRect === \"function\") {\n          elementsToRenderBefore = surveyRootElement.getBoundingClientRect().height / this.skeletonHeight - 1;\n        }\n        elementPage.forceRenderElement(element as IElement, () => {\n          const htmlElement = surveyRootElement?.querySelector(`#${options.elementId}`);\n          this.suspendLazyRendering();\n          SurveyElement.ScrollElementToTop(htmlElement, scrollIfVisible, scrollIntoViewOptions, () => {\n            this.releaseLazyRendering();\n            const pageRootElement = surveyRootElement.querySelector(`#${elementPage.id}`);\n            activateLazyRenderingChecks(pageRootElement);\n            onScolledCallback && onScolledCallback();\n          });\n        }, elementsToRenderBefore);\n      } else {\n        if (element.isPage && !this.isSinglePage && !this.isDesignMode && this.rootElement) {\n          const elementToScroll = surveyRootElement.querySelector(classesToSelector(this.css.rootWrapper)) as HTMLElement;\n          SurveyElement.ScrollElementToViewCore(elementToScroll, false, scrollIfVisible, scrollIntoViewOptions, onScolledCallback);\n        } else {\n          const htmlElement = surveyRootElement?.querySelector(`#${options.elementId}`);\n          this.suspendLazyRendering();\n          SurveyElement.ScrollElementToTop(htmlElement, scrollIfVisible, scrollIntoViewOptions, () => {\n            this.releaseLazyRendering();\n            activateLazyRenderingChecks(htmlElement);\n            onScolledCallback && onScolledCallback();\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Opens a dialog window for users to select files.\n   * @param input A [file input HTML element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n   * @param callback A callback function that you can use to process selected files. Accepts an array of JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\" target=\"_blank\">File</a> objects.\n   * @see onOpenFileChooser\n   * @see onUploadFile\n   */\n  public chooseFiles(\n    input: HTMLInputElement,\n    callback: (files: File[]) => void,\n    context?: { element: Base, item?: any, elementType?: string, propertyName?: string }\n  ): void {\n    if (this.onOpenFileChooser.isEmpty) {\n      chooseFiles(input, callback);\n    } else {\n      this.onOpenFileChooser.fire(this, {\n        input: input,\n        element: context && context.element || this.survey,\n        elementType: context && context.elementType,\n        item: context && context.item,\n        propertyName: context && context.propertyName,\n        callback: callback,\n        context: context\n      } as any);\n    }\n  }\n  /**\n   * Uploads files to a server.\n   *\n   * The following code shows how to call this method:\n   *\n   * ```js\n   * const question = survey.getQuestionByName(\"myFileQuestion\");\n   * survey.uploadFiles(\n   *   question,\n   *   question.name,\n   *   question.value,\n   *   (data, errors) => {\n   *     // ...\n   *   }\n   * );\n   * ```\n   * @param question A [File Upload question instance](https://surveyjs.io/form-library/documentation/api-reference/file-model) or [Signature Pad question instance](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model).\n   * @param name The File Upload question's [`name`](https://surveyjs.io/form-library/documentation/api-reference/file-model#name) or Signature Pad question's [`name`](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model#name).\n   * @param files An array of JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\" target=\"_blank\">File</a> objects that represent files to upload.\n   * @param callback A callback function that allows you to access successfully uploaded files as the first argument. If any files fail to upload, the second argument contains an array of error messages.\n   * @see onUploadFiles\n   * @see downloadFile\n   */\n  public uploadFiles(question: QuestionFileModel | QuestionSignaturePadModel, name: string, files: File[],\n    callback: (data: any | Array<any>, errors?: any | Array<any>) => any): void {\n    if (this.onUploadFiles.isEmpty) {\n      callback(\"error\", this.getLocString(\"noUploadFilesHandler\"));\n    } else {\n      this.taskManager.runTask(\"file\", (done) => {\n        this.onUploadFiles.fire(this, {\n          question: question,\n          name: name,\n          files: files || [],\n          callback: (status, data) => {\n            callback(status, data);\n            done();\n          },\n        });\n      });\n    }\n    if (this.surveyPostId) {\n      this.uploadFilesCore(name, files, callback);\n    }\n  }\n  public downloadFile(\n    question: QuestionFileModel,\n    questionName: string,\n    fileValue: any,\n    callback: (status: string, data: any) => any\n  ): void {\n    if (this.onDownloadFile.isEmpty) {\n      !!callback && callback(\"skipped\", fileValue.content || fileValue);\n    }\n    this.onDownloadFile.fire(this, {\n      question: question,\n      name: questionName,\n      content: fileValue.content || fileValue,\n      fileValue: fileValue,\n      callback: callback,\n    });\n  }\n  public clearFiles(\n    question: QuestionFileModel | QuestionSignaturePadModel,\n    name: string,\n    value: any,\n    fileName: string,\n    callback: (status: string, data: any) => any\n  ) {\n    if (this.onClearFiles.isEmpty) {\n      !!callback && callback(\"success\", value);\n    }\n    this.onClearFiles.fire(this, {\n      question: question,\n      name: name,\n      value: value,\n      fileName: fileName,\n      callback: callback,\n    });\n  }\n  updateChoicesFromServer(\n    question: QuestionSelectBase,\n    choices: Array<ItemValue>,\n    serverResult: any\n  ): Array<ItemValue> {\n    var options = {\n      question: question,\n      choices: choices,\n      serverResult: serverResult,\n    };\n    this.onChoicesLoaded.fire(this, options);\n    return options.choices;\n  }\n  loadedChoicesFromServer(question: IQuestion): void {\n    this.locStrsChanged();\n  }\n  protected uploadFilesCore(name: string, files: File[],\n    uploadingCallback: (data: any | Array<any>, errors?: any | Array<any>,) => any): void {\n    this.reportWarningOnUsingService();\n  }\n  getPage(index: number): PageModel {\n    return this.pages[index];\n  }\n  /**\n   * Adds an existing page to the survey.\n   * @param page A page to add.\n   * @param index An index at which to insert the page. If you do not specify this parameter, the page will be added to the end.\n   * @see addNewPage\n   * @see createNewPage\n   */\n  public addPage(page: PageModel, index: number = -1) {\n    if (page == null) return;\n    if (index < 0 || index >= this.pages.length) {\n      this.pages.push(page);\n    } else {\n      this.pages.splice(index, 0, page);\n    }\n  }\n  /**\n   * Creates a new page and adds it to the survey.\n   *\n   * If you want to switch a survey to the newly added page, assign its index to the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property or assign the entire page to the [`currentPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPage) property.\n   *\n   * @param name A page name. If you do not specify this parameter, it will be generated automatically.\n   * @param index An index at which to insert the page. If you do not specify this parameter, the page will be added to the end.\n   * @returns The created and added page.\n   * @see addPage\n   * @see createNewPage\n   */\n  public addNewPage(name: string = null, index: number = -1) {\n    var page = this.createNewPage(name);\n    this.addPage(page, index);\n    return page;\n  }\n  /**\n   * Removes a page from the survey.\n   *\n   * Pass a `PageModel` object to this method. You can get this object in different ways. For example, you can call the [`getPageByName()`](#getPageByName) method to obtain a `PageModel` object with a specific name or use the [`currentPage`](#currentPage) property to access and delete the current page, as shown in the code below.\n   *\n   * ```js\n   * // Delete the current page\n   * survey.removePage(survey.currentPage);\n   * ```\n   * @param page A page to remove.\n   * @see addNewPage\n   */\n  public removePage(page: PageModel) {\n    var index = this.pages.indexOf(page);\n    if (index < 0) return;\n    this.pages.splice(index, 1);\n    if (this.currentPage == page) {\n      this.currentPage = this.pages.length > 0 ? this.pages[0] : null;\n    }\n  }\n  /**\n   * Returns a question with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   * @param name A question name.\n   * @returns A question with the specified name.\n   * @see getAllQuestions\n   * @see getQuestionByValueName\n   */\n  public getQuestionByName(name: string, caseInsensitive: boolean = false): Question {\n    const res = this.getQuestionsFromHash(this.questionHashes.names, this.questionHashes.namesInsensitive, name, caseInsensitive);\n    return !!res ? res[0] : null;\n  }\n  findQuestionByName(name: string): IQuestion {\n    return this.getQuestionByName(name);\n  }\n  getEditingSurveyElement(): Base { return this.editingObjValue; }\n  /**\n   * Returns a question with a specified [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName).\n   *\n   * > Since `valueName` does not have to be unique, multiple questions can have the same `valueName` value. In this case, the `getQuestionByValueName()` method returns the first such question. If you need to get all questions with the same `valueName`, call the `getQuestionsByValueName()` method.\n   * @param valueName A question's `valueName` property value.\n   * @returns A question with a specified `valueName`.\n   * @see getAllQuestions\n   * @see getQuestionByName\n   */\n  public getQuestionByValueName(valueName: string, caseInsensitive: boolean = false): Question {\n    var res = this.getQuestionsByValueName(valueName, caseInsensitive);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Returns all questions with a specified [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName). If a question's `valueName` is undefined, its [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name) property is used.\n   * @param valueName A question's `valueName` property value.\n   * @returns An array of questions with a specified `valueName`.\n   * @see getAllQuestions\n   * @see getQuestionByName\n   */\n  public getQuestionsByValueName(valueName: string, caseInsensitive: boolean = false): Array<Question> {\n    return this.getQuestionsFromHash(this.questionHashes.valueNames, this.questionHashes.valueNamesInsensitive, valueName, caseInsensitive);\n  }\n  public getCalculatedValueByName(name: string): CalculatedValue {\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      if (name == this.calculatedValues[i].name)\n        return this.calculatedValues[i];\n    }\n    return null;\n  }\n  private getQuestionsFromHash(hash: HashTable<any>, hashInsensative: HashTable<any>, name: string, caseInsensitive: boolean): any {\n    if (!name) return null;\n    let res = hash[name];\n    if (!!res) return res;\n    if (caseInsensitive) {\n      name = name.toLowerCase();\n      res = hashInsensative[name];\n      if (!!res) return res;\n    }\n    return null;\n  }\n  public getQuestionsByNames(\n    names: string[],\n    caseInsensitive: boolean = false\n  ): IQuestion[] {\n    var result: IQuestion[] = [];\n    if (!names) return result;\n    for (var i: number = 0; i < names.length; i++) {\n      if (!names[i]) continue;\n      var question = this.getQuestionByName(names[i], caseInsensitive);\n      if (question) result.push(question);\n    }\n    return result;\n  }\n  /**\n   * Returns a page to which a specified survey element (question or panel) belongs.\n   * @param element A question or panel instance.\n   */\n  public getPageByElement(element: IElement): PageModel {\n    for (var i: number = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      if (page.containsElement(element)) return page;\n    }\n    return null;\n  }\n  /**\n   * Returns a page to which a specified question belongs.\n   * @param question A question instance.\n   */\n  public getPageByQuestion(question: IQuestion): PageModel {\n    return this.getPageByElement(question);\n  }\n  /**\n   * Returns a page with a specified name.\n   * @param name A page [name](https://surveyjs.io/form-library/documentation/api-reference/page-model#name).\n   * @returns A page with the specified name.\n   */\n  public getPageByName(name: string): PageModel {\n    for (var i: number = 0; i < this.pages.length; i++) {\n      if (this.pages[i].name == name) return this.pages[i];\n    }\n    return null;\n  }\n  public getPagesByNames(names: string[]): PageModel[] {\n    var result: PageModel[] = [];\n    if (!names) return result;\n    for (var i: number = 0; i < names.length; i++) {\n      if (!names[i]) continue;\n      var page = this.getPageByName(names[i]);\n      if (page) result.push(page);\n    }\n    return result;\n  }\n  /**\n   * Returns a list of all [questions](https://surveyjs.io/form-library/documentation/api-reference/question) in the survey.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible questions.\n   * @param includeDesignTime For internal use.\n   * @param includeNested A Boolean value that specifies whether to include nested questions, such as questions within matrix cells.\n   * @returns An array of questions.\n   * @see getQuestionByName\n   */\n  public getAllQuestions(\n    visibleOnly: boolean = false,\n    includeDesignTime: boolean = false,\n    includeNested: boolean = false\n  ): Array<Question> {\n    if (includeNested) {\n      includeDesignTime = false;\n      const pages = visibleOnly ? this.visiblePages : this.pages;\n      pages.forEach(page => page.onFirstRendering());\n    }\n    var res: Array<Question> = [];\n    for (var i: number = 0; i < this.pages.length; i++) {\n      this.pages[i].addQuestionsToList(\n        res,\n        visibleOnly,\n        includeDesignTime\n      );\n    }\n    if (!includeNested) return res;\n    return this.getNestedQuestionsByQuestionArray(res, visibleOnly);\n  }\n  private getNestedQuestionsByQuestionArray(res: Array<Question>, visibleOnly: boolean): Array<Question> {\n    const res2: Array<Question> = [];\n    res.forEach(q => {\n      q.getNestedQuestions(visibleOnly, true, true).forEach(nQ => res2.push(nQ));\n    });\n    return res2;\n  }\n  /**\n   * Returns an array of quiz questions. A question counts if it is visible, has an input field, and specifies [`correctAnswer`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#correctAnswer).\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns An array of quiz questions.\n   * @see getQuizQuestionCount\n   */\n  public getQuizQuestions(): Array<IQuestion> {\n    var result = new Array<IQuestion>();\n    var startIndex = this.getPageStartIndex();\n    for (var i = startIndex; i < this.pages.length; i++) {\n      if (!this.pages[i].isVisible) continue;\n      var questions = this.pages[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        var q = questions[j];\n        if (q.quizQuestionCount > 0) {\n          result.push(q);\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Returns a [panel](https://surveyjs.io/form-library/documentation/api-reference/panel-model) with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#name).\n   * @param name A panel name.\n   * @returns A panel with the specified name.\n   * @see getAllPanels\n   */\n  public getPanelByName(\n    name: string,\n    caseInsensitive: boolean = false\n  ): PanelModel {\n    var panels = this.getAllPanels();\n    if (caseInsensitive) name = name.toLowerCase();\n    for (var i: number = 0; i < panels.length; i++) {\n      var panelName = panels[i].name;\n      if (caseInsensitive) panelName = panelName.toLowerCase();\n      if (panelName == name) return <PanelModel>panels[i];\n    }\n    return null;\n  }\n  /**\n   * Returns a list of all [panels](https://surveyjs.io/form-library/documentation/api-reference/panel-model) in the survey.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible panels.\n   * @param includeDesignTime For internal use.\n   * @returns An array of panels.\n   * @see getPanelByName\n   */\n  public getAllPanels(\n    visibleOnly: boolean = false,\n    includeDesignTime: boolean = false\n  ): Array<IPanel> {\n    var result = new Array<IPanel>();\n    for (var i: number = 0; i < this.pages.length; i++) {\n      this.pages[i].addPanelsIntoList(result, visibleOnly, includeDesignTime);\n    }\n    return result;\n  }\n  /**\n   * Creates and returns a new page but does not add it to the survey.\n   *\n   * Call the [`addPage(page)`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#addPage) method to add the created page to the survey later or the [`addNewPage(name, index)`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#addNewPage) method to create _and_ add a page to the survey.\n   * @see addPage\n   * @see addNewPage\n   */\n  public createNewPage(name: string): PageModel {\n    const page = Serializer.createClass(\"page\");\n    page.name = name;\n    return page;\n  }\n  private getValueChangeReason(): \"trigger\" | \"expression\" | undefined {\n    if (this.isSettingValueOnExpression) return \"expression\";\n    return this.isSettingValueFromTrigger ? \"trigger\" : undefined;\n  }\n  protected questionOnValueChanging(valueName: string, newValue: any, questionValueName?: string): any {\n    if (!!this.editingObj) {\n      const prop = Serializer.findProperty(this.editingObj.getType(), valueName);\n      if (!!prop) newValue = prop.settingValue(this.editingObj, newValue);\n    }\n    if (this.onValueChanging.isEmpty) return newValue;\n    var options = {\n      name: valueName,\n      question: <Question>this.getQuestionByValueName(questionValueName || valueName),\n      value: this.getUnbindValue(newValue),\n      oldValue: this.getValue(valueName),\n      reason: this.getValueChangeReason()\n    };\n    this.onValueChanging.fire(this, options);\n    return options.value;\n  }\n  private getLocNotification(loc: boolean, value: any, oldValue: any): boolean {\n    return loc || Helpers.isTwoValueEquals(value, oldValue, false, true, false);\n  }\n  protected updateQuestionValue(valueName: string, newValue: any) {\n    if (this.isLoadingFromJson) return;\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!!questions) {\n      for (var i: number = 0; i < questions.length; i++) {\n        var qValue = questions[i].value;\n        if (\n          (qValue === newValue && Array.isArray(qValue) && !!this.editingObj) ||\n          !this.isTwoValueEquals(qValue, newValue)\n        ) {\n          questions[i].updateValueFromSurvey(newValue, false);\n        }\n      }\n    }\n  }\n  private validateQuestionOnValueChanged(question: Question) {\n    if (\n      !this.isNavigationButtonPressed &&\n      (this.isValidateOnValueChanged ||\n        question.getAllErrors().length > 0)\n    ) {\n      this.validateQuestionOnValueChangedCore(question);\n    }\n  }\n  private validateQuestionOnValueChangedCore(question: Question): boolean {\n    var oldErrorCount = question.getAllErrors().length;\n    let res = question.validate(true, false, !this.isValidateOnValueChanging);\n    if (\n      !!question.page && this.isValidateOnValueChange &&\n      (oldErrorCount > 0 || question.getAllErrors().length > 0)\n    ) {\n      this.fireValidatedErrorsOnPage(<PageModel>question.page);\n    }\n    return res;\n  }\n  private validateOnValueChanging(valueName: string, newValue: any): boolean {\n    if (this.isLoadingFromJson) return false;\n    const questions = this.getQuestionsByValueName(valueName);\n    if (!questions) return false;\n    let res = true;\n    for (let i: number = 0; i < questions.length; i++) {\n      const q = questions[i];\n      if (!this.isTwoValueEquals(q.valueForSurvey, newValue)) {\n        q.value = newValue;\n      }\n      res = this.validateQuestionOnValueChangedCore(q) && res && q.errors.length == 0;\n    }\n    return res;\n  }\n  private fireOnValueChanged(name: string, value: any, question: Question): void {\n    this.onValueChanged.fire(this, {\n      name: name,\n      question: question,\n      value: value,\n      reason: this.getValueChangeReason()\n    });\n  }\n  protected notifyQuestionOnValueChanged(valueName: string, newValue: any, questionName: string): void {\n    if (this.isLoadingFromJson) return;\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!!questions) {\n      for (var i: number = 0; i < questions.length; i++) {\n        var question = questions[i];\n        this.validateQuestionOnValueChanged(question);\n        question.onSurveyValueChanged(newValue);\n      }\n    }\n    this.updateProgressText(true);\n    this.fireOnValueChanged(valueName, newValue, !!questionName ? this.getQuestionByName(questionName) : undefined);\n    if (this.isDisposed) return;\n    this.checkElementsBindings(valueName, newValue);\n    this.notifyElementsOnAnyValueOrVariableChanged(valueName, questionName);\n  }\n  private isRunningElementsBindings: boolean;\n  private updateVisibleIndexAfterBindings: boolean;\n  private checkElementsBindings(valueName: string, newValue: any): void {\n    this.isRunningElementsBindings = true;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].checkBindings(valueName, newValue);\n    }\n    this.isRunningElementsBindings = false;\n    if (this.updateVisibleIndexAfterBindings) {\n      this.updateVisibleIndexes();\n      this.updateVisibleIndexAfterBindings = false;\n    }\n  }\n  private notifyElementsOnAnyValueOrVariableChanged(name: string, questionName?: string) {\n    if (this.isEndLoadingFromJson === \"processing\") return;\n    if (this.isRunningConditions) {\n      this.conditionNotifyElementsOnAnyValueOrVariableChanged = true;\n      return;\n    }\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].onAnyValueChanged(name, questionName);\n    }\n    if (!this.isEndLoadingFromJson) {\n      this.locStrsChanged();\n    }\n  }\n  private updateAllQuestionsValue(clearData: boolean) {\n    var questions = this.getAllQuestions();\n    for (var i: number = 0; i < questions.length; i++) {\n      var q = <Question>questions[i];\n      var valName = q.getValueName();\n      q.updateValueFromSurvey(this.getValue(valName), clearData);\n      if (q.requireUpdateCommentValue) {\n        q.updateCommentFromSurvey(this.getComment(valName));\n      }\n    }\n  }\n  private notifyAllQuestionsOnValueChanged() {\n    var questions = this.getAllQuestions();\n    for (var i: number = 0; i < questions.length; i++) {\n      questions[i].onSurveyValueChanged(\n        this.getValue(questions[i].getValueName())\n      );\n    }\n  }\n  private checkOnPageTriggers(isOnComplete: boolean) {\n    var questions = this.getCurrentPageQuestions(true);\n    var values: { [index: string]: any } = {};\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      var name = question.getValueName();\n      values[name] = this.getValue(name);\n    }\n    this.addCalculatedValuesIntoFilteredValues(values);\n    this.checkTriggers(values, true, isOnComplete);\n  }\n  private getCurrentPageQuestions(\n    includeInvsible: boolean = false\n  ): Array<Question> {\n    var result: Array<Question> = [];\n    var page = this.currentPage;\n    if (!page) return result;\n    for (var i = 0; i < page.questions.length; i++) {\n      var question = page.questions[i];\n      if ((!includeInvsible && !question.visible) || !question.name) continue;\n      result.push(question);\n    }\n    return result;\n  }\n  private isTriggerIsRunning: boolean = false;\n  private triggerKeys: any = null;\n  private checkTriggers(key: any, isOnNextPage: boolean, isOnComplete: boolean = false, isOnNavigation: boolean = false, name?: string): void {\n    if (this.isCompleted || this.triggers.length == 0 || this.isDisplayMode) return;\n    if (this.isTriggerIsRunning) {\n      for (var k in key) {\n        this.triggerKeys[k] = key[k];\n      }\n      return;\n    }\n    let isQuestionInvalid = false;\n    if (!isOnComplete && name && this.hasRequiredValidQuestionTrigger) {\n      const question = <Question>this.getQuestionByValueName(name);\n      isQuestionInvalid = question && !question.validate(false);\n    }\n    this.isTriggerIsRunning = true;\n    this.triggerKeys = key;\n    var properties = this.getFilteredProperties();\n    let prevCanBeCompleted = this.canBeCompletedByTrigger;\n    for (let i = 0; i < this.triggers.length; i++) {\n      const trigger = this.triggers[i];\n      if (isQuestionInvalid && trigger.requireValidQuestion) continue;\n      const options = { isOnNextPage: isOnNextPage, isOnComplete: isOnComplete, isOnNavigation: isOnNavigation,\n        keys: this.triggerKeys, properties: properties };\n      trigger.checkExpression(options);\n    }\n    if (prevCanBeCompleted !== this.canBeCompletedByTrigger) {\n      this.updateButtonsVisibility();\n    }\n    this.isTriggerIsRunning = false;\n  }\n  private checkTriggersAndRunConditions(name: string, newValue: any, oldValue: any): void {\n    var triggerKeys: { [index: string]: any } = {};\n    triggerKeys[name] = { newValue: newValue, oldValue: oldValue };\n    this.runConditionOnValueChanged(name, newValue);\n    this.checkTriggers(triggerKeys, false, false, false, name);\n  }\n  private get hasRequiredValidQuestionTrigger(): boolean {\n    for (let i = 0; i < this.triggers.length; i++) {\n      if (this.triggers[i].requireValidQuestion) return true;\n    }\n    return false;\n  }\n  private doElementsOnLoad() {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].onSurveyLoad();\n    }\n  }\n  private isRunningConditionsValue: boolean;\n  private get isRunningConditions(): boolean {\n    return this.isRunningConditionsValue;\n  }\n  private isValueChangedOnRunningCondition: boolean = false;\n  private conditionRunnerCounter: number = 0;\n  private conditionUpdateVisibleIndexes: boolean = false;\n  private conditionNotifyElementsOnAnyValueOrVariableChanged: boolean = false;\n  /**\n   * Recalculates all [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) in the survey.\n   */\n  public runExpressions(): void {\n    this.runConditions();\n  }\n  private runConditions() {\n    if (\n      this.isCompleted ||\n      this.isEndLoadingFromJson === \"processing\" ||\n      this.isRunningConditions\n    )\n      return;\n    this.isRunningConditionsValue = true;\n    var properties = this.getFilteredProperties();\n    this.runConditionsCore(properties);\n    this.isRunningConditionsValue = false;\n    if (\n      this.isValueChangedOnRunningCondition &&\n      this.conditionRunnerCounter <\n      settings.maxConditionRunCountOnValueChanged\n    ) {\n      this.isValueChangedOnRunningCondition = false;\n      this.conditionRunnerCounter++;\n      this.runConditions();\n    } else {\n      this.isValueChangedOnRunningCondition = false;\n      this.conditionRunnerCounter = 0;\n      if (this.conditionUpdateVisibleIndexes) {\n        this.conditionUpdateVisibleIndexes = false;\n        this.updateVisibleIndexes();\n      }\n      if (this.conditionNotifyElementsOnAnyValueOrVariableChanged) {\n        this.conditionNotifyElementsOnAnyValueOrVariableChanged = false;\n        this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n      }\n    }\n  }\n  private questionTriggersKeys: any;\n  private runConditionOnValueChanged(name: string, value: any) {\n    if (!this.questionTriggersKeys) {\n      this.questionTriggersKeys = {};\n    }\n    this.questionTriggersKeys[name] = value;\n    if (this.isRunningConditions) {\n      this.isValueChangedOnRunningCondition = true;\n    } else {\n      this.runConditions();\n      this.runQuestionsTriggers(name, value);\n      this.questionTriggersKeys = undefined;\n    }\n  }\n  private runConditionsCore(properties: any) {\n    var pages = this.pages;\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      this.calculatedValues[i].resetCalculation();\n    }\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      this.calculatedValues[i].doCalculation(this.calculatedValues, properties);\n    }\n    super.runConditionCore(properties);\n    for (let i = 0; i < pages.length; i++) {\n      pages[i].runCondition(properties);\n    }\n  }\n  private runQuestionsTriggers(name: string, value: any): void {\n    if (this.isDisplayMode || this.isDesignMode) return;\n    const questions = this.getAllQuestions();\n    questions.forEach(q => {\n      q.runTriggers(name, value, this.questionTriggersKeys);\n    });\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public sendResult(postId: string = null, clientId: string = null, isPartial: boolean = false): void {\n    if (!this.isEditMode) return;\n    if (isPartial && this.onPartialSend) {\n      this.onPartialSend.fire(this, null);\n    }\n\n    if (!postId && this.surveyPostId) {\n      postId = this.surveyPostId;\n    }\n    if (!postId) return;\n    if (clientId) {\n      this.clientId = clientId;\n    }\n    if (isPartial && !this.clientId) return;\n    this.reportWarningOnUsingService();\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public getResult(resultId: string, questionName: string): void {\n    this.reportWarningOnUsingService();\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  public loadSurveyFromService(surveyId: string = null, clientId: string = null): void {\n    if (surveyId) {\n      this.surveyId = surveyId;\n    }\n    if (clientId) {\n      this.clientId = clientId;\n    }\n    this.reportWarningOnUsingService();\n  }\n  private reportWarningOnUsingService(): void {\n    ConsoleWarnings.warn(\"Self-hosted Form Library no longer supports integration with SurveyJS Demo Service. Learn more: https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service\");\n  }\n  private loadSurveyFromServiceJson(json: any) {\n    if (!json) return;\n    this.fromJSON(json);\n    this.notifyAllQuestionsOnValueChanged();\n    this.onLoadSurveyFromService();\n    this.onLoadedSurveyFromService.fire(this, {});\n  }\n  protected onLoadingSurveyFromService() { }\n  protected onLoadSurveyFromService() { }\n  private resetVisibleIndexes() {\n    var questions = this.getAllQuestions(true);\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].setVisibleIndex(-1);\n    }\n    this.updateVisibleIndexes();\n  }\n  private updateVisibleIndexes(page?: IPage) {\n    if (this.isLoadingFromJson || !!this.isEndLoadingFromJson) return;\n    if (\n      this.isRunningConditions &&\n      this.onQuestionVisibleChanged.isEmpty &&\n      this.onPageVisibleChanged.isEmpty\n    ) {\n      //Run update visible index only one time on finishing running conditions\n      this.conditionUpdateVisibleIndexes = true;\n      return;\n    }\n    if (this.isRunningElementsBindings) {\n      this.updateVisibleIndexAfterBindings = true;\n      return;\n    }\n    this.updatePageVisibleIndexes();\n    this.updatePageElementsVisibleIndexes(page);\n    this.updateProgressText(true);\n  }\n  private updatePageElementsVisibleIndexes(page: IPage): void {\n    if (this.showQuestionNumbers == \"onPage\") {\n      var visPages = !!page ? [page] : this.visiblePages;\n      for (var i = 0; i < visPages.length; i++) {\n        visPages[i].setVisibleIndex(0);\n      }\n    } else {\n      let index = this.getStartVisibleIndex();\n      const pages = this.pages;\n      for (let i = 0; i < pages.length; i++) {\n        index += pages[i].setVisibleIndex(index);\n      }\n    }\n  }\n  private getStartVisibleIndex(): number {\n    const val = this.showQuestionNumbers;\n    return val === \"on\" || val === \"recursive\" ? 0 : -1;\n  }\n  private updatePageVisibleIndexes(): void {\n    this.updateButtonsVisibility();\n    var index = 0;\n    for (var i = 0; i < this.pages.length; i++) {\n      const page = this.pages[i];\n      const isPageVisible = page.isVisible && (i > 0 || !page.isStartPage);\n      page.visibleIndex = isPageVisible ? index++ : -1;\n      page.num = isPageVisible ? page.visibleIndex + 1 : -1;\n    }\n  }\n  public fromJSON(json: any, options?: ILoadFromJSONOptions): void {\n    if (!json) return;\n    this.resetHasLogo();\n    this.resetPropertyValue(\"titleIsEmpty\");\n    this.questionHashesClear();\n    this.jsonErrors = null;\n    this.sjsVersion = undefined;\n    const jsonConverter = new JsonObject();\n    jsonConverter.toObject(json, this, options);\n    if (jsonConverter.errors.length > 0) {\n      this.jsonErrors = jsonConverter.errors;\n    }\n    this.onStateAndCurrentPageChanged();\n    this.endLoading();\n    this.updateState();\n    if (!!this.sjsVersion && !!settings.version) {\n      if (Helpers.compareVerions(this.sjsVersion, settings.version) > 0) {\n        ConsoleWarnings.warn(\"The version of the survey JSON schema (v\"\n          + this.sjsVersion + \") is newer than your current Form Library version (\"\n          + settings.version + \"). Please update the Form Library to make sure that all survey features work as expected.\");\n      }\n    }\n  }\n  startLoadingFromJson(json?: any): void {\n    super.startLoadingFromJson(json);\n    if (json && json.locale) {\n      this.locale = json.locale;\n    }\n  }\n  public setJsonObject(jsonObj: any): void {\n    this.fromJSON(jsonObj);\n  }\n  private isEndLoadingFromJson: string = null;\n  endLoadingFromJson(): void {\n    this.isEndLoadingFromJson = \"processing\";\n    this.onFirstPageIsStartedChanged();\n    super.endLoadingFromJson();\n    if (this.hasCookie) {\n      this.isCompletedBefore = true;\n    }\n    this.doElementsOnLoad();\n    this.onQuestionsOnPageModeChanged(\"standard\");\n    this.isEndLoadingFromJson = \"conditions\";\n    this.runConditions();\n    this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n    this.isEndLoadingFromJson = null;\n    this.updateVisibleIndexes();\n    this.updateCurrentPage();\n    this.setCalculatedWidthModeUpdater();\n    this.onEndLoadingFromJson.fire(this, {});\n  }\n\n  private updateNavigationCss() {\n    const val = this.navigationBarValue;\n    if (!!val) {\n      val.cssClasses = this.css.actionBar;\n      val.containerCss = this.css.footer;\n      !!this.updateNavigationItemCssCallback && this.updateNavigationItemCssCallback();\n    }\n  }\n\n  private updateNavigationItemCssCallback: (strName?: string) => void;\n\n  protected createNavigationBar(): ActionContainer {\n    const res = new ActionContainer();\n    res.setItems(this.createNavigationActions());\n    res.locOwner = this;\n    return res;\n  }\n  protected createNavigationActions(): Array<IAction> {\n    const defaultComponent = \"sv-nav-btn\";\n    const navStart = new Action({\n      id: \"sv-nav-start\",\n      visible: <any>new ComputedUpdater<boolean>(() => this.isStartPageActive),\n      visibleIndex: 10,\n      locTitle: this.locStartSurveyText,\n      action: () => this.start(),\n      component: defaultComponent\n    });\n    const navPrev = new Action({\n      id: \"sv-nav-prev\",\n      visible: <any>new ComputedUpdater<boolean>(() => this.isShowPrevButton),\n      visibleIndex: 20,\n      data: {\n        mouseDown: () => this.navigationMouseDown(),\n      },\n      locTitle: this.locPagePrevText,\n      action: () => this.performPrevious(),\n      component: defaultComponent\n    });\n    const navNext = new Action({\n      id: \"sv-nav-next\",\n      visible: <any>new ComputedUpdater<boolean>(() => this.isShowNextButton),\n      visibleIndex: 30,\n      data: {\n        mouseDown: () => this.nextPageMouseDown(),\n      },\n      locTitle: this.locPageNextText,\n      action: () => this.nextPageUIClick(),\n      component: defaultComponent\n    });\n    const navPreview = new Action({\n      id: \"sv-nav-preview\",\n      visible: <any>new ComputedUpdater<boolean>(() => this.isPreviewButtonVisible),\n      visibleIndex: 40,\n      data: {\n        mouseDown: () => this.navigationMouseDown(),\n      },\n      locTitle: this.locPreviewText,\n      action: () => this.showPreview(),\n      component: defaultComponent\n    });\n    const navComplete = new Action({\n      id: \"sv-nav-complete\",\n      visible: <any>new ComputedUpdater<boolean>(() => this.isCompleteButtonVisible),\n      visibleIndex: 50,\n      data: {\n        mouseDown: () => this.navigationMouseDown(),\n      },\n      locTitle: this.locCompleteText,\n      action: () => this.taskManager.waitAndExecute(() => this.tryComplete()),\n      component: defaultComponent\n    });\n    this.updateNavigationItemCssCallback = () => {\n      navStart.innerCss = this.cssNavigationStart;\n      navPrev.innerCss = this.cssNavigationPrev;\n      navNext.innerCss = this.cssNavigationNext;\n      navPreview.innerCss = this.cssNavigationPreview;\n      navComplete.innerCss = this.cssNavigationComplete;\n    };\n    return [navStart, navPrev, navNext, navPreview, navComplete];\n  }\n  protected onBeforeRunConstructor() {}\n  protected onBeforeCreating() { }\n  protected onCreating() { }\n  private getProcessedTextValue(textValue: TextPreProcessorValue): void {\n    this.getProcessedTextValueCore(textValue);\n    if (!this.onProcessDynamicText.isEmpty) {\n      var wasEmpty = this.isValueEmpty(textValue.value);\n      this.onProcessDynamicText.fire(this, textValue);\n      textValue.isExists =\n        textValue.isExists || (wasEmpty && !this.isValueEmpty(textValue.value));\n    }\n  }\n  private getProcessedTextValueCore(textValue: TextPreProcessorValue): void {\n    const name = textValue.name.toLocaleLowerCase();\n    if ([\"no\", \"require\", \"title\"].indexOf(name) !== -1) {\n      return;\n    }\n    const res = new ValueGetter().getValueInfo({ name: name, context: this.getValueGetterContext(), isText: true, isDisplayValue: textValue.returnDisplayValue });\n    if (res.isFound) {\n      textValue.isExists = true;\n      textValue.value = res.value;\n    }\n  }\n  private isClearingUnsedValues: boolean;\n  private clearUnusedValues() {\n    this.isClearingUnsedValues = true;\n    var questions = this.getAllQuestions();\n    for (var i: number = 0; i < questions.length; i++) {\n      questions[i].clearUnusedValues();\n    }\n    this.clearInvisibleQuestionValues();\n    this.isClearingUnsedValues = false;\n  }\n  hasVisibleQuestionByValueName(question: IQuestion): boolean {\n    const checkQ = <Question>question;\n    var qs = this.getQuestionsByValueName(checkQ.getValueName());\n    if (!Array.isArray(qs) || qs.length < 2) return false;\n    for (var i: number = 0; i < qs.length; i++) {\n      const q = qs[i];\n      if (q !== checkQ && q.isVisible && q.isParentVisible && !q.parentQuestion && q.parentQuestion === checkQ.parentQuestion) return true;\n    }\n    return false;\n  }\n  questionsByValueName(valueName: string): Array<IQuestion> {\n    var questions = this.getQuestionsByValueName(valueName);\n    return !!questions ? questions : [];\n  }\n  private clearInvisibleQuestionValues() {\n    const reason = this.clearInvisibleValues === \"none\" ? \"none\" : \"onComplete\";\n    const questions = this.getAllQuestions();\n    for (var i: number = 0; i < questions.length; i++) {\n      questions[i].clearValueIfInvisible(reason);\n    }\n  }\n  /**\n   * Returns a variable value.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @param name A variable name.\n   * @return A variable value.\n   * @see setVariable\n   * @see getVariableNames\n   */\n  public getVariable(name: string): any {\n    if (!name) return null;\n    name = name.toLowerCase();\n    var res = this.variablesHash[name];\n    if (!this.isValueEmpty(res)) return res;\n    if (name.indexOf(\".\") > -1 || name.indexOf(\"[\") > -1) {\n      return new ValueGetter().getValue(name, new VariableGetterContext(this.variablesHash));\n    }\n    return res;\n  }\n  /**\n   * Sets a variable value.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @param name A variable name.\n   * @param newValue A new variable value.\n   * @see getVariable\n   * @see getVariableNames\n   */\n  public setVariable(name: string, newValue: any): void {\n    if (!name) return;\n    const oldValue = this.getVariable(name);\n    if (!!this.valuesHash) {\n      delete this.valuesHash[name];\n    }\n    name = name.toLowerCase();\n    this.variablesHash[name] = newValue;\n    this.notifyElementsOnAnyValueOrVariableChanged(name);\n    if (!Helpers.isTwoValueEquals(oldValue, newValue)) {\n      this.checkTriggersAndRunConditions(name, newValue, oldValue);\n      this.onVariableChanged.fire(this, { name: name, value: newValue });\n    }\n  }\n  /**\n   * Returns the names of all variables in the survey.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @returns An array of variable names.\n   * @see getVariable\n   * @see setVariable\n   */\n  public getVariableNames(): Array<string> {\n    var res = [];\n    for (var key in this.variablesHash) {\n      res.push(key);\n    }\n    return res;\n  }\n  //ISurvey data\n  protected getUnbindValue(value: any): any {\n    if (!!this.editingObj) return value;\n    return Helpers.getUnbindValue(value);\n  }\n  /**\n   * Returns a value (answer) for a question with a specified `name`.\n   * @param name A question name.\n   * @returns A question value (answer).\n   * @see data\n   * @see setValue\n   */\n  public getValue(name: string): any {\n    if (!name || name.length == 0) return null;\n    var value = this.getDataValueCore(this.valuesHash, name);\n    return this.getUnbindValue(value);\n  }\n  /**\n   * Sets a question value (answer).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/create-a-scored-quiz/ (linkStyle))\n   *\n   * > This method executes all triggers and reevaluates conditions (`visibleIf`, `requiredId`, and others). It also switches the survey to the next page if the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property is enabled and all questions on the current page have correct answers.\n   * @param name A question name.\n   * @param newValue A new question value.\n   * @param locNotification For internal use.\n   * @param allowNotifyValueChanged For internal use.\n   * @see data\n   * @see getValue\n   */\n  public setValue(\n    name: string,\n    newQuestionValue: any,\n    locNotification: any = false,\n    allowNotifyValueChanged: boolean = true,\n    questionName?: string\n  ): void {\n    var newValue = newQuestionValue;\n    if (allowNotifyValueChanged) {\n      newValue = this.questionOnValueChanging(name, newQuestionValue);\n    }\n    if (this.isValidateOnValueChanging && !this.validateOnValueChanging(name, newValue)) return;\n    if (\n      !this.editingObj &&\n      this.isValueEqual(name, newValue) &&\n      this.isTwoValueEquals(newValue, newQuestionValue)\n    )\n      return;\n    var oldValue = this.getValue(name);\n    if (this.isValueEmpyOnSetValue(name, newValue)) {\n      this.deleteDataValueCore(this.valuesHash, name);\n    } else {\n      newValue = this.getUnbindValue(newValue);\n      this.setDataValueCore(this.valuesHash, name, newValue);\n    }\n    locNotification = this.getLocNotification(locNotification, newValue, oldValue);\n    this.updateOnSetValue(\n      name,\n      newValue,\n      oldValue,\n      locNotification,\n      allowNotifyValueChanged,\n      questionName\n    );\n  }\n  questionValueChanging(question: IQuestion, newValue: any): any {\n    const q = <Question>question;\n    const parentQ = q.parentQuestion;\n    if (!parentQ) return newValue;\n    if (parentQ.isDescendantOf(\"paneldynamic\") && !this.onDynamicPanelValueChanging.isEmpty) {\n      const options: any = parentQ.getValueChangingOptions(q);\n      if (options) {\n        options.value = newValue;\n        this.onDynamicPanelValueChanging.fire(this, options);\n        return options.value;\n      }\n    }\n    return newValue;\n  }\n  questionValueChanged(question: IQuestion, oldValue: any): void {\n    const q = <Question>question;\n    const parentQ = q.parentQuestion;\n    if (!!parentQ) {\n      if (parentQ.isDescendantOf(\"paneldynamic\") && !this.onDynamicPanelValueChanged.isEmpty) {\n        const options: any = parentQ.getValueChangingOptions(q);\n        if (options) {\n          options.value = q.value;\n          options.oldValue = oldValue;\n          this.onDynamicPanelValueChanged.fire(this, options);\n        }\n      }\n    }\n  }\n  private isValueEmpyOnSetValue(name: string, val: any): boolean {\n    if (!this.isValueEmpty(val, false)) return false;\n    if (!this.editingObj || val === null || val === undefined) return true;\n    return this.editingObj.getDefaultPropertyValue(name) === val;\n  }\n  private nofifyQuesitonHash: any = {};\n  private updateOnSetValue(\n    name: string,\n    newValue: any,\n    oldValue: any,\n    locNotification: any = false,\n    allowNotifyValueChanged: boolean = true,\n    questionName?: string\n  ) {\n    this.updateQuestionValue(name, newValue);\n    if (locNotification === true || this.isDisposed || this.isRunningElementsBindings) return;\n    questionName = questionName || name;\n    this.nofifyQuesitonHash[name] = true;\n    this.checkTriggersAndRunConditions(name, newValue, oldValue);\n    if (this.nofifyQuesitonHash[name]) {\n      if (allowNotifyValueChanged) {\n        this.notifyQuestionOnValueChanged(name, newValue, questionName);\n      }\n      if (locNotification !== \"text\") {\n        this.tryGoNextPageAutomatic(name);\n      }\n      delete this.nofifyQuesitonHash[name];\n    }\n  }\n  private isValueEqual(name: string, newValue: any): boolean {\n    if (newValue === \"\" || newValue === undefined) newValue = null;\n    var oldValue = this.getValue(name);\n    if (oldValue === \"\" || oldValue === undefined) oldValue = null;\n    if (newValue === null || oldValue === null) return newValue === oldValue;\n    return this.isTwoValueEquals(newValue, oldValue);\n  }\n  protected doOnPageAdded(page: PageModel): void {\n    page.setSurveyImpl(this);\n    if (!page.name) page.name = this.generateNewName(this.pages, \"page\");\n    this.questionHashesPanelAdded(page);\n    this.updateVisibleIndexes();\n    if (!!this.runningPages) return;\n    if (!this.isLoadingFromJson) {\n      this.updateProgressText();\n      this.updateCurrentPage();\n    }\n    if (this.canFireAddPage()) {\n      var options = { page: page };\n      this.onPageAdded.fire(this, options);\n    }\n  }\n  private canFireAddPage(): boolean {\n    return !this.isMovingPage;\n  }\n  protected doOnPageRemoved(page: PageModel): void {\n    page.setSurveyImpl(null);\n    if (!!this.runningPages) return;\n    if (page === this.currentPage) {\n      this.updateCurrentPage();\n    }\n    this.updateVisibleIndexes();\n    this.updateProgressText();\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  private generateNewName(elements: Array<any>, baseName: string): string {\n    var keys: { [index: string]: any } = {};\n    for (var i = 0; i < elements.length; i++) keys[elements[i][\"name\"]] = true;\n    var index = 1;\n    while(keys[baseName + index]) index++;\n    return baseName + index;\n  }\n  protected tryGoNextPageAutomatic(name: string): void {\n    if (!!this.isEndLoadingFromJson || !this.autoAdvanceEnabled || !this.currentPage) return;\n    const question = <Question>this.getQuestionByValueName(name);\n    if (!question || (!!question && (!question.visible || !question.supportAutoAdvance()))) return;\n    if (!question.validate(false) && !question.supportGoNextPageError()) return;\n    if (!!this.currentSingleElement) {\n      const curQuestion = this.currentSingleElement;\n      const goNextQuestion = () => {\n        if (curQuestion !== this.currentSingleElement) return;\n        if (!this.isLastElement) {\n          this.performNext();\n        } else {\n          if (this.autoAdvanceAllowComplete) {\n            this.tryCompleteOrShowPreview();\n          }\n        }\n      };\n      surveyTimerFunctions.safeTimeOut(goNextQuestion, settings.autoAdvanceDelay);\n    }\n    var questions = this.getCurrentPageQuestions();\n    if (questions.indexOf(question) < 0) return;\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].hasInput && questions[i].isEmpty()) return;\n    }\n    if (this.isLastPage && (this.autoAdvanceEnabled !== true || !this.autoAdvanceAllowComplete)) return;\n    if (!this.validateActivePage(false)) return;\n    const curPage = this.currentPage;\n    const goNextPage = () => {\n      if (curPage !== this.currentPage) return;\n      if (!this.isLastPage) {\n        this.nextPage();\n      } else {\n        this.tryCompleteOrShowPreview();\n      }\n    };\n    surveyTimerFunctions.safeTimeOut(goNextPage, settings.autoAdvanceDelay);\n  }\n  private tryCompleteOrShowPreview(): void {\n    if (this.showPreviewBeforeComplete) {\n      this.showPreview();\n    } else {\n      this.tryComplete();\n    }\n  }\n  /**\n   * Returns a comment value from a question with a specified `name`.\n   * @param name A question name.\n   * @returns A comment.\n   * @see setComment\n   */\n  public getComment(name: string): string {\n    const res = this.getValue(name + this.commentSuffix);\n    return res || \"\";\n  }\n  /**\n   * Sets a comment value to a question with a specified `name`.\n   * @param name A question name.\n   * @param newValue A new comment value.\n   * @param locNotification For internal use.\n   * @see getComment\n   */\n  public setComment(name: string, newValue: string, locNotification: any = false): void {\n    if (!newValue) newValue = \"\";\n    if (this.isTwoValueEquals(newValue, this.getComment(name))) return;\n    const commentName = name + this.commentSuffix;\n    newValue = this.questionOnValueChanging(commentName, newValue, name);\n    locNotification = this.getLocNotification(locNotification, newValue, this.getComment(name));\n    if (this.isValueEmpty(newValue)) {\n      this.deleteDataValueCore(this.valuesHash, commentName);\n    } else {\n      this.setDataValueCore(this.valuesHash, commentName, newValue);\n    }\n    var questions = this.getQuestionsByValueName(name);\n    if (!!questions) {\n      for (var i: number = 0; i < questions.length; i++) {\n        questions[i].updateCommentFromSurvey(newValue);\n        this.validateQuestionOnValueChanged(questions[i]);\n      }\n    }\n    if (!locNotification) {\n      this.checkTriggersAndRunConditions(name, this.getValue(name), undefined);\n    }\n    if (locNotification !== \"text\") {\n      this.tryGoNextPageAutomatic(name);\n    }\n    var question = this.getQuestionByValueName(name);\n    if (question) {\n      this.fireOnValueChanged(commentName, newValue, question);\n      question.comment = newValue;\n      if (question.comment != newValue) {\n        question.comment = newValue;\n      }\n    }\n  }\n  /**\n   * Deletes an answer from survey results.\n   * @param {string} name An object property that stores the answer to delete. Pass a question's [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName) or [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   */\n  public clearValue(name: string): void {\n    this.setValue(name, null);\n    this.setComment(name, null);\n  }\n  /**\n   * Specifies whether to remove disabled choices from the value in [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model), [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model), and [Radio Button Group](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model) questions.\n   *\n   * Default value: `false`\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   */\n  public get clearDisabledChoices(): boolean {\n    return this.getPropertyValue(\"clearDisabledChoices\", false);\n  }\n  public set clearDisabledChoices(val: boolean) {\n    this.setPropertyValue(\"clearDisabledChoices\", val);\n  }\n  /**\n   * @deprecated Use the [`clearDisabledChoices`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#clearDisabledChoices) property instead.\n   */\n  public get clearValueOnDisableItems(): boolean {\n    return this.clearDisabledChoices;\n  }\n  public set clearValueOnDisableItems(val: boolean) {\n    this.clearDisabledChoices = val;\n  }\n  getQuestionClearIfInvisible(questionClearIf: string): string {\n    if (this.isShowingPreview || this.runningPages) return \"none\";\n    if (questionClearIf !== \"default\") return questionClearIf;\n    return this.clearInvisibleValues;\n  }\n  questionVisibilityChanged(question: Question, newValue: boolean, resetIndexes: boolean): void {\n    if (resetIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    if (!newValue) {\n      this.changeCurrentSingleElementOnVisibilityChanged();\n    }\n    this.onQuestionVisibleChanged.fire(this, {\n      question: question,\n      name: question.name,\n      visible: newValue,\n    });\n  }\n  pageVisibilityChanged(page: PageModel, newValue: boolean) {\n    if (this.isLoadingFromJson) return;\n    if (newValue && !this.currentPage || page === this.currentPage) {\n      this.updateCurrentPage();\n    }\n    this.updateVisibleIndexes();\n    if (!newValue) {\n      this.changeCurrentSingleElementOnVisibilityChanged();\n    }\n    const el: any = this.currentSingleElement;\n    const curPage = this.currentPage;\n    if (!!el && !!curPage && el.page !== curPage) {\n      this.currentSingleElement = curPage.getFirstVisibleElement();\n    }\n    this.onPageVisibleChanged.fire(this, {\n      page: page,\n      visible: newValue,\n    });\n  }\n  panelVisibilityChanged(panel: PanelModel, newValue: boolean) {\n    if (!!panel.page) {\n      this.updateVisibleIndexes(panel.page);\n      if (!newValue) {\n        this.changeCurrentSingleElementOnVisibilityChanged();\n      }\n    }\n    this.onPanelVisibleChanged.fire(this, { panel: panel, visible: newValue });\n  }\n  questionCreated(question: Question): any {\n    this.onQuestionCreated.fire(this, { question: question });\n  }\n  questionAdded(question: Question, index: number, parentPanel: any, rootPanel: any): void {\n    if (!question.name) {\n      question.name = this.generateNewName(this.getAllQuestions(false, true), \"question\");\n    }\n    if (!!(<Question>question).page) {\n      this.questionHashesAdded(<Question>question);\n    }\n    if (!this.isLoadingFromJson) {\n      if (!this.currentPage) {\n        this.updateCurrentPage();\n      }\n      this.updateVisibleIndexes(question.page);\n      this.setCalculatedWidthModeUpdater();\n    }\n    if (this.canFireAddElement()) {\n      this.onQuestionAdded.fire(this, {\n        question: question,\n        name: question.name,\n        index: index,\n        parent: parentPanel,\n        page: rootPanel,\n        parentPanel: parentPanel,\n        rootPanel: rootPanel,\n      });\n    }\n  }\n  private canFireAddElement(): boolean {\n    return !this.isMovingQuestion;\n  }\n  questionRemoved(question: Question): void {\n    this.questionHashesRemoved(\n      <Question>question,\n      question.name,\n      question.getValueName()\n    );\n    this.updateVisibleIndexes(question.page);\n    this.onQuestionRemoved.fire(this, {\n      question: question,\n      name: question.name,\n    });\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  questionRenamed(\n    question: IQuestion,\n    oldName: string,\n    oldValueName: string\n  ): any {\n    this.questionHashesRemoved(<Question>question, oldName, oldValueName);\n    this.questionHashesAdded(<Question>question);\n  }\n  private questionHashes = {\n    names: {},\n    namesInsensitive: {},\n    valueNames: {},\n    valueNamesInsensitive: {},\n  };\n  private questionHashesClear() {\n    this.questionHashes.names = {};\n    this.questionHashes.namesInsensitive = {};\n    this.questionHashes.valueNames = {};\n    this.questionHashes.valueNamesInsensitive = {};\n  }\n  private questionHashesPanelAdded(panel: PanelModelBase) {\n    if (this.isLoadingFromJson) return;\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      this.questionHashesAdded(questions[i]);\n    }\n  }\n  private questionHashesAdded(question: Question) {\n    this.questionHashAddedCore(\n      this.questionHashes.names,\n      question,\n      question.name\n    );\n    this.questionHashAddedCore(\n      this.questionHashes.namesInsensitive,\n      question,\n      question.name.toLowerCase()\n    );\n    this.questionHashAddedCore(\n      this.questionHashes.valueNames,\n      question,\n      question.getValueName()\n    );\n    this.questionHashAddedCore(\n      this.questionHashes.valueNamesInsensitive,\n      question,\n      question.getValueName().toLowerCase()\n    );\n  }\n  private questionHashesRemoved(\n    question: Question,\n    name: string,\n    valueName: string\n  ) {\n    if (!!name) {\n      this.questionHashRemovedCore(this.questionHashes.names, question, name);\n      this.questionHashRemovedCore(\n        this.questionHashes.namesInsensitive,\n        question,\n        name.toLowerCase()\n      );\n    }\n    if (!!valueName) {\n      this.questionHashRemovedCore(\n        this.questionHashes.valueNames,\n        question,\n        valueName\n      );\n      this.questionHashRemovedCore(\n        this.questionHashes.valueNamesInsensitive,\n        question,\n        valueName.toLowerCase()\n      );\n    }\n  }\n  private questionHashAddedCore(hash: any, question: Question, name: string) {\n    var res = hash[name];\n    if (!!res) {\n      var res = hash[name];\n      if (res.indexOf(question) < 0) {\n        res.push(question);\n      }\n    } else {\n      hash[name] = [question];\n    }\n  }\n  private questionHashRemovedCore(hash: any, question: Question, name: string) {\n    var res = hash[name];\n    if (!res) return;\n    var index = res.indexOf(question);\n    if (index > -1) {\n      res.splice(index, 1);\n    }\n    if (res.length == 0) {\n      delete hash[name];\n    }\n  }\n  panelAdded(panel: PanelModel, index: number, parentPanel: any, rootPanel: any): void {\n    if (!panel.name) {\n      panel.name = this.generateNewName(\n        this.getAllPanels(false, true),\n        \"panel\"\n      );\n    }\n    this.questionHashesPanelAdded(<PanelModelBase>(<any>panel));\n    this.updateVisibleIndexes(panel.page);\n    if (this.canFireAddElement()) {\n      this.onPanelAdded.fire(this, {\n        panel: panel,\n        name: panel.name,\n        index: index,\n        parent: parentPanel,\n        page: rootPanel,\n        parentPanel: parentPanel,\n        rootPanel: rootPanel,\n      });\n    }\n  }\n  panelRemoved(panel: PanelModel): void {\n    this.updateVisibleIndexes(panel.page);\n    this.onPanelRemoved.fire(this, { panel: panel, name: panel.name });\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  validateQuestion(question: Question, errors: Array<SurveyError>, fireCallback: boolean): void {\n    if (!this.onValidateQuestion.isEmpty) {\n      var options = {\n        name: question.name,\n        question: question,\n        value: question.value,\n        errors: errors,\n        error: <any>null,\n      };\n      this.onValidateQuestion.fire(this, options);\n      if (options.error) {\n        errors.push(new CustomError(options.error, this));\n      }\n    }\n    if (fireCallback) {\n      this.beforeSettingQuestionErrors(question, errors);\n    }\n  }\n  validatePanel(panel: PanelModel, errors: Array<SurveyError>, fireCallback: boolean): void {\n    if (panel.isPanel && !this.onValidatePanel.isEmpty) {\n      const options = {\n        name: panel.name,\n        panel: panel,\n        error: <any>null,\n        errors: errors\n      };\n      this.onValidatePanel.fire(this, options);\n      if (options.error) {\n        errors.push(new CustomError(options.error, this));\n      }\n    }\n    if (fireCallback) {\n      this.makeRequiredErrorsInvisible(errors);\n    }\n  }\n  processHtml(html: string, reason?: string): string {\n    if (!reason) reason = \"\";\n    var options = { html: html, reason: reason };\n    this.onProcessHtml.fire(this, options);\n    return this.processText(options.html, true);\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new SurveyValueGetterContext(this, this.valuesHash, this.variablesHash);\n  }\n  processText(text: string, returnDisplayValue: boolean): string {\n    return this.processTextEx({ text: text, returnDisplayValue: returnDisplayValue, doEncoding: false }).text;\n  }\n  processTextEx(params: ITextProcessorProp): ITextProcessorResult {\n    const doEncoding = params.doEncoding === undefined ? settings.web.encodeUrlParams : params.doEncoding;\n    let text = params.text;\n    if (params.runAtDesign || !this.isDesignMode) {\n      text = this.textPreProcessor.process(text, params.returnDisplayValue === true, doEncoding, params.replaceUndefinedValues);\n    }\n    const res = { text: text, hasAllValuesOnLastRun: true };\n    res.hasAllValuesOnLastRun = this.textPreProcessor.hasAllValuesOnLastRun;\n    return res;\n  }\n  private textPreProcessorValue: TextPreProcessor;\n  private get textPreProcessor(): TextPreProcessor {\n    if (!this.textPreProcessorValue) {\n      this.textPreProcessorValue = new TextPreProcessor();\n      this.textPreProcessorValue.onProcess = (textValue: TextPreProcessorValue) => {\n        this.getProcessedTextValue(textValue);\n      };\n    }\n    return this.textPreProcessorValue;\n  }\n  getSurveyMarkdownHtml(element: Question | PanelModel | PageModel | SurveyModel, text: string, name: string, item: any): string {\n    const options: TextMarkdownEvent = {\n      element: element,\n      text: text,\n      name: name,\n      item: item,\n      html: null\n    };\n    this.onTextMarkdown.fire(this, options);\n    return options.html;\n  }\n  public getCorrectedAnswerCount(): number {\n    return this.getCorrectAnswerCount();\n  }\n  /**\n   * Returns the number of correct answers in a quiz.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of correct answers in a quiz.\n   * @see getQuizQuestionCount\n   * @see getIncorrectAnswerCount\n   */\n  public getCorrectAnswerCount(): number {\n    return this.getCorrectedAnswerCountCore(true);\n  }\n  /**\n   * Returns the number of quiz questions. A question counts if it is visible, has an input field, and specifies [`correctAnswer`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#correctAnswer).\n   *\n   * This number may be different from `getQuizQuestions().length` because certain question types (for instance, matrix-like types) include more than one question.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of quiz questions.\n   * @see getQuizQuestions\n   */\n  public getQuizQuestionCount(): number {\n    var questions = this.getQuizQuestions();\n    var res = 0;\n    for (var i = 0; i < questions.length; i++) {\n      res += (<Question>questions[i]).quizQuestionCount;\n    }\n    return res;\n  }\n  public getInCorrectedAnswerCount(): number {\n    return this.getIncorrectAnswerCount();\n  }\n  public getInCorrectAnswerCount(): number {\n    return this.getIncorrectAnswerCount();\n  }\n  /**\n   * Returns the number of incorrect answers in a quiz.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of incorrect answers in a quiz.\n   * @see getCorrectAnswerCount\n   */\n  public getIncorrectAnswerCount(): number {\n    return this.getCorrectedAnswerCountCore(false);\n  }\n  onCorrectQuestionAnswer(question: IQuestion, options: any): void {\n    if (this.onIsAnswerCorrect.isEmpty) return;\n    options.question = question;\n    this.onIsAnswerCorrect.fire(this, options);\n  }\n  private getCorrectedAnswerCountCore(isCorrect: boolean): number {\n    var questions = this.getQuizQuestions();\n    var counter = 0;\n    for (let i = 0; i < questions.length; i++) {\n      const q = <Question>questions[i];\n      const correctCount = q.correctAnswerCount;\n      if (isCorrect) {\n        counter += correctCount;\n      } else {\n        counter += q.quizQuestionCount - correctCount;\n      }\n    }\n    return counter;\n  }\n  getCorrectedAnswers(): number {\n    return this.getCorrectedAnswerCount();\n  }\n  getInCorrectedAnswers(): number {\n    return this.getInCorrectedAnswerCount();\n  }\n  /**\n   * @deprecated Use the [`showTimer`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer) and [`timerLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerLocation) properties instead.\n   */\n  public get showTimerPanel(): string {\n    if (!this.showTimer) return \"none\";\n    return this.timerLocation;\n  }\n  public set showTimerPanel(val: string) {\n    this.showTimer = val !== \"none\";\n    if (this.showTimer) {\n      this.timerLocation = val;\n    }\n  }\n  /**\n   * Specifies the timer's visibility. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: `false`\n   *\n   * If you set this property to `true`, the timer starts automatically when the survey begins. To specify time limits, use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimit) and [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimitPerPage) properties.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   *\n   * The timer displays information about time spent on an individual page and the entire survey. If you want to display only the page timer or the survey timer, set the [`timerInfoMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerInfoMode) property to `\"page\"` or `\"survey\"`.\n   *\n   * You can enable the timer without displaying it. In this case, you need to specify the required time limits and use the [`startTimer()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startTimer) and [`stopTimer()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#stopTimer) methods to control the timer.\n   * @see timerLocation\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  public get showTimer(): boolean {\n    return this.getPropertyValue(\"showTimer\");\n  }\n  public set showTimer(val: boolean) {\n    this.setPropertyValue(\"showTimer\", val);\n  }\n  /**\n   * Specifies the timer's position relative to the survey. Applies only if the [`showTimer`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer) property is set to `true`.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` (default) - Displays the timer at the top of the survey.\n   * - `\"bottom\"` - Displays the timer at the bottom of the survey.\n   * @see onTimerTick\n   */\n  public get timerLocation(): string {\n    return this.getPropertyValue(\"timerLocation\");\n  }\n  public set timerLocation(val: string) {\n    this.setPropertyValue(\"timerLocation\", val);\n  }\n  public get isTimerPanelShowingOnTop(): boolean {\n    return this.showTimer && this.timerLocation === \"top\";\n  }\n  public get isTimerPanelShowingOnBottom(): boolean {\n    return this.showTimer && this.timerLocation === \"bottom\";\n  }\n  /**\n   * Specifies whether the timer panel displays timers for the current page, the entire survey, or both. Applies only if the timer panel is [visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer).\n   *\n   * Possible values:\n   *\n   * - `\"survey\"` - Displays only the survey timer.\n   * - `\"page\"` - Displays only the page timer.\n   * - `\"combined\"` (default) - Displays both the survey and page timers.\n   * @see timeSpent\n   * @see onTimerTick\n   * @see startTimer\n   * @see stopTimer\n   */\n  public get timerInfoMode(): string {\n    return this.getTimerInfoVal(this.getPropertyValue(\"timerInfoMode\"));\n  }\n  public set timerInfoMode(val: string) {\n    this.setPropertyValue(\"timerInfoMode\", val);\n  }\n  private getTimerInfoVal(val: string): string {\n    return val === \"all\" ? \"combined\" : val;\n  }\n  /**\n   * @deprecated Use the [`timerInfoMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerInfoMode) property instead.\n   */\n  public get showTimerPanelMode(): string {\n    const res = this.timerInfoMode;\n    return res === \"combined\" ? \"all\" : res;\n  }\n  public set showTimerPanelMode(val: string) {\n    this.timerInfoMode = this.getTimerInfoVal(val);\n  }\n  /**\n   * Enables the grid layout, which structures form elements using a column-based system.\n   *\n   * Default value: `false`\n   *\n   * Specify the [`gridLayoutColumns`](https://surveyjs.io/form-library/documentation/api-reference/page-model#gridLayoutColumns) property for pages and panels to configure layout columns. Set the [`colSpan`](https://surveyjs.io/form-library/documentation/api-reference/question#colSpan) property for an individual question or panel to adjust how many columns this survey element spans.\n   */\n  @property({\n    onSet: (newValue: boolean, target: SurveyModel) => {\n      target.updateGridColumns();\n    }\n  }) gridLayoutEnabled: boolean;\n  public updateGridColumns(): void {\n    this.pages.forEach(page => page.updateGridColumns());\n  }\n  /**\n    * Specifies how to calculate the survey width.\n    *\n    * Possible values:\n    *\n    * - `\"static\"` - A survey has a [fixed width](#width).\n    * - `\"responsive\"` - A survey occupies all available horizontal space and stretches or shrinks horizontally to fit in the screen size.\n    * - `\"auto\"` (default) - Survey width depends on a question type and corresponds to the `\"static\"` or `\"responsive\"` mode.\n  */\n  // `custom/precise` - The survey width is specified by the width property. // in-future\n  public get widthMode(): string {\n    return this.getPropertyValue(\"widthMode\");\n  }\n  public set widthMode(val: string) {\n    this.setPropertyValue(\"widthMode\", val);\n  }\n  private calculatedWidthModeUpdater: ComputedUpdater;\n  public setCalculatedWidthModeUpdater(): void {\n    if (this.isLoadingFromJson) return;\n    if (this.calculatedWidthModeUpdater)this.calculatedWidthModeUpdater.dispose();\n    this.calculatedWidthModeUpdater = new ComputedUpdater(() => this.calculateWidthMode());\n    this.calculatedWidthMode = <any>this.calculatedWidthModeUpdater;\n  }\n  @property() calculatedWidthMode: string;\n  public calculateWidthMode(): string {\n    if (this.widthMode == \"auto\") {\n      let isResponsive = false;\n      if (!this.isSingleVisibleInput) {\n        this.pages.forEach((page) => {\n          if (page.needResponsiveWidth())\n            isResponsive = true;\n        });\n      }\n      return isResponsive ? \"responsive\" : \"static\";\n    }\n    return this.widthMode;\n  }\n  /**\n   * A survey width in CSS values.\n   *\n   * Default value: `undefined` (the survey inherits the width from its container)\n   * @see onResize\n   */\n  public get width(): string {\n    return this.getPropertyValue(\"width\");\n  }\n  public set width(val: string) {\n    this.setPropertyValue(\"width\", val);\n  }\n  public get renderedWidth(): string {\n    const isStaticWidth = this.getPropertyValue(\"calculatedWidthMode\") == \"static\";\n    let width: any = this.getPropertyValue(\"width\");\n    if (this.isScaled && this.responsiveStartWidth > 1) {\n      let initialWidth = this.responsiveStartWidth;\n      try {\n        width = width || this.staticStartWidth;\n        initialWidth = !isNaN(width) ? width : parseFloat(width.toString().replace(\"px\", \"\"));\n      } catch(e) { }\n      return (isStaticWidth ? initialWidth : this.responsiveStartWidth) * this.widthScale / 100 + \"px\";\n    }\n    if (width && !isNaN(width)) width = width + \"px\";\n    return isStaticWidth && width || undefined;\n  }\n  @property({\n    defaultValue: 100, onSet(val: number, target: SurveyModel, prevVal: number) {\n      target.pages.forEach(p => p.updateRootStyle());\n    },\n  }) widthScale: number;\n  @property() staticStartWidth: number;\n  public setStaticStartWidth(width: number): void {\n    this.staticStartWidth = width;\n  }\n  @property() responsiveStartWidth: number;\n  public setResponsiveStartWidth(width: number): void {\n    this.responsiveStartWidth = width;\n  }\n  get isScaled(): boolean {\n    return Math.abs(this.widthScale - 100) > 0.001;\n  }\n  public get timerInfo(): { spent: number, limit?: number } {\n    return this.getTimerInfo();\n  }\n  public get timerClock(): { majorText: string, minorText?: string } {\n    let major: string;\n    let minor: string;\n    if (!!this.currentPage) {\n      let { spent, limit, minorSpent, minorLimit } = this.getTimerInfo();\n      if (limit > 0) major = this.getDisplayClockTime(limit - spent);\n      else { major = this.getDisplayClockTime(spent); }\n      if (minorSpent !== undefined) {\n        if (minorLimit > 0) {\n          minor = this.getDisplayClockTime(minorLimit - minorSpent);\n        } else {\n          minor = this.getDisplayClockTime(minorSpent);\n        }\n      }\n    }\n    return { majorText: major, minorText: minor };\n  }\n  public get timerInfoText(): string {\n    const options: TimerPanelInfoTextEvent = { text: this.getTimerInfoText() };\n    this.onTimerPanelInfoText.fire(this, options);\n    var loc = new LocalizableString(this, true);\n    loc.text = options.text;\n    return loc.textOrHtml;\n  }\n  private getTimerInfo(): { spent: number, limit?: number, minorSpent?: number, minorLimit?: number } {\n    let page = this.currentPage;\n    if (!page) return { spent: 0, limit: 0 };\n    let pageSpent = page.timeSpent;\n    let surveySpent = this.timeSpent;\n    let pageLimitSec = page.getMaxTimeToFinish();\n    let surveyLimit = this.timeLimit;\n    if (this.timerInfoMode == \"page\") {\n      return { spent: pageSpent, limit: pageLimitSec };\n    }\n    if (this.timerInfoMode == \"survey\") {\n      return { spent: surveySpent, limit: surveyLimit };\n    } else {\n      if (pageLimitSec > 0 && surveyLimit > 0) {\n        return { spent: pageSpent, limit: pageLimitSec, minorSpent: surveySpent, minorLimit: surveyLimit };\n      } else if (pageLimitSec > 0) {\n        return { spent: pageSpent, limit: pageLimitSec, minorSpent: surveySpent };\n      } else if (surveyLimit > 0) {\n        return { spent: surveySpent, limit: surveyLimit, minorSpent: pageSpent };\n      } else {\n        return { spent: pageSpent, minorSpent: surveySpent };\n      }\n    }\n  }\n  private getTimerInfoText() {\n    var page = this.currentPage;\n    if (!page) return \"\";\n    var pageSpent = this.getDisplayTime(page.timeSpent);\n    var surveySpent = this.getDisplayTime(this.timeSpent);\n    var pageLimitSec = page.getMaxTimeToFinish();\n    var pageLimit = this.getDisplayTime(pageLimitSec);\n    var surveyLimit = this.getDisplayTime(this.timeLimit);\n    if (this.timerInfoMode == \"page\")\n      return this.getTimerInfoPageText(page, pageSpent, pageLimit);\n    if (this.timerInfoMode == \"survey\")\n      return this.getTimerInfoSurveyText(surveySpent, surveyLimit);\n    if (this.timerInfoMode == \"combined\") {\n      if (pageLimitSec <= 0 && this.timeLimit <= 0) {\n        return this.getLocalizationFormatString(\"timerSpentAll\",\n          pageSpent,\n          surveySpent\n        );\n      }\n      if (pageLimitSec > 0 && this.timeLimit > 0) {\n        return this.getLocalizationFormatString(\"timerLimitAll\",\n          pageSpent,\n          pageLimit,\n          surveySpent,\n          surveyLimit\n        );\n      }\n      let pageText = this.getTimerInfoPageText(page, pageSpent, pageLimit);\n      let surveyText = this.getTimerInfoSurveyText(surveySpent, surveyLimit);\n      return pageText + \" \" + surveyText;\n    }\n    return \"\";\n  }\n  private getTimerInfoPageText(\n    page: PageModel,\n    pageSpent: string,\n    pageLimit: string\n  ): string {\n    return !!page && page.getMaxTimeToFinish() > 0\n      ? this.getLocalizationFormatString(\"timerLimitPage\", pageSpent, pageLimit)\n      : this.getLocalizationFormatString(\"timerSpentPage\", pageSpent, pageLimit);\n  }\n  private getTimerInfoSurveyText(\n    surveySpent: string,\n    surveyLimit: string\n  ): string {\n    const strName = this.timeLimit > 0 ? \"timerLimitSurvey\" : \"timerSpentSurvey\";\n    return this.getLocalizationFormatString(strName, surveySpent, surveyLimit);\n  }\n  private getDisplayClockTime(val: number): string {\n    if (val < 0) {\n      val = 0;\n    }\n    const min: number = Math.floor(val / 60);\n    const sec: number = val % 60;\n    let secStr = sec.toString();\n    if (sec < 10) {\n      secStr = \"0\" + secStr;\n    }\n    return `${min}:${secStr}`;\n  }\n  private getDisplayTime(val: number): string {\n    const min: number = Math.floor(val / 60);\n    const sec: number = val % 60;\n    let res: string = \"\";\n    if (min > 0) {\n      res += min + \" \" + this.getLocalizationString(\"timerMin\");\n    }\n    if (res && sec == 0) return res;\n    if (res) res += \" \";\n    return res + sec + \" \" + this.getLocalizationString(\"timerSec\");\n  }\n  public get timerModel(): SurveyTimerModel { return this.timerModelValue; }\n  /**\n   * Starts a timer that calculates how many seconds a respondent has spent on the survey. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   * @see stopTimer\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  public startTimer() {\n    if (this.isEditMode) {\n      this.timerModel.start();\n    }\n  }\n  startTimerFromUI() {\n    if (this.showTimer && this.state === \"running\") {\n      this.startTimer();\n    }\n  }\n  /**\n   * Stops the timer. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   * @see startTimer\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  public stopTimer(): void {\n    this.timerModel.stop();\n  }\n  /**\n   * A time period that a respondent has spent on the survey so far; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Assign a number to this property if you need to start the quiz timer from a specific time (for instance, if you want to continue an interrupted quiz).\n   *\n   * You can also find out how many seconds a respondent has spent on an individual survey page. To do this, use the [`timeSpent`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeSpent) property of a [`PageModel`](https://surveyjs.io/form-library/documentation/api-reference/page-model) object.\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see startTimer\n   */\n  public get timeSpent(): number { return this.timerModel.spent; }\n  public set timeSpent(val: number) { this.timerModel.spent = val; }\n  /**\n   * A time period that a respondent has to complete the survey; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see timeLimitPerPage\n   * @see startTimer\n   * @see timeSpent\n   */\n  public get timeLimit(): number {\n    return this.getPropertyValue(\"timeLimit\", 0);\n  }\n  public set timeLimit(val: number) {\n    this.setPropertyValue(\"timeLimit\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimit) property instead.\n   */\n  public get maxTimeToFinish(): number {\n    return this.timeLimit;\n  }\n  public set maxTimeToFinish(val: number) {\n    this.timeLimit = val;\n  }\n  /**\n   * A time period that a respondent has to complete each survey page; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * You can also use `PageModel`'s [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeLimit) property to specify a time period for an individual survey page.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see timeLimit\n   * @see startTimer\n   * @see timeSpent\n   */\n  public get timeLimitPerPage(): number {\n    return this.getPropertyValue(\"timeLimitPerPage\", 0);\n  }\n  public set timeLimitPerPage(val: number) {\n    this.setPropertyValue(\"timeLimitPerPage\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimitPerPage) property instead.\n   */\n  public get maxTimeToFinishPage(): number {\n    return this.timeLimitPerPage;\n  }\n  public set maxTimeToFinishPage(val: number) {\n    this.timeLimitPerPage = val;\n  }\n  private doTimer(page: PageModel): void {\n    this.onTimerTick.fire(this, {});\n    if (this.timeLimit > 0 && this.timeLimit <= this.timeSpent) {\n      this.timeSpent = this.timeLimit;\n      this.tryComplete();\n    }\n    if (page) {\n      var pageLimit = page.getMaxTimeToFinish();\n      if (pageLimit > 0 && pageLimit == page.timeSpent) {\n        if (this.isLastPage) {\n          this.tryComplete();\n        } else {\n          this.nextPage();\n        }\n      }\n    }\n  }\n  public get inSurvey(): boolean {\n    return true;\n  }\n  //ISurveyImplementor\n  getSurveyData(): ISurveyData {\n    return this;\n  }\n  getSurvey(): ISurvey {\n    return this;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this;\n  }\n  //ISurveyTriggerOwner\n  getObjects(pages: string[], questions: string[]): any[] {\n    var result: any[] = [];\n    Array.prototype.push.apply(result, this.getPagesByNames(pages));\n    Array.prototype.push.apply(result, this.getQuestionsByNames(questions));\n    return result;\n  }\n  setTriggerValue(name: string, value: any, isVariable: boolean): void {\n    if (!name) return;\n    if (isVariable) {\n      this.setVariable(name, value);\n    } else {\n      this.startSetValueFromTrigger();\n      const info = new ValueGetter().getValueInfo({ name: name, context: this.getValueGetterContext(), createObjects: true });\n      if (info.isFound && info.question) {\n        info.question.value = value;\n      } else {\n        if (name.indexOf(\".\") < 0) {\n          this.setValue(name, value);\n        }\n      }\n      this.finishSetValueFromTrigger();\n    }\n  }\n  copyTriggerValue(name: string, fromName: string, copyDisplayValue: boolean): void {\n    if (!name || !fromName) return;\n    const valueInfo = new ValueGetter().getValueInfo({ name: fromName, context: this.getValueGetterContext(), createObjects: true,\n      isText: copyDisplayValue, isDisplayValue: copyDisplayValue });\n    if (valueInfo.isFound) {\n      this.setTriggerValue(name, Helpers.getUnbindValue(valueInfo.value), false);\n    }\n  }\n  triggerExecuted(trigger: Trigger): void {\n    this.onTriggerExecuted.fire(this, { trigger: trigger });\n  }\n  private setValueFromTriggerCounter: number = 0;\n  public get isSettingValueFromTrigger(): boolean { return this.setValueFromTriggerCounter > 0; }\n  private startSetValueFromTrigger(): void {\n    this.setValueFromTriggerCounter ++;\n  }\n  private finishSetValueFromTrigger(): void {\n    this.setValueFromTriggerCounter --;\n  }\n  private focusingQuestionInfo: any;\n  private isMovingQuestion: boolean;\n  public startMovingQuestion(): void {\n    this.isMovingQuestion = true;\n  }\n  public stopMovingQuestion(): void {\n    this.isMovingQuestion = false;\n  }\n  get isQuestionDragging(): boolean { return this.isMovingQuestion; }\n\n  private isMovingPage: boolean = false;\n  public startMovingPage(): void {\n    this.isMovingPage = true;\n  }\n  public stopMovingPage(): void {\n    this.isMovingPage = false;\n  }\n\n  public needRenderIcons = true;\n\n  private skippedPages: Array<{ from: any, to: any }> = [];\n\n  /**\n   * Focuses a question with a specified name. Switches the current page if needed.\n   * @param name A question name.\n   * @returns `false` if the survey does not contain a question with the specified name or this question is hidden; otherwise, `true`.\n   * @see focusFirstQuestion\n   * @see autoFocusFirstQuestion\n   */\n  public focusQuestion(name: string): boolean {\n    return this.focusQuestionByInstance(this.getQuestionByName(name, true));\n  }\n  focusQuestionByInstance(question: Question, onError: boolean = false): boolean {\n    if (!question || !question.isVisible || !question.page) return false;\n    const oldQuestion = this.focusingQuestionInfo?.question;\n    if (oldQuestion === question) return false;\n    this.focusingQuestionInfo = { question: question, onError: onError };\n    const curElement = this.currentSingleElement;\n    this.skippedPages.push({ from: curElement || this.currentPage, to: curElement ? question : question.page });\n    const isNeedWaitForPageRendered = this.activePage !== question.page && !question.page.isStartPage;\n    if (isNeedWaitForPageRendered) {\n      this.currentPage = <PageModel>question.page;\n    }\n    if (this.isSingleVisibleQuestion && !this.isDesignMode) {\n      this.currentSingleElement = question;\n    }\n    if (!isNeedWaitForPageRendered) {\n      this.focusQuestionInfo();\n    }\n    return true;\n  }\n  private focusQuestionInfo(): void {\n    const question = this.focusingQuestionInfo?.question;\n    if (!!question && !question.isDisposed) {\n      question.focus(this.focusingQuestionInfo.onError);\n    }\n    this.focusingQuestionInfo = undefined;\n  }\n\n  public questionEditFinishCallback(question: Question, event: any): void {\n    const enterKeyAction = this.enterKeyAction || settings.enterKeyAction;\n    if (enterKeyAction == \"loseFocus\") event.target.blur();\n    if (enterKeyAction == \"moveToNextEditor\") {\n      const allQuestions = this.currentPage.questions;\n      const questionIndex = allQuestions.indexOf(question);\n      if (questionIndex > -1 && questionIndex < allQuestions.length - 1) {\n        allQuestions[questionIndex + 1].focus();\n      } else {\n        event.target.blur();\n      }\n    }\n  }\n  private elementWrapperComponentNameCore(componentName: string, element: any, wrapperName: string, reason?: string, item?: ItemValue): string {\n    if (this.onElementWrapperComponentName.isEmpty) return componentName;\n    const options = { componentName: componentName, element: element, wrapperName: wrapperName, reason: reason, item: item };\n    this.onElementWrapperComponentName.fire(this, options);\n    return options.componentName;\n  }\n  private elementWrapperDataCore(data: any, element: any, wrapperName: string, reason?: string, item?: ItemValue): any {\n    if (this.onElementWrapperComponentData.isEmpty) return data;\n    const options = { data: data, element: element, wrapperName: wrapperName, reason: reason, item: item };\n    this.onElementWrapperComponentData.fire(this, options);\n    return options.data;\n  }\n  public getElementWrapperComponentName(element: any, reason?: string): string {\n    const res = reason === \"logo-image\" ? \"sv-logo-image\" : SurveyModel.TemplateRendererComponentName;\n    return this.elementWrapperComponentNameCore(res, element, \"component\", reason);\n  }\n  public getQuestionContentWrapperComponentName(element: any): string {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, element, \"content-component\");\n  }\n  public getRowWrapperComponentName(row: QuestionRowModel): string {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, row, \"row\");\n  }\n  public getItemValueWrapperComponentName(item: ItemValue, question: QuestionSelectBase): string {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, question, \"itemvalue\", undefined, item);\n  }\n  public getElementWrapperComponentData(element: any, reason?: string): any {\n    return this.elementWrapperDataCore(element, element, \"component\", reason);\n  }\n  public getRowWrapperComponentData(row: QuestionRowModel): any {\n    return this.elementWrapperDataCore(row, row, \"row\");\n  }\n  public getItemValueWrapperComponentData(item: ItemValue, question: QuestionSelectBase): any {\n    return this.elementWrapperDataCore(item, question, \"itemvalue\", undefined, item);\n  }\n  public getMatrixCellTemplateData(cell: any): any {\n    const res: any = cell.question;\n    return this.elementWrapperDataCore(res, res, \"cell\");\n  }\n\n  public searchText(text: string): Array<IFindElement> {\n    if (!!text) text = text.toLowerCase();\n    var res: Array<IFindElement> = [];\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].searchText(text, res);\n    }\n    return res;\n  }\n  public skeletonComponentName = \"sv-skeleton\";\n  public getSkeletonComponentName(element: ISurveyElement): string {\n    return this.skeletonComponentName;\n  }\n\n  @propertyArray() private layoutElements: Array<ISurveyLayoutElement>;\n\n  /**\n   * Adds an element to the survey layout.\n   *\n   * This method accepts an object with the following layout element properties:\n   *\n   * - `id`: `string` | `\"timerpanel\"` | `\"progress-buttons\"` | `\"progress-questions\"` | `\"progress-pages\"` | `\"progress-correctquestions\"` | `\"progress-requiredquestions\"` | `\"toc-navigation\"` | `\"buttons-navigation\"`\\\n   * A layout element identifier. You can use possible values to access and relocate or customize predefined layout elements.\n   *\n   * - `container`: `\"header\"` | `\"footer\"` | `\"left\"` | `\"right\"` | `\"contentTop\"` | `\"contentBottom\"`\\\n   * A layout container that holds the element. If you want to display the element within multiple containers, set this property to an array of possible values.\n   *\n   * - `component`: `string`\\\n   * The name of the component that renders the layout element.\n   *\n   * - `data`: `any`\\\n   * Data passed as props to `component`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/progress-bar-with-percentage/ (linkStyle))\n   * @param layoutElement A layout element configuration.\n   * @returns The configuration of the previous layout element with the same `id`.\n   */\n  public addLayoutElement(layoutElement: ISurveyLayoutElement): ISurveyLayoutElement {\n    const existingLayoutElement = this.removeLayoutElement(layoutElement.id);\n    this.layoutElements.push(layoutElement);\n    return existingLayoutElement;\n  }\n  public findLayoutElement(layoutElementId: string): ISurveyLayoutElement {\n    const layoutElement = this.layoutElements.filter(a => a.id === layoutElementId)[0];\n    return layoutElement;\n  }\n  public removeLayoutElement(layoutElementId: string): ISurveyLayoutElement {\n    const layoutElement = this.findLayoutElement(layoutElementId);\n    if (!!layoutElement) {\n      const layoutElementIndex = this.layoutElements.indexOf(layoutElement);\n      this.layoutElements.splice(layoutElementIndex, 1);\n    }\n    return layoutElement;\n  }\n\n  public getContainerContent(container: LayoutElementContainer): Array<ISurveyLayoutElement> {\n    const containerLayoutElements = new Array<ISurveyLayoutElement>();\n    for (let layoutElement of this.layoutElements) {\n      if (this.mode !== \"display\" && isStrCiEqual(layoutElement.id, \"timerpanel\")) {\n        if (container === \"header\") {\n          if (this.isTimerPanelShowingOnTop && !this.isStartPageActive) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"footer\") {\n          if (this.isTimerPanelShowingOnBottom && !this.isStartPageActive) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (this.state === \"running\" && isStrCiEqual(layoutElement.id, this.progressBarComponentName)) {\n        if (this.questionsOnPageMode != \"singlePage\" || this.progressBarType == \"questions\") {\n          const headerLayoutElement = this.findLayoutElement(\"advanced-header\");\n          const advHeader = headerLayoutElement && headerLayoutElement.data as Cover;\n          let isBelowHeader = !advHeader || advHeader.hasBackground;\n          if (isStrCiEqual(this.progressBarLocation, \"aboveHeader\")) {\n            isBelowHeader = false;\n          }\n          if (isStrCiEqual(this.progressBarLocation, \"belowHeader\")) {\n            isBelowHeader = true;\n          }\n          if (this.showTOC && !(advHeader && advHeader.hasBackground) && this.isShowProgressBarOnTop && !this.isStartPageActive) {\n            if (container === \"center\") {\n              if (!isBelowHeader) {\n                layoutElement.index = -150;\n              } else {\n                delete layoutElement.index;\n              }\n              containerLayoutElements.push(layoutElement);\n            }\n          } else {\n            if (container === \"header\" && !isBelowHeader) {\n              layoutElement.index = -150;\n              if (this.isShowProgressBarOnTop && !this.isStartPageActive) {\n                containerLayoutElements.push(layoutElement);\n              }\n            }\n            if (container === \"center\" && isBelowHeader) {\n              if (!!layoutElement.index) {\n                delete layoutElement.index;\n              }\n              if (this.isShowProgressBarOnTop && !this.isStartPageActive) {\n                containerLayoutElements.push(layoutElement);\n              }\n            }\n          }\n          if (container === \"footer\") {\n            if (this.isShowProgressBarOnBottom && !this.isStartPageActive) {\n              containerLayoutElements.push(layoutElement);\n            }\n          }\n        }\n      } else if (isStrCiEqual(layoutElement.id, \"buttons-navigation\")) {\n        if (container === \"contentTop\") {\n          if (this.isNavigationButtonsShowingOnTop) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"contentBottom\") {\n          if (this.isNavigationButtonsShowingOnBottom) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (this.state === \"running\" && isStrCiEqual(layoutElement.id, \"toc-navigation\") && this.showTOC) {\n        if (container === \"left\") {\n          if ([\"left\", \"both\"].indexOf(this.tocLocation) !== -1) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"right\") {\n          if ([\"right\", \"both\"].indexOf(this.tocLocation) !== -1) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (isStrCiEqual(layoutElement.id, \"advanced-header\")) {\n        if ((this.state === \"running\" || this.state === \"starting\" || (this.showHeaderOnCompletePage === true && this.state === \"completed\"))) {\n          const advHeader = layoutElement && layoutElement.data as Cover;\n          if (this.showTOC && !(advHeader && advHeader.hasBackground)) {\n            if (container === \"contentTop\") {\n              containerLayoutElements.push(layoutElement);\n            }\n          } else {\n            if (layoutElement.container === container) {\n              containerLayoutElements.push(layoutElement);\n            }\n          }\n        }\n      } else {\n        if (Array.isArray(layoutElement.container) && layoutElement.container.indexOf(container) !== -1 || layoutElement.container === container) {\n          containerLayoutElements.push(layoutElement);\n        }\n      }\n    }\n    containerLayoutElements.sort((a, b) => (a.index || 0) - (b.index || 0));\n    containerLayoutElements.forEach(el => {\n      if (!!el.getData) {\n        el.data = el.getData();\n      }\n    });\n    return containerLayoutElements;\n  }\n  public processPopupVisiblityChanged(question: Question, popup: PopupModel<any>, visible: boolean): void {\n    this.onPopupVisibleChanged.fire(this, { question, popup, visible });\n  }\n  public processOpenDropdownMenu(question: Question, options: IDropdownMenuOptions): void {\n    const newOptions = Object.assign({ question }, options);\n    this.onOpenDropdownMenu.fire(this, newOptions as OpenDropdownMenuEvent);\n    options.menuType = newOptions.menuType;\n  }\n  public getCssTitleExpandableSvg(): string {\n    return null;\n  }\n  createCustomChoiceItem(options: CreateCustomChoiceItemEvent): any {\n    this.onCreateCustomChoiceItem.fire(this, options);\n  }\n\n  /**\n   * Applies a specified theme to the survey.\n   *\n   * [Themes & Styles](https://surveyjs.io/form-library/documentation/manage-default-themes-and-styles (linkStyle))\n   * @param theme An [`ITheme`](https://surveyjs.io/form-library/documentation/api-reference/itheme) object with theme settings.\n   */\n  public applyTheme(theme: ITheme): void {\n    if (!theme) return;\n\n    Object.keys(theme).forEach((key: keyof ITheme) => {\n      if (key === \"header\") {\n        return;\n      }\n      if (key === \"isPanelless\") {\n        this.isCompact = theme[key];\n      } else {\n        (this as any)[key] = theme[key];\n      }\n    });\n    if (\"header\" in theme && !theme.headerView) {\n      this.headerView = \"advanced\";\n    }\n    if (this.headerView !== \"basic\") {\n      this.removeLayoutElement(\"advanced-header\");\n      const advHeader = new Cover();\n      advHeader.fromTheme(theme);\n      this.insertAdvancedHeader(advHeader);\n    }\n    this.themeChanged(theme);\n  }\n  public themeChanged(theme: ITheme): void {\n    this.getAllQuestions().forEach(q => q.themeChanged(theme));\n  }\n\n  private taskManager: SurveyTaskManagerModel = new SurveyTaskManagerModel();\n\n  /**\n   * Disposes of the survey model.\n   *\n   * Call this method to release resources if your application contains multiple survey models or if you re-create a survey model at runtime.\n   */\n  public dispose(): void {\n    this.unConnectEditingObj();\n    this.removeScrollEventListener();\n    this.destroyResizeObserver();\n    this.rootElement = undefined;\n    if (this.layoutElements) {\n      for (var i = 0; i < this.layoutElements.length; i++) {\n        if (!!this.layoutElements[i].data && this.layoutElements[i].data !== this && this.layoutElements[i].data.dispose) {\n          this.layoutElements[i].data.dispose();\n        }\n      }\n      this.layoutElements.splice(0, this.layoutElements.length);\n    }\n    super.dispose();\n    this.editingObj = null;\n    if (!this.pages) return;\n    this.currentPage = null;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].setSurveyImpl(undefined);\n      this.pages[i].dispose();\n    }\n    this.pages.splice(0, this.pages.length);\n    if (this.disposeCallback) {\n      this.disposeCallback();\n    }\n  }\n  disposeCallback: () => void;\n\n  private onScrollCallback: () => void;\n  // private _lastScrollTop = 0;\n  public _isElementShouldBeSticky(selector: string): boolean {\n    if (!selector) return false;\n    const topStickyContainer = this.scrollerElement?.querySelector(selector);\n    if (!!topStickyContainer) {\n      // const scrollDirection = this.rootElement.scrollTop > this._lastScrollTop ? \"down\" : \"up\";\n      // this._lastScrollTop = this.rootElement.scrollTop;\n      return !!this.scrollerElement && this.scrollerElement.scrollTop > 0 && topStickyContainer.getBoundingClientRect().y <= this.scrollerElement.getBoundingClientRect().y;\n    }\n    return false;\n  }\n\n  public get rootScrollDisabled() {\n    return !(this.fitToContainer && this.formScrollDisabled);\n  }\n  public get formScrollDisabled() {\n    return !this.backgroundImage || this.backgroundImageAttachment !== \"fixed\";\n  }\n\n  public onScroll(): void {\n    if (!!this.rootElement) {\n      if (this._isElementShouldBeSticky(\".sv-components-container-center\")) {\n        this.rootElement.classList && this.rootElement.classList.add(\"sv-root--sticky-top\");\n      } else {\n        this.rootElement.classList && this.rootElement.classList.remove(\"sv-root--sticky-top\");\n      }\n      if (!!this.tocModel) {\n        this.tocModel.updateStickyTOCSize(this.rootElement);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  public addScrollEventListener(): void {\n    this.scrollHandler = () => { this.onScroll(); };\n    this.rootElement.addEventListener(\"scroll\", this.scrollHandler);\n    if (!!this.rootElement.getElementsByTagName(\"form\")[0]) {\n      this.rootElement.getElementsByTagName(\"form\")[0].addEventListener(\"scroll\", this.scrollHandler);\n    }\n    if (!!this.scrollerElement) {\n      this.scrollerElement.addEventListener(\"scroll\", this.scrollHandler);\n    }\n  }\n  public removeScrollEventListener(): void {\n    if (!!this.rootElement && !!this.scrollHandler) {\n      this.rootElement.removeEventListener(\"scroll\", this.scrollHandler);\n      if (!!this.rootElement.getElementsByTagName(\"form\")[0]) {\n        this.rootElement.getElementsByTagName(\"form\")[0].removeEventListener(\"scroll\", this.scrollHandler);\n      }\n      if (!!this.scrollerElement) {\n        this.scrollerElement.removeEventListener(\"scroll\", this.scrollHandler);\n      }\n    }\n  }\n  public questionErrorComponent = \"sv-question-error\";\n}\n\nfunction isStrCiEqual(a: string, b: string) {\n  if (!a) return false;\n  if (!b) return false;\n  return a.toUpperCase() === b.toUpperCase();\n}\n\nSerializer.addClass(\"survey\", [\n  {\n    name: \"locale\",\n    choices: () => {\n      return surveyLocalization.getLocales(true);\n    },\n    onGetValue: (obj: any): any => {\n      return obj.locale == surveyLocalization.defaultLocale ? null : obj.locale;\n    },\n  },\n  { name: \"title\", serializationProperty: \"locTitle\", dependsOn: \"locale\" },\n  {\n    name: \"description:text\",\n    serializationProperty: \"locDescription\",\n    dependsOn: \"locale\",\n  },\n  { name: \"logo:file\", serializationProperty: \"locLogo\" },\n  { name: \"logoWidth\", default: \"auto\", minValue: 0 },\n  { name: \"logoHeight\", default: \"40px\", minValue: 0 },\n  {\n    name: \"logoFit\",\n    default: \"contain\",\n    choices: [\"none\", \"contain\", \"cover\", \"fill\"],\n  },\n  {\n    name: \"logoPosition\",\n    default: \"left\",\n    choices: [\"none\", \"left\", \"right\", \"top\", \"bottom\"],\n  },\n  { name: \"autoFocusFirstQuestion:boolean\", alternativeName: \"focusFirstQuestionAutomatic\" },\n  { name: \"autoFocusFirstError:boolean\", default: true, alternativeName: \"focusOnFirstError\" },\n  { name: \"completedHtml:html\", serializationProperty: \"locCompletedHtml\" },\n  {\n    name: \"completedBeforeHtml:html\",\n    serializationProperty: \"locCompletedBeforeHtml\",\n  },\n  {\n    name: \"completedHtmlOnCondition:htmlconditions\",\n    className: \"htmlconditionitem\", isArray: true\n  },\n  { name: \"loadingHtml:html\", serializationProperty: \"locLoadingHtml\" },\n  { name: \"pages:surveypages\", className: \"page\", isArray: true, onSerializeValue: (obj: any): any => { return obj.originalPages || obj.pages; } },\n  {\n    name: \"elements\",\n    alternativeName: \"questions\",\n    baseClassName: \"question\",\n    visible: false,\n    isLightSerializable: false,\n    onGetValue: function (obj: any): any {\n      return null;\n    },\n    onSetValue: function (obj: any, value: any, jsonConverter: any) {\n      obj.pages.splice(0, obj.pages.length);\n      var page = obj.addNewPage(\"\");\n      jsonConverter.toObject({ questions: value }, page, jsonConverter?.options);\n    },\n  },\n  {\n    name: \"triggers:triggers\",\n    baseClassName: \"surveytrigger\",\n    classNamePart: \"trigger\",\n  },\n  {\n    name: \"calculatedValues:calculatedvalues\",\n    className: \"calculatedvalue\", isArray: true\n  },\n  { name: \"sjsVersion\", visible: false },\n  { name: \"surveyId\", visible: false },\n  { name: \"surveyPostId\", visible: false },\n  { name: \"surveyShowDataSaving:boolean\", visible: false },\n  \"cookieName\",\n  { name: \"partialSendEnabled:boolean\", alternativeName: \"sendResultOnPageNext\" },\n  {\n    name: \"showNavigationButtons:boolean\",\n    default: true,\n  },\n  {\n    name: \"navigationButtonsLocation\",\n    default: \"bottom\",\n    choices: [\"top\", \"bottom\", \"topBottom\"],\n  },\n  {\n    name: \"showPrevButton:boolean\",\n    default: true,\n    visibleIf: (obj: any) => { return obj.showNavigationButtons !== \"none\"; }\n  },\n  { name: \"showTitle:boolean\", default: true },\n  { name: \"showPageTitles:boolean\", default: true },\n  { name: \"showCompletePage:boolean\", default: true, alternativeName: \"showCompletedPage\" },\n  \"navigateToUrl\",\n  {\n    name: \"navigateToUrlOnCondition:urlconditions\",\n    className: \"urlconditionitem\", isArray: true\n  },\n  {\n    name: \"questionOrder\", alternativeName: \"questionsOrder\",\n    default: \"initial\",\n    choices: [\"initial\", \"random\"],\n  },\n  {\n    name: \"matrixDragHandleArea\",\n    visible: false,\n    default: \"entireItem\",\n    choices: [\"entireItem\", \"icon\"]\n  },\n  \"showPageNumbers:boolean\",\n  {\n    name: \"showQuestionNumbers\",\n    default: \"off\",\n    choices: [\"on\", \"onPage\", \"recursive\", \"off\"],\n  },\n  {\n    name: \"questionTitleLocation\",\n    default: \"top\",\n    choices: [\"top\", \"bottom\", \"left\"],\n  },\n  {\n    name: \"questionDescriptionLocation\",\n    default: \"underTitle\",\n    choices: [\"underInput\", \"underTitle\"],\n  },\n  { name: \"questionErrorLocation\", default: \"top\", choices: [\"top\", \"bottom\"] },\n  {\n    name: \"showProgressBar:boolean\",\n    default: false,\n    onSetValue: (obj: any, value: any, jsonConv: any) => {\n      obj && obj.setShowProgressBar(value);\n    },\n\n  },\n  {\n    name: \"progressBarLocation\",\n    default: \"auto\",\n    choices: [\"auto\", \"aboveheader\", \"belowheader\", \"bottom\", \"topbottom\"],\n    visibleIf: (obj: any) => { return obj.showProgressBar; }\n  },\n  {\n    name: \"progressBarType\",\n    default: \"pages\",\n    choices: [\n      \"pages\",\n      \"questions\",\n      \"requiredQuestions\",\n      \"correctQuestions\",\n    ],\n    visibleIf: (obj: any) => { return obj.showProgressBar; }\n  },\n  {\n    name: \"progressBarShowPageTitles:switch\",\n    category: \"navigation\",\n    visibleIf: (obj: any) => { return obj.showProgressBar && obj.progressBarType === \"pages\"; }\n  },\n  {\n    name: \"progressBarShowPageNumbers:switch\",\n    default: false,\n    category: \"navigation\",\n    visibleIf: (obj: any) => { return obj.showProgressBar && obj.progressBarType === \"pages\"; }\n  },\n  {\n    name: \"progressBarInheritWidthFrom\",\n    default: \"container\",\n    choices: [\"container\", \"survey\"],\n    category: \"navigation\",\n    visibleIf: (obj: any) => { return obj.showProgressBar && obj.progressBarType === \"pages\"; }\n  },\n  {\n    name: \"showTOC:switch\",\n    default: false\n  },\n  {\n    name: \"tocLocation\", default: \"left\", choices: [\"left\", \"right\"],\n    dependsOn: [\"showTOC\"],\n    visibleIf: (survey: any) => { return !!survey && survey.showTOC; }\n  },\n  { name: \"readOnly:boolean\" },\n  { name: \"mode\", visible: false, isSerializable: false },\n  { name: \"storeOthersAsComment:boolean\", default: true },\n  { name: \"maxTextLength:number\", default: 0, minValue: 0 },\n  { name: \"maxCommentLength:number\", default: 0, minValue: 0, alternativeName: \"maxOthersLength\" },\n  {\n    name: \"autoAdvanceEnabled:boolean\", alternativeName: \"goNextPageAutomatic\",\n    onSetValue: function (obj: any, value: any) {\n      if (value !== \"autogonext\") {\n        value = Helpers.isTwoValueEquals(value, true);\n      }\n      if (value === \"autogonext\") {\n        value = true;\n      }\n      obj.setPropertyValue(\"autoAdvanceEnabled\", value);\n    }\n  },\n  {\n    name: \"autoAdvanceAllowComplete:boolean\", default: true, alternativeName: \"allowCompleteSurveyAutomatic\",\n    visibleIf: (obj: any): boolean => obj.autoAdvanceEnabled === true\n  },\n  {\n    name: \"clearInvisibleValues\",\n    default: \"onComplete\",\n    choices: [\"none\", \"onComplete\", \"onHidden\", \"onHiddenContainer\"],\n  },\n  {\n    name: \"checkErrorsMode\",\n    default: \"onNextPage\",\n    choices: [\"onNextPage\", \"onValueChanged\", \"onComplete\"],\n  },\n  { name: \"validateVisitedEmptyFields:boolean\", dependsOn: \"checkErrorsMode\", visibleIf: (obj) => obj.checkErrorsMode === \"onValueChanged\" },\n  {\n    name: \"textUpdateMode\",\n    default: \"onBlur\",\n    choices: [\"onBlur\", \"onTyping\"],\n  },\n  { name: \"autoGrowComment:boolean\", default: false },\n  { name: \"allowResizeComment:boolean\", default: true },\n  { name: \"commentAreaRows:number\", minValue: 1 },\n  {\n    name: \"startSurveyText\",\n    serializationProperty: \"locStartSurveyText\",\n    visibleIf: (obj: any) => { return obj.firstPageIsStartPage; }\n  },\n  {\n    name: \"pagePrevText\",\n    serializationProperty: \"locPagePrevText\",\n    visibleIf: (obj: any) => { return obj.showNavigationButtons !== \"none\" && obj.showPrevButton; }\n  },\n  {\n    name: \"pageNextText\",\n    serializationProperty: \"locPageNextText\",\n    visibleIf: (obj: any) => { return obj.showNavigationButtons !== \"none\"; }\n  },\n  {\n    name: \"completeText\",\n    serializationProperty: \"locCompleteText\",\n    visibleIf: (obj: any) => { return obj.showNavigationButtons !== \"none\"; }\n  },\n  {\n    name: \"previewText\",\n    serializationProperty: \"locPreviewText\",\n    visibleIf: (obj: any) => { return obj.showPreviewBeforeComplete; }\n  },\n  {\n    name: \"editText\",\n    serializationProperty: \"locEditText\",\n    visibleIf: (obj: any) => { return obj.showPreviewBeforeComplete; }\n  },\n  { name: \"requiredMark\", default: \"*\", alternativeName: \"requiredText\" },\n  {\n    name: \"questionStartIndex\",\n    dependsOn: [\"showQuestionNumbers\"],\n    visibleIf: (survey: any) => { return !survey || survey.showQuestionNumbers !== \"off\"; }\n  },\n  {\n    name: \"questionTitlePattern\",\n    default: \"numTitleRequire\",\n    dependsOn: [\"questionStartIndex\", \"requiredMark\"],\n    choices: (obj: any) => {\n      if (!obj) return [];\n      return obj.getQuestionTitlePatternOptions();\n    },\n  },\n  {\n    name: \"questionTitleTemplate\",\n    visible: false,\n    isSerializable: false,\n    serializationProperty: \"locQuestionTitleTemplate\",\n  },\n  { name: \"firstPageIsStartPage:boolean\", default: false, alternativeName: \"firstPageIsStarted\" },\n  {\n    name: \"isSinglePage:boolean\",\n    default: false,\n    visible: false,\n    isSerializable: false,\n  },\n  {\n    name: \"questionsOnPageMode\",\n    default: \"standard\",\n    choices: [\"standard\", \"singlePage\", \"questionPerPage\", \"inputPerPage\"],\n  },\n  {\n    name: \"showPreviewBeforeComplete:boolean\",\n    default: false,\n    onSetValue: (obj: any, value: any, jsonConv: any) => {\n      obj && obj.setShowPreviewBeforeComplete(value);\n    },\n  },\n  {\n    name: \"previewMode\",\n    default: \"allQuestions\",\n    choices: [\"allQuestions\", \"answeredQuestions\"],\n    visibleIf: (obj: any) => { return obj.showPreviewBeforeComplete; }\n  },\n  { name: \"showTimer:boolean\" },\n  { name: \"timeLimit:number\", alternativeName: \"maxTimeToFinish\", default: 0, minValue: 0, enableIf: (obj) => obj.showTimer },\n  { name: \"timeLimitPerPage:number\", alternativeName: \"maxTimeToFinishPage\", default: 0, minValue: 0, enableIf: (obj) => obj.showTimer },\n  { name: \"timerLocation\", default: \"top\", choices: [\"top\", \"bottom\"], enableIf: (obj) => obj.showTimer },\n  { name: \"timerInfoMode\", alternativeName: \"showTimerPanelMode\",\n    default: \"combined\", choices: [\"page\", \"survey\", \"combined\"], enableIf: (obj) => obj.showTimer },\n  { name: \"showTimerPanel\", visible: false, isSerializable: false },\n  {\n    name: \"widthMode\",\n    default: \"auto\",\n    choices: [\"auto\", \"static\", \"responsive\"],\n  },\n  { name: \"gridLayoutEnabled:boolean\", default: false },\n  { name: \"width\", visibleIf: (obj: any) => { return obj.widthMode === \"static\"; } },\n  { name: \"fitToContainer:boolean\", default: true, visible: false },\n  { name: \"headerView\", default: \"basic\", choices: [\"basic\", \"advanced\"], visible: false },\n  { name: \"backgroundImage:file\", visible: false },\n  { name: \"backgroundImageFit\", default: \"cover\", choices: [\"auto\", \"contain\", \"cover\"], visible: false },\n  { name: \"backgroundImageAttachment\", default: \"scroll\", choices: [\"scroll\", \"fixed\"], visible: false },\n  { name: \"backgroundOpacity:number\", minValue: 0, maxValue: 1, default: 1, visible: false },\n  { name: \"showBrandInfo:boolean\", default: false, visible: false }\n]);\n", "import { JsonObjectProperty, property, propertyArray, Serializer } from \"./jsonobject\";\nimport { SurveyError } from \"./survey-error\";\nimport { ISurveyImpl, ISurvey, ISurveyData, IPlainDataOptions, IValueItemCustomPropValues } from \"./base-interfaces\";\nimport { SurveyModel } from \"./survey\";\nimport { IQuestionPlainData, Question } from \"./question\";\nimport { ItemValue } from \"./itemvalue\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { OtherEmptyError } from \"./error\";\nimport { ChoicesRestful } from \"./choicesRestful\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { ConditionRunner } from \"./conditions\";\nimport { Helpers, HashTable } from \"./helpers\";\nimport { settings } from \"./settings\";\nimport { SurveyElement } from \"./survey-element\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { ITextArea, TextAreaModel } from \"./utils/text-area\";\nimport { cleanHtmlElementAfterAnimation, prepareElementForVerticalAnimation, setPropertiesOnElementForAnimation } from \"./utils/utils\";\nimport { AnimationGroup, IAnimationGroupConsumer } from \"./utils/animation\";\nimport { TextContextProcessor } from \"./textPreProcessor\";\nimport { ValidationContext } from \"./question\";\n\nexport class ChoiceItem extends ItemValue {\n  private locCommentPlaceholderValue: LocalizableString;\n  protected getBaseType(): string { return \"choiceitem\"; }\n  public get showCommentArea(): boolean {\n    return this.getPropertyValue(\"showCommentArea\");\n  }\n  public set showCommentArea(val: boolean) {\n    if (val && !this.supportComment) {\n      val = false;\n    }\n    this.setPropertyValue(\"showCommentArea\", val);\n  }\n  public get isCommentRequired(): boolean {\n    return this.getPropertyValue(\"isCommentRequired\");\n  }\n  public set isCommentRequired(val: boolean) {\n    this.setPropertyValue(\"isCommentRequired\", val);\n  }\n  public get isCommentShowing(): boolean {\n    return this.getPropertyValue(\"isCommentShowing\", false);\n  }\n  public get locCommentPlaceholder(): LocalizableString {\n    if (!this.locCommentPlaceholderValue) {\n      this.createCommentPlaceholder();\n    }\n    return this.locCommentPlaceholderValue;\n  }\n  private createCommentPlaceholder(): void {\n    const str = new LocalizableString(this, true, \"commentPlaceholder\");\n    str.onChanged = () => { this.setPropertyValue(\"commentPlaceholder\", this.locCommentPlaceholderValue.text); };\n    this.locCommentPlaceholderValue = str;\n  }\n  public get commentPlaceholder(): string {\n    return this.locCommentPlaceholder.text;\n  }\n  public set commentPlaceholder(val: string) {\n    this.locCommentPlaceholder.text = val;\n  }\n  setIsCommentShowing(val: boolean) {\n    this.setPropertyValue(\"isCommentShowing\", val);\n  }\n  public get supportComment(): boolean {\n    const owner: any = this.locOwner;\n    if (!owner || !owner.supportMultipleComment) return false;\n    return owner.supportMultipleComment(this);\n  }\n  protected canAddPpropertyToJSON(prop: JsonObjectProperty): boolean {\n    if (prop.name === \"commentPlaceholder\") return !!this.locCommentPlaceholderValue;\n    return super.canAddPpropertyToJSON(prop);\n  }\n  protected onLocOwnerChanged() : void {\n    if (this.showCommentArea && !this.supportComment) {\n      this.showCommentArea = false;\n    }\n  }\n}\n\n/**\n * A base class for multiple-choice question types ([Checkboxes](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Radio Button Group](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), etc.).\n */\nexport class QuestionSelectBase extends Question {\n  public visibleChoicesChangedCallback: () => void;\n  public loadedChoicesFromServerCallback: () => void;\n  public renderedChoicesChangedCallback: () => void;\n  private commentAreaModelValues: HashTable<TextAreaModel>;\n  private filteredChoicesValue: Array<ItemValue>;\n  private conditionChoicesVisibleIfRunner: ConditionRunner;\n  private conditionChoicesEnableIfRunner: ConditionRunner;\n  private otherItemValue: ItemValue;\n  private choicesFromUrl: Array<ItemValue>;\n  private cachedValueForUrlRequests: any;\n  private isChoicesLoaded: boolean;\n  private enableOnLoadingChoices: boolean;\n  private noneItemValue: ItemValue;\n  private refuseItemValue: ItemValue;\n  private dontKnowItemValue: ItemValue;\n  private newItemValue: ItemValue;\n  private canShowOptionItemCallback: (item: ItemValue) => boolean;\n  private waitingGetChoiceDisplayValueResponse: boolean;\n  private get waitingChoicesByURL(): boolean {\n    return !this.isChoicesLoaded && this.hasChoicesUrl;\n  }\n  protected get selectedItemValues(): any { return this.getPropertyValue(\"selectedItemValues\"); }\n  protected set selectedItemValues(val: any) { this.setPropertyValue(\"selectedItemValues\", val); }\n\n  constructor(name: string) {\n    super(name);\n    this.otherItemValue = this.createItemValue(\"other\");\n    this.otherItem.showCommentArea = true;\n    this.otherItem.isCommentRequired = true;\n    this.noneItemValue = this.createNoneItem(settings.noneItemValue, \"noneText\", \"noneItemText\");\n    this.refuseItemValue = this.createNoneItem(settings.refuseItemValue, \"refuseText\", \"refuseItemText\");\n    this.dontKnowItemValue = this.createNoneItem(settings.dontKnowItemValue, \"dontKnowText\", \"dontKnowItemText\");\n    this.createItemValues(\"choices\");\n    this.registerPropertyChangedHandlers([\"choices\"], () => {\n      if (!this.filterItems()) {\n        this.onVisibleChoicesChanged();\n      }\n    });\n    this.createItemValues(\"customChoices\");\n    this.registerPropertyChangedHandlers([\"customChoices\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers(\n      [\"choicesFromQuestion\", \"choicesFromQuestionMode\", \"choiceValuesFromQuestion\",\n        \"choiceTextsFromQuestion\", \"showNoneItem\", \"showRefuseItem\", \"showDontKnowItem\", \"isUsingRestful\", \"isMessagePanelVisible\"],\n      () => {\n        this.onVisibleChoicesChanged();\n      }\n    );\n    this.registerPropertyChangedHandlers([\"hideIfChoicesEmpty\"], () => {\n      this.onVisibleChanged();\n    });\n    this.registerPropertyChangedHandlers([\"selecteditemValues\"], (newVal: any) => {\n      this.onSelectedItemValuesChangedHandler(newVal);\n    });\n    this.createNewArray(\"visibleChoices\", () => this.updateRenderedChoices(), () => this.updateRenderedChoices());\n    this.setNewRestfulProperty();\n    var locOtherText = this.createLocalizableString(\"otherText\", this.otherItemValue, true, \"otherItemText\");\n    this.createLocalizableString(\"otherErrorText\", this, true, \"otherRequiredError\");\n    this.createLocalizableString(\"otherPlaceholder\", this, false, true);\n    this.otherItemValue.setLocText(locOtherText);\n    this.choicesByUrl.createItemValue = (value: any): ItemValue => {\n      return this.createItemValue(value);\n    };\n    this.choicesByUrl.beforeSendRequestCallback = (): void => {\n      this.onBeforeSendRequest();\n    };\n    this.choicesByUrl.getResultCallback = (items: Array<ItemValue>): void => {\n      this.onLoadChoicesFromUrl(items);\n    };\n    this.choicesByUrl.updateResultCallback = (\n      items: Array<ItemValue>,\n      serverResult: any\n    ): Array<ItemValue> => {\n      if (this.survey) {\n        return this.survey.updateChoicesFromServer(this, items, serverResult);\n      }\n      return items;\n    };\n  }\n  public getType(): string {\n    return \"selectbase\";\n  }\n  public dispose(): void {\n    super.dispose();\n    const q = this.getQuestionWithChoices();\n    if (!!q) {\n      q.removeDependedQuestion(this);\n    }\n    const dist = this.commentAreaModelValues;\n    if (!!dist) {\n      Object.keys(dist).forEach((key) => { dist[key].dispose(); });\n    }\n  }\n  public get otherTextAreaModel(): TextAreaModel {\n    return this.getCommentTextAreaModel(this.otherItem);\n  }\n  public getCommentTextAreaModel(item: ItemValue): TextAreaModel {\n    const val = item?.value;\n    if (val === undefined) return null;\n    if (!this.commentAreaModelValues) {\n      this.commentAreaModelValues = {};\n    }\n    const dic = this.commentAreaModelValues;\n    if (!dic[val]) {\n      dic[val] = new TextAreaModel(this.getOtherTextAreaOptions(<ChoiceItem>item));\n    }\n    return dic[val];\n  }\n  private getOtherTextAreaOptions(item: ChoiceItem): ITextArea {\n    const options: ITextArea = {\n      question: this,\n      id: () => this.getItemCommentId(item),\n      propertyNames: [this.getCommentPropertyValue(item)],\n      className: () => this.cssClasses.comment,\n      placeholder: () => this.getCommentPlaceholder(item),\n      isDisabledAttr: () => this.isInputReadOnly || false,\n      rows: () => this.commentAreaRows,\n      maxLength: () => this.getOthersMaxLength(),\n      autoGrow: () => this.survey && this.survey.autoGrowComment,\n      ariaRequired: () => this.ariaRequired || this.a11y_input_ariaRequired,\n      ariaLabel: () => this.ariaLabel || this.a11y_input_ariaLabel,\n      getTextValue: () => { return this.getCommentValueCore(item); },\n      onTextAreaChange: (e) => { this.onOtherValueChange(item, e); },\n      onTextAreaInput: (e) => { this.onOtherValueInput(item, e); },\n    };\n    return options;\n  }\n  private getCommentPlaceholder(item: ChoiceItem): string {\n    if (item.commentPlaceholder) return item.commentPlaceholder;\n    if (this.isOtherItemByValue(item)) return this.otherPlaceholder;\n    const commentPlaceholder = this.commentPlaceholder;\n    return new TextContextProcessor(item).processText(commentPlaceholder, true);\n  }\n  protected resetDependedQuestion(): void {\n    this.choicesFromQuestion = \"\";\n  }\n  public get otherId(): string {\n    return this.getItemCommentId(this.otherItem);\n  }\n  public getItemCommentId(item: ItemValue): string {\n    return this.id + \"_\" + item.normalizedId;\n  }\n  protected getCommentElementsId(): Array<string> {\n    return [this.commentId, this.otherId];\n  }\n  protected getItemValueType(): string {\n    return \"choiceitem\";\n  }\n  public createItemValue(value: any, text?: string): ItemValue {\n    const res = <ItemValue>Serializer.createClass(this.getItemValueType(), { value: value });\n    res.locOwner = this;\n    if (!!text) res.text = text;\n    return res;\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    if (context.isOnValueChanged !== true) {\n      this.clearIncorrectValues();\n    }\n    return super.validateElementCore(context);\n  }\n  public get isUsingCarryForward(): boolean {\n    return !!this.carryForwardQuestionType;\n  }\n  public get carryForwardQuestionType(): string {\n    return this.getPropertyValue(\"carryForwardQuestionType\");\n  }\n  private setCarryForwardQuestionType(selBaseQuestion: boolean, arrayQuestion: boolean): void {\n    const mode = selBaseQuestion ? \"select\" : (arrayQuestion ? \"array\" : undefined);\n    this.setPropertyValue(\"carryForwardQuestionType\", mode);\n  }\n  public get isUsingRestful(): boolean {\n    return this.getPropertyValueWithoutDefault(\"isUsingRestful\") || false;\n  }\n  public updateIsUsingRestful(): void {\n    this.setPropertyValueDirectly(\"isUsingRestful\", this.hasChoicesUrl);\n  }\n  public supportGoNextPageError(): boolean {\n    return !this.isOtherSelected || !!this.otherValue;\n  }\n  isLayoutTypeSupported(layoutType: string): boolean {\n    return true;\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    if (this.choicesOrder !== \"none\") {\n      this.updateVisibleChoices();\n      this.onVisibleChoicesChanged();\n    }\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    if (!!this.choicesFromUrl) {\n      ItemValue.locStrsChanged(this.choicesFromUrl);\n      ItemValue.locStrsChanged(this.visibleChoices);\n    }\n    if (this.isUsingCarryForward) {\n      ItemValue.locStrsChanged(this.visibleChoices);\n    }\n  }\n  private prevOtherErrorValue: string;\n  private updatePrevOtherErrorValue(val: string): void {\n    const oldVal = this.otherValue;\n    if (val !== oldVal) {\n      this.prevOtherErrorValue = oldVal;\n    }\n  }\n  private isSettingComment: boolean;\n  public get otherValue(): string {\n    if (this.getStoreOthersAsComment()) return this.getQuestionComment();\n    return this.otherValueCore;\n  }\n  protected trimCommentValue(val: string): string {\n    if (val === \"\" || !!val && val.toString().trim() === \"\") return undefined;\n    return val;\n  }\n  public set otherValue(val: string) {\n    val = this.trimCommentValue(val);\n    if (!this.isSettingComment && this.otherValue !== val) {\n      this.onUpdateCommentOnAutoOtherMode(val);\n      this.updatePrevOtherErrorValue(val);\n      this.isSettingComment = true;\n      if (this.getStoreOthersAsComment())\n        this.setNewComment(val);\n      else {\n        this.otherValueCore = val;\n        if (this.isOtherSelected && !this.isRenderedValueSetting) {\n          this.value = this.getValueOnSettingOther(val);\n        }\n      }\n      this.isSettingComment = false;\n      this.updateChoicesDependedQuestions();\n    }\n  }\n  protected get otherValueCore(): string {\n    return this.getPropertyValue(\"otherValue\");\n  }\n  protected set otherValueCore(val: string) {\n    this.setPropertyValue(\"otherValue\", val);\n  }\n  /**\n   * Returns the \"Other\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showOtherItem\n   */\n  public get otherItem(): ItemValue {\n    return this.otherItemValue;\n  }\n  /**\n   * Returns `true` if the \"Other\" choice item is selected.\n   * @see showOtherItem\n   */\n  public get isOtherSelected(): boolean {\n    return this.showOtherItem && this.getHasOther(this.renderedValue);\n  }\n  public get isNoneSelected(): boolean {\n    return this.showNoneItem && this.getIsItemValue(this.renderedValue, this.noneItem);\n  }\n  public supportMultipleComment(item: ItemValue): boolean { return true; }\n  public isCommentShowing(item: ItemValue): boolean {\n    return item && item.showCommentArea && this.isItemSelected(item);\n  }\n  public getCommentValue(item: ItemValue): string {\n    return this.isCommentShowing(item) ? this.getCommentValueCore(item) || \"\" : \"\";\n  }\n  public setCommentValue(item: ItemValue, newValue: string): void {\n    if (this.isCommentShowing(item)) {\n      this.setCommentValueCore(item, newValue);\n    }\n  }\n  public get commentPropertyValue(): string {\n    return \"comment\";\n  }\n  protected getCommentValueCore(item: ItemValue): string {\n    if (this.isOtherItemByValue(item)) return this.otherValue;\n    return this.getPropertyValue(this.getCommentPropertyValue(item), this.getCommentValueByItem(item)) || \"\";\n  }\n  protected getCommentValueByItem(item: ItemValue): string {\n    const val = this.value;\n    if (typeof val === \"object\") return val[this.commentPropertyValue] || \"\";\n    return \"\";\n  }\n  protected setCommentValueCore(item: ItemValue, newValue: string): void {\n    if (this.isOtherItemByValue(item)) {\n      this.otherValue = newValue;\n    } else {\n      this.setCommentPropertyValue(item, newValue);\n      if (this.isItemSelectedCore(item)) {\n        if (!!newValue) {\n          this.value = { value: item.value, comment: newValue };\n        } else {\n          this.value = item.value;\n        }\n      }\n    }\n  }\n  protected setCommentPropertyValue(item: ItemValue, newValue: string): void {\n    this.setPropertyValue(this.getCommentPropertyValue(item), newValue);\n  }\n  protected isOtherItemByValue(item: ItemValue): boolean {\n    return item.value === this.otherItem.value;\n  }\n  protected getCommentPropertyValue(item: ItemValue): string {\n    if (this.isOtherItemByValue(item)) return this.getStoreOthersAsComment() ? \"comment\" : \"otherValue\";\n    return \"other_\" + item.normalizedId;\n  }\n  /**\n   * Specifies whether to display the \"None\" choice item.\n   *\n   * When users select the \"None\" item in multi-select questions, all other items become unselected.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see noneItem\n   * @see noneText\n   * @see [settings.noneItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#noneItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get showNoneItem(): boolean {\n    return this.getPropertyValue(\"showNoneItem\");\n  }\n  public set showNoneItem(val: boolean) {\n    this.setPropertyValue(\"showNoneItem\", val);\n  }\n  public get hasNone(): boolean {\n    return this.showNoneItem;\n  }\n  public set hasNone(val: boolean) {\n    this.showNoneItem = val;\n  }\n  /**\n   * Returns the \"None\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showNoneItem\n   */\n  public get noneItem(): ItemValue {\n    return this.noneItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"None\" choice item.\n   * @see showNoneItem\n   */\n  public get noneText(): string {\n    return this.getLocalizableStringText(\"noneText\");\n  }\n  public set noneText(val: string) {\n    this.setLocalizableStringText(\"noneText\", val);\n  }\n  get locNoneText(): LocalizableString {\n    return this.getLocalizableString(\"noneText\");\n  }\n  /**\n   * Specifies whether to display the \"Refuse to answer\" choice item.\n   *\n   * When users select the \"Refuse to answer\" item in multi-select questions, all other items become unselected.\n   * @see refuseItem\n   * @see refuseItemText\n   * @see [settings.refuseItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#refuseItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get showRefuseItem(): boolean {\n    return this.getPropertyValue(\"showRefuseItem\");\n  }\n  public set showRefuseItem(val: boolean) {\n    this.setPropertyValue(\"showRefuseItem\", val);\n  }\n  /**\n   * Returns the \"Refuse to answer\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showRefuseItem\n   */\n  public get refuseItem(): ItemValue {\n    return this.refuseItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Refuse to answer\" choice item.\n   * @see showRefuseItem\n   */\n  public get refuseText(): string {\n    return this.getLocalizableStringText(\"refuseText\");\n  }\n  public set refuseText(val: string) {\n    this.setLocalizableStringText(\"refuseText\", val);\n  }\n  get locRefuseText(): LocalizableString {\n    return this.getLocalizableString(\"refuseText\");\n  }\n  /**\n   * Specifies whether to display the \"Don't know\" choice item.\n   *\n   * When users select the \"Don't know\" item in multi-select questions, all other items become unselected.\n   * @see dontKnowItem\n   * @see dontKnowItemText\n   * @see [settings.dontKnowItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#dontKnowItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get showDontKnowItem(): boolean {\n    return this.getPropertyValue(\"showDontKnowItem\");\n  }\n  public set showDontKnowItem(val: boolean) {\n    this.setPropertyValue(\"showDontKnowItem\", val);\n  }\n  /**\n   * Returns the \"Don't know\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showDontKnowItem\n   */\n  public get dontKnowItem(): ItemValue {\n    return this.dontKnowItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Don't know\" choice item.\n   * @see showDontKnowItem\n   */\n  public get dontKnowText(): string {\n    return this.getLocalizableStringText(\"dontKnowText\");\n  }\n  public set dontKnowText(val: string) {\n    this.setLocalizableStringText(\"dontKnowText\", val);\n  }\n  get locDontKnowText(): LocalizableString {\n    return this.getLocalizableString(\"dontKnowText\");\n  }\n  private createNoneItem(defaultValue: any, name: string, locName: string): ItemValue {\n    const item = this.createItemValue(defaultValue);\n    item.isExclusive = true;\n    const locStr = this.createLocalizableString(name, item, true, locName);\n    item.setLocText(locStr);\n    return item;\n  }\n  /**\n   * A Boolean expression that is evaluated against each choice item. If the expression evaluates to `false`, the choice item becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current choice item in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see choicesEnableIf\n   */\n  public get choicesVisibleIf(): string {\n    return this.getPropertyValue(\"choicesVisibleIf\", \"\");\n  }\n  public set choicesVisibleIf(val: string) {\n    this.setPropertyValue(\"choicesVisibleIf\", val);\n    this.filterItems();\n  }\n  /**\n   * A Boolean expression that is evaluated against each choice item. If the expression evaluates to `false`, the choice item becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current choice item in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see enableIf\n   * @see choicesVisibleIf\n   */\n  public get choicesEnableIf(): string {\n    return this.getPropertyValue(\"choicesEnableIf\", \"\");\n  }\n  public set choicesEnableIf(val: string) {\n    this.setPropertyValue(\"choicesEnableIf\", val);\n    this.filterItems();\n  }\n  public surveyChoiceItemVisibilityChange(): void {\n    this.filterItems();\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.runItemsEnableCondition(properties);\n    this.runItemsCondition(properties);\n    this.choices.forEach(item => {\n      item.runConditionCore(properties);\n    });\n  }\n  protected isTextValue(): boolean {\n    return true; //for comments and others\n  }\n  protected setDefaultIntoValue(val: any): void {\n    if (!this.isValueEmpty(val) && this.showOtherItem && this.hasUnknownValue(val, true)) {\n      this.setDefaultUnknownValue(val);\n    } else {\n      super.setDefaultIntoValue(val);\n    }\n  }\n  protected setDefaultUnknownValue(val : any): void {\n    this.renderedValue = this.setOtherValueIntoValue(val);\n    this.otherValue = val;\n  }\n  protected valueToData(val: any): any {\n    if (Helpers.isValueEmpty(val)) return val;\n    if (Array.isArray(val)) {\n      return val.length > 0 ? val[0] : undefined;\n    }\n    return val;\n  }\n  protected filterItems(): boolean {\n    if (\n      this.isLoadingFromJson ||\n      !this.data ||\n      this.areInvisibleElementsShowing\n    )\n      return false;\n    var properties = this.getDataFilteredProperties();\n    this.runItemsEnableCondition(properties);\n    return this.runItemsCondition(properties);\n  }\n  protected runItemsCondition(properties: HashTable<any>): boolean {\n    this.setConditionalChoicesRunner();\n    var hasChanges = this.runConditionsForItems(properties);\n    if (\n      !!this.filteredChoicesValue &&\n      this.filteredChoicesValue.length === this.activeChoices.length\n    ) {\n      this.filteredChoicesValue = undefined;\n    }\n    if (hasChanges) {\n      this.onVisibleChoicesChanged();\n      this.clearIncorrectValues();\n    }\n    return hasChanges;\n  }\n  protected runItemsEnableCondition(properties: HashTable<any>): any {\n    this.setConditionalEnableChoicesRunner();\n    var hasChanged = ItemValue.runEnabledConditionsForItems(\n      this.activeChoices,\n      this.conditionChoicesEnableIfRunner,\n      properties,\n      (item: ItemValue, val: boolean): boolean => {\n        return val && this.onEnableItemCallBack(item);\n      }\n    );\n    if (hasChanged) {\n      this.clearDisabledValues();\n    }\n    this.onAfterRunItemsEnableCondition();\n  }\n  protected onAfterRunItemsEnableCondition() { }\n  protected onEnableItemCallBack(item: ItemValue): boolean {\n    return true;\n  }\n  protected onSelectedItemValuesChangedHandler(newValue: any): void {\n    this.survey?.loadedChoicesFromServer(this);\n  }\n  protected getItemIfChoicesNotContainThisValue(value: any, text?: string): any {\n    if (this.waitingChoicesByURL) {\n      return this.createItemValue(value, text);\n    } else {\n      return null;\n    }\n  }\n  protected getSingleSelectedItem(): ItemValue {\n    const selectedItemValues = this.selectedItemValues;\n    if (this.isEmpty()) return null;\n\n    const itemValue = this.getItemByValue(this.value);\n    this.onGetSingleSelectedItem(itemValue);\n    if (!itemValue && (!selectedItemValues || this.value != selectedItemValues.id)) {\n      this.updateSelectedItemValues();\n    }\n    return itemValue || selectedItemValues || (this.isOtherSelected ? this.otherItem : this.getItemIfChoicesNotContainThisValue(this.value));\n  }\n  protected onGetSingleSelectedItem(selectedItemByValue: ItemValue): void { }\n  protected getMultipleSelectedItems(): Array<ItemValue> {\n    return [];\n  }\n  private setConditionalChoicesRunner() {\n    const expression = this.getExpressionFromSurvey(\"choicesVisibleIf\");\n    if (expression) {\n      if (!this.conditionChoicesVisibleIfRunner) {\n        this.conditionChoicesVisibleIfRunner = new ConditionRunner(expression);\n      }\n      this.conditionChoicesVisibleIfRunner.expression = expression;\n    } else {\n      this.conditionChoicesVisibleIfRunner = null;\n    }\n  }\n  private setConditionalEnableChoicesRunner() {\n    const expression = this.getExpressionFromSurvey(\"choicesEnableIf\");\n    if (expression) {\n      if (!this.conditionChoicesEnableIfRunner) {\n        this.conditionChoicesEnableIfRunner = new ConditionRunner(expression);\n      }\n      this.conditionChoicesEnableIfRunner.expression = expression;\n    } else {\n      this.conditionChoicesEnableIfRunner = null;\n    }\n  }\n  private canSurveyChangeItemVisibility(): boolean {\n    return !!this.survey && this.survey.canChangeChoiceItemsVisibility();\n  }\n  private changeItemVisibility() {\n    return this.canSurveyChangeItemVisibility() ?\n      (item: ItemValue, val: boolean): boolean => this.survey.getChoiceItemVisibility(this, item, val)\n      : null;\n  }\n  private runConditionsForItems(properties: HashTable<any>): boolean {\n    this.filteredChoicesValue = [];\n    const calcVisibility = this.changeItemVisibility();\n    return ItemValue.runConditionsForItems(\n      this.activeChoices,\n      this.getFilteredChoices(),\n      this.areInvisibleElementsShowing\n        ? null\n        : this.conditionChoicesVisibleIfRunner,\n      properties,\n      !this.survey || !this.survey.areInvisibleElementsShowing,\n      (item: ItemValue, val: boolean): boolean => {\n        return !!calcVisibility ? calcVisibility(item, val) : val;\n      }\n    );\n  }\n  protected getHasOther(val: any): boolean {\n    return this.getIsItemValue(val, this.otherItem);\n  }\n  protected getIsItemValue(val: any, item: ItemValue): boolean {\n    return val === item.value;\n  }\n  get validatedValue(): any {\n    return this.renderedValueToDataCore(this.value);\n  }\n  protected createRestful(): ChoicesRestful {\n    return new ChoicesRestful();\n  }\n  private setNewRestfulProperty() {\n    this.setPropertyValue(\"choicesByUrl\", this.createRestful());\n    this.choicesByUrl.owner = this;\n    this.choicesByUrl.loadingOwner = this;\n  }\n  get autoOtherMode(): boolean {\n    return this.getPropertyValue(\"autoOtherMode\");\n  }\n  set autoOtherMode(val: boolean) {\n    this.setPropertyValue(\"autoOtherMode\", val);\n  }\n  protected getQuestionComment(): string {\n    if (this.showCommentArea) return super.getQuestionComment();\n    if (!!this.otherValueCore) return this.otherValueCore;\n    if (this.showCommentArea || this.getStoreOthersAsComment())\n      return super.getQuestionComment();\n    return this.otherValueCore;\n  }\n  protected selectOtherValueFromComment(val: boolean): void {\n    if (val) {\n      this.prevIsOtherSelected = true;\n    }\n    this.value = val ? this.otherItem.value : undefined;\n  }\n  private onUpdateCommentOnAutoOtherMode(newValue: string): void {\n    if (!this.autoOtherMode) return;\n    const isSelected = this.isOtherSelected;\n    if (!isSelected && !!newValue || isSelected && !newValue) {\n      this.selectOtherValueFromComment(!!newValue);\n    }\n  }\n  private getValueOnSettingOther(otherValue: string): any {\n    const val = this.rendredValueToData(this.renderedValue);\n    if (this.showCommentArea || this.getStoreOthersAsComment()) return val;\n    const item = this.getItemByValue(otherValue);\n    if (!item || item === this.otherItem) return val;\n    this.otherValueCore = \"\";\n    if (!Array.isArray(val)) return otherValue;\n    const index = val.indexOf(this.otherItem.value);\n    if (index > -1) {\n      val.splice(index, 1);\n    }\n    if (val.indexOf(otherValue) < 0) {\n      val.push(otherValue);\n    }\n    return val;\n  }\n  public clearValue(keepComment?: boolean) {\n    super.clearValue(keepComment);\n    this.selectedItemValues = undefined;\n  }\n  public get renderedValue(): any {\n    return this.getPropertyValue(\"renderedValue\", null);\n  }\n  public set renderedValue(val: any) {\n    this.setRenderedValue(val, true);\n  }\n  private setRenderedValue(val: any, changeValue: boolean): void {\n    this.setPropertyValue(\"renderedValue\", val);\n    if (changeValue && !this.isReadOnlyAttr) {\n      val = this.rendredValueToData(val);\n      if (!this.isTwoValueEquals(val, this.value)) {\n        this.value = val;\n      }\n    }\n    this.onRenderedValueChagned(changeValue);\n  }\n  protected onRenderedValueChagned(updateComment: boolean): void {\n    this.choices.forEach(item => this.updateItemIsCommentShowing(item, updateComment));\n    if (this.showOtherItem) {\n      this.updateItemIsCommentShowing(this.otherItem, updateComment);\n    }\n  }\n  private updateItemIsCommentShowing(item: ItemValue, updateComment: boolean): void {\n    if (item.showCommentArea) {\n      const isShowing = this.isCommentShowing(item);\n      item.setIsCommentShowing(isShowing);\n      if (!isShowing && updateComment) {\n        this.setCommentValueCore(item, undefined);\n      }\n    }\n  }\n  public selectItem(item: ItemValue): void {\n    if (this.isReadOnlyAttr || !item) return;\n    const prevSelectedItem = this.getSingleSelectedItem();\n    this.renderedValue = item.value;\n    if (!!prevSelectedItem && prevSelectedItem !== this.getSingleSelectedItem()) {\n      this.onItemDeselected(prevSelectedItem);\n    }\n    this.onItemSelected(item);\n  }\n  protected onItemSelected(item: ItemValue): void {\n    if (item.showCommentArea) {\n      this.focusOtherComment(item);\n    }\n  }\n  protected onItemDeselected(item: ItemValue): void {\n    if (item.showCommentArea) {\n      this.setCommentValueCore(item, undefined);\n    }\n  }\n  private makeCommentEmpty: boolean;\n  protected setQuestionValue(newValue: any, updateIsAnswered: boolean = true, updateComment: boolean = true): void {\n    if (\n      this.isLoadingFromJson ||\n      this.isTwoValueEquals(this.value, newValue)\n    )\n      return;\n    this.setRenderedValue(this.rendredValueFromData(newValue), false);\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.updateChoicesDependedQuestions();\n    if (this.showCommentArea || !updateComment) return;\n    if (!this.isOtherSelected && !!this.otherValue) {\n      this.makeCommentEmpty = true;\n      this.otherValueCore = \"\";\n      this.setPropertyValue(\"comment\", \"\");\n    }\n  }\n  protected setValueCore(newValue: any): void {\n    super.setValueCore(newValue);\n    if (this.makeCommentEmpty) {\n      this.setCommentIntoData(\"\");\n      this.makeCommentEmpty = false;\n    }\n  }\n  protected setNewValue(newValue: any) {\n    newValue = this.valueFromData(newValue);\n    if (\n      (!this.choicesByUrl.isRunning &&\n        !this.choicesByUrl.isWaitingForParameters) ||\n      !this.isValueEmpty(newValue)\n    ) {\n      this.cachedValueForUrlRequests = newValue;\n    }\n    super.setNewValue(newValue);\n  }\n  protected valueFromData(val: any): any {\n    let item = this.getItemByValue(val, this.activeChoices);\n    if (!!item) {\n      return this.getChoiceValue(item, val, false);\n    }\n    return super.valueFromData(val);\n  }\n  protected getChoiceValue(choice: ItemValue, val: any, objOnComment: boolean): any {\n    const isObj = typeof val === \"object\";\n    const comment = isObj ? val[this.commentPropertyValue] : \"\";\n    const hasComment = !Helpers.isValueEmpty(comment);\n    if (isObj && choice.showCommentArea && (objOnComment || hasComment)) {\n      const res: any = { value: choice.value };\n      if (hasComment) res[this.commentPropertyValue] = comment;\n      return res;\n    }\n    return choice.value;\n  }\n  protected getItemByValue(val: any, choices? : Array<ItemValue>): ItemValue {\n    const chs = choices || this.visibleChoices;\n    if (!!val && typeof val === \"object\" && !Helpers.isValueEmpty(val.value)) {\n      val = val.value;\n    }\n    return ItemValue.getItemByValue(chs, val);\n  }\n  protected rendredValueFromData(val: any): any {\n    if (!!val && typeof val === \"object\" && !Helpers.isValueEmpty(val.value)) {\n      const item = this.getItemByValue(val.value);\n      if (!!item) {\n        this.setCommentPropertyValue(item, val[this.commentPropertyValue]);\n        val = val.value;\n      }\n    }\n    if (this.getStoreOthersAsComment() || !this.showOtherItem) return val;\n    return this.renderedValueFromDataCore(val);\n  }\n  private getValueFromValueWithComment(val: any): any {\n    if (!!val && typeof val === \"object\" && !Helpers.isValueEmpty(val.value)) return val.value;\n    return val;\n  }\n  protected rendredValueToData(val: any): any {\n    if (this.getStoreOthersAsComment()) return val;\n    return this.renderedValueToDataCore(val);\n  }\n  protected renderedValueFromDataCore(val: any): any {\n    if (!this.hasUnknownValue(val, true, false)) return this.valueFromData(val);\n    this.otherValue = val;\n    return this.otherItem.value;\n  }\n  protected renderedValueToDataCore(val: any): any {\n    if (val == this.otherItem.value && this.needConvertRenderedOtherToDataValue()) {\n      val = this.otherValue;\n    }\n    return val;\n  }\n  protected needConvertRenderedOtherToDataValue(): boolean {\n    let val = this.otherValue;\n    if (!val) return false;\n    val = val.trim();\n    if (!val) return false;\n    return this.hasUnknownValue(val, true, false);\n  }\n  protected getIsQuestionReady(): boolean {\n    return super.getIsQuestionReady() && !this.waitingChoicesByURL && !this.waitingGetChoiceDisplayValueResponse;\n  }\n  protected updateSelectedItemValues(): void {\n    if (this.waitingGetChoiceDisplayValueResponse || !this.survey || this.isEmpty()) return;\n    const value = this.value;\n    const valueArray: Array<any> = Array.isArray(value) ? value : [value];\n    const hasItemWithoutValues = valueArray.some(val => !this.getItemByValue(val, this.choices));\n    if (hasItemWithoutValues && (this.choicesLazyLoadEnabled || this.hasChoicesUrl)) {\n      this.waitingGetChoiceDisplayValueResponse = true;\n      this.updateIsReady();\n      this.survey.getChoiceDisplayValue({\n        question: this,\n        values: valueArray,\n        setItems: (displayValues: Array<string>, ...customValues: Array<IValueItemCustomPropValues>) => {\n          this.waitingGetChoiceDisplayValueResponse = false;\n          if (!displayValues || !displayValues.length) {\n            this.updateIsReady();\n            return;\n          }\n          const items = displayValues.map((displayValue, index) => this.createItemValue(valueArray[index], displayValue));\n          this.setCustomValuesIntoItems(items, customValues);\n          if (Array.isArray(value)) {\n            this.selectedItemValues = items;\n          } else {\n            this.selectedItemValues = items[0];\n          }\n          this.updateIsReady();\n        }\n      });\n    }\n  }\n  private setCustomValuesIntoItems(items: Array<ItemValue>, customValues: Array<IValueItemCustomPropValues>): void {\n    if (!Array.isArray(customValues) || customValues.length === 0) return;\n    customValues.forEach(customValue => {\n      const vals = customValue.values;\n      const propName = customValue.propertyName;\n      if (Array.isArray(vals)) {\n        for (let i = 0; i < items.length && i < vals.length; i++) {\n          items[i][propName] = vals[i];\n        }\n      }\n    });\n  }\n  protected hasUnknownValue(val: any, includeOther: boolean = false,\n    isFilteredChoices: boolean = true, checkEmptyValue: boolean = false): boolean {\n    if (!Array.isArray(val)) return this.hasUnknownValueItem(val, includeOther, isFilteredChoices, checkEmptyValue);\n    for (let i = 0; i < val.length; i++) {\n      if (this.hasUnknownValueItem(val[i], includeOther, isFilteredChoices, checkEmptyValue)) return true;\n    }\n    return false;\n  }\n  protected hasUnknownValueItem(val: any, includeOther: boolean = false,\n    isFilteredChoices: boolean = true, checkEmptyValue: boolean = false): boolean {\n    if (!checkEmptyValue && this.isValueEmpty(val)) return false;\n    if (includeOther && val == this.otherItem.value) return false;\n    if (this.showNoneItem && val == this.noneItem.value) return false;\n    if (this.showRefuseItem && val == this.refuseItem.value) return false;\n    if (this.showDontKnowItem && val == this.dontKnowItem.value) return false;\n    var choices = isFilteredChoices\n      ? this.getFilteredChoices()\n      : this.activeChoices;\n    return this.getItemByValue(val, choices) == null;\n  }\n  protected isValueDisabled(val: any): boolean {\n    var itemValue = this.getItemByValue(val, this.getFilteredChoices());\n    return !!itemValue && !itemValue.isEnabled;\n  }\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n    this.updateVisibleChoices();\n  }\n  public clearIncorrectValuesCallback: () => void;\n  /**\n   * An array of choice items that were added by a user. Applies only if the [`allowCustomChoices`](#allowCustomChoices) is set to `true` for this question.\n   *\n   * > Custom choices will only be stored temporarily for the duration of the current browser session. If you want to save them in a database or another data storage, handle the [`onCreateCustomChoiceItem`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCreateCustomChoiceItem) event.\n   * @hidefor QuestionImagePickerModel, QuestionRadiogroupModel, QuestionRankingModel, QuestionCheckboxModel\n   */\n  public get customChoices(): Array<any> {\n    return this.getPropertyValue(\"customChoices\");\n  }\n  public set customChoices(val: Array<any>) {\n    this.setPropertyValue(\"customChoices\", val);\n  }\n  /**\n   * Configures access to a RESTful service that returns choice items. Refer to the [`ChoicesRestful`](https://surveyjs.io/form-library/documentation/choicesrestful) class description for more information. You can also specify additional application-wide settings using the [`settings.web`](https://surveyjs.io/form-library/documentation/api-reference/settings#web) object.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dropdown-menu-load-data-from-restful-service/ (linkStyle))\n   * @see choices\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get choicesByUrl(): ChoicesRestful {\n    return this.getPropertyValue(\"choicesByUrl\");\n  }\n  public set choicesByUrl(val: ChoicesRestful) {\n    if (!val) return;\n    this.setNewRestfulProperty();\n    this.choicesByUrl.fromJSON(val.toJSON());\n  }\n  /**\n   * Gets or sets choice items. This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A unique value to be saved in the survey results.\n   *   \"text\": string, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"imageLink\": string // A link to the image or video that represents this choice value. Applies only to Image Picker questions.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [`onTextMarkdown`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * If you need to specify only the `value` property, you can set the `choices` property to an array of primitive values, for example, `[ \"item1\", \"item2\", \"item3\" ]`. These values are both saved in survey results and used as display text.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/add-ranking-question-to-form/ (linkStyle))\n   *\n   * [Image Picker Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   *\n   * [Conditionally Display Choice Options](https://surveyjs.io/form-library/examples/how-to-conditionally-display-choice-options/ (linkStyle))\n   * @see choicesByUrl\n   * @see choicesFromQuestion\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get choices(): Array<any> {\n    return this.getPropertyValue(\"choices\");\n  }\n  public set choices(newValue: Array<any>) {\n    this.setPropertyValue(\"choices\", newValue);\n  }\n  /**\n   * Copies choice items from a specified question. Accepts a question name.\n   *\n   * If you specify this property, the [`choices`](#choices), [`choicesVisibleIf`](#choicesVisibleIf), [`choicesEnableIf`](#choicesEnableIf), and [`choicesOrder`](#choicesEnableIf) properties do not apply because their values are copied.\n   *\n   * In addition, you can specify the [`choicesFromQuestionMode`](#choicesFromQuestionMode) property if you do not want to copy all choice items.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/carry-forward-responses/ (linkStyle))\n   */\n  public get choicesFromQuestion(): string {\n    return this.getPropertyValue(\"choicesFromQuestion\");\n  }\n  public set choicesFromQuestion(val: string) {\n    var question = this.getQuestionWithChoices();\n    this.isLockVisibleChoices = !!question && question.name === val;\n    if (!!question && question.name !== val) {\n      question.removeDependedQuestion(this);\n      if (this.isInDesignMode && !this.isLoadingFromJson && !!val) {\n        this.setPropertyValue(\"choicesFromQuestion\", undefined);\n      }\n    }\n    this.setPropertyValue(\"choicesFromQuestion\", val);\n    this.isLockVisibleChoices = false;\n  }\n  private isLockVisibleChoices: boolean;\n  /**\n   * Specifies which choice items to copy from another question. Applies only when the [`choicesFromQuestion`](#choicesFromQuestion) property is specified.\n   *\n   * Possible values:\n   *\n   * - `\"all\"` (default) - Copies all choice items.\n   * - `\"selected\"` - Copies only selected choice items.\n   * - `\"unselected\"` - Copies only unselected choice items.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/carry-forward-responses/ (linkStyle))\n   *\n   * > Use the [`visibleChoices`](#visibleChoices) property to access copied choice items in code.\n   */\n  public get choicesFromQuestionMode(): string {\n    return this.getPropertyValue(\"choicesFromQuestionMode\");\n  }\n  public set choicesFromQuestionMode(val: string) {\n    this.setPropertyValue(\"choicesFromQuestionMode\", val);\n  }\n  /**\n   * Specifies which matrix column or dynamic panel question supplies choice values. Use this property to construct choice items based on cell values in Dynamic Matrix and question values in Dynamic Panel.\n   *\n   * Each choice item consists of a value saved in survey results and a text displayed in the UI. To construct a choice item, assign the `name` of a Dynamic Matrix or Dynamic Panel to the [`choicesFromQuestion`](#choicesFromQuestion) property and specify which dynamic panel question or matrix column supplies values and which provides texts. Use the `choiceValuesFromQuestion` and [`choiceTextsFromQuestion`](#choiceTextsFromQuestion) properties for this purpose. If a choice text is empty, a choice value is used as a display text and saved in survey results.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/pipe-answers-from-dynamic-matrix-or-panel/ (linkStyle))\n   */\n  public get choiceValuesFromQuestion(): string {\n    return this.getPropertyValue(\"choiceValuesFromQuestion\");\n  }\n  public set choiceValuesFromQuestion(val: string) {\n    this.setPropertyValue(\"choiceValuesFromQuestion\", val);\n  }\n  /**\n   * Specifies which matrix column or dynamic panel question supplies choice texts. Use this property to construct choice items based on cell values in Dynamic Matrix and question values in Dynamic Panel.\n   *\n   * Each choice item consists of a value saved in survey results and a text displayed in the UI. To construct a choice item, assign the `name` of a Dynamic Matrix or Dynamic Panel to the [`choicesFromQuestion`](#choicesFromQuestion) property and specify which dynamic panel question or matrix column supplies values and which provides texts. Use the [`choiceValuesFromQuestion`](#choiceValuesFromQuestion) and `choiceTextsFromQuestion` properties for this purpose. If a choice text is empty, a choice value is used as a display text and saved in survey results.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/pipe-answers-from-dynamic-matrix-or-panel/ (linkStyle))\n   */\n  public get choiceTextsFromQuestion(): string {\n    return this.getPropertyValue(\"choiceTextsFromQuestion\");\n  }\n  public set choiceTextsFromQuestion(val: string) {\n    this.setPropertyValue(\"choiceTextsFromQuestion\", val);\n  }\n  /**\n   * Specifies whether to hide the question if no choice items are visible.\n   *\n   * This property is useful if you show or hide choice items at runtime based on a [condition](https://surveyjs.io/form-library/documentation/questionselectbase#choicesVisibleIf).\n   */\n  public get hideIfChoicesEmpty(): boolean {\n    return this.getPropertyValue(\"hideIfChoicesEmpty\");\n  }\n  public set hideIfChoicesEmpty(val: boolean) {\n    this.setPropertyValue(\"hideIfChoicesEmpty\", val);\n  }\n  /**\n   * Specifies whether to keep values that cannot be assigned to this question, for example, choices unlisted in the `choices` array.\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   * @see clearIncorrectValues\n   */\n  public get keepIncorrectValues(): boolean {\n    return this.getPropertyValue(\"keepIncorrectValues\", false);\n  }\n  public set keepIncorrectValues(val: boolean) {\n    this.setPropertyValue(\"keepIncorrectValues\", val);\n  }\n\n  public get storeOthersAsComment(): any {\n    return this.getPropertyValue(\"storeOthersAsComment\");\n  }\n  public set storeOthersAsComment(val: any) {\n    this.setPropertyValue(\"storeOthersAsComment\", val);\n  }\n  /**\n   * Specifies the sort order of choice items.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default) - Preserves the original order of choice items.\n   * - `\"asc\"`- Sorts choice items in ascending order.\n   * - `\"desc\"`- Sorts choice items in ascending order.\n   * - `\"random\"` - Displays choice items in random order.\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get choicesOrder(): string {\n    return this.getPropertyValue(\"choicesOrder\");\n  }\n  public set choicesOrder(val: string) {\n    val = val.toLowerCase();\n    if (val == this.choicesOrder) return;\n    this.setPropertyValue(\"choicesOrder\", val);\n    this.onVisibleChoicesChanged();\n  }\n  /**\n   * Gets or sets a caption for the \"Other\" choice item.\n   * @see showOtherItem\n   */\n  public get otherText(): string {\n    return this.getLocalizableStringText(\"otherText\");\n  }\n  public set otherText(val: string) {\n    this.setLocalizableStringText(\"otherText\", val);\n    this.onVisibleChoicesChanged();\n  }\n  get locOtherText(): LocalizableString {\n    return this.getLocalizableString(\"otherText\");\n  }\n  /**\n   * Displays the \"Select All\", \"None\", and \"Other\" choices on individual rows.\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get separateSpecialChoices(): boolean { return this.getPropertyValue(\"separateSpecialChoices\"); }\n  public set separateSpecialChoices(val: boolean) { this.setPropertyValue(\"separateSpecialChoices\", val); }\n  /**\n   * A placeholder for the comment area. Applies when the `showOtherItem` or `showCommentArea` property is `true`.\n   * @see showOtherItem\n   * @see showCommentArea\n   */\n  public get otherPlaceholder(): string { return this.getLocalizableStringText(\"otherPlaceholder\"); }\n  public set otherPlaceholder(val: string) { this.setLocalizableStringText(\"otherPlaceholder\", val); }\n  public get locOtherPlaceholder(): LocalizableString { return this.getLocalizableString(\"otherPlaceholder\"); }\n\n  public get otherPlaceHolder(): string {\n    return this.otherPlaceholder;\n  }\n  public set otherPlaceHolder(newValue: string) {\n    this.otherPlaceholder = newValue;\n  }\n  /**\n   * Gets or sets an error message displayed when users select the \"Other\" choice item but leave the comment area empty.\n   * @see showOtherItem\n   */\n  public get otherErrorText(): string {\n    return this.getLocalizableStringText(\"otherErrorText\");\n  }\n  public set otherErrorText(val: string) {\n    this.setLocalizableStringText(\"otherErrorText\", val);\n  }\n  get locOtherErrorText(): LocalizableString {\n    return this.getLocalizableString(\"otherErrorText\");\n  }\n  /**\n   * An array of visible choice items. Includes the \"Select All\", \"Other\", and \"None\" choice items if they are visible. Items are sorted according to the `choicesOrder` value.\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see choicesOrder\n   * @see choices\n   * @see enabledChoices\n   */\n  public get visibleChoices(): Array<ChoiceItem> {\n    return this.getPropertyValue(\"visibleChoices\");\n  }\n  /**\n   * An array of choice items with which users can interact. Includes the \"Select All\", \"Other\", and \"None\" choice items if they are not disabled. Items are sorted according to the `choicesOrder` value.\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see choicesOrder\n   * @see choices\n   * @see visibleChoices\n   */\n  public get enabledChoices(): Array<ItemValue> {\n    var res = [];\n    var items = this.visibleChoices;\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].isEnabled) res.push(items[i]);\n    }\n    return res;\n  }\n  protected updateVisibleChoices(): void {\n    if (this.isLoadingFromJson || this.isDisposed) return;\n    var calcValue = this.calcVisibleChoices();\n    var newValue = new Array<ItemValue>();\n    (calcValue || []).forEach(choice => newValue.push(choice));\n    const oldValue = this.visibleChoices;\n    if (!this.isTwoValueEquals(oldValue, newValue) || this.choicesLazyLoadEnabled) {\n      this.setArrayPropertyDirectly(\"visibleChoices\", newValue);\n      this.updateRenderedChoices();\n    }\n  }\n  private calcVisibleChoices(): Array<ItemValue> {\n    let res = new Array<ItemValue>();\n    this.customChoices.forEach(choice => res.push(choice));\n    this.getFilteredChoices().forEach(choice => res.push(choice));\n\n    res = this.sortArrayByChoicesOrder(res);\n    this.addToVisibleChoices(res, this.isAddDefaultItems);\n    return res;\n  }\n  public setCanShowOptionItemCallback(func: (item: ItemValue) => boolean) {\n    this.canShowOptionItemCallback = func;\n    if (!!func) {\n      this.onVisibleChoicesChanged();\n    }\n  }\n  public get newItem(): ItemValue { return this.newItemValue; }\n  protected addToVisibleChoices(items: Array<ItemValue>, isAddAll: boolean): void {\n    this.headItemsCount = 0;\n    this.footItemsCount = 0;\n    if (!this.isEmptyActiveChoicesInDesign) {\n      this.addNewItemToVisibleChoices(items, isAddAll);\n    }\n    const dict = new Array<{ index: number, item: ItemValue }>();\n    this.addNonChoicesItems(dict, isAddAll);\n    dict.sort((a: { index: number, item: ItemValue }, b: { index: number, item: ItemValue }): number => {\n      if (a.index === b.index) return 0;\n      return a.index < b.index ? -1 : 1;\n    });\n    for (let i = 0; i < dict.length; i++) {\n      const rec = dict[i];\n      if (rec.index < 0) {\n        items.splice(i, 0, rec.item);\n        this.headItemsCount++;\n      } else {\n        items.push(rec.item);\n        this.footItemsCount++;\n      }\n    }\n  }\n  protected addNewItemToVisibleChoices(items: Array<ItemValue>, isAddAll: boolean): void {\n    if (!isAddAll) return;\n    if (!this.newItemValue) {\n      this.newItemValue = this.createItemValue(\"newitem\"); //TODO\n      this.newItemValue.isGhost = true;\n      this.newItemValue.registerFunctionOnPropertyValueChanged(\"isVisible\", () => {\n        this.updateVisibleChoices();\n      });\n    }\n    if (this.newItemValue.isVisible && !this.isUsingCarryForward\n      && this.canShowOptionItem(this.newItemValue, isAddAll, false)) {\n      this.footItemsCount = 1;\n      items.push(this.newItemValue);\n    }\n  }\n  protected addNonChoicesItems(dict: Array<{ index: number, item: ItemValue }>, isAddAll: boolean): void {\n    if (this.supportNone()) {\n      this.addNonChoiceItem(dict, this.noneItem, isAddAll, this.showNoneItem, settings.specialChoicesOrder.noneItem);\n    }\n    if (this.supportRefuse()) {\n      this.addNonChoiceItem(dict, this.refuseItem, isAddAll, this.showRefuseItem, settings.specialChoicesOrder.refuseItem);\n    }\n    if (this.supportDontKnow()) {\n      this.addNonChoiceItem(dict, this.dontKnowItem, isAddAll, this.showDontKnowItem, settings.specialChoicesOrder.dontKnowItem);\n    }\n    if (this.supportOther()) {\n      this.addNonChoiceItem(dict, this.otherItem, isAddAll, this.showOtherItem, settings.specialChoicesOrder.otherItem);\n    }\n  }\n  protected addNonChoiceItem(dict: Array<{ index: number, item: ItemValue }>, item: ItemValue, isAddAll: boolean, showItem: boolean, order: Array<number>): void {\n    if (this.canShowOptionItem(item, isAddAll, showItem)) {\n      order.forEach(val => dict.push({ index: val, item: item }));\n    }\n  }\n  protected canShowOptionItem(item: ItemValue, isAddAll: boolean, hasItem: boolean): boolean {\n    let res: boolean = (isAddAll && (!!this.canShowOptionItemCallback ? this.canShowOptionItemCallback(item) : true)) || hasItem;\n    if (this.canSurveyChangeItemVisibility()) {\n      const calc = this.changeItemVisibility();\n      return calc(item, res);\n    }\n    return res;\n  }\n  public isItemInList(item: ItemValue): boolean {\n    if (item === this.otherItem) return this.showOtherItem;\n    if (item === this.noneItem) return this.showNoneItem;\n    if (item === this.refuseItem) return this.showRefuseItem;\n    if (item === this.dontKnowItem) return this.showDontKnowItem;\n    if (item === this.newItemValue) return false;\n    return true;\n  }\n  protected get isAddDefaultItems(): boolean {\n    return settings.showDefaultItemsInCreator && this.isInDesignMode &&\n      !this.customWidget;\n  }\n  public getPlainData(\n    options: IPlainDataOptions = {\n      includeEmpty: true,\n      includeQuestionTypes: false,\n    }\n  ): IQuestionPlainData {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      var values = Array.isArray(this.value) ? this.value : [this.value];\n      questionPlainData.isNode = true;\n      questionPlainData.data = (questionPlainData.data || []).concat(\n        values.map((dataValue, index) => {\n          var choice = this.getItemByValue(dataValue);\n          var choiceDataItem = <any>{\n            name: index,\n            title: this.getLocalizationString(\"choices_Choice\"),\n            value: dataValue,\n            displayValue: this.getChoicesDisplayValue(\n              this.visibleChoices,\n              dataValue\n            ),\n            getString: (val: any) =>\n              typeof val === \"object\" ? JSON.stringify(val) : val,\n            isNode: false,\n          };\n          if (!!choice) {\n            (options.calculations || []).forEach((calculation) => {\n              choiceDataItem[calculation.propertyName] =\n                choice[calculation.propertyName];\n            });\n          }\n          if (this.isOtherSelected && this.otherItemValue === choice) {\n            choiceDataItem.isOther = true;\n            choiceDataItem.displayValue = this.otherValue;\n          }\n          return choiceDataItem;\n        })\n      );\n    }\n    return questionPlainData;\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    value = this.getValueFromValueWithComment(value);\n    if (!this.useDisplayValuesInDynamicTexts) return value;\n    return this.getChoicesDisplayValue(this.visibleChoices, value);\n  }\n  protected getDisplayValueEmpty(): string {\n    return ItemValue.getTextOrHtmlByValue(this.visibleChoices, undefined);\n  }\n  private getChoicesDisplayValue(items: ItemValue[], val: any): any {\n    if (val == this.otherItemValue.value)\n      return this.otherValue ? this.otherValue : this.locOtherText.textOrHtml;\n    const selItem = this.getSingleSelectedItem();\n    if (!!selItem && this.isTwoValueEquals(selItem.value, val)) return selItem.locText.textOrHtml;\n    var str = ItemValue.getTextOrHtmlByValue(items, val);\n    return str == \"\" && val ? val : str;\n  }\n  protected getDisplayArrayValue(keysAsText: boolean, value: any,\n    onGetValueCallback?: (index: number) => any): string {\n    var items = this.visibleChoices;\n    var strs = [] as Array<string>;\n    const vals = [] as Array<any>;\n    for (var i = 0; i < value.length; i++) {\n      vals.push(!onGetValueCallback ? value[i] : onGetValueCallback(i));\n    }\n    if (Helpers.isTwoValueEquals(this.value, vals)) {\n      this.getMultipleSelectedItems().forEach((item, index) => strs.push(this.getItemDisplayValue(item, vals[index])));\n    }\n    if (strs.length === 0) {\n      for (var i = 0; i < vals.length; i++) {\n        let valStr = this.getChoicesDisplayValue(items, vals[i]);\n        if (valStr) {\n          strs.push(valStr);\n        }\n      }\n    }\n    return strs.join(settings.choicesSeparator);\n  }\n  private getItemDisplayValue(item: ItemValue, val?: any): string {\n    if (item === this.otherItem) {\n      if (this.showOtherItem && this.showCommentArea && !!val) {\n        return val;\n      }\n      if (this.comment) {\n        return this.comment;\n      }\n    }\n    return item.locText.textOrHtml;\n  }\n  private getFilteredChoices(): Array<ItemValue> {\n    return this.filteredChoicesValue\n      ? this.filteredChoicesValue\n      : this.activeChoices;\n  }\n  private get activeChoices(): Array<ItemValue> {\n    const question = this.getCarryForwardQuestion();\n    if (this.carryForwardQuestionType === \"select\") {\n      (<QuestionSelectBase>question).addDependedQuestion(this);\n      return this.getChoicesFromSelectQuestion((<QuestionSelectBase>question));\n    }\n    if (this.carryForwardQuestionType === \"array\") {\n      (<any>question).addDependedQuestion(this);\n      return this.getChoicesFromArrayQuestion(question);\n    }\n    if (this.isEmptyActiveChoicesInDesign) return [];\n    return this.choicesFromUrl ? this.choicesFromUrl : this.getChoices();\n  }\n  public get isMessagePanelVisible(): boolean {\n    return this.getPropertyValue(\"isMessagePanelVisible\", false);\n  }\n  public set isMessagePanelVisible(val: boolean) {\n    this.setPropertyValue(\"isMessagePanelVisible\", val);\n  }\n  private get isEmptyActiveChoicesInDesign(): boolean {\n    return this.isInDesignMode && (this.hasChoicesUrl || this.isMessagePanelVisible);\n  }\n  getCarryForwardQuestion(data?: ISurveyData): Question {\n    const question = this.findCarryForwardQuestion(data);\n    const selBaseQuestion = this.getQuestionWithChoicesCore(question);\n    const arrayQuestion = !selBaseQuestion ? this.getQuestionWithArrayValue(question) : null;\n    this.setCarryForwardQuestionType(!!selBaseQuestion, !!arrayQuestion);\n    return !!selBaseQuestion || !!arrayQuestion ? question : null;\n  }\n  protected getIsReadyDependsOn(): Array<Question> {\n    const res = super.getIsReadyDependsOn();\n    if (this.carryForwardQuestion) {\n      res.push(this.carryForwardQuestion);\n    }\n    return res;\n  }\n  private getQuestionWithChoices(): QuestionSelectBase {\n    return this.getQuestionWithChoicesCore(this.findCarryForwardQuestion());\n  }\n  private carryForwardQuestion: Question;\n  private findCarryForwardQuestion(data?: ISurveyData): Question {\n    if (!data) {\n      data = this.data || this.parentQuestion?.data;\n    }\n    this.carryForwardQuestion = null;\n    if (this.choicesFromQuestion && data) {\n      this.carryForwardQuestion = <Question>data.findQuestionByName(this.choicesFromQuestion);\n    }\n    return this.carryForwardQuestion;\n  }\n  private getQuestionWithChoicesCore(question: Question): QuestionSelectBase {\n    if (!!question && !!question.visibleChoices && (Serializer.isDescendantOf(question.getType(), \"selectbase\")) && question !== this)\n      return <QuestionSelectBase>question;\n    return null;\n  }\n  private getQuestionWithArrayValue(question: Question): Question {\n    return !!question && question.isValueArray ? question : null;\n  }\n  private getChoicesFromArrayQuestion(question: Question): Array<ItemValue> {\n    if (this.isInDesignMode) return [];\n    const val = question.value;\n    if (!Array.isArray(val)) return [];\n    const res: Array<ItemValue> = [];\n    for (var i = 0; i < val.length; i++) {\n      const obj = val[i];\n      if (!Helpers.isValueObject(obj)) continue;\n      const key = this.getValueKeyName(obj);\n      if (!!key && !this.isValueEmpty(obj[key])) {\n        const text = !!this.choiceTextsFromQuestion ? obj[this.choiceTextsFromQuestion] : undefined;\n        res.push(this.createItemValue(obj[key], text));\n      }\n    }\n    return res;\n  }\n  private getValueKeyName(obj: any): string {\n    if (this.choiceValuesFromQuestion) return this.choiceValuesFromQuestion;\n    const keys = Object.keys(obj);\n    return keys.length > 0 ? keys[0] : undefined;\n  }\n  private getChoicesFromSelectQuestion(question: QuestionSelectBase): Array<ItemValue> {\n    if (this.isInDesignMode) return [];\n    const res: Array<ItemValue> = [];\n    var isSelected =\n      this.choicesFromQuestionMode == \"selected\"\n        ? true\n        : this.choicesFromQuestionMode == \"unselected\"\n          ? false\n          : undefined;\n    const choices = question.visibleChoices;\n    for (var i = 0; i < choices.length; i++) {\n      if (question.isBuiltInChoice(choices[i])) continue;\n      if (isSelected === undefined) {\n        res.push(this.copyChoiceItem(choices[i]));\n        continue;\n      }\n      var itemsSelected = question.isItemSelected(choices[i]);\n      if ((itemsSelected && isSelected) || (!itemsSelected && !isSelected)) {\n        res.push(this.copyChoiceItem(choices[i]));\n      }\n    }\n    if (this.choicesFromQuestionMode === \"selected\" && !this.showOtherItem && question.isOtherSelected && !!question.otherValue) {\n      res.push(this.createItemValue(question.otherItem.value, question.otherValue));\n    }\n    return res;\n  }\n  private copyChoiceItem(item: ItemValue): ItemValue {\n    const res = this.createItemValue(item.value);\n    res.setData(item);\n    return res;\n  }\n  protected get hasActiveChoices(): boolean {\n    var choices = this.visibleChoices;\n    if (!choices || choices.length == 0) {\n      this.onVisibleChoicesChanged();\n      choices = this.visibleChoices;\n    }\n    for (var i = 0; i < choices.length; i++) {\n      if (!this.isBuiltInChoice(choices[i])) return true;\n    }\n    return false;\n  }\n  protected isBuiltInChoice(item: ItemValue): boolean {\n    return [this.otherItem, this.noneItem, this.refuseItem, this.dontKnowItem, this.newItemValue].indexOf(item) > -1;\n  }\n  public isNoneItem(item: ItemValue): boolean {\n    return item.isExclusive === true;\n  }\n  protected getChoices(): Array<ItemValue> {\n    return this.choices;\n  }\n  /**\n   * Specifies whether to display the \"Other\" choice item.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see otherText\n   * @see otherItem\n   * @see otherErrorText\n   * @see showCommentArea\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  public get showOtherItem(): boolean {\n    return this.getPropertyValue(\"showOtherItem\", false);\n  }\n  public set showOtherItem(val: boolean) {\n    if (!this.supportOther() || this.showOtherItem == val) return;\n    this.setPropertyValue(\"showOtherItem\", val);\n    this.onVisibleChoicesChanged();\n  }\n\n  public get hasOther(): boolean {\n    return this.showOtherItem;\n  }\n  public set hasOther(val: boolean) {\n    this.showOtherItem = val;\n  }\n  public get requireUpdateCommentValue(): boolean { return this.showCommentArea || this.showOtherItem; }\n  public supportOther(): boolean {\n    return this.isSupportProperty(\"showOtherItem\");\n  }\n  public supportNone(): boolean {\n    return this.isSupportProperty(\"showNoneItem\");\n  }\n  public supportRefuse(): boolean {\n    return this.isSupportProperty(\"showRefuseItem\");\n  }\n  public supportDontKnow(): boolean {\n    return this.isSupportProperty(\"showDontKnowItem\");\n  }\n  protected isSupportProperty(propName: string): boolean {\n    return (\n      !this.isDesignMode ||\n      this.getPropertyByName(propName).visible\n    );\n  }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (this.hasEmptyComments() && (!isOnValueChanged || this.prevOtherErrorValue)) {\n      const otherEmptyError = new OtherEmptyError(this.otherErrorText, this);\n      otherEmptyError.onUpdateErrorTextCallback = err => { err.text = this.otherErrorText; };\n      errors.push(otherEmptyError);\n    }\n  }\n  private hasEmptyComments(): boolean {\n    const choices = this.visibleChoices;\n    for (let i = 0; i < choices.length; i++) {\n      const choice = choices[i];\n      if (choice.isCommentRequired && this.isCommentShowing(choice) && !this.getCommentValue(choices[i])) return true;\n    }\n    return false;\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    this.isRunningChoices = true;\n    super.setSurveyImpl(value, isLight);\n    this.isRunningChoices = false;\n    this.runChoicesByUrl();\n    if (this.isAddDefaultItems) {\n      this.updateVisibleChoices();\n    }\n  }\n  protected setSurveyCore(value: ISurvey): void {\n    super.setSurveyCore(value);\n    if (!!value && !!this.choicesFromQuestion) {\n      this.onVisibleChoicesChanged();\n    }\n  }\n  public getStoreOthersAsComment(): boolean {\n    if (this.showCommentArea) return false;\n    if (this.checkHasChoicesComments()) return true;\n    return (\n      this.storeOthersAsComment === true ||\n      (this.storeOthersAsComment == \"default\" &&\n        (this.survey != null ? this.survey.storeOthersAsComment : true)) ||\n      (this.hasChoicesUrl && !this.choicesFromUrl)\n    );\n  }\n  private checkHasChoicesComments(): boolean {\n    const choices = this.choices;\n    for (let i = 0; i < choices.length; i++) {\n      if (choices[i].showCommentArea) return true;\n    }\n    return false;\n  }\n  onSurveyLoad(): void {\n    this.runChoicesByUrl();\n    this.onVisibleChoicesChanged();\n    super.onSurveyLoad();\n  }\n  onAnyValueChanged(name: string, questionName: string): void {\n    super.onAnyValueChanged(name, questionName);\n    if (name != this.getValueName()) {\n      this.runChoicesByUrl();\n    }\n    const chQuestion = this.choicesFromQuestion;\n    if (!!name && chQuestion && (name === chQuestion || questionName === chQuestion)) {\n      this.onVisibleChoicesChanged();\n      this.clearIncorrectValues();\n    }\n  }\n  updateValueFromSurvey(newValue: any, clearData: boolean): void {\n    var newComment = \"\";\n    if (\n      this.showOtherItem && this.activeChoices.length > 0 &&\n      !this.isRunningChoices &&\n      !this.choicesByUrl.isRunning &&\n      this.getStoreOthersAsComment()\n    ) {\n      if (this.hasUnknownValue(newValue) && !this.getHasOther(newValue)) {\n        newComment = this.getCommentFromValue(newValue);\n        newValue = this.setOtherValueIntoValue(newValue);\n      } else {\n        if (this.data) {\n          newComment = this.data.getComment(this.getValueName());\n        }\n      }\n    }\n    super.updateValueFromSurvey(newValue, clearData);\n    if ((this.isRunningChoices || this.choicesByUrl.isRunning) && !this.isEmpty()) {\n      this.cachedValueForUrlRequests = this.value;\n    }\n    if (!!newComment) {\n      this.setNewComment(newComment);\n    }\n  }\n  protected getCommentFromValue(newValue: any): string {\n    return newValue;\n  }\n  protected setOtherValueIntoValue(newValue: any): any {\n    return this.otherItem.value;\n  }\n  private onOtherValueInput(item: ItemValue, event: any): void {\n    if (this.isInputTextUpdate && event.target) {\n      this.setCommentValueCore(item, event.target.value);\n    }\n  }\n  private onOtherValueChange(item: ItemValue, event: any): void {\n    this.setCommentValueCore(item, event.target.value);\n    const val = this.getCommentValueCore(item);\n    if (val !== event.target.value) {\n      event.target.value = val || \"\";\n    }\n  }\n  private isRunningChoices: boolean = false;\n  private runChoicesByUrl() {\n    this.updateIsUsingRestful();\n    if (!this.choicesByUrl || this.isLoadingFromJson || this.isRunningChoices || this.isInDesignMode)\n      return;\n    var processor = this.surveyImpl\n      ? this.surveyImpl.getTextProcessor()\n      : this.textProcessor;\n    if (!processor) processor = this.survey;\n    if (!processor) return;\n    this.updateIsReady();\n    this.isRunningChoices = true;\n    this.choicesByUrl.run(processor);\n    this.isRunningChoices = false;\n  }\n  private isFirstLoadChoicesFromUrl = true;\n  protected onBeforeSendRequest() {\n    if (settings.web.disableQuestionWhileLoadingChoices === true && !this.isReadOnly) {\n      this.enableOnLoadingChoices = true;\n      this.readOnly = true;\n    }\n  }\n  protected onLoadChoicesFromUrl(array: Array<ItemValue>): void {\n    if (this.enableOnLoadingChoices) {\n      this.readOnly = false;\n    }\n    const errors = [];\n    if (!this.isReadOnly) {\n      if (this.choicesByUrl && this.choicesByUrl.error) {\n        errors.push(this.choicesByUrl.error);\n      }\n    }\n    var newChoices = null;\n    var checkCachedValuesOnExisting = true;\n    if (\n      this.isFirstLoadChoicesFromUrl &&\n      !this.cachedValueForUrlRequests &&\n      this.defaultValue\n    ) {\n      this.cachedValueForUrlRequests = this.defaultValue;\n      checkCachedValuesOnExisting = false;\n    }\n    if (this.isValueEmpty(this.cachedValueForUrlRequests)) {\n      this.cachedValueForUrlRequests = this.value;\n    }\n    var cachedValues = this.createCachedValueForUrlRequests(\n      this.cachedValueForUrlRequests,\n      checkCachedValuesOnExisting\n    );\n    if (array && (array.length > 0 || this.choicesByUrl.allowEmptyResponse)) {\n      newChoices = new Array<ItemValue>();\n      ItemValue.setData(newChoices, array);\n    }\n    if (!!newChoices) {\n      for (var i = 0; i < newChoices.length; i++) {\n        newChoices[i].locOwner = this;\n      }\n    }\n    this.setChoicesFromUrl(newChoices, errors, cachedValues);\n  }\n  private canAvoidSettChoicesFromUrl(newChoices: Array<ItemValue>): boolean {\n    if (this.isFirstLoadChoicesFromUrl) return false;\n    const chocesAreEmpty = !newChoices || Array.isArray(newChoices) && newChoices.length === 0;\n    if (chocesAreEmpty && !this.isEmpty()) return false;\n    return Helpers.isTwoValueEquals(this.choicesFromUrl, newChoices);\n  }\n  private setChoicesFromUrl(newChoices: Array<ItemValue>, errors: Array<any>, cachedValues: any): void {\n    if (this.canAvoidSettChoicesFromUrl(newChoices)) return;\n    this.isFirstLoadChoicesFromUrl = false;\n    this.choicesFromUrl = newChoices;\n    this.filterItems();\n    this.onVisibleChoicesChanged();\n    if (newChoices) {\n      var newValue = this.updateCachedValueForUrlRequests(\n        cachedValues,\n        newChoices\n      );\n      if (!!newValue && !this.isReadOnly) {\n        var hasChanged = !this.isTwoValueEquals(this.value, newValue.value);\n        try {\n          if (!this.isValueEmpty(newValue.value)) {\n            this.allowNotifyValueChanged = false;\n            this.setQuestionValue(undefined, true, false);\n          }\n          this.allowNotifyValueChanged = hasChanged;\n          if (hasChanged) {\n            this.value = newValue.value;\n          } else {\n            this.setQuestionValue(newValue.value);\n          }\n        } finally {\n          this.allowNotifyValueChanged = true;\n        }\n      }\n    }\n    if (!this.isReadOnly && !newChoices && !this.isFirstLoadChoicesFromUrl) {\n      this.value = null;\n    }\n    this.errors = errors;\n    this.choicesLoaded();\n  }\n  private createCachedValueForUrlRequests(\n    val: any,\n    checkOnExisting: boolean\n  ): any {\n    if (this.isValueEmpty(val)) return null;\n    if (Array.isArray(val)) {\n      var res = [];\n      for (var i = 0; i < val.length; i++) {\n        res.push(this.createCachedValueForUrlRequests(val[i], true));\n      }\n      return res;\n    }\n    var isExists = checkOnExisting ? !this.hasUnknownValue(val) : true;\n    return { value: val, isExists: isExists };\n  }\n  private updateCachedValueForUrlRequests(\n    val: any,\n    newChoices: Array<ItemValue>\n  ): any {\n    if (this.isValueEmpty(val)) return null;\n    if (Array.isArray(val)) {\n      var res = [];\n      for (var i = 0; i < val.length; i++) {\n        var updatedValue = this.updateCachedValueForUrlRequests(\n          val[i],\n          newChoices\n        );\n        if (updatedValue && !this.isValueEmpty(updatedValue.value)) {\n          var newValue = updatedValue.value;\n          var item = this.getItemByValue(updatedValue.value, newChoices);\n          if (!!item) {\n            newValue = item.value;\n          }\n          res.push(newValue);\n        }\n      }\n      return { value: res };\n    }\n    var value =\n      val.isExists && this.hasUnknownValue(val.value) ? null : val.value;\n    var item = this.getItemByValue(value, newChoices);\n    if (!!item) {\n      value = item.value;\n    }\n    return { value: value };\n  }\n  private isUpdatingChoicesDependedQuestions = false;\n  protected updateChoicesDependedQuestions(): void {\n    if (this.isLoadingFromJson || this.isUpdatingChoicesDependedQuestions ||\n      !this.allowNotifyValueChanged || this.choicesByUrl.isRunning) return;\n    this.isUpdatingChoicesDependedQuestions = true;\n    this.updateDependedQuestions();\n    this.isUpdatingChoicesDependedQuestions = false;\n  }\n  protected updateDependedQuestion(): void {\n    this.onVisibleChoicesChanged();\n    this.clearIncorrectValues();\n  }\n  onSurveyValueChanged(newValue: any): void {\n    super.onSurveyValueChanged(newValue);\n    this.updateChoicesDependedQuestions();\n  }\n  protected onVisibleChoicesChanged(): void {\n    if (this.isLoadingFromJson || this.isLockVisibleChoices) return;\n    this.updateVisibleChoices();\n    if (this.renderedValue === this.otherItem.value) {\n      this.setRenderedValue(this.rendredValueFromData(this.value), false);\n    }\n    this.onVisibleChanged();\n    if (!!this.visibleChoicesChangedCallback) {\n      this.visibleChoicesChangedCallback();\n    }\n    this.updateChoicesDependedQuestions();\n  }\n  protected isVisibleCore(): boolean {\n    const superVal = super.isVisibleCore();\n    if (!this.hideIfChoicesEmpty || !superVal) return superVal;\n    var choices = this.isUsingCarryForward ? this.visibleChoices : this.getFilteredChoices();\n    return !choices || choices.length > 0;\n  }\n  private sortArrayByChoicesOrder(array: Array<ItemValue>): Array<ItemValue> {\n    const res = array.slice();\n    if (this.isInDesignMode) return res;\n\n    const order = this.choicesOrder.toLowerCase();\n    if (order == \"asc\") return this.sortArray(res, 1);\n    if (order == \"desc\") return this.sortArray(res, -1);\n    if (order == \"random\") return this.randomizeArray(res);\n    return res;\n  }\n  private sortArray(array: Array<ItemValue>, mult: number): Array<ItemValue> {\n    return array.sort(function (a, b) {\n      return Helpers.compareStrings(a.calculatedText, b.calculatedText) * mult;\n    });\n  }\n  private randomizeArray(array: Array<ItemValue>): Array<ItemValue> {\n    return Helpers.randomizeArray<ItemValue>(array);\n  }\n  private get hasChoicesUrl(): boolean {\n    return this.choicesByUrl && !!this.choicesByUrl.url;\n  }\n  public clearIncorrectValues(): void {\n    if (!this.canClearIncorrectValues() || !this.hasValueToClearIncorrectValues()) return;\n    if (this.clearIncorrectValuesCallback) {\n      this.clearIncorrectValuesCallback();\n    } else {\n      this.clearIncorrectValuesCore();\n    }\n  }\n  private canClearIncorrectValues(): boolean {\n    if (this.canAddCustomChoices()) return false;\n    if (this.carryForwardQuestion && !this.carryForwardQuestion.isReady) return false;\n    if (!!this.survey && this.survey.questionsByValueName(this.getValueName()).length > 1) return false;\n    if (this.hasChoicesUrl && (!this.choicesFromUrl || this.choicesFromUrl.length == 0)) return false;\n    return true;\n  }\n  protected canAddCustomChoices(): boolean {\n    return false;\n  }\n  protected hasValueToClearIncorrectValues(): boolean {\n    if (!!this.survey && this.survey.keepIncorrectValues) return false;\n    return !this.keepIncorrectValues && !this.isEmpty();\n  }\n  protected clearValueIfInvisibleCore(reason: string): void {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearIncorrectValues();\n  }\n  /**\n   * Returns `true` if a passed choice item is selected.\n   *\n   * To obtain a choice item to check, use the `noneItem` or `otherItem` property or the `choices` array.\n   * @param item A choice item.\n   * @see noneItem\n   * @see otherItem\n   * @see choices\n   */\n  public isItemSelected(item: ItemValue): boolean {\n    if (item === this.otherItem) return this.isOtherSelected;\n    return this.isItemSelectedCore(item);\n  }\n  protected isItemSelectedCore(item: ItemValue): boolean {\n    return item.value === this.renderedValue;\n  }\n  private clearDisabledValues() {\n    if (!this.survey || !this.survey.clearDisabledChoices) return;\n    this.clearDisabledValuesCore();\n  }\n  protected clearIncorrectValuesCore(): void {\n    var val = this.value;\n    if (this.canClearValueAnUnknown(val)) {\n      this.clearValue(true);\n    }\n  }\n  protected canClearValueAnUnknown(val: any): boolean {\n    if (!this.getStoreOthersAsComment() && this.isOtherSelected) return false;\n    return this.hasUnknownValue(val, true, true, true);\n  }\n  protected clearDisabledValuesCore() {\n    if (this.isValueDisabled(this.value)) {\n      this.clearValue(true);\n    }\n  }\n  clearUnusedValues() {\n    super.clearUnusedValues();\n    if (this.isOtherValueUnused()) {\n      this.otherValue = \"\";\n    }\n  }\n  protected isOtherValueUnused(): boolean {\n    return !this.isOtherSelected;\n  }\n  getColumnClass(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.column)\n      .append(\"sv-q-column-\" + this.colCount, this.hasColumns)\n      .toString();\n  }\n  getItemIndex(item: any): number {\n    return this.visibleChoices.indexOf(item);\n  }\n  getItemClass(item: any): string {\n    const options: any = { item: item };\n    var res = this.getItemClassCore(item, options);\n    options.css = res;\n    if (!!this.survey) {\n      this.survey.updateChoiceItemCss(this, options);\n    }\n    return options.css;\n  }\n  protected getCurrentColCount(): number {\n    return this.colCount;\n  }\n  protected getItemClassCore(item: any, options: any): string {\n    const builder = new CssClassBuilder()\n      .append(this.cssClasses.item)\n      .append(this.cssClasses.itemInline, !this.hasColumns && this.colCount === 0)\n      .append(\"sv-q-col-\" + this.getCurrentColCount(), !this.hasColumns && this.colCount !== 0)\n      .append(this.cssClasses.itemOnError, this.hasCssError());\n\n    const readOnlyStyles = this.getIsDisableAndReadOnlyStyles(!item.isEnabled);\n    const isReadOnly = readOnlyStyles[0];\n    const isDisabled = readOnlyStyles[1];\n    const isChecked = this.isItemSelected(item);\n    const allowHover = !isDisabled && !isChecked && !(!!this.survey && this.survey.isDesignMode);\n    const isNone = item === this.noneItem;\n    options.isDisabled = isDisabled || isReadOnly;\n    options.isChecked = isChecked;\n    options.isNone = isNone;\n\n    return builder\n      .append(this.cssClasses.itemDisabled, isDisabled)\n      .append(this.cssClasses.itemReadOnly, isReadOnly)\n      .append(this.cssClasses.itemPreview, this.isPreviewStyle)\n      .append(this.cssClasses.itemChecked, isChecked)\n      .append(this.cssClasses.itemHover, allowHover)\n      .append(this.cssClasses.itemNone, isNone)\n      .toString();\n  }\n\n  getLabelClass(item: ItemValue): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.label)\n      .append(this.cssClasses.labelChecked, this.isItemSelected(item))\n      .toString();\n  }\n  getControlLabelClass(item: ItemValue): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.controlLabel)\n      .append(this.cssClasses.controlLabelChecked, this.isItemSelected(item))\n      .toString() || undefined;\n  }\n\n  @propertyArray() _renderedChoices: Array<ItemValue> = [];\n\n  public onGetRenderedChoicesCallback?: (visibleChoices: Array<ItemValue>) => Array<ItemValue>;\n\n  private updateRenderedChoices() {\n    this.renderedChoices = this.onGetRenderedChoicesCallback ? this.onGetRenderedChoicesCallback(this.visibleChoices) : this.visibleChoices;\n  }\n\n  private getRenderedChoicesAnimationOptions(): IAnimationGroupConsumer<ItemValue> {\n    return {\n      isAnimationEnabled: () => {\n        return this.animationAllowed;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      },\n      getKey: (item) => item != this.newItemValue ? item.value : this.newItemValue,\n      getLeaveOptions: (item: ItemValue) => {\n        let cssClass = this.cssClasses.itemLeave;\n        if (this.hasColumns) {\n          const index = this.bodyItems.indexOf(item);\n          if (index !== -1 && index !== this.bodyItems.length - 1) {\n            cssClass = \"\";\n          }\n        }\n        return {\n          cssClass,\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      },\n      getAnimatedElement: (item: ItemValue) => {\n        return item.getRootElement();\n      },\n      getEnterOptions: (item: ItemValue) => {\n        let cssClass = this.cssClasses.itemEnter;\n        if (this.hasColumns) {\n          const index = this.bodyItems.indexOf(item);\n          if (index !== -1 && index !== this.bodyItems.length - 1) {\n            cssClass = \"\";\n          }\n        }\n        return {\n          cssClass: cssClass,\n          onBeforeRunAnimation: (el) => {\n            if (this.getCurrentColCount() == 0 && this.bodyItems.indexOf(item) >= 0) {\n              const leftPosition = (el.parentElement.firstElementChild as HTMLElement).offsetLeft;\n              if (el.offsetLeft > leftPosition) {\n                setPropertiesOnElementForAnimation(el, { moveAnimationDuration: \"0s\", fadeAnimationDelay: \"0s\" }, \"--\");\n              }\n            }\n            prepareElementForVerticalAnimation(el);\n          },\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  private renderedChoicesAnimation = new AnimationGroup(\n    this.getRenderedChoicesAnimationOptions(),\n    (val) => {\n      this._renderedChoices = val;\n      this.renderedChoicesChangedCallback && this.renderedChoicesChangedCallback();\n    },\n    () => this._renderedChoices\n  );\n\n  public get renderedChoices(): Array<ItemValue> {\n    return this._renderedChoices;\n  }\n  public set renderedChoices(val: Array<ItemValue>) {\n    this.renderedChoicesAnimation.sync(val);\n  }\n\n  private headItemsCount: number = 0;\n  private footItemsCount: number = 0;\n  get headItems(): ItemValue[] {\n    const count = (this.separateSpecialChoices || this.isInDesignMode) ? this.headItemsCount : 0;\n    const res = [];\n    for (let i = 0; i < count; i++) {\n      if (this.renderedChoices[i]) {\n        res.push(this.renderedChoices[i]);\n      }\n    }\n    return res;\n  }\n  get footItems(): ItemValue[] {\n    const count = (this.separateSpecialChoices || this.isInDesignMode) ? this.footItemsCount : 0;\n    const res = [];\n    const items = this.renderedChoices;\n    for (let i = 0; i < count; i++) {\n      if (this.renderedChoices[items.length - count + i]) {\n        res.push(this.renderedChoices[items.length - count + i]);\n      }\n    }\n    return res;\n  }\n  get dataChoices(): ItemValue[] {\n    return this.renderedChoices.filter((item) => !this.isBuiltInChoice(item));\n  }\n  get bodyItems(): ItemValue[] {\n    return (this.hasHeadItems || this.hasFootItems) ? this.dataChoices : this.renderedChoices;\n  }\n  get hasHeadItems(): boolean {\n    return this.headItems.length > 0;\n  }\n  get hasFootItems(): boolean {\n    return this.footItems.length > 0;\n  }\n  protected get itemFlowDirection() {\n    return settings.itemFlowDirection;\n  }\n  get columns() {\n    if (!this.hasColumns || this.renderedChoices.length === 0) return [];\n\n    const colCount = this.getCurrentColCount();\n    let choicesToBuildColumns = (!this.separateSpecialChoices && !this.isInDesignMode) ?\n      this.renderedChoices : this.dataChoices;\n\n    if (this.itemFlowDirection === \"column\") {\n      return this.getColumnsWithColumnItemFlow(choicesToBuildColumns, colCount);\n    } else {\n      return this.getColumnsWithRowItemFlow(choicesToBuildColumns, colCount);\n    }\n  }\n  private getColumnsWithColumnItemFlow(choices, colCount) {\n    const columns = [];\n    let maxColumnHeight = Math.floor(choices.length / colCount);\n\n    if (choices.length % colCount) {\n      maxColumnHeight += 1;\n    }\n\n    let choicesLeft = choices.length;\n    let columnsLeft = colCount;\n    let indexShift = 0;\n\n    for (let i = 0; i < colCount; i++) {\n      const column = [];\n\n      for (let j = 0; j < maxColumnHeight; j++) {\n        if (choicesLeft <= columnsLeft) {\n          maxColumnHeight = 1;\n        }\n        const choice = choices[j + indexShift];\n        if (choice) {\n          column.push(choice);\n          choicesLeft--;\n        }\n      }\n      columns.push(column);\n      columnsLeft--;\n      indexShift += column.length;\n    }\n\n    return columns;\n  }\n  private getColumnsWithRowItemFlow(choices, colCount) {\n    const columns = [];\n    for (let i = 0; i < colCount; i++) {\n      const column = [];\n      for (let j = i; j < choices.length; j += colCount) {\n        column.push(choices[j]);\n      }\n      columns.push(column);\n    }\n    return columns;\n  }\n  getItemsColumnKey(itemsColumn: Array<ItemValue>) {\n    return (itemsColumn || []).map(c => c.value || \"\").join(\"\");\n  }\n  get hasColumns() {\n    return !this.isMobile &&\n      (this.getCurrentColCount() > 1);\n  }\n  get rowLayout() {\n    return this.getCurrentColCount() == 0 && !(this.hasFootItems || this.hasHeadItems);\n  }\n  get blockedRow() {\n    return this.getCurrentColCount() == 0 && (this.hasFootItems || this.hasHeadItems);\n  }\n\n  public choicesLoaded(): void {\n    this.isChoicesLoaded = true;\n    this.updateIsReady();\n    if (this.survey) {\n      this.survey.loadedChoicesFromServer(this);\n    }\n    if (this.loadedChoicesFromServerCallback) {\n      this.loadedChoicesFromServerCallback();\n    }\n  }\n  public getItemValueWrapperComponentName(item: ItemValue): string {\n    const survey: SurveyModel = this.survey as SurveyModel;\n    if (survey) {\n      return survey.getItemValueWrapperComponentName(item, this);\n    }\n    return SurveyModel.TemplateRendererComponentName;\n  }\n  public getItemValueWrapperComponentData(item: ItemValue): any {\n    const survey: SurveyModel = this.survey as SurveyModel;\n    if (survey) {\n      return survey.getItemValueWrapperComponentData(item, this);\n    }\n    return item;\n  }\n  public ariaItemChecked(item: ItemValue) {\n    return this.renderedValue === item.value ? \"true\" : \"false\";\n  }\n  public isOtherItem(item: ItemValue) {\n    return this.showOtherItem && item.value == this.otherItem.value;\n  }\n  public get itemSvgIcon(): string {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n  public getSelectBaseRootCss(): string {\n    return new CssClassBuilder()\n      .append(this.getQuestionRootCss())\n      .append(this.cssClasses.rootRow, this.rowLayout)\n      .toString();\n  }\n  protected allowMobileInDesignMode(): boolean {\n    return true;\n  }\n\n  public getAriaItemLabel(item: ItemValue) {\n    return item.locText.renderedHtml;\n  }\n  public getItemId(item: ItemValue) {\n    return this.inputId + \"_\" + this.getItemIndex(item);\n  }\n  public get questionName() {\n    return this.name + \"_\" + this.id;\n  }\n  public getItemEnabled(item: ItemValue): boolean {\n    return !this.isDisabledAttr && item.isEnabled;\n  }\n  private focusOtherComment(item: ItemValue) {\n    if (!this.autoOtherMode) {\n      SurveyElement.FocusElement(this.getItemCommentId(item), false, this.survey?.rootElement);\n    }\n  }\n  protected getDefaultItemComponent(): string {\n    return \"\";\n  }\n  /**\n   * The name of a component used to render items.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/dropdown-box-with-custom-items/ (linkStyle))\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/ranking-with-custom-items/ (linkStyle))\n   *\n   * [Checkboxes and Radio Button Group Demo](https://surveyjs.io/form-library/examples/add-custom-items-to-single-and-multi-select-questions/ (linkStyle))\n   */\n  public get itemComponent(): string {\n    return this.getPropertyValue(\"itemComponent\", this.getDefaultItemComponent());\n  }\n  public set itemComponent(value: string) {\n    this.setPropertyValue(\"itemComponent\", value);\n  }\n}\n/**\n * A base class for multiple-selection question types that can display choice items in multiple columns ([Checkbox](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radiogroup](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Image Picker](https://surveyjs.io/form-library/documentation/questionimagepickermodel)).\n */\nexport class QuestionCheckboxBase extends QuestionSelectBase {\n  colCountChangedCallback: () => void;\n  constructor(name: string) {\n    super(name);\n  }\n  /**\n   * Gets or sets the number of columns used to arrange choice items.\n   *\n   * Set this property to 0 if you want to display all items in one line. The default value depends on the available width.\n   * @see separateSpecialChoices\n   */\n  public get colCount(): number {\n    return this.getPropertyValue(\"colCount\", this.isFlowLayout ? 0 : undefined);\n  }\n  public set colCount(value: number) {\n    if (value < 0 || value > 5 || this.isFlowLayout) return;\n    this.setPropertyValue(\"colCount\", value);\n    this.fireCallback(this.colCountChangedCallback);\n  }\n  protected onParentChanged() {\n    super.onParentChanged();\n    if (this.isFlowLayout) {\n      this.setPropertyValue(\"colCount\", null);\n    }\n  }\n  protected onParentQuestionChanged() {\n    this.onVisibleChoicesChanged();\n  }\n  protected getSearchableItemValueKeys(keys: Array<string>) {\n    keys.push(\"choices\");\n  }\n}\n\nfunction checkCopyPropVisibility(obj: any, mode: string): boolean {\n  if (!obj) return false;\n  if (!!obj.templateQuestion) {\n    const data = obj.colOwner?.data;\n    obj = obj.templateQuestion;\n    if (!obj.getCarryForwardQuestion(data)) return false;\n  }\n  return obj.carryForwardQuestionType === mode;\n}\n\nSerializer.addClass(\"choiceitem\",\n  [{ name: \"showCommentArea:boolean\", locationInTable: \"detail\", visibleIf: (obj: any): boolean => { return obj.supportComment; } },\n    { name: \"isCommentRequired:boolean\", locationInTable: \"detail\", visibleIf: (obj: any): boolean => { return obj.showCommentArea; } },\n    { name: \"commentPlaceholder\", locationInTable: \"detail\", serializationProperty: \"locCommentPlaceholder\", visibleIf: (obj: any): boolean => { return obj.showCommentArea; } }\n  ],\n  (value) => new ChoiceItem(value),\n  \"itemvalue\"\n);\n\nSerializer.addClass(\n  \"selectbase\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    \"choicesFromQuestion:question_carryforward\",\n    {\n      name: \"choices:choiceitem[]\", uniqueProperty: \"value\",\n      baseValue: function () {\n        return getLocaleString(\"choices_Item\");\n      },\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return !obj.choicesFromQuestion;\n      },\n    },\n    {\n      name: \"choicesFromQuestionMode\",\n      default: \"all\",\n      choices: [\"all\", \"selected\", \"unselected\"],\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return checkCopyPropVisibility(obj, \"select\");\n      },\n    },\n    {\n      name: \"choiceValuesFromQuestion\",\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return checkCopyPropVisibility(obj, \"array\");\n      },\n    },\n    {\n      name: \"choiceTextsFromQuestion\",\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return checkCopyPropVisibility(obj, \"array\");\n      },\n    },\n    {\n      name: \"choicesOrder\",\n      default: \"none\",\n      choices: [\"none\", \"asc\", \"desc\", \"random\"],\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return !obj.choicesFromQuestion;\n      },\n    },\n\n    {\n      name: \"choicesByUrl:restfull\",\n      className: \"choicesByUrl\",\n      onGetValue: function (obj: any) {\n        return obj.choicesByUrl.getData();\n      },\n      onSetValue: function (obj: any, value: any) {\n        obj.choicesByUrl.setData(value);\n      },\n    },\n    \"hideIfChoicesEmpty:boolean\",\n    \"choicesVisibleIf:condition\",\n    {\n      name: \"choicesEnableIf:condition\",\n      dependsOn: \"choicesFromQuestion\",\n      visibleIf: (obj: any) => {\n        return !obj.choicesFromQuestion;\n      },\n    },\n    { name: \"defaultValue:value\", visibleIf: (obj: any): boolean => !obj.choicesFromQuestion, dependsOn: \"choicesFromQuestion\" },\n    { name: \"correctAnswer:value\", visibleIf: (obj: any): boolean => !obj.choicesFromQuestion, dependsOn: \"choicesFromQuestion\" },\n    { name: \"separateSpecialChoices:boolean\", visible: false },\n    { name: \"showOtherItem:boolean\", alternativeName: \"hasOther\" },\n    { name: \"showNoneItem:boolean\", alternativeName: \"hasNone\" },\n    { name: \"showRefuseItem:boolean\", visible: false, version: \"1.9.128\" },\n    { name: \"showDontKnowItem:boolean\", visible: false, version: \"1.9.128\" },\n    {\n      name: \"otherPlaceholder\",\n      alternativeName: \"otherPlaceHolder\",\n      serializationProperty: \"locOtherPlaceholder\",\n      dependsOn: \"showOtherItem\",\n      visibleIf: function (obj: any) {\n        return obj.showOtherItem;\n      },\n    },\n    {\n      name: \"noneText\",\n      serializationProperty: \"locNoneText\",\n      dependsOn: \"showNoneItem\",\n      visibleIf: function (obj: any) {\n        return obj.showNoneItem;\n      },\n    },\n    {\n      name: \"refuseText\",\n      serializationProperty: \"locRefuseText\",\n      dependsOn: \"showRefuseItem\",\n      visibleIf: function (obj: any) {\n        return obj.showRefuseItem;\n      },\n    },\n    {\n      name: \"dontKnowText\",\n      serializationProperty: \"locDontKnowText\",\n      dependsOn: \"showDontKnowItem\",\n      visibleIf: function (obj: any) {\n        return obj.showDontKnowItem;\n      },\n    },\n    {\n      name: \"otherText\",\n      serializationProperty: \"locOtherText\",\n      dependsOn: \"showOtherItem\",\n      visibleIf: function (obj: any) {\n        return obj.showOtherItem;\n      },\n    },\n    {\n      name: \"otherErrorText\",\n      serializationProperty: \"locOtherErrorText\",\n      dependsOn: \"showOtherItem\",\n      visibleIf: function (obj: any) {\n        return obj.showOtherItem;\n      },\n    },\n    {\n      name: \"storeOthersAsComment\",\n      default: \"default\",\n      choices: [\"default\", true, false],\n      visible: false,\n    }\n  ],\n  null,\n  \"question\"\n);\n\nSerializer.addClass(\n  \"checkboxbase\",\n  [\n    {\n      name: \"colCount:number\",\n      default: 1,\n      choices: [0, 1, 2, 3, 4, 5],\n      layout: \"row\",\n    }\n  ],\n  null,\n  \"selectbase\"\n);\n", "import { Action, IAction } from \"./actions/action\";\nimport { ActionContainer } from \"./actions/container\";\nimport { Base, ComputedUpdater } from \"./base\";\nimport { IDropdownMenuOptions } from \"./base-interfaces\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { Helpers } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { property } from \"./jsonobject\";\nimport { IListModel, ListModel } from \"./list\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { IPopupOptionsBase, PopupModel } from \"./popup\";\nimport { Question } from \"./question\";\nimport { QuestionSelectBase } from \"./question_baseselect\";\nimport { QuestionDropdownModel } from \"./question_dropdown\";\nimport { settings } from \"./settings\";\nimport { SurveyModel } from \"./survey\";\nimport { CreateCustomChoiceItemEvent } from \"./survey-events-api\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IsTouch, calculateIsTablet } from \"./utils/devices\";\nimport { classesToSelector, doKey2ClickBlur, doKey2ClickUp } from \"./utils/utils\";\n\nexport class DropdownListModel extends Base {\n  readonly minPageSize = 25;\n  readonly loadingItemHeight = 40;\n  timer: any = undefined;\n  private htmlCleanerElement: HTMLDivElement;\n\n  private _markdownMode = false;\n  private _popupModel: PopupModel;\n  private chevronButton: Action;\n  private clearButton: Action;\n  private filteredItems: Array<ItemValue> = undefined;\n  @property({ defaultValue: false }) focused: boolean;\n  private get focusFirstInputSelector(): string {\n    return this.getFocusFirstInputSelector();\n  }\n  protected readonly selectedItemSelector = \".sv-list__item--selected\";\n  protected readonly itemSelector = \".sv-list__item\";\n  protected getFocusFirstInputSelector(): string {\n    if (IsTouch) {\n      return this.isValueEmpty(this.question.value) ? this.itemSelector : this.selectedItemSelector;\n    } else {\n      return (!this.listModel.showFilter && !!this.question.value) ? this.selectedItemSelector : \"\";\n    }\n  }\n  private itemsSettings: { skip: number, take: number, totalCount: number, items: any[] } = { skip: 0, take: 0, totalCount: 0, items: [] };\n  protected listModel: ListModel<ItemValue>;\n  protected listModelFilterStringChanged = (newValue: string) => {\n    if (this.filterString !== newValue) {\n      this.filterString = newValue;\n      if (!this.choicesLazyLoadEnabled) {\n        this.processCustomValue();\n      }\n    }\n  };\n  public editorButtons: ActionContainer;\n\n  private resetItemsSettings() {\n    this.itemsSettings.skip = 0;\n    this.itemsSettings.take = Math.max(this.minPageSize, this.question.choicesLazyLoadPageSize);\n    this.itemsSettings.totalCount = 0;\n    this.itemsSettings.items = [];\n  }\n  private setItems(items: Array<any>, totalCount: number) {\n    this.itemsSettings.items = [].concat(this.itemsSettings.items, items);\n    this.itemsSettings.totalCount = totalCount;\n    this.listModel.isAllDataLoaded = this.choicesLazyLoadEnabled && this.itemsSettings.items.length == this.itemsSettings.totalCount;\n    this.question.choices = this.itemsSettings.items;\n  }\n  private _loadQuestionChoices(callbackAfterItemsLoaded?: () => void) {\n    const _filterString = this.filterString;\n    this.setIsChoicesLoading(true);\n    this.question.survey.loadQuestionChoices({\n      question: this.question,\n      filter: this.filterString,\n      skip: this.itemsSettings.skip,\n      take: this.itemsSettings.take,\n      setItems: (items: Array<any>, totalCount: number) => {\n        this.setItems(items || [], totalCount || 0);\n        this.popupRecalculatePosition(this.itemsSettings.skip === this.itemsSettings.take);\n        if (!!callbackAfterItemsLoaded) {\n          callbackAfterItemsLoaded();\n        }\n        this.processCustomValue(_filterString);\n        this.setIsChoicesLoading(false);\n      }\n    });\n    this.itemsSettings.skip += this.itemsSettings.take;\n  }\n\n  private setIsChoicesLoading(newValue: boolean) {\n    if (!!this.question.setIsChoicesLoading) {\n      this.question.setIsChoicesLoading(newValue);\n    }\n  }\n\n  private processCustomValue(newValue?: string) {\n    if (!this.allowCustomChoices) return;\n\n    const value = newValue || this.filterString;\n    const item = this.listModel.getVisibleActions().filter(action => Helpers.isTwoValueEquals(action.text, value, false, false))[0];\n    if (!!item) {\n      this.customValue = undefined;\n    } else {\n      this.customValue = value;\n      this.updateItems();\n      this.listModel.focusFirstVisibleItem();\n    }\n  }\n  private updateQuestionChoices(callbackAfterItemsLoaded?: () => void): void {\n    const isUpdate = (this.itemsSettings.skip + 1) < this.itemsSettings.totalCount;\n    if (!this.itemsSettings.skip || isUpdate) {\n\n      this.resetTimer();\n      if (!!this.filterString && settings.dropdownSearchDelay > 0) {\n        this.timer = setTimeout(() => {\n          this._loadQuestionChoices(callbackAfterItemsLoaded);\n        }, settings.dropdownSearchDelay);\n      } else {\n        this._loadQuestionChoices(callbackAfterItemsLoaded);\n      }\n    }\n  }\n\n  private resetTimer(): void {\n    if (!!this.timer) {\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n  private updatePopupFocusFirstInputSelector() {\n    this._popupModel.focusFirstInputSelector = this.focusFirstInputSelector;\n  }\n\n  private getDropdownMenuOptions(): IDropdownMenuOptions {\n    const windowWidth = DomWindowHelper.getInnerWidth();\n    const windowHeight = DomWindowHelper.getInnerHeight();\n    const isTablet = calculateIsTablet(windowWidth, windowHeight);\n\n    let menuType: \"overlay\" | \"popup\" | \"dropdown\" = \"dropdown\";\n    let deviceType: \"mobile\" | \"tablet\" | \"desktop\" = \"desktop\";\n    if (IsTouch) {\n      menuType = \"popup\";\n      deviceType = isTablet ? \"tablet\" : \"mobile\";\n    }\n\n    return <IDropdownMenuOptions>{\n      menuType: menuType,\n      deviceType: deviceType,\n      hasTouchScreen: IsTouch,\n      screenHeight: windowHeight,\n      screenWidth: windowWidth\n    };\n  }\n\n  private checkFocusRemainsWithinComponent(event: any): boolean {\n    if (!this.question.cssClasses.root || !event?.target) return false;\n\n    const rootElement = event.target.closest(classesToSelector(this.question.cssClasses.root));\n    return (rootElement && rootElement.contains(event.relatedTarget));\n  }\n\n  protected createButtons(): void {\n    this.editorButtons = new ActionContainer();\n    this.editorButtons.containerCss = \"sd-dropdown-action-bar\";\n\n    this.chevronButton = new Action({\n      id: \"chevron\",\n      css: \"sd-editor-chevron-button\",\n      iconName: this.question.cssClasses.chevronButtonIconId || \"icon-chevron\",\n      iconSize: \"auto\",\n      showTitle: false,\n      locTitle: this.locSelectCaption,\n      disableTabStop: true,\n      enabled: new ComputedUpdater(() => {\n        return !this.question.isInputReadOnly;\n      }),\n      visible: new ComputedUpdater(() => {\n        return !this.question.isPreviewStyle;\n      }),\n      action: (context: any) => {\n        this.onClick();\n      }\n    });\n\n    this.clearButton = new Action({\n      id: \"clear\",\n      css: \"sd-editor-clean-button\",\n      iconName: this.question.cssClasses.cleanButtonIconId || \"icon-cancel-24x24\",\n      iconSize: \"auto\",\n      showTitle: false,\n      locTitle: this.locClearCaption,\n      disableTabStop: true,\n      enabled: new ComputedUpdater(() => {\n        return !this.question.isInputReadOnly;\n      }),\n      visible: new ComputedUpdater(() => {\n        const isEmpty = this.question.isEmpty();\n        const isReadOnly = this.question.isReadOnly;\n        return this.question.allowClear && !isEmpty && !isReadOnly;\n      }),\n      action: (context: any) => {\n        this.onClear();\n      }\n    });\n\n    this.editorButtons.setItems([this.clearButton, this.chevronButton]);\n    this.editorButtons.actions.forEach(action => action.cssClasses = {\n      item: \"sd-editor-button-item\",\n      itemIcon: \"sv-editor-button-item__icon\",\n      itemPressed: \"sd-editor-button-item--pressed\",\n    });\n  }\n\n  protected createPopup(): void {\n    const popupOptions: IPopupOptionsBase = { verticalPosition: \"bottom\", horizontalPosition: \"center\", showPointer: false };\n    this._popupModel = new PopupModel(\"sv-list\", { model: this.listModel }, popupOptions);\n    this._popupModel.displayMode = IsTouch ? \"overlay\" : \"popup\";\n    this._popupModel.positionMode = \"fixed\";\n    this._popupModel.isFocusedContainer = false;\n    this._popupModel.isFocusedContent = IsTouch;\n    this._popupModel.setWidthByTarget = !IsTouch;\n    this._popupModel.locale = this.question.getLocale();\n    this.updatePopupFocusFirstInputSelector();\n    this.listModel.registerPropertyChangedHandlers([\"showFilter\"], () => {\n      this.updatePopupFocusFirstInputSelector();\n    });\n    this._popupModel.onVisibilityChanged.add((_, option: { isVisible: boolean }) => {\n      this.popupVisibilityChanged(option.isVisible);\n      this.chevronButton.pressed = option.isVisible;\n    });\n  }\n\n  private popupVisibilityChanged(isVisible: boolean) {\n    if (isVisible) {\n      this.listModel.renderElements = true;\n    }\n    if (isVisible && this.choicesLazyLoadEnabled) {\n      this.listModel.actions = [];\n      this.resetItemsSettings();\n      this.updateQuestionChoices();\n    }\n\n    if (isVisible) {\n      this.updatePopupFocusFirstInputSelector();\n\n      const dropdownMenuOptions = this.getDropdownMenuOptions();\n      this.question.processOpenDropdownMenu(dropdownMenuOptions);\n      const displayModeUpdated = this._popupModel.updateDisplayMode(dropdownMenuOptions.menuType);\n      if (displayModeUpdated) {\n        this.listModel.setSearchEnabled(this.inputAvailable && dropdownMenuOptions.menuType !== \"dropdown\");\n      }\n\n      if (!!this.question.onOpenedCallBack) {\n        this.question.onOpenedCallBack();\n      }\n    }\n    if (!isVisible) {\n      this.onHidePopup();\n    }\n    this.ariaExpanded = isVisible ? \"true\" : \"false\";\n    this.question.processPopupVisiblilityChanged(this.popupModel, isVisible);\n  }\n\n  private setFilterStringToListModel(newValue: string): void {\n    this.listModel.filterString = newValue;\n    this.listModel.resetFocusedItem();\n    if (this.question.selectedItem && this.question.selectedItem.text.indexOf(newValue) >= 0) {\n      this.listModel.focusedItem = <any>this.getAvailableItems().filter(item => item.id == this.question.selectedItem.value)[0];\n      if (this.listModel.filterString) {\n        this.listModel.actions.map(a => a.selectedValue = false);\n      }\n\n      return;\n    }\n    if (!this.listModel.focusedItem || !this.listModel.isItemVisible(this.listModel.focusedItem)) {\n      this.listModel.focusFirstVisibleItem();\n    }\n  }\n\n  private setTextWrapEnabled(newValue: boolean): void {\n    this.listModel.textWrapEnabled = newValue;\n  }\n\n  protected popupRecalculatePosition(isResetHeight: boolean): void {\n    setTimeout(() => {\n      this.popupModel.recalculatePosition(isResetHeight);\n    }, 1);\n  }\n\n  protected onHidePopup(): void {\n    this.question.suggestedItem = null;\n    if (this.choicesLazyLoadEnabled) {\n      this.resetItemsSettings();\n    }\n    this.customValue = undefined;\n    this.resetCustomItemValue();\n  }\n\n  protected getAvailableItems(): Array<ItemValue> {\n    if (this.allowCustomChoices) {\n      return [].concat(this.question.visibleChoices, [this.customItemValue]);\n    }\n    return this.question.visibleChoices;\n  }\n  protected setOnTextSearchCallbackForListModel(listModel: ListModel<ItemValue>) {\n    listModel.setOnTextSearchCallback((item: ItemValue, textToSearch: string) => {\n      if (item.id === this.customItemValue.id) return item.visible;\n      if (this.filteredItems) return this.filteredItems.indexOf(item) >= 0;\n      let textInLow = item.text.toLocaleLowerCase();\n      textInLow = settings.comparator.normalizeTextCallback(textInLow, \"filter\");\n      const index = textInLow.indexOf(textToSearch.toLocaleLowerCase());\n      return this.question.searchMode == \"startsWith\" ? index == 0 : index > -1;\n    });\n  }\n  protected createListModel(): ListModel<ItemValue> {\n    const visibleItems = this.getAvailableItems();\n    let _onSelectionChanged = this.onSelectionChanged;\n    if (!_onSelectionChanged) {\n      _onSelectionChanged = (item: IAction) => {\n        this.setQuestionValue(item);\n        this.popupModel.hide();\n      };\n    }\n    const listOptions: IListModel = {\n      items: visibleItems,\n      onSelectionChanged: _onSelectionChanged,\n      allowSelection: false,\n      locOwner: this.question,\n      elementId: this.listElementId\n    };\n    const res = new ListModel<ItemValue>(listOptions as any);\n    this.setOnTextSearchCallbackForListModel(res);\n    res.renderElements = false;\n    res.forceShowFilter = this.question.choicesLazyLoadEnabled;\n    res.areSameItemsCallback = (item1: IAction, item2: IAction): boolean => {\n      return item1 === item2;\n    };\n    return res;\n  }\n\n  private setQuestionValue(item: IAction) {\n    let selectedItem = item;\n    if (this.allowCustomChoices && item.id === this.customItemValue.id) {\n      const newChoice = this.createCustomItem();\n      selectedItem = newChoice;\n    }\n    if (!!selectedItem) {\n      this.resetFilterString();\n      this.question.selectItem(selectedItem);\n      if (this.searchEnabled) {\n        this.applyInputString(selectedItem as ItemValue);\n      }\n    }\n  }\n\n  protected createCustomItem(): ItemValue {\n    const newChoice = new ItemValue(this.customValue);\n    const options: CreateCustomChoiceItemEvent = {\n      item: newChoice,\n      question: this.question as QuestionSelectBase,\n      allow: true\n    };\n    this.question.survey.createCustomChoiceItem(options);\n    if (!options.allow) {\n      this.clear();\n      return null;\n    }\n\n    this.question.customChoices.push(newChoice);\n    this.customValue = undefined;\n    this.updateItems();\n    return newChoice;\n  }\n\n  protected updateAfterListModelCreated(model: ListModel<ItemValue>): void {\n    model.isItemSelected = (action: ItemValue) => !!action.selected;\n    model.onPropertyChanged.add((sender: any, options: any) => {\n      if (options.name == \"hasVerticalScroller\") {\n        this.hasScroll = options.newValue;\n      }\n    });\n    model.isAllDataLoaded = !this.choicesLazyLoadEnabled;\n    model.disableSearch = this.choicesLazyLoadEnabled;\n    model.actions.forEach(a => a.disableTabStop = true);\n    model.setOnFilterStringChangedCallback(this.listModelFilterStringChanged);\n  }\n  protected getPopupCssClasses(): string { return \"sv-single-select-list\"; }\n  public updateCssClasses(popupCssClass: string, listCssClasses: any): void {\n    this.popupModel.cssClass = new CssClassBuilder().append(popupCssClass).append(this.getPopupCssClasses()).toString();\n    this.listModel.cssClasses = listCssClasses;\n  }\n  protected resetFilterString(): void {\n    if (!!this.filterString) {\n      this.filterString = undefined;\n      this.listModel.filterString = \"\";\n    }\n    this.inputString = null;\n    this.hintString = \"\";\n  }\n  public clear(): void {\n    this.customValue = undefined;\n    this.resetFilterString();\n  }\n  protected onSetFilterString(): void {\n    this.filteredItems = undefined;\n    if (!this.filterString && !this.popupModel.isVisible) return;\n    const options = { question: this.question, choices: this.getAvailableItems(), filter: this.filterString, filteredChoices: undefined as Array<ItemValue> };\n    (this.question.survey as SurveyModel).onChoicesSearch.fire(this.question.survey as SurveyModel, options);\n    this.filteredItems = options.filteredChoices;\n\n    if (!!this.filterString && !this.popupModel.isVisible) {\n      this.popupModel.show();\n    }\n    const updateAfterFilterStringChanged = () => {\n      this.setFilterStringToListModel(this.filterString);\n      if (this.filterString)this.applyHintString();\n      this.popupRecalculatePosition(true);\n    };\n\n    if (this.choicesLazyLoadEnabled) {\n      this.resetItemsSettings();\n      this.updateQuestionChoices(updateAfterFilterStringChanged);\n    } else {\n      updateAfterFilterStringChanged();\n    }\n  }\n  public get isAllDataLoaded(): boolean {\n    return !!this.itemsSettings.totalCount && this.itemsSettings.items.length == this.itemsSettings.totalCount;\n  }\n\n  public loadQuestionChoices(callbackAfterItemsLoaded?: () => void) {\n    if (this.isAllDataLoaded) return;\n\n    this._loadQuestionChoices(callbackAfterItemsLoaded);\n  }\n\n  public get canShowSelectedItem(): boolean {\n    return !this.focused || this._markdownMode || !this.searchEnabled;\n  }\n\n  public get needRenderInput(): boolean {\n    return !this.question.isInputReadOnly || !!this.placeholderRendered;\n  }\n\n  public updateCustomItemValue(): void {\n    if (this.customValue) {\n      this.customItemValue.text = this.getLocalizationFormatString(\"createCustomItem\", this.customValue);\n      this.customItemValue.visible = true;\n    } else {\n      this.resetCustomItemValue();\n    }\n  }\n\n  private resetCustomItemValue(): void {\n    this.customItemValue.text = \"\";\n    this.customItemValue.visible = false;\n  }\n\n  private _customItemValue: ItemValue;\n  public get customItemValue(): ItemValue {\n    if (!this._customItemValue) {\n      this._customItemValue = new ItemValue(\"newCustomItem\", this.getLocalizationFormatString(\"createCustomItem\", this.customValue));\n      this._customItemValue.css = \"sv-list-item--custom-value\";\n    }\n    return this._customItemValue;\n  }\n\n  @property({ defaultValue: false }) allowCustomChoices: boolean;\n  @property({\n    onSet: (newValue: string, target: DropdownListModel) => {\n      target.updateCustomItemValue();\n    }\n  }) customValue: string;\n\n  @property({ defaultValue: true }) searchEnabled: boolean;\n  @property() choicesLazyLoadEnabled: boolean;\n  @property({\n    defaultValue: \"\",\n    onSet: (_, target: DropdownListModel) => {\n      target.onSetFilterString();\n    }\n  }) filterString: string;\n\n  @property({\n    defaultValue: \"\",\n    onSet: (newValue, target: DropdownListModel) => {\n      target.question.inputHasValue = !!newValue;\n    }\n  }) inputString: string;\n\n  @property({}) showInputFieldComponent: boolean;\n  @property() ariaActivedescendant: string;\n  @property() ariaExpanded : \"true\" | \"false\";\n\n  private applyInputString(item: ItemValue) {\n    const hasHtml = item?.locText.hasHtml;\n    if (hasHtml || this.question.inputFieldComponentName) {\n      this._markdownMode = true;\n      this.inputString = this.cleanHtml(item?.locText.getHtmlValue());\n      this.hintString = \"\";\n    } else {\n      this.inputString = item?.title;\n      this.hintString = item?.title;\n    }\n  }\n\n  private cleanHtml(html: string): string {\n    if (!this.htmlCleanerElement) return \"\";\n    this.htmlCleanerElement.innerHTML = html;\n    return this.htmlCleanerElement.textContent;\n  }\n\n  protected fixInputCase() {\n    const hintStringMiddle = this.hintStringMiddle;\n    if (hintStringMiddle && this.inputString != hintStringMiddle)this.inputString = hintStringMiddle;\n  }\n\n  protected applyHintString() {\n    const item: ItemValue = this.listModel.focusedItem || this.question.selectedItem;\n    const hasHtml = item?.locText.hasHtml;\n    if (hasHtml || this.question.inputFieldComponentName) {\n      this._markdownMode = true;\n      this.hintString = \"\";\n    } else if (item === this.customItemValue) {\n      this.hintString = \"\";\n    } else {\n      this.hintString = item?.title;\n    }\n  }\n\n  public get inputStringRendered() {\n    return this.inputString || \"\";\n  }\n\n  public set inputStringRendered(val: string) {\n    this.inputString = val;\n    this.filterString = val;\n\n    if (!this.choicesLazyLoadEnabled) {\n      this.processCustomValue();\n    }\n    if (!val || !this.searchEnabled || this.listModel.focusedItem?.id === this.customItemValue.id) {\n      this.hintString = \"\";\n    }\n  }\n\n  @property() inputPlaceholder: string;\n  public get placeholderRendered() {\n    return (this.hintString || this.question.readOnly || !this.question.isEmpty()) ? \"\" : this.inputPlaceholder;\n  }\n\n  public get listElementId(): string {\n    return this.question.inputId + \"_list\";\n  }\n\n  @property({\n    defaultValue: false,\n    onSet: (newVal: boolean, target: DropdownListModel) => {\n      if (newVal) {\n        target.listModel.addScrollEventListener((e: any) => { target.onScroll(e); });\n      } else {\n        target.listModel.removeScrollEventListener();\n      }\n    }\n  }) hasScroll: boolean;\n\n  @property({ defaultValue: \"\" }) hintString: string;\n\n  private get hintStringLC(): string {\n    return this.hintString?.toLowerCase() || \"\";\n  }\n  private get inputStringLC(): string {\n    return this.inputString?.toLowerCase() || \"\";\n  }\n\n  public get showHintPrefix(): boolean {\n    return !!this.inputString && this.hintStringLC.indexOf(this.inputStringLC) > 0;\n  }\n  public get hintStringPrefix(): string {\n    if (!this.inputString) return null;\n    return this.hintString.substring(0, this.hintStringLC.indexOf(this.inputStringLC));\n  }\n  public get showHintString(): boolean {\n    return !!this.searchEnabled && !!(this.hintStringLC || this.inputStringLC) ||\n      !this.searchEnabled && this.hintStringLC && this.question.isEmpty();\n  }\n  public get hintStringSuffix(): string {\n    return this.hintStringLC.indexOf(this.inputStringLC) >= 0 ? this.hintString.substring(this.hintStringLC.indexOf(this.inputStringLC) + this.inputStringLC.length) : \"\";\n  }\n  public get hintStringMiddle(): string {\n    const start = this.hintStringLC.indexOf(this.inputStringLC);\n    if (start == -1) return null;\n    return this.hintString.substring(start, start + this.inputStringLC.length);\n  }\n  private questionPropertyChangedHandler = (sender: any, options: any) => {\n    this.onPropertyChangedHandler(sender, options);\n  };\n  constructor(protected question: Question, protected onSelectionChanged?: (item: IAction, ...params: any[]) => void) {\n    super();\n    this.ariaExpanded = \"false\";\n    this.createLocalizableString(\"clearCaption\", this.question, false, true);\n    this.createLocalizableString(\"selectCaption\", this.question, false, true);\n    this.htmlCleanerElement = DomDocumentHelper.createElement(\"div\") as HTMLDivElement;\n    question.onPropertyChanged.add(this.questionPropertyChangedHandler);\n    this.showInputFieldComponent = this.question.showInputFieldComponent;\n\n    this.listModel = this.createListModel();\n    this.setChoicesLazyLoadEnabled(this.question.choicesLazyLoadEnabled);\n    this.setInputPlaceholder(this.question.placeholder);\n    this.updateAfterListModelCreated(this.listModel);\n    this.setSearchEnabled(this.question.searchEnabled);\n    this.setAllowCustomChoices(this.question.allowCustomChoices);\n    this.setTextWrapEnabled(this.question.textWrapEnabled);\n    this.createPopup();\n    this.createButtons();\n    this.resetItemsSettings();\n    const classes = question.cssClasses;\n    this.updateCssClasses(classes.popup, classes.list);\n  }\n\n  get popupModel(): PopupModel {\n    return this._popupModel;\n  }\n\n  public get clearCaption(): string {\n    return this.getLocalizableStringText(\"clearCaption\");\n  }\n  public set clearCaption(value: string) {\n    this.setLocalizableStringText(\"clearCaption\", value);\n  }\n  get locClearCaption(): LocalizableString {\n    return this.getLocalizableString(\"clearCaption\");\n  }\n\n  public get selectCaption(): string {\n    return this.getLocalizableStringText(\"selectCaption\");\n  }\n  public set selectCaption(value: string) {\n    this.setLocalizableStringText(\"selectCaption\", value);\n  }\n  get locSelectCaption(): LocalizableString {\n    return this.getLocalizableString(\"selectCaption\");\n  }\n\n  public get inputAvailable(): boolean {\n    return this.searchEnabled || this.allowCustomChoices;\n  }\n  public get noTabIndex(): boolean {\n    return this.question.isInputReadOnly || this.inputAvailable;\n  }\n  public get filterReadOnly(): boolean {\n    return !this.filterStringEnabled || !this.focused;\n  }\n  public get filterStringEnabled(): boolean {\n    return !this.question.isInputReadOnly && this.inputAvailable;\n  }\n  public get inputMode(): \"none\" | \"text\" {\n    return IsTouch ? \"none\" : \"text\";\n  }\n  public get popupEnabled(): boolean {\n    return !this.question.isInputReadOnly;\n  }\n\n  public get ariaQuestionRole(): string | undefined { return this.filterStringEnabled ? undefined : \"combobox\"; }\n  public get ariaQuestionRequired(): \"true\" | \"false\" | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaRequired : undefined; }\n  public get ariaQuestionInvalid(): \"true\" | \"false\" | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaInvalid : undefined; }\n  public get ariaQuestionErrorMessage(): string | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaErrormessage : undefined; }\n  public get ariaQuestionLabel(): string | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaLabel : undefined; }\n  public get ariaQuestionLabelledby(): string | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaLabelledBy : undefined; }\n  public get ariaQuestionDescribedby(): string | undefined { return this.ariaQuestionRole ? this.question.a11y_input_ariaDescribedBy : undefined; }\n  public get ariaQuestionControls(): string | undefined { return this.ariaQuestionRole && this.popupEnabled ? this.listElementId : undefined; }\n  public get ariaQuestionExpanded(): \"true\" | \"false\" { return this.ariaQuestionRole ? (this.popupEnabled ? this.ariaExpanded : \"false\") : undefined; }\n  public get ariaQuestionActivedescendant(): string | undefined { return this.ariaQuestionRole ? this.ariaActivedescendant : undefined; }\n\n  public get ariaInputRole(): string { return this.filterStringEnabled ? \"combobox\" : undefined; }\n  public get ariaInputRequired(): \"true\" | \"false\" { return this.ariaInputRole ? this.question.a11y_input_ariaRequired : undefined; }\n  public get ariaInputInvalid(): \"true\" | \"false\" { return this.ariaInputRole ? this.question.a11y_input_ariaInvalid : undefined; }\n  public get ariaInputErrorMessage(): string { return this.ariaInputRole ? this.question.a11y_input_ariaErrormessage : undefined; }\n  public get ariaInputLabel(): string { return this.ariaInputRole ? this.question.a11y_input_ariaLabel : undefined; }\n  public get ariaInputLabelledby(): string { return this.ariaInputRole ? this.question.a11y_input_ariaLabelledBy : undefined; }\n  public get ariaInputDescribedby(): string { return this.ariaInputRole ? this.question.a11y_input_ariaDescribedBy : undefined; }\n  public get ariaInputControls(): string { return this.ariaInputRole && this.popupEnabled ? this.listElementId : undefined; }\n  public get ariaInputExpanded(): \"true\" | \"false\" { return this.ariaInputRole ? (this.popupEnabled ? this.ariaExpanded : \"false\") : undefined; }\n  public get ariaInputActivedescendant(): string { return this.ariaInputRole ? this.ariaActivedescendant : undefined; }\n\n  public setSearchEnabled(newValue: boolean): void {\n    this.listModel.setSearchEnabled(IsTouch && (newValue || this.question.allowCustomChoices));\n    this.searchEnabled = newValue;\n  }\n\n  public setAllowCustomChoices(newValue: boolean): void {\n    this.allowCustomChoices = newValue;\n    if (newValue) {\n      this.searchEnabled = newValue;\n    }\n  }\n\n  public setChoicesLazyLoadEnabled(newValue: boolean): void {\n    this.choicesLazyLoadEnabled = newValue;\n    this.listModel.disableSearch = newValue;\n    this.listModel.isAllDataLoaded = !newValue;\n  }\n\n  public setInputPlaceholder(newValue: string): void {\n    this.inputPlaceholder = newValue;\n  }\n\n  public updateItems(): void {\n    this.listModel.setItems(this.getAvailableItems());\n  }\n\n  public onClick(event?: any): void {\n    if (this.question.readOnly || this.question.isDesignMode || this.question.isPreviewStyle || this.question.isReadOnlyAttr) return;\n    this._popupModel.toggleVisibility();\n    this.focusItemOnClickAndPopup();\n    this.question.focusInputElement(false);\n  }\n  public chevronPointerDown(event: any): void {\n    if (this._popupModel.isVisible) {\n      event.preventDefault();\n    }\n  }\n\n  protected onPropertyChangedHandler(sender: any, options: any) {\n    if (options.name == \"value\") {\n      this.showInputFieldComponent = this.question.showInputFieldComponent;\n    }\n    if (options.name == \"textWrapEnabled\") {\n      this.setTextWrapEnabled(options.newValue);\n    }\n  }\n  protected focusItemOnClickAndPopup() {\n    if (this._popupModel.isVisible && this.question.value)\n      this.changeSelectionWithKeyboard(false);\n  }\n\n  public onClear(event?: any): void {\n    this.question.clearValue(true);\n    this._popupModel.hide();\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public getSelectedAction(): ItemValue {\n    return this.question.selectedItem || null;\n  }\n\n  changeSelectionWithKeyboard(reverse: boolean): void {\n    let focusedItem = this.listModel.focusedItem;\n    if (!focusedItem && this.question.selectedItem) {\n      if (ItemValue.getItemByValue(this.question.visibleChoices, this.question.value)) {\n        this.listModel.focusedItem = this.question.selectedItem;\n      }\n    } else {\n      if (reverse) {\n        this.listModel.focusPrevVisibleItem();\n      } else {\n        this.listModel.focusNextVisibleItem();\n      }\n    }\n\n    this.beforeScrollToFocusedItem(focusedItem);\n    this.scrollToFocusedItem();\n    this.afterScrollToFocusedItem();\n\n    this.ariaActivedescendant = this.listModel.focusedItem?.elementId;\n  }\n\n  protected beforeScrollToFocusedItem(focusedItem: ItemValue) {\n    if (this.question.value && focusedItem) {\n      focusedItem.selectedValue = false;\n      this.listModel.focusedItem.selectedValue = !this.listModel.filterString;\n      this.question.suggestedItem = this.listModel.focusedItem;\n    }\n  }\n\n  protected afterScrollToFocusedItem() {\n    if (this.question.value && !this.listModel.filterString && this.searchEnabled) {\n      this.applyInputString(this.listModel.focusedItem || this.question.selectedItem);\n    } else {\n      this.applyHintString();\n    }\n\n    this.fixInputCase();\n    this.ariaActivedescendant = this.listModel.focusedItem?.elementId;\n  }\n\n  keyHandler(event: any): void {\n    let isStopPropagation = false;\n    const char: number = event.which || event.keyCode;\n    if (this.popupModel.isVisible && event.keyCode === 38) {\n      this.changeSelectionWithKeyboard(true);\n      isStopPropagation = true;\n    } else if (event.keyCode === 40) {\n      this.popupModel.show();\n      this.changeSelectionWithKeyboard(false);\n      isStopPropagation = true;\n    } else if (!this.popupModel.isVisible && event.keyCode === 32) {\n      this.popupModel.show();\n      this.changeSelectionWithKeyboard(false);\n      isStopPropagation = true;\n    } else if (!this.popupModel.isVisible && event.keyCode === 13) {\n      (this.question.survey as SurveyModel).questionEditFinishCallback(this.question, event);\n      isStopPropagation = true;\n    } else if (this.popupModel.isVisible && (event.keyCode === 13 || event.keyCode === 32 && (!this.searchEnabled || !this.inputString))) {\n      if (event.keyCode === 13 && this.searchEnabled && !this.inputString && this.question instanceof QuestionDropdownModel && !this._markdownMode && this.question.value) {\n        this._popupModel.hide();\n        this.onClear(event);\n      } else {\n        this.listModel.selectFocusedItem();\n        this.onFocus(event);\n      }\n      isStopPropagation = true;\n    } else if (char === 46 || char === 8) {\n      if (!this.inputAvailable) {\n        this.onClear(event);\n      }\n    } else if (event.keyCode === 27) {\n      this._popupModel.hide();\n      this.hintString = \"\";\n      this.onEscape();\n    } else {\n      if (event.keyCode === 38 || event.keyCode === 40 || event.keyCode === 32 && !this.searchEnabled) {\n        isStopPropagation = true;\n      }\n      if (event.keyCode === 32 && this.searchEnabled) {\n        return;\n      }\n      doKey2ClickUp(event, { processEsc: false, disableTabStop: this.question.isInputReadOnly });\n    }\n\n    if (isStopPropagation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  protected onEscape() {\n    if (this.searchEnabled)\n      this.applyInputString(this.question.selectedItem);\n  }\n\n  onScroll(event: Event): void {\n    const target = event.target as HTMLElement;\n    if ((target.scrollHeight - (target.scrollTop + target.offsetHeight)) <= this.loadingItemHeight) {\n      this.updateQuestionChoices();\n    }\n  }\n\n  onBlur(event: any): void {\n    if (this.checkFocusRemainsWithinComponent(event)) return;\n\n    this.focused = false;\n    if (this.popupModel.isVisible && this.popupModel.displayMode == \"overlay\") {\n      return;\n    }\n    doKey2ClickBlur(event);\n    this._popupModel.hide();\n    this.resetFilterString();\n    event.stopPropagation();\n  }\n  onFocus(event: any): void {\n    this.focused = true;\n    this.setInputStringFromSelectedItem(this.question.selectedItem);\n  }\n\n  public setInputStringFromSelectedItem(newValue: any): void {\n    if (!this.focused) return;\n    if (this.searchEnabled && !!newValue) {\n      this.applyInputString(newValue);\n    }\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.question && this.question.onPropertyChanged.remove(this.questionPropertyChangedHandler);\n    this.questionPropertyChangedHandler = undefined;\n    if (!!this.listModel) {\n      this.listModel.dispose();\n    }\n    if (!!this.popupModel) {\n      this.popupModel.dispose();\n    }\n    this.htmlCleanerElement = undefined;\n  }\n\n  scrollToFocusedItem(): void {\n    this.listModel.scrollToFocusedItem();\n  }\n}", "import { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { ChoiceItem, QuestionSelectBase } from \"./question_baseselect\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { ItemValue } from \"./itemvalue\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { PopupModel } from \"./popup\";\nimport { EventBase } from \"./base\";\nimport { DropdownListModel } from \"./dropdownListModel\";\nimport { settings } from \"./settings\";\nimport { updateListCssValues } from \"./utils/utils\";\nimport { Helpers } from \"./helpers\";\n\n/**\n * A class that describes the Dropdown question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-dropdown/ (linkStyle))\n */\nexport class QuestionDropdownModel extends QuestionSelectBase {\n  dropdownListModelValue: DropdownListModel;\n  lastSelectedItemValue: ItemValue = null;\n  private isChoicesLoading: boolean;\n\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"choicesMin\", \"choicesMax\", \"choicesStep\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"showOtherItem\", \"otherText\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.getSingleSelectedItem();\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    this.updateInputPlaceholder(this.placeholder);\n  }\n  private updateReadOnlyText(): void {\n    this.readOnlyText = this.calculateReadOnlyText();\n  }\n  private updateInputPlaceholder(val: string) {\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.setInputPlaceholder(val);\n    }\n  }\n  public get showOptionsCaption(): boolean {\n    return this.allowClear;\n  }\n  public set showOptionsCaption(val: boolean) {\n    this.allowClear = val;\n  }\n  public get showClearButton(): boolean {\n    return this.allowClear && !this.isEmpty();\n  }\n  public get optionsCaption(): string {\n    return this.placeholder;\n  }\n  public set optionsCaption(val: string) {\n    this.placeholder = val;\n  }\n  /**\n   * A placeholder for the input field.\n   */\n  public get placeholder(): string {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  public set placeholder(val: string) {\n    this.setLocalizableStringText(\"placeholder\", val);\n    this.updateInputPlaceholder(val);\n  }\n\n  get locPlaceholder(): LocalizableString {\n    return this.getLocalizableString(\"placeholder\");\n  }\n\n  public getType(): string {\n    return \"dropdown\";\n  }\n  public get isNewA11yStructure() {\n    return true;\n  }\n  public get a11yQuestionAriaRole(): string | null {\n    return this.searchEnabled ? null : \"combobox\";\n  }\n  public get a11yInputAriaRole(): string | null {\n    return this.searchEnabled ? \"combobox\" : null;\n  }\n  /**\n   * Returns the selected choice item. If no item is selected, returns `null`.\n   */\n  public get selectedItem(): ChoiceItem { return <ChoiceItem>this.getSingleSelectedItem(); }\n  protected isOtherValueUnused(): boolean {\n    return !this.selectedItem?.showCommentArea;\n  }\n  protected onGetSingleSelectedItem(selectedItemByValue: ItemValue): void {\n    if (!!selectedItemByValue) {\n      this.lastSelectedItemValue = selectedItemByValue;\n    }\n  }\n  public get isShowingChoiceComment(): boolean {\n    return this.selectedItem?.showCommentArea;\n  }\n  supportAutoAdvance(): boolean {\n    return !this.isShowingChoiceComment;\n  }\n  private minMaxChoices = <Array<ItemValue>>[];\n  protected getChoices(): Array<ItemValue> {\n    var items = super.getChoices();\n    if (this.choicesMax <= this.choicesMin) return items;\n    var res = [];\n    for (var i = 0; i < items.length; i++) {\n      res.push(items[i]);\n    }\n    if (\n      this.minMaxChoices.length === 0 ||\n      this.minMaxChoices.length !==\n      (this.choicesMax - this.choicesMin) / this.choicesStep + 1\n    ) {\n      this.minMaxChoices = [];\n      for (\n        var i = this.choicesMin;\n        i <= this.choicesMax;\n        i += this.choicesStep\n      ) {\n        this.minMaxChoices.push(this.createItemValue(i));\n      }\n    }\n    res = res.concat(this.minMaxChoices);\n    return res;\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   * @see choicesMax\n   * @see choicesStep\n   */\n  public get choicesMin(): number {\n    return this.getPropertyValue(\"choicesMin\");\n  }\n  public set choicesMin(val: number) {\n    this.setPropertyValue(\"choicesMin\", val);\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   * @see choicesMin\n   * @see choicesStep\n   */\n  public get choicesMax(): number {\n    return this.getPropertyValue(\"choicesMax\");\n  }\n  public set choicesMax(val: number) {\n    this.setPropertyValue(\"choicesMax\", val);\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   *\n   * The default value of the `choicesStep` property is 1.\n   * @see choicesMin\n   * @see choicesMax\n   */\n  public get choicesStep(): number {\n    return this.getPropertyValue(\"choicesStep\");\n  }\n  public set choicesStep(val: number) {\n    if (val < 1) val = 1;\n    this.setPropertyValue(\"choicesStep\", val);\n  }\n\n  public get autocomplete(): string {\n    return this.getPropertyValue(\"autocomplete\");\n  }\n  public set autocomplete(val: string) {\n    this.setPropertyValue(\"autocomplete\", val);\n  }\n\n  /**\n   * Specifies whether to display a button that clears the selected value.\n   */\n  @property() allowClear: boolean;\n  /**\n   * Specifies whether users can enter a value into the input field to filter the drop-down list.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   * @see searchMode\n   * @see [SurveyModel.onChoicesSearch](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onChoicesSearch)\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionDropdownModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setSearchEnabled(newValue);\n      }\n    }\n  }) searchEnabled: boolean;\n\n  /**\n   * Specifies a comparison operation used to filter the drop-down list. Applies only if [`searchEnabled`](#searchEnabled) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"contains\"` (default)\n   * - `\"startsWith\"`\n   * @see [SurveyModel.onChoicesSearch](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onChoicesSearch)\n   */\n  @property() searchMode: \"contains\" | \"startsWith\";\n\n  /**\n   * Specifies whether users can add their own choices if the desired option isn't available in the dropdown.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dropdown-custom-choice-options/ (linkStyle))\n   *\n   * > Custom choices will only be stored temporarily for the duration of the current browser session. If you want to save them in a database or another data storage, handle the [`onCreateCustomChoiceItem`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCreateCustomChoiceItem) event.\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionDropdownModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setAllowCustomChoices(newValue);\n      }\n    }\n  }) allowCustomChoices: boolean;\n\n  /**\n   * Specifies whether to wrap long texts in choice options onto a new line.\n   *\n   * Default value: `true`\n   *\n   * Disable this property if you want the texts to be truncated with ellipsis.\n   */\n  @property() textWrapEnabled: boolean;\n  @property({ defaultValue: false }) inputHasValue: boolean;\n  public get readOnlyText(): string {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  public set readOnlyText(val: string) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText(): LocalizableString {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  protected calculateReadOnlyText(): string {\n    if (this.renderAs == \"select\") {\n      if (this.isOtherSelected) return this.otherText;\n      if (this.isNoneSelected) return this.noneText;\n      if (!!this.selectedItem) return this.selectedItemText;\n    }\n    return !!this.selectedItem ? this.selectedItemText : this.placeholder;\n  }\n  /**\n   * Enables lazy loading. If you set this property to `true`, you should implement the Survey's [`onChoicesLazyLoad`](https://surveyjs.io/form-library/documentation/surveymodel#onChoicesLazyLoad) event handler.\n   * @see choicesLazyLoadPageSize\n   * @see SurveyModel.onChoicesLazyLoad\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionDropdownModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setChoicesLazyLoadEnabled(newValue);\n      }\n    }\n  }) choicesLazyLoadEnabled: boolean;\n  /**\n   * Specifies the number of choice items to load at a time when choices are loaded on demand.\n   *\n   * Default value: 25\n   *\n   * > This property does not accept values below 25 to prevent the server from being flooded with requests.\n   * @see choicesLazyLoadEnabled\n   * @see SurveyModel.onChoicesLazyLoad\n   */\n  @property() choicesLazyLoadPageSize: number;\n  public getControlClass(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.control)\n      .append(this.cssClasses.controlEmpty, this.isEmpty())\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.controlDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.controlPreview, this.isPreviewStyle)\n      .append(this.cssClasses.controlInputFieldComponent, !!this.inputFieldComponentName)\n      .toString();\n  }\n  protected updateCssClasses(res: any, css: any): void {\n    super.updateCssClasses(res, css);\n    if (this.useDropdownList) {\n      updateListCssValues(res, css);\n    }\n  }\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModel.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n\n  @property() suggestedItem: ItemValue;\n  public get selectedItemLocText() {\n    const item = this.suggestedItem || this.selectedItem;\n    return item?.locText;\n  }\n  public get inputFieldComponentName(): string {\n    return this.inputFieldComponent || this.itemComponent;\n  }\n  public get showSelectedItemLocText(): boolean {\n    return !this.inputHasValue && !this.inputFieldComponentName && !!this.selectedItemLocText && this.dropdownListModel.canShowSelectedItem;\n  }\n  public get showInputFieldComponent(): boolean {\n    return !this.inputHasValue && !!this.inputFieldComponentName && !this.isEmpty();\n  }\n  private get selectedItemText(): string {\n    const item = this.selectedItem;\n    return !!item ? item.text : \"\";\n  }\n  private get useDropdownList(): boolean { return this.renderAs !== \"select\"; }\n  public get dropdownListModel(): DropdownListModel {\n    if (!this.isDisposed && this.useDropdownList && !this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n    return this.dropdownListModelValue;\n  }\n  public set dropdownListModel(val: DropdownListModel) {\n    this.dropdownListModelValue = val;\n  }\n  public get popupModel(): PopupModel {\n    return this.dropdownListModel.popupModel;\n  }\n\n  public onOpened: EventBase<QuestionDropdownModel> = this.addEvent<QuestionDropdownModel>();\n  public onOpenedCallBack(): void {\n    this.onOpened.fire(this, { question: this, choices: this.choices });\n  }\n  protected onSelectedItemValuesChangedHandler(newValue: any): void {\n    this.dropdownListModelValue?.setInputStringFromSelectedItem(newValue);\n    super.onSelectedItemValuesChangedHandler(newValue);\n  }\n  protected hasUnknownValue(\n    val: any,\n    includeOther: boolean,\n    isFilteredChoices: boolean,\n    checkEmptyValue: boolean\n  ): boolean {\n    if (this.choicesLazyLoadEnabled) { return false; }\n    return super.hasUnknownValue(val, includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  protected needConvertRenderedOtherToDataValue(): boolean {\n    const val = this.otherValue?.trim();\n    if (!val) return false;\n    return super.hasUnknownValue(val, true, false);\n  }\n  protected getItemIfChoicesNotContainThisValue(value: any, text?: string): any {\n    if (this.choicesLazyLoadEnabled) {\n      return this.createItemValue(value, text);\n    } else {\n      return super.getItemIfChoicesNotContainThisValue(value, text);\n    }\n  }\n  protected onVisibleChoicesChanged(): void {\n    super.onVisibleChoicesChanged();\n\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.updateItems();\n    }\n  }\n  protected canAddCustomChoices(): boolean {\n    return this.allowCustomChoices;\n  }\n\n  protected getIsQuestionReady(): boolean {\n    return super.getIsQuestionReady() && !this.isChoicesLoading;\n  }\n\n  protected ensureQuestionIsReady(): void {\n    super.ensureQuestionIsReady();\n    if (!!this.dropdownListModel && this.choicesLazyLoadEnabled) {\n      this.dropdownListModel.loadQuestionChoices();\n    }\n  }\n\n  protected valueFromData(val: any): any {\n    const value = super.valueFromData(val);\n    if (!!value && this.allowCustomChoices && !this.choicesLazyLoadEnabled) {\n      const item = this.visibleChoices.filter(ch => Helpers.isTwoValueEquals(ch.id, value, false, false))[0];\n      if (!item) {\n        const newChoice = new ItemValue(value);\n        this.customChoices.push(newChoice);\n      }\n    }\n    return value;\n  }\n\n  public setIsChoicesLoading(value: boolean) {\n    this.isChoicesLoading = value;\n    this.updateIsReady();\n  }\n\n  protected getFirstInputElementId(): string {\n    return this.inputId + (this.searchEnabled || this.allowCustomChoices ? \"_0\" : \"\");\n  }\n  public getInputId() {\n    return this.inputId + \"_0\";\n  }\n  public clearValue(keepComment?: boolean): void {\n    super.clearValue(keepComment);\n    this.lastSelectedItemValue = null;\n    this.dropdownListModelValue?.clear();\n  }\n\n  public afterRenderCore(el: any): void {\n    super.afterRenderCore(el);\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.clear();\n    }\n  }\n\n  onClick(e: any): void {\n    !!this.onOpenedCallBack && this.onOpenedCallBack();\n  }\n\n  onKeyUp(event: any): void {\n    const char: number = event.which || event.keyCode;\n    if (char === 46) {\n      this.clearValue(true);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  protected supportEmptyValidation(): boolean { return true; }\n  protected onBlurCore(event: any): void {\n    this.dropdownListModel.onBlur(event);\n    super.onBlurCore(event);\n  }\n  protected onFocusCore(event: any): void {\n    this.dropdownListModel.onFocus(event);\n    super.onFocusCore(event);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n}\nSerializer.addClass(\n  \"dropdown\",\n  [\n    { name: \"placeholder\", alternativeName: \"optionsCaption\", serializationProperty: \"locPlaceholder\" },\n    { name: \"allowClear:boolean\", alternativeName: \"showOptionsCaption\", default: true },\n    { name: \"choicesMin:number\", default: 0 },\n    { name: \"choicesMax:number\", default: 0 },\n    { name: \"choicesStep:number\", default: 1, minValue: 1 },\n    { name: \"autocomplete\", alternativeName: \"autoComplete\", choices: settings.questions.dataList, },\n    { name: \"textWrapEnabled:boolean\", default: true },\n    { name: \"renderAs\", default: \"default\", visible: false },\n    { name: \"searchEnabled:boolean\", default: true, visible: false },\n    {\n      name: \"allowCustomChoices:boolean\", default: false,\n      visibleIf: (obj: any): boolean => !obj.choicesFromQuestion, dependsOn: \"choicesFromQuestion\"\n    },\n    { name: \"searchMode\", default: \"contains\", choices: [\"contains\", \"startsWith\"], },\n    { name: \"choicesLazyLoadEnabled:boolean\", default: false, visible: false },\n    { name: \"choicesLazyLoadPageSize:number\", default: 25, visible: false },\n    { name: \"inputFieldComponent\", visible: false },\n    { name: \"itemComponent\", visible: false, default: \"\" }\n  ],\n  function () {\n    return new QuestionDropdownModel(\"\");\n  },\n  \"selectbase\"\n);\nQuestionFactory.Instance.registerQuestion(\"dropdown\", (name) => {\n  var q = new QuestionDropdownModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n", "import { HashTable, Helpers } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { QuestionMatrixBaseModel } from \"./martixBase\";\nimport { JsonObject, Serializer } from \"./jsonobject\";\nimport { Base } from \"./base\";\nimport { SurveyError } from \"./survey-error\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { RequiredInAllRowsError, EachRowUniqueError } from \"./error\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString, ILocalizableOwner } from \"./localizablestring\";\nimport { QuestionDropdownModel } from \"./question_dropdown\";\nimport { IConditionObject, IQuestionPlainData } from \"./question\";\nimport { settings } from \"./settings\";\nimport { SurveyModel } from \"./survey\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IPlainDataOptions } from \"./base-interfaces\";\nimport { ConditionRunner } from \"./conditions\";\nimport { Question } from \"./question\";\nimport { ISurveyData, ISurvey, ITextProcessor, IQuestion } from \"./base-interfaces\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, ValueGetterContextCore, VariableGetterContext } from \"./conditionProcessValue\";\n\nexport interface IMatrixData {\n  onMatrixRowChanged(row: MatrixRowModel): void;\n  getCorrectedRowValue(value: any): any;\n  getDisplayRowValue(value: any): string;\n  cellClick(row: MatrixRowModel, column: ItemValue): void;\n  isCellChecked(row: MatrixRowModel, column: ItemValue): boolean;\n  cssClasses: any;\n  isDisabledStyle: boolean;\n  isInputReadOnly: boolean;\n  isDisabledAttr: boolean;\n  isReadOnlyAttr: boolean;\n  hasErrorInRow(row: MatrixRowModel): boolean;\n}\nclass MatrixRowValueGetterContext implements IValueGetterContext {\n  constructor(private row: MatrixRowModel) {}\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length !== 0) return undefined;\n    return { isFound: true, value: this.row.value, context: this };\n  }\n  public getTextValue(name: string, value: any, isDisplayValue: boolean): string {\n    if (!isDisplayValue) return value;\n    return this.row.getDisplayValue(value);\n  }\n}\nexport class MatrixColumn extends ItemValue {\n  protected getBaseType(): string { return \"matrixcolumn\"; }\n  public get isExclusive(): boolean { return this.getPropertyValue(\"isExclusive\", false); }\n  public set isExclusive(val: boolean) { this.setPropertyValue(\"isExclusive\", val); }\n}\nexport class MatrixRowModel extends Base {\n  private data: IMatrixData;\n\n  constructor(\n    public item: ItemValue,\n    public fullName: string,\n    data: IMatrixData,\n    value: any\n  ) {\n    super();\n    this.data = data;\n    this.setValueDirectly(value);\n    this.registerPropertyChangedHandlers([\"value\"], () => {\n      this.data.onMatrixRowChanged(this);\n    });\n    if (this.data.hasErrorInRow(this)) {\n      this.hasError = true;\n    }\n  }\n  public cellClick(column: ItemValue): void {\n    this.data.cellClick(this, column);\n  }\n  public isChecked(column: ItemValue): boolean {\n    return this.data.isCellChecked(this, column);\n  }\n  public get name(): string {\n    return this.item.value;\n  }\n  public get text(): string {\n    return this.item.text;\n  }\n  public get locText(): LocalizableString {\n    return this.item.locText;\n  }\n  public get isVisible(): boolean { return this.item.isVisible; }\n  public get value(): any {\n    return this.getPropertyValue(\"value\");\n  }\n  public set value(val: any) {\n    if (!this.isReadOnly) {\n      this.setValueDirectly(this.data.getCorrectedRowValue(val));\n    }\n  }\n  public setValueDirectly(val: any): void {\n    this.setPropertyValue(\"value\", val);\n  }\n  public getDisplayValue(val: any): string {\n    return this.data.getDisplayRowValue(val);\n  }\n  public get isReadOnly(): boolean { return !this.item.enabled || this.data.isInputReadOnly; }\n  public get isReadOnlyAttr(): boolean { return this.data.isReadOnlyAttr; }\n  public get isDisabledAttr(): boolean { return !this.item.enabled || this.data.isDisabledAttr; }\n  public get rowTextClasses(): string {\n    return new CssClassBuilder().append(this.data.cssClasses.rowTextCell).toString();\n  }\n  public get hasError(): boolean {\n    return this.getPropertyValue(\"hasError\", false);\n  }\n  public set hasError(val: boolean) {\n    this.setPropertyValue(\"hasError\", val);\n  }\n  public get rowClasses(): string {\n    const cssClasses = (<any>this.data).cssClasses;\n    return new CssClassBuilder().append(cssClasses.row)\n      .append(cssClasses.rowError, this.hasError)\n      .append(cssClasses.rowReadOnly, this.isReadOnly)\n      .append(cssClasses.rowDisabled, this.data.isDisabledStyle)\n      .toString();\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixRowValueGetterContext(this);\n  }\n}\n\nexport interface IMatrixCellsOwner extends ILocalizableOwner {\n  getRows(): Array<any>;\n  getColumns(): Array<any>;\n}\n\nexport class MatrixCells extends Base {\n  private values: { [index: string]: any } = {};\n  private locs: { [index: string]: any } = {};\n  public constructor(public cellsOwner: IMatrixCellsOwner) {\n    super();\n  }\n  public getType(): string { return \"cells\"; }\n  public get isEmpty(): boolean {\n    return Object.keys(this.values).length == 0;\n  }\n  public onValuesChanged: () => void;\n  private locNotification: boolean;\n  private valuesChanged(): void {\n    if (!this.locNotification && !!this.onValuesChanged) {\n      this.onValuesChanged();\n    }\n  }\n  public getDefaultCellLocText(column: any): LocalizableString {\n    return this.getCellLocCore(this.defaultRowValue, column);\n  }\n  public getCellDisplayLocText(row: any, column: any): LocalizableString {\n    return this.getCellLocCore(row, column);\n  }\n  private getCellLocCore(row: any, col: any): LocalizableString {\n    row = this.getCellRowColumnValue(row, this.rows);\n    col = this.getCellRowColumnValue(col, this.columns);\n    if (Helpers.isValueEmpty(row) || Helpers.isValueEmpty(col)) return null;\n    if (!this.locs[row]) {\n      this.locs[row] = {};\n    }\n    let res = <LocalizableString>this.locs[row][col];\n    if (!res) {\n      res = this.createString();\n      res.setJson(this.getCellLocData(row, col));\n      res.onGetTextCallback = (str: string): string => {\n        if (!str) {\n          const column = ItemValue.getItemByValue(this.columns, col);\n          if (column) {\n            return column.locText.getJson() || column.value;\n          }\n        }\n        return str;\n      };\n      res.onStrChanged = (oldValue: any, newValue: any): void => {\n        this.updateValues(row, col, newValue);\n      };\n      this.locs[row][col] = res;\n    }\n    return res;\n  }\n  private get defaultRowValue() { return settings.matrix.defaultRowName; }\n  private getCellLocData(row: any, col: any): any {\n    let data = this.getCellLocDataFromValue(row, col);\n    if (data) return data;\n    return this.getCellLocDataFromValue(this.defaultRowValue, col);\n  }\n  private getCellLocDataFromValue(row: any, column: any): any {\n    if (!this.values[row]) return null;\n    if (!this.values[row][column]) return null;\n    return this.values[row][column];\n  }\n  public getCellText(row: any, column: any): string {\n    var loc = this.getCellLocCore(row, column);\n    return loc ? loc.calculatedText : null;\n  }\n  public setCellText(row: any, column: any, val: string): void {\n    const loc = this.getCellLocCore(row, column);\n    if (loc) {\n      loc.text = val;\n    }\n  }\n  private updateValues(row: any, column: any, val: any): void {\n    if (val) {\n      if (!this.values[row])this.values[row] = {};\n      this.values[row][column] = val;\n      this.valuesChanged();\n    } else {\n      if (this.values[row] && this.values[row][column]) {\n        delete this.values[row][column];\n        if (Object.keys(this.values[row]).length == 0) {\n          delete this.values[row];\n        }\n        this.valuesChanged();\n      }\n    }\n  }\n  public getDefaultCellText(column: any): string {\n    var loc = this.getCellLocCore(this.defaultRowValue, column);\n    return loc ? loc.calculatedText : null;\n  }\n  public setDefaultCellText(column: any, val: string): void {\n    this.setCellText(this.defaultRowValue, column, val);\n  }\n  public getCellDisplayText(row: any, column: any): string {\n    var loc = this.getCellDisplayLocText(row, column);\n    return loc ? loc.calculatedText : null;\n  }\n  public get rows(): Array<any> {\n    return this.cellsOwner ? this.cellsOwner.getRows() : [];\n  }\n  public get columns(): Array<any> {\n    return this.cellsOwner ? this.cellsOwner.getColumns() : [];\n  }\n  private getCellRowColumnValue(val: any, values: Array<any>): any {\n    if (val === null || val === undefined) return null;\n    if (typeof val == \"number\") {\n      if (val < 0 || val >= values.length) return null;\n      val = values[val].value;\n    }\n    if (val.value) return val.value;\n    return val;\n  }\n  public getJson(): any {\n    if (this.isEmpty) return null;\n    const defaultRow = this.values[this.defaultRowValue];\n    const res: { [index: string]: any } = {};\n    for (let row in this.values) {\n      const resRow: { [index: string]: any } = {};\n      const rowValues = this.values[row];\n      for (let col in rowValues) {\n        if (row === this.defaultRowValue || !defaultRow || defaultRow[col] !== rowValues[col]) {\n          const loc = this.getCellLocCore(row, col);\n          resRow[col] = loc ? loc.getJson() : rowValues[col];\n        }\n      }\n      res[row] = resRow;\n    }\n    return res;\n  }\n  public setJson(value: any, isLoading?: boolean): void {\n    this.values = {};\n    if (!!value) {\n      for (var row in value) {\n        if (row == \"pos\") continue;\n        var rowValues = value[row];\n        this.values[row] = {};\n        for (var col in rowValues) {\n          if (col == \"pos\") continue;\n          this.values[row][col] = rowValues[col];\n        }\n      }\n    }\n    this.locNotification = true;\n    this.runFuncOnLocs((row: any, col: any, loc: LocalizableString) => loc.setJson(this.getCellLocData(row, col)));\n    this.locNotification = false;\n    this.valuesChanged();\n  }\n  public locStrsChanged(): void {\n    this.runFuncOnLocs((row: any, col: any, loc: LocalizableString) => loc.strChanged());\n  }\n  private runFuncOnLocs(func: (row: any, col: any, loc: LocalizableString) => void): void {\n    for (let row in this.locs) {\n      const rowValues = this.locs[row];\n      for (let col in rowValues) {\n        func(row, col, rowValues[col]);\n      }\n    }\n  }\n  protected createString(): LocalizableString {\n    return new LocalizableString(this.cellsOwner, true);\n  }\n}\n\nexport class MatrixValueGetterContext extends ValueGetterContextCore {\n  constructor (protected question: QuestionMatrixModel) {\n    super();\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length > 0) {\n      const res = super.getValue(path, isRoot, index, createObjects);\n      if (res && res.isFound) return res;\n    }\n    return new VariableGetterContext(this.question.value).getValue(path, isRoot, index, createObjects);\n  }\n  getRootObj(): IObjectValueContext { return <any>this.question.data; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const rows = this.question.getMatrixRows();\n    name = name.toLocaleLowerCase();\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      const itemName = row.name?.toString() || \"\";\n      if (itemName.toLocaleLowerCase() === name) {\n        res.isFound = true;\n        res.context = row.getValueGetterContext();\n        return;\n      }\n    }\n  }\n}\n\n/**\n  * A class that describes the Single-Select Matrix question type.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n  */\nexport class QuestionMatrixModel\n  extends QuestionMatrixBaseModel<MatrixRowModel, MatrixColumn>\n  implements IMatrixData, IMatrixCellsOwner {\n  private isRowChanging = false;\n  private cellsValue: MatrixCells;\n\n  constructor(name: string) {\n    super(name);\n    this.cellsValue = new MatrixCells(this);\n    this.cellsValue.onValuesChanged = () => {\n      this.updateHasCellText();\n      this.propertyValueChanged(\"cells\", this.cells, this.cells);\n    };\n    this.registerPropertyChangedHandlers([\"columns\"], () => {\n      this.onColumnsChanged();\n    });\n    this.registerPropertyChangedHandlers([\"rows\"], () => {\n      this.runCondition(this.getDataFilteredProperties());\n      this.onRowsChanged();\n    });\n    this.registerPropertyChangedHandlers([\"hideIfRowsEmpty\"], () => {\n      this.updateVisibilityBasedOnRows();\n    });\n    this.registerPropertyChangedHandlers([\"cellType\"], () => {\n      this.value = this.convertToCorrectValue(this.value);\n    });\n  }\n  public getType(): string {\n    return \"matrix\";\n  }\n  /**\n   * Specifies the type of matrix cells.\n   *\n   * Possible values:\n   *\n   * - `\"radio\"` (default)\n   * - `\"checkbox\"`\n   *\n   * [Radio-Button Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   *\n   * [Checkbox Matrix Demo](https://surveyjs.io/form-library/examples/checkbox-matrix-question/ (linkStyle))\n   */\n  public get cellType(): string {\n    return this.getPropertyValue(\"cellType\");\n  }\n  public set cellType(val: string) {\n    if (val !== \"checkbox\") {\n      val = \"radio\";\n    }\n    this.setPropertyValue(\"cellType\", val);\n  }\n  public get isMultiSelect(): boolean {\n    return this.cellType === \"checkbox\";\n  }\n  /**\n   * The name of a component used to render cells.\n   */\n  public get cellComponent(): string {\n    return this.getPropertyValue(\"cellComponent\");\n  }\n  public set itemComponent(value: string) {\n    this.setPropertyValue(\"cellComponent\", value);\n  }\n  public get hasSingleInput(): boolean {\n    return false;\n  }\n  /**\n   * Specifies whether each row requires an answer. If a respondent skips a row, the question displays a validation error.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   * @see isRequired\n   * @see eachRowUnique\n   * @see validators\n   */\n  public get eachRowRequired(): boolean {\n    return this.getPropertyValue(\"eachRowRequired\");\n  }\n  public set eachRowRequired(val: boolean) {\n    this.setPropertyValue(\"eachRowRequired\", val);\n  }\n  /**\n   * @deprecated Use the [`eachRowRequired`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model#eachRowRequired) property instead.\n   */\n  public get isAllRowRequired(): boolean {\n    return this.eachRowRequired;\n  }\n  public set isAllRowRequired(val: boolean) {\n    this.eachRowRequired = val;\n  }\n  /**\n   * Specifies whether answers in all rows should be unique. If any answers duplicate, the question displays a validation error.\n   * @see eachRowRequired\n   * @see validators\n   */\n  public get eachRowUnique(): boolean {\n    return this.getPropertyValue(\"eachRowUnique\");\n  }\n  public set eachRowUnique(val: boolean) {\n    this.setPropertyValue(\"eachRowUnique\", val);\n  }\n  public get hasRows(): boolean {\n    return this.rows.length > 0;\n  }\n  /**\n   * Specifies a sort order for matrix rows.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` (default) - Preserves the original order of the `rows` array.\n   * - `\"random\"` - Arranges matrix rows in random order each time the question is displayed.\n   * @see rows\n   */\n  public get rowOrder(): string {\n    return this.getPropertyValue(\"rowOrder\");\n  }\n  public set rowOrder(val: string) {\n    val = val.toLowerCase();\n    if (val == this.rowOrder) return;\n    this.setPropertyValue(\"rowOrder\", val);\n    this.onRowsChanged();\n  }\n  /**\n   * @deprecated Use the [`rowOrder`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model#rowOrder) property instead.\n   */\n  public get rowsOrder(): string {\n    return this.rowOrder;\n  }\n  public set rowsOrder(val: string) {\n    this.rowOrder = val;\n  }\n  /**\n   * Specifies whether to hide the question when the matrix has no visible rows.\n   * @see rowsVisibleIf\n   */\n  public get hideIfRowsEmpty(): boolean {\n    return this.getPropertyValue(\"hideIfRowsEmpty\");\n  }\n  public set hideIfRowsEmpty(val: boolean) {\n    this.setPropertyValue(\"hideIfRowsEmpty\", val);\n  }\n  getRows(): Array<any> {\n    return this.rows;\n  }\n  getColumns(): Array<any> {\n    return this.visibleColumns;\n  }\n  public addColumn(value: any, text?: string): MatrixColumn {\n    var col = new MatrixColumn(value, text);\n    this.columns.push(col);\n    return col;\n  }\n  public get checkType(): string { return this.isMultiSelect ? \"checkbox\" : \"radio\"; }\n  private formatCss(val: string) : string {\n    return (val || \"\").replace(\"{type}\", this.checkType);\n  }\n  public getItemClass(row: any, column: any): string {\n    const isChecked = row.isChecked(column);\n    const isDisabled = this.isReadOnly;\n    const allowHover = !isChecked && !isDisabled;\n    const hasCellText = this.hasCellText;\n    const css = this.cssClasses;\n    return new CssClassBuilder()\n      .append(css.cell, hasCellText)\n      .append(hasCellText ? css.cellText : this.formatCss(css.label))\n      .append(css.itemOnError, !hasCellText && (this.eachRowRequired || this.eachRowUnique ? row.hasError : this.hasCssError()))\n      .append(hasCellText ? css.cellTextSelected : this.formatCss(css.itemChecked), isChecked)\n      .append(hasCellText ? css.cellTextDisabled : this.formatCss(css.itemDisabled), this.isDisabledStyle)\n      .append(hasCellText ? css.cellTextReadOnly : this.formatCss(css.itemReadOnly), this.isReadOnlyStyle)\n      .append(hasCellText ? css.cellTextPreview : this.formatCss(css.itemPreview), this.isPreviewStyle)\n      .append(this.formatCss(css.itemHover), allowHover && !hasCellText)\n      .toString();\n  }\n  public get itemSvgIcon(): string {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n  public getItemSvgIcon(row: any, column: any): string {\n    if (this.isMultiSelect && row.isChecked(column)) return this.cssClasses.itemPreviewSvgIconId;\n    return this.itemSvgIcon;\n  }\n  public get cssItemValue(): string {\n    return this.formatCss(this.cssClasses.itemValue);\n  }\n  public get cssMaterialDecorator(): string {\n    return this.formatCss(this.cssClasses.materialDecorator);\n  }\n  public get cssItemDecorator(): string {\n    return this.formatCss(this.cssClasses.itemDecorator);\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.cells.locStrsChanged();\n  }\n  protected getQuizQuestionCount() {\n    var res = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (!this.isValueEmpty(this.correctAnswer[this.rows[i].value])) res++;\n    }\n    return res;\n  }\n  protected convertToCorrectValue(val: any) {\n    if (val === undefined || val === null || typeof val !== \"object\") return val;\n    const keys = Object.keys(val);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const obj = val[key];\n      if (Array.isArray(obj) && !this.isMultiSelect) {\n        if (obj.length > 0) {\n          val[key] = obj[0];\n        } else {\n          delete val[key];\n        }\n      }\n      if (!Array.isArray(obj) && this.isMultiSelect) {\n        val[key] = [obj];\n      }\n    }\n    return val;\n  }\n  protected getCorrectAnswerCount(): number {\n    var res = 0;\n    var value = this.value;\n    for (var i = 0; i < this.rows.length; i++) {\n      var row = this.rows[i].value;\n      if (\n        !this.isValueEmpty(value[row]) &&\n        this.isTwoValueEquals(this.correctAnswer[row], value[row])\n      )\n        res++;\n    }\n    return res;\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    ItemValue.runEnabledConditionsForItems(this.rows, undefined, properties);\n    super.runConditionCore(properties);\n  }\n  protected createRowsVisibleIfRunner(): ConditionRunner {\n    const expression = this.getExpressionFromSurvey(\"rowsVisibleIf\");\n    return !!expression ? new ConditionRunner(expression) : null;\n  }\n  protected onRowsChanged(): void {\n    this.clearGeneratedRows();\n    super.onRowsChanged();\n  }\n  public getMatrixRows(): Array<MatrixRowModel> {\n    if (!!this.generatedVisibleRows) return this.generatedVisibleRows;\n    const result = new Array<MatrixRowModel>();\n    let val = this.value;\n    if (!val) val = {};\n    const rows = this.rows;\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      if (this.isValueEmpty(row.value)) continue;\n      const rowId = this.id + \"_\" + row.value.toString().replace(/\\s/g, \"_\");\n      result.push(this.createMatrixRow(row, rowId, val[row.value]));\n    }\n    this.generatedVisibleRows = result;\n    return result;\n  }\n  protected getVisibleRows(): Array<MatrixRowModel> {\n    const rows = [];\n    this.getMatrixRows().forEach(row => {\n      if (row.isVisible) {\n        rows.push(row);\n      }\n    });\n    return rows;\n  }\n  private nestedQuestionsValue: Array<Question>;\n  private getRowByName(name: string): MatrixRowModel {\n    const rows = this.visibleRows;\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].name === name) return rows[i];\n    }\n    return null;\n  }\n  protected getSingleInputQuestionsCore(question: Question, checkDynamic: boolean): Array<Question> {\n    if (!!this.nestedQuestionsValue) return this.nestedQuestionsValue;\n    const res: Array<Question> = [];\n    const qType = this.isMultiSelect ? \"checkbox\" : \"radiogroup\";\n    this.visibleRows.forEach(row => {\n      const question = <Question>Serializer.createClass(qType);\n      question.name = row.name;\n      question.locTitle.sharedData = row.locText;\n      question.choices = this.visibleColumns;\n      question.value = row.value;\n      question.isRequired = this.isAllRowRequired;\n      question.setSurveyImpl(this);\n      question.setParentQuestion(this);\n      res.push(question);\n    });\n    this.nestedQuestionsValue = res;\n    return res;\n  }\n  public resetSingleInput(): void {\n    super.resetSingleInput();\n    if (this.nestedQuestionsValue) {\n      this.nestedQuestionsValue.forEach(q => q.dispose());\n      this.nestedQuestionsValue = null;\n    }\n  }\n  //#region For simple radiogroup questions setSurveyImpl\n  getSurveyData(): ISurveyData { return this; }\n  getTextProcessor(): ITextProcessor { return this.surveyImpl?.getTextProcessor(); }\n  getValue(name: string): any {\n    const row = this.getRowByName(name);\n    return !!row ? row.value : undefined;\n  }\n  setValue(name: string, newValue: any, locNotification: any, allowNotifyValueChanged?: boolean, questionName?: string): any {\n    this.getRowByName(name).value = newValue;\n  }\n  getVariable(name: string): any { return this.data?.getVariable(name); }\n  setVariable(name: string, newValue: any): void { this.data?.setVariable(name, newValue); }\n  getComment(name: string): string { return this.data?.getComment(name); }\n  setComment(name: string, newValue: string, locNotification: any): any { this.data?.setComment(name, newValue, locNotification); }\n  getAllValues(): any { return this.data?.getAllValues(); }\n  getFilteredProperties(): any { return this.data?.getFilteredProperties(); }\n  findQuestionByName(name: string): IQuestion { return this.data?.findQuestionByName(name); }\n  getEditingSurveyElement(): Base { return this.data?.getEditingSurveyElement(); }\n  //#endregion\n  protected sortVisibleRows(array: Array<MatrixRowModel>): Array<MatrixRowModel> {\n    if (!!this.survey && this.survey.isDesignMode)\n      return array;\n    var order = this.rowOrder.toLowerCase();\n    if (order === \"random\")\n      return Helpers.randomizeArray<MatrixRowModel>(array);\n    return array;\n  }\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n    this.rows = this.sortVisibleRows(this.rows);\n    this.onRowsChanged();\n    this.onColumnsChanged();\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return Helpers.isValueObject(val, true);\n  }\n  protected processRowsOnSet(newRows: Array<any>) {\n    return this.sortVisibleRows(newRows);\n  }\n  public get visibleRows(): Array<MatrixRowModel> {\n    return this.getVisibleRows();\n  }\n  /**\n   * An array of matrix cells. Use this array to get or set cell values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrix-rubric/ (linkStyle))\n   */\n  public get cells(): MatrixCells {\n    return this.cellsValue;\n  }\n  public set cells(value: MatrixCells) {\n    this.cells.setJson(value && value.getJson ? value.getJson() : null);\n  }\n  public get hasCellText(): boolean {\n    return this.getPropertyValue(\"hasCellText\", false);\n  }\n  protected updateHasCellText(): void {\n    this.setPropertyValue(\"hasCellText\", !this.cells.isEmpty);\n  }\n  public setCellText(row: any, column: any, val: string) {\n    this.cells.setCellText(row, column, val);\n  }\n  public getCellText(row: any, column: any): string {\n    return this.cells.getCellText(row, column);\n  }\n  public setDefaultCellText(column: any, val: string) {\n    this.cells.setDefaultCellText(column, val);\n  }\n  public getDefaultCellText(column: any): string {\n    return this.cells.getDefaultCellText(column);\n  }\n  public getCellDisplayText(row: any, column: any): string {\n    return this.cells.getCellDisplayText(row, column);\n  }\n  private emptyLocalizableString = new LocalizableString(this);\n  public getCellDisplayLocText(row: any, column: any): LocalizableString {\n    var loc = this.cells.getCellDisplayLocText(row, column);\n    return loc ? loc : this.emptyLocalizableString;\n  }\n  supportAutoAdvance(): boolean {\n    return this.isMouseDown === true && this.hasValuesInAllRows();\n  }\n  private errorsInRow: HashTable<boolean>;\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!isOnValueChanged || this.hasCssError()) {\n      const rowsErrors = { noValue: false, isNotUnique: false };\n      this.checkErrorsAllRows(fireCallback, rowsErrors);\n      if (rowsErrors.noValue) {\n        errors.push(new RequiredInAllRowsError(null, this));\n      }\n      if (rowsErrors.isNotUnique) {\n        errors.push(new EachRowUniqueError(null, this));\n      }\n    }\n  }\n  private hasValuesInAllRows(): boolean {\n    const rowsErrors = { noValue: false, isNotUnique: false };\n    this.checkErrorsAllRows(false, rowsErrors, true);\n    return !rowsErrors.noValue;\n  }\n  private checkErrorsAllRows(modifyErrors: boolean, res: { noValue: boolean, isNotUnique: boolean }, allRowsRequired?: boolean): void {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (!rows) return;\n    const rowsRequired = this.eachRowRequired || allRowsRequired;\n    const rowsUnique = this.eachRowUnique;\n    res.noValue = false;\n    res.isNotUnique = false;\n    if (modifyErrors) {\n      this.errorsInRow = undefined;\n    }\n    if (!rowsRequired && !rowsUnique) return;\n    const hash: HashTable<any> = {};\n    for (var i = 0; i < rows.length; i++) {\n      const val = rows[i].value;\n      let isEmpty = this.isValueEmpty(val);\n      const isNotUnique = rowsUnique && (!isEmpty && hash[val] === true);\n      isEmpty = isEmpty && rowsRequired;\n      if (modifyErrors && (isEmpty || isNotUnique)) {\n        this.addErrorIntoRow(rows[i]);\n      }\n      if (!isEmpty) {\n        hash[val] = true;\n      }\n      res.noValue = res.noValue || isEmpty;\n      res.isNotUnique = res.isNotUnique || isNotUnique;\n    }\n    if (modifyErrors) {\n      rows.forEach(row => {\n        row.hasError = this.hasErrorInRow(row);\n      });\n    }\n  }\n  private addErrorIntoRow(row: MatrixRowModel): void {\n    if (!this.errorsInRow)this.errorsInRow = {};\n    this.errorsInRow[row.name] = true;\n    row.hasError = true;\n  }\n  private refreshRowsErrors(): void {\n    if (!this.errorsInRow) return;\n    this.checkErrorsAllRows(true, { noValue: false, isNotUnique: false });\n  }\n  protected getIsAnswered(): boolean {\n    return super.getIsAnswered() && this.hasValuesInAllRows();\n  }\n  private createMatrixRow(\n    item: ItemValue,\n    fullName: string,\n    value: any\n  ): MatrixRowModel {\n    var row = new MatrixRowModel(item, fullName, this, value);\n    this.onMatrixRowCreated(row);\n    return row;\n  }\n  protected onMatrixRowCreated(row: MatrixRowModel) { }\n  protected setQuestionValue(newValue: any, updateIsAnswered: boolean = true) {\n    super.setQuestionValue(newValue, this.isRowChanging || updateIsAnswered);\n    if (!this.generatedVisibleRows || this.generatedVisibleRows.length == 0)\n      return;\n    this.isRowChanging = true;\n    var val = this.value;\n    if (!val) val = {};\n    if (this.rows.length == 0) {\n      this.generatedVisibleRows[0].setValueDirectly(val);\n    } else {\n      for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n        var row = this.generatedVisibleRows[i];\n        var rowVal = val[row.name];\n        if (this.isValueEmpty(rowVal)) rowVal = null;\n        this.generatedVisibleRows[i].setValueDirectly(rowVal);\n      }\n    }\n    this.refreshRowsErrors();\n    this.updateIsAnswered();\n    this.isRowChanging = false;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MatrixValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    var res: { [index: string]: any } = {};\n    for (var key in value) {\n      var newKey = keysAsText\n        ? ItemValue.getTextOrHtmlByValue(this.rows, key)\n        : key;\n      if (!newKey) newKey = key;\n      var newValue = ItemValue.getTextOrHtmlByValue(this.columns, value[key]);\n      if (!newValue) newValue = value[key];\n      res[newKey] = newValue;\n    }\n    return res;\n  }\n  public getPlainData(\n    options: IPlainDataOptions = {\n      includeEmpty: true,\n    }\n  ): IQuestionPlainData {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      var values = this.createValueCopy();\n      questionPlainData.isNode = true;\n      questionPlainData.data = Object.keys(values || {}).map((rowName) => {\n        var row = this.rows.filter(\n          (r: MatrixRowModel) => r.value === rowName\n        )[0];\n        var rowDataItem = <any>{\n          name: rowName,\n          title: !!row ? row.text : \"row\",\n          value: values[rowName],\n          displayValue: ItemValue.getTextOrHtmlByValue(\n            this.visibleColumns,\n            values[rowName]\n          ),\n          getString: (val: any) =>\n            typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false,\n        };\n        var item = ItemValue.getItemByValue(\n          this.visibleColumns,\n          values[rowName]\n        );\n        if (!!item) {\n          (options.calculations || []).forEach((calculation) => {\n            rowDataItem[calculation.propertyName] =\n              item[calculation.propertyName];\n          });\n        }\n        return rowDataItem;\n      });\n    }\n    return questionPlainData;\n  }\n  public addConditionObjectsByContext(\n    objects: Array<IConditionObject>,\n    context: any\n  ) {\n    for (var i = 0; i < this.rows.length; i++) {\n      var row = this.rows[i];\n      if (!!row.value) {\n        objects.push({\n          name: this.getValueName() + \".\" + row.value,\n          text: this.processedTitle + \".\" + row.calculatedText,\n          question: this,\n        });\n      }\n    }\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    if (!path) return super.getConditionJson(operator);\n    var question = new QuestionDropdownModel(path);\n    question.choices = this.columns;\n    var json = new JsonObject().toJsonObject(question);\n    json[\"type\"] = question.getType();\n    return json;\n  }\n  public clearIncorrectValues(): void {\n    this.clearInvisibleValuesInRowsAndColumns(true, true, true);\n    super.clearIncorrectValues();\n  }\n  protected clearValueIfInvisibleCore(reason: string): void {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearInvisibleValuesInRowsAndColumns(true, true, false);\n  }\n  protected clearInvisibleColumnValues(): void {\n    this.clearInvisibleValuesInRowsAndColumns(false, true, false);\n  }\n  protected clearInvisibleValuesInRows(): void {\n    this.clearInvisibleValuesInRowsAndColumns(true, false, false);\n  }\n  protected clearInvisibleValuesInRowsAndColumns(inRows: boolean, inColumns: boolean, inCorrectRows: boolean): void {\n    if (this.isEmpty()) return;\n    let updatedData = this.getUnbindValue(this.value);\n    const newData: any = {};\n    const rows = this.rows;\n    for (let i = 0; i < rows.length; i++) {\n      const key = rows[i].value;\n      if (!!updatedData[key]) {\n        if (inRows && !rows[i].isVisible) {\n          delete updatedData[key];\n        } else {\n          if (inColumns) {\n            this.clearIncorrectValuesInRow(key, updatedData);\n          }\n          if (updatedData[key] != undefined) {\n            newData[key] = updatedData[key];\n          }\n        }\n      }\n    }\n    if (inCorrectRows) {\n      updatedData = newData;\n    }\n    if (this.isTwoValueEquals(updatedData, this.value)) return;\n    this.value = updatedData;\n  }\n  protected clearIncorrectValuesInRow(key: any, data: any): void {\n    const obj = data[key];\n    if (obj === undefined) {\n      delete data[key];\n      return;\n    }\n    if (this.isMultiSelect && Array.isArray(obj)) {\n      for (let i = obj.length - 1; i >= 0; i--) {\n        const col = this.getVisibleColumnByValue(obj[i]);\n        if (!col) {\n          obj.splice(i, 1);\n        }\n      }\n      if (obj.length === 0) {\n        delete data[key];\n      }\n    } else {\n      if (!this.getVisibleColumnByValue(obj)) {\n        delete data[key];\n      }\n    }\n  }\n  private getVisibleColumnByValue(val: any): ItemValue {\n    const col = ItemValue.getItemByValue(this.columns, val);\n    return !!col && col.isVisible ? col : null;\n  }\n  protected getFirstInputElementId(): string {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (rows.length > 0 && this.visibleColumns.length > 0) {\n      return this.inputId + \"_\" + rows[0].name + \"_\" + 0;\n    }\n    return super.getFirstInputElementId();\n  }\n  //IMatrixData\n  onMatrixRowChanged(row: MatrixRowModel) {\n    if (this.isRowChanging) return;\n    this.isRowChanging = true;\n    if (!this.hasRows) {\n      this.setNewValue(row.value);\n    } else {\n      const newValue = this.value || {};\n      if (this.isValueEmpty(row.value)) {\n        delete newValue[row.name];\n      } else {\n        newValue[row.name] = row.value;\n      }\n      this.setNewValue(newValue);\n    }\n    this.isRowChanging = false;\n  }\n  getCorrectedRowValue(value: any): any {\n    const col = this.getColumnByValue(value);\n    return col ? col.value : value;\n  }\n  getDisplayRowValue(value: any): string {\n    const col = this.getColumnByValue(value);\n    if (col) return col.text;\n    return value !== null && value !== undefined ? value.toString() : \"\";\n  }\n  cellClick(row: MatrixRowModel, column: MatrixColumn): void {\n    if (this.isReadOnly || this.isDisabledAttr) return;\n    row.value = this.getValueOnCellClick(row, column);\n  }\n  private getValueOnCellClick(row: MatrixRowModel, column: MatrixColumn): any {\n    if (this.isMultiSelect) {\n      if (column.isExclusive) {\n        if (this.isCellChecked(row, column)) return undefined;\n        return [column.value];\n      }\n      let val = Array.isArray(row.value) ? [].concat(row.value) : [];\n      if (this.isCellChecked(row, column)) {\n        const index = this.getRowValueIndex(row, column);\n        if (index > -1) {\n          val.splice(index, 1);\n        }\n        if (val.length === 0) {\n          val = undefined;\n        }\n      } else {\n        if (!Array.isArray(val)) {\n          val = [];\n        }\n        this.columns.forEach(col => {\n          if (col.isExclusive) {\n            const index = val.indexOf(col.value);\n            if (index > -1) val.splice(index, 1);\n          }\n        });\n        val.push(column.value);\n      }\n      return val;\n    }\n    return column.value;\n  }\n  isCellChecked(row: MatrixRowModel, column: ItemValue): boolean {\n    if (this.isMultiSelect) {\n      return this.getRowValueIndex(row, column) > -1;\n    }\n    return Helpers.isTwoValueEquals(row.value, column.value);\n  }\n  getRowValueIndex(row: MatrixRowModel, column: ItemValue): number {\n    const val = row.value;\n    if (!Array.isArray(val)) return -1;\n    for (let i = 0; i < val.length; i++) {\n      if (this.isTwoValueEquals(val[i], column.value)) return i;\n    }\n    return -1;\n  }\n\n  private getColumnByValue(value: any): ItemValue {\n    const cols = this.columns;\n    for (var i = 0; i < cols.length; i++) {\n      if (value === cols[i].value) return cols[i];\n    }\n    for (var i = 0; i < cols.length; i++) {\n      if (this.isTwoValueEquals(value, cols[i].value)) return cols[i];\n    }\n    return null;\n  }\n  hasErrorInRow(row: MatrixRowModel): boolean {\n    return !!this.errorsInRow && !!this.errorsInRow[row.name];\n  }\n  protected getSearchableItemValueKeys(keys: Array<string>) {\n    keys.push(\"columns\");\n    keys.push(\"rows\");\n  }\n\n  private get SurveyModel() {\n    return this.survey as SurveyModel;\n  }\n  public getColumnHeaderWrapperComponentName(cell: ItemValue) {\n    return this.SurveyModel.getElementWrapperComponentName(\n      { column: cell },\n      \"column-header\"\n    );\n  }\n  public getColumnHeaderWrapperComponentData(cell: ItemValue) {\n    return this.SurveyModel.getElementWrapperComponentData(\n      { column: cell },\n      \"column-header\"\n    );\n  }\n  public getRowHeaderWrapperComponentName(cell: ItemValue) {\n    return this.SurveyModel.getElementWrapperComponentName(\n      { row: cell },\n      \"row-header\"\n    );\n  }\n  public getRowHeaderWrapperComponentData(cell: ItemValue) {\n    return this.SurveyModel.getElementWrapperComponentData(\n      { row: cell },\n      \"row-header\"\n    );\n  }\n}\nSerializer.addClass(\"matrixcolumn\",\n  [{ name: \"isExclusive:boolean\", visibleIf: (obj) => obj.locOwner?.cellType === \"checkbox\", locationInTable: \"detail\" }],\n  (value: any) => new MatrixColumn(value), \"itemvalue\");\n\nSerializer.addClass(\n  \"matrix\",\n  [\n    \"rowTitleWidth\",\n    {\n      name: \"columns:matrixcolumn[]\", uniqueProperty: \"value\",\n      baseValue: function () {\n        return getLocaleString(\"matrix_column\");\n      },\n    },\n    {\n      name: \"rows:itemvalue[]\", uniqueProperty: \"value\",\n      baseValue: function () {\n        return getLocaleString(\"matrix_row\");\n      },\n    },\n    { name: \"cells:cells\", serializationProperty: \"cells\" },\n    {\n      name: \"rowOrder\", alternativeName: \"rowsOrder\",\n      default: \"initial\",\n      choices: [\"initial\", \"random\"],\n    },\n    { name: \"eachRowRequired:boolean\", alternativeName: \"isAllRowRequired\" },\n    { name: \"eachRowUnique:boolean\", category: \"validation\" },\n    \"hideIfRowsEmpty:boolean\",\n    { name: \"cellComponent\", visible: false, default: \"survey-matrix-cell\" },\n    { name: \"cellType\", default: \"radio\", choices: [\"radio\", \"checkbox\"] },\n  ],\n  function () {\n    return new QuestionMatrixModel(\"\");\n  },\n  \"matrixbase\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"matrix\", (name) => {\n  var q = new QuestionMatrixModel(name);\n  q.rows = QuestionFactory.DefaultRows;\n  q.columns = QuestionFactory.DefaultColums;\n  return q;\n});\n", "import { Question } from \"./question\";\nimport { property, Serializer } from \"./jsonobject\";\nimport { Helpers } from \"./helpers\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { Base } from \"./base\";\nimport { ISurveyImpl } from \"./base-interfaces\";\n\nexport class CharacterCounter extends Base {\n  @property() remainingCharacterCounter: string;\n  public updateRemainingCharacterCounter(newValue: string, maxLength: number): void {\n    this.remainingCharacterCounter = Helpers.getRemainingCharacterCounterText(newValue, maxLength);\n  }\n}\n\n/**\n * A base class for the [Single-Line Input](https://surveyjs.io/form-library/documentation/questiontextmodel) and [Long Text](https://surveyjs.io/form-library/documentation/questioncommentmodel) question types.\n */\nexport class QuestionTextBase extends Question {\n  constructor(name: string) {\n    super(name);\n  }\n  protected isTextValue(): boolean {\n    return true;\n  }\n  /**\n   * The maximum text length measured in characters. Assign 0 if the length should be unlimited.\n   *\n   * Default value: -1 (inherits the actual value from the `SurveyModel`'s [`maxTextLength`](https://surveyjs.io/form-library/documentation/surveymodel#maxTextLength) property).\n   *\n   * [Long Text Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   */\n  public get maxLength(): number {\n    return this.getPropertyValue(\"maxLength\");\n  }\n  public set maxLength(val: number) {\n    this.setPropertyValue(\"maxLength\", val);\n    this.updateRemainingCharacterCounter(this.value);\n  }\n  public getMaxLength(): any {\n    return Helpers.getMaxLength(this.maxLength, this.survey ? this.survey.maxTextLength : -1);\n  }\n  public characterCounter = new CharacterCounter();\n  public updateRemainingCharacterCounter(newValue: string): void {\n    this.characterCounter.updateRemainingCharacterCounter(newValue, this.getMaxLength());\n  }\n\n  /**\n   * A placeholder for the input field.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/text-entry-question/ (linkStyle))\n   */\n  @property({ localizable: true, onSet: (val, target) => target.resetRenderedPlaceholder() })\n  public placeholder: string;\n  public get placeHolder(): string { return this.placeholder; }\n  public set placeHolder(val: string) { this.placeholder = val; }\n  public get locPlaceHolder(): LocalizableString { return this.locPlaceholder; }\n\n  public getType(): string {\n    return \"textbase\";\n  }\n  isEmpty(): boolean {\n    return super.isEmpty() || this.value === \"\";\n  }\n  /**\n   * Specifies when to update the question value.\n   *\n   * Possible values:\n   *\n   * - `\"onBlur\"` - Updates the value after the input field loses focus.\n   * - `\"onTyping\"` - Updates the value on every key press.\n   * - `\"default\"` (default) - Inherits the value from the `SurveyModel`'s [`textUpdateMode`](https://surveyjs.io/form-library/documentation/surveymodel#textUpdateMode) property.\n   *\n   * > Do not use the `\"onTyping\"` mode if your survey contains many expressions. Expressions are re-evaluated each time a question value is changed. In `\"onTyping\"` mode, the question value changes frequently. This may cause performance degradation.\n   */\n  public get textUpdateMode(): string {\n    return this.getPropertyValue(\"textUpdateMode\");\n  }\n  public set textUpdateMode(val: string) {\n    this.setPropertyValue(\"textUpdateMode\", val);\n  }\n  protected getIsInputTextUpdate(): boolean {\n    if (this.textUpdateMode == \"default\") return super.getIsInputTextUpdate();\n    return this.textUpdateMode == \"onTyping\";\n  }\n  public get renderedPlaceholder(): string {\n    const func = (): string => {\n      return this.hasPlaceholder() ? this.placeHolder : undefined;\n    };\n    return this.getPropertyValue(\"renderedPlaceholder\", undefined, func);\n  }\n  protected onReadOnlyChanged(): void {\n    super.onReadOnlyChanged();\n    this.resetRenderedPlaceholder();\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    this.resetRenderedPlaceholder();\n  }\n  protected supportEmptyValidation(): boolean { return true; }\n  protected resetRenderedPlaceholder(): void {\n    this.resetPropertyValue(\"renderedPlaceholder\");\n  }\n  protected hasPlaceholder(): boolean {\n    return !this.isReadOnly;\n  }\n  protected setNewValue(newValue: any): void {\n    super.setNewValue(newValue);\n    this.updateRemainingCharacterCounter(newValue);\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered: boolean = true): void {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.updateRemainingCharacterCounter(newValue);\n  }\n  protected convertToCorrectValue(val: any): any {\n    if (Array.isArray(val)) return val.join(this.getValueSeparator());\n    return val;\n  }\n  protected getValueSeparator(): string { return \", \"; }\n  protected getControlCssClassBuilder(): CssClassBuilder {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.controlDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.controlPreview, this.isPreviewStyle);\n  }\n  public getControlClass(): string {\n    return this.getControlCssClassBuilder().toString();\n  }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  // EO a11y\n\n  public onKeyDownPreprocess: (event: any) => void;\n}\nSerializer.addClass(\n  \"textbase\", [],\n  function() {\n    return new QuestionTextBase(\"\");\n  },\n  \"question\"\n);\n", "import { InputMaskBase } from \"./mask_base\";\nimport { ITextInputParams } from \"./mask_utils\";\n\nexport class InputElementAdapter {\n  private prevUnmaskedValue: string = undefined;\n\n  private setInputValue(value: string) {\n    if (this.inputElement.maxLength >= 0 && this.inputElement.maxLength < value.length) {\n      value = value.slice(0, this.inputElement.maxLength);\n    }\n    this.inputElement.value = value;\n  }\n  constructor(private inputMaskInstance: InputMaskBase, private inputElement: HTMLInputElement, value?: any) {\n    let _value: any = value;\n    if (_value === null || _value === undefined) {\n      _value = \"\";\n    }\n    this.setInputValue(inputMaskInstance.saveMaskedValue ? _value : inputMaskInstance.getMaskedValue(_value));\n    this.prevUnmaskedValue = _value;\n\n    inputMaskInstance.onPropertyChanged.add(this.inputMaskInstancePropertyChangedHandler);\n    this.addInputEventListener();\n  }\n\n  inputMaskInstancePropertyChangedHandler = (sender: any, options: any) => {\n    if (options.name !== \"saveMaskedValue\") {\n      const maskedValue = this.inputMaskInstance.getMaskedValue(this.prevUnmaskedValue);\n      this.setInputValue(maskedValue);\n    }\n  };\n\n  clickHandler = (event: any) => {\n    if (this.inputElement.value == this.inputMaskInstance.getMaskedValue(\"\")) {\n      this.inputElement.setSelectionRange(0, 0);\n    }\n  };\n\n  beforeInputHandler = (event: any) => {\n    const args = this.createArgs(event);\n    const result = this.inputMaskInstance.processInput(args);\n    this.setInputValue(result.value);\n    this.inputElement.setSelectionRange(result.caretPosition, result.caretPosition);\n    if (!result.cancelPreventDefault) {\n      event.preventDefault();\n    }\n  };\n\n  changeHandler = (event: any) => {\n    const result = this.inputMaskInstance.processInput({ prevValue: \"\", insertedChars: event.target.value, selectionStart: 0, selectionEnd: 0 });\n    this.setInputValue(result.value);\n  };\n\n  public createArgs(event: any): ITextInputParams {\n    const args: ITextInputParams = {\n      insertedChars: event.data,\n      selectionStart: event.target.selectionStart,\n      selectionEnd: event.target.selectionEnd,\n      prevValue: event.target.value,\n      inputDirection: \"forward\"\n    };\n\n    if (event.inputType === \"deleteContentBackward\") {\n      args.inputDirection = \"backward\";\n\n      if (args.selectionStart === args.selectionEnd) {\n        args.selectionStart = Math.max(args.selectionStart - 1, 0);\n      }\n    }\n    if (event.inputType === \"deleteContentForward\" && args.selectionStart === args.selectionEnd) {\n      args.selectionEnd += 1;\n    }\n\n    return args;\n  }\n  public addInputEventListener(): void {\n    if (!!this.inputElement) {\n      this.inputElement.addEventListener(\"beforeinput\", this.beforeInputHandler);\n      this.inputElement.addEventListener(\"click\", this.clickHandler);\n      this.inputElement.addEventListener(\"focus\", this.clickHandler);\n      this.inputElement.addEventListener(\"change\", this.changeHandler);\n    }\n  }\n  public removeInputEventListener(): void {\n    if (!!this.inputElement) {\n      this.inputElement.removeEventListener(\"beforeinput\", this.beforeInputHandler);\n      this.inputElement.removeEventListener(\"click\", this.clickHandler);\n      this.inputElement.removeEventListener(\"focus\", this.clickHandler);\n      this.inputElement.removeEventListener(\"change\", this.changeHandler);\n    }\n  }\n  public dispose(): void {\n    this.removeInputEventListener();\n    this.inputElement = undefined as any;\n    this.inputMaskInstance.onPropertyChanged.remove(this.inputMaskInstancePropertyChangedHandler);\n  }\n}", "import { JsonMetadataClass, Serializer } from \"../jsonobject\";\n\nexport var numberDefinition = /[0-9]/;\n\nexport interface IMaskedInputResult {\n  value: string;\n  caretPosition: number;\n  cancelPreventDefault?: boolean;\n}\n\nexport interface ITextInputParams {\n  prevValue: string;\n  selectionStart: number;\n  selectionEnd: number;\n  insertedChars: string | null;\n  inputDirection?: \"forward\" | \"backward\";\n}\n\nexport interface IInputMask {\n  getMaskedValue(src: any): string;\n  getUnmaskedValue(src: string): any;\n  processInput(args: ITextInputParams): IMaskedInputResult;\n  getTextAlignment(): \"left\" | \"right\" | \"auto\";\n}\n\nexport function getAvailableMaskTypeChoices() {\n  const classes = Serializer.getChildrenClasses(\"masksettings\") || [];\n  const choices = classes.map((cl: JsonMetadataClass) => {\n    let value = cl.name;\n    if (cl.name.indexOf(\"mask\") !== -1) {\n      value = value.slice(0, value.indexOf(\"mask\"));\n    }\n    return value;\n  });\n  choices.unshift(\"none\");\n  return choices;\n}", "import { QuestionFactory } from \"./questionfactory\";\nimport { Serializer, property } from \"./jsonobject\";\nimport { LocalizableString, LocalizableStrings } from \"./localizablestring\";\nimport { Helpers, HashTable, createDate } from \"./helpers\";\nimport { EmailValidator } from \"./validator\";\nimport { SurveyError } from \"./survey-error\";\nimport { CustomError } from \"./error\";\nimport { settings } from \"./settings\";\nimport { QuestionTextBase } from \"./question_textbase\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { InputElementAdapter } from \"./mask/input_element_adapter\";\nimport { InputMaskBase } from \"./mask/mask_base\";\nimport { getAvailableMaskTypeChoices, IInputMask } from \"./mask/mask_utils\";\n\n/**\n * A class that describes the Single-Line Input question type, which is used to create textual, numeric, date-time, and color input fields.\n *\n * [Text Entry Demo](https://surveyjs.io/form-library/examples/text-entry-question/ (linkStyle))\n *\n * [Date-Time Entry Demo](https://surveyjs.io/form-library/examples/datetime-entry-question/ (linkStyle))\n *\n * [Numeric Entry Demo](https://surveyjs.io/form-library/examples/numeric-entry-question/ (linkStyle))\n *\n * [Color Input Demo](https://surveyjs.io/form-library/examples/color-input-question/ (linkStyle))\n */\nexport class QuestionTextModel extends QuestionTextBase {\n  private locDataListValue: LocalizableStrings;\n  private maskInputAdapter: InputElementAdapter;\n\n  private createMaskAdapter() {\n    if (!!this.input && !this.maskTypeIsEmpty) {\n      this.maskInputAdapter = new InputElementAdapter(this.maskInstance as InputMaskBase, this.input, this.value);\n    }\n  }\n  private deleteMaskAdapter() {\n    if (this.maskInputAdapter) {\n      this.maskInputAdapter.dispose();\n      this.maskInputAdapter = undefined;\n    }\n  }\n  private updateMaskAdapter() {\n    this.deleteMaskAdapter();\n    this.createMaskAdapter();\n  }\n  onSetMaskType(newValue: string) {\n    this.setNewMaskSettingsProperty();\n    this.updateMaskAdapter();\n  }\n\n  /**\n   * Specifies the type of a mask applied to the input.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default)\n   * - `\"numeric\"`\n   * - `\"currency\"`\n   * - `\"datetime\"`\n   * - `\"pattern\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see maskSettings\n   */\n  @property({\n    onSet: (newValue: string, target: QuestionTextModel) => { target.onSetMaskType(newValue); }\n  }) maskType: string;\n  /**\n   * Specifies text alignment within the input field.\n   *\n   * Possible values:\n   *\n   * - `\"left\"` - Aligns input text to the left side.\n   * - `\"right\"` - Aligns input text to the right side.\n   * - `\"auto\"` (default) - Applies right alignment if a [numeric or currency input mask](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType) is specified. Otherwise, applies left alignment.\n   */\n  @property() inputTextAlignment: \"left\" | \"right\" | \"auto\";\n\n  get maskTypeIsEmpty(): boolean {\n    switch(this.inputType) {\n      case \"tel\":\n      case \"text\": return this.maskType === \"none\";\n      default: return true;\n    }\n  }\n\n  /**\n   * An object with properties that configure the mask applied to the input.\n   *\n   * Available properties depend on the specified [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType) and belong to corresponding classes. Refer to the class APIs for a full list of properties:\n   *\n   * | `maskType` | Class |\n   * | ---------- | ----- |\n   * | `\"numeric\"` | [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/api-reference/inputmasknumeric) |\n   * | `\"currency\"` | [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskcurrency) |\n   * | `\"datetime\"` | [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskdatetime) |\n   * | `\"pattern\"` | [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern) |\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   */\n  public get maskSettings(): InputMaskBase {\n    return this.getPropertyValue(\"maskSettings\");\n  }\n  public set maskSettings(val: InputMaskBase) {\n    if (!val) return;\n    const oldValue = this.maskSettings;\n    if (oldValue) {\n      oldValue.dispose();\n    }\n    this.setNewMaskSettingsProperty();\n    this.maskSettings.fromJSON(val.toJSON());\n    this.updateMaskAdapter();\n  }\n  private setNewMaskSettingsProperty() {\n    this.setPropertyValue(\"maskSettings\", this.createMaskSettings());\n  }\n  protected createMaskSettings(): InputMaskBase {\n    let maskClassName = (!this.maskType || this.maskType === \"none\") ? \"masksettings\" : (this.maskType + \"mask\");\n    if (!Serializer.findClass(maskClassName)) {\n      maskClassName = \"masksettings\";\n    }\n    const inputMask = Serializer.createClass(maskClassName);\n    inputMask.onPropertyChanged.add((_, options) => {\n      this.onNestedPropertyChanged.fire(this, { name: \"maskSettings\", newValue: options.newValue, nestedName: options.name });\n      this.updateInputValue();\n    });\n    inputMask.owner = this;\n    return inputMask;\n  }\n\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"minErrorText\", this, true, \"minError\");\n    this.createLocalizableString(\"maxErrorText\", this, true, \"maxError\");\n    this.setNewMaskSettingsProperty();\n    this.locDataListValue = new LocalizableStrings(this);\n    this.locDataListValue.onValueChanged = (oldValue: any, newValue: any) => {\n      this.propertyValueChanged(\"dataList\", oldValue, newValue);\n    };\n    this.registerPropertyChangedHandlers(\n      [\"min\", \"max\", \"inputType\", \"minValueExpression\", \"maxValueExpression\"],\n      () => {\n        this.setRenderedMinMax();\n      }\n    );\n    this.registerPropertyChangedHandlers([\"inputType\", \"inputSize\"], () => {\n      this.resetInputSize();\n      this.resetRenderedPlaceholder();\n    });\n  }\n  protected isTextValue(): boolean {\n    return this.isDateInputType || [\"text\", \"number\", \"password\"].indexOf(this.inputType) > -1;\n  }\n  public getType(): string {\n    return \"text\";\n  }\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    this.setRenderedMinMax();\n  }\n  /**\n   * A value passed on to the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types) attribute of the underlying `<input>` element.\n   *\n   * Default value: `\"text\"`\n   *\n   * [Text Entry Demo](https://surveyjs.io/form-library/examples/text-entry-question/ (linkStyle))\n   *\n   * [Date-Time Entry Demo](https://surveyjs.io/form-library/examples/datetime-entry-question/ (linkStyle))\n   *\n   * [Numeric Entry Demo](https://surveyjs.io/form-library/examples/numeric-entry-question/ (linkStyle))\n   *\n   * [Color Input Demo](https://surveyjs.io/form-library/examples/color-input-question/ (linkStyle))\n   */\n  public get inputType(): string {\n    return this.getPropertyValue(\"inputType\");\n  }\n  public set inputType(val: string) {\n    val = val.toLowerCase();\n    if (val === \"datetime_local\" || val === \"datetime\") val = \"datetime-local\";\n    this.setPropertyValue(\"inputType\", val.toLowerCase());\n    if (!this.isLoadingFromJson) {\n      this.min = undefined;\n      this.max = undefined;\n      this.step = undefined;\n    }\n    this.updateMaskAdapter();\n  }\n  public getMaxLength(): any {\n    if (!this.isTextInput) return null;\n    return super.getMaxLength();\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    if (!!this.minValueExpression || !!this.maxValueExpression) {\n      this.setRenderedMinMax(properties);\n    }\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!this.maskTypeIsEmpty && !Helpers.isValueEmpty(value)) return this.maskInstance.getMaskedValue(value);\n    return super.getDisplayValueCore(keysAsText, value);\n  }\n  isLayoutTypeSupported(layoutType: string): boolean {\n    return true;\n  }\n  /**\n   * A value passed on to the [`size`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` element.\n   */\n  public get inputSize(): number {\n    return this.getPropertyValue(\"inputSize\");\n  }\n  public set inputSize(val: number) {\n    this.setPropertyValue(\"inputSize\", val);\n  }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputSize) property instead.\n   */\n  public get size(): number {\n    return this.inputSize;\n  }\n  public set size(val: number) {\n    this.inputSize = val;\n  }\n  public get isTextInput(): boolean {\n    return (\n      [\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"].indexOf(\n        this.inputType\n      ) > -1\n    );\n  }\n  public get renderedInputSize(): number {\n    return this.getPropertyValue(\"renderedInputSize\", undefined, () => {\n      const size = this.calInputSize();\n      return size > 0 ? size : undefined;\n    });\n  }\n  public get inputWidth(): string {\n    return this.getPropertyValue(\"inputWidth\", undefined, () => {\n      return this.calInputSize() > 0 ? \"auto\" : \"\";\n    });\n  }\n  private calInputSize(): number {\n    if (!this.isTextInput) return 0;\n    let size = this.inputSize > 0 ? this.inputSize : 0;\n    if (size < 1 && this.parent && !!(<any>this.parent)[\"inputSize\"]) {\n      size = (<any>this.parent)[\"inputSize\"];\n    }\n    return size;\n  }\n  public resetInputSize(): void {\n    this.resetPropertyValue(\"renderedInputSize\");\n    this.resetPropertyValue(\"inputWidth\");\n  }\n  /**\n   * A value passed on to the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) attribute of the underlying `<input>` element.\n   */\n  public get autocomplete(): string {\n    return this.getPropertyValue(\"autocomplete\");\n  }\n  public set autocomplete(val: string) {\n    this.setPropertyValue(\"autocomplete\", val);\n  }\n  /**\n   * A value passed on to the [`min`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min) attribute of the underlying `<input>` element.\n   * @see minValueExpression\n   */\n  public get min(): string {\n    return this.getPropertyValue(\"min\");\n  }\n  public set min(val: string) {\n    if (this.isValueExpression(val)) {\n      this.minValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"min\", val);\n  }\n  /**\n   * A value passed on to the [`max`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max) attribute of the underlying `<input>` element.\n   * @see maxValueExpression\n   */\n  public get max(): string {\n    return this.getPropertyValue(\"max\");\n  }\n  public set max(val: string) {\n    if (this.isValueExpression(val)) {\n      this.maxValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"max\", val);\n  }\n  /**\n   * The minimum value specified as an expression. For example, `\"minValueExpression\": \"today(-1)\"` sets the minimum value to yesterday.\n   * @see min\n   */\n  public get minValueExpression(): string {\n    return this.getPropertyValue(\"minValueExpression\", \"\");\n  }\n  public set minValueExpression(val: string) {\n    this.setPropertyValue(\"minValueExpression\", val);\n  }\n  /**\n   * The maximum value specified as an expression. For example, `\"maxValueExpression\": \"today(1)\"` sets the maximum value to tomorrow.\n   * @see max\n   */\n  public get maxValueExpression(): string {\n    return this.getPropertyValue(\"maxValueExpression\", \"\");\n  }\n  public set maxValueExpression(val: string) {\n    this.setPropertyValue(\"maxValueExpression\", val);\n  }\n  public get renderedMin(): any {\n    return this.getPropertyValue(\"renderedMin\");\n  }\n  public get renderedMax(): any {\n    return this.getPropertyValue(\"renderedMax\");\n  }\n  /**\n   * An error message to display when the question value is less than the minimum accepted value.\n   * @see min\n   * @see minValueExpression\n   */\n  public get minErrorText(): string {\n    return this.getLocalizableStringText(\"minErrorText\");\n  }\n  public set minErrorText(val: string) {\n    this.setLocalizableStringText(\"minErrorText\", val);\n  }\n  get locMinErrorText(): LocalizableString {\n    return this.getLocalizableString(\"minErrorText\");\n  }\n  /**\n   * An error message to display when the question value exceeds the maximum accepted value.\n   * @see max\n   * @see maxValueExpression\n   */\n  public get maxErrorText(): string {\n    return this.getLocalizableStringText(\"maxErrorText\");\n  }\n  public set maxErrorText(val: string) {\n    this.setLocalizableStringText(\"maxErrorText\", val);\n  }\n  get locMaxErrorText(): LocalizableString {\n    return this.getLocalizableString(\"maxErrorText\");\n  }\n\n  /**\n   * Returns `true` if the specified `inputType` supports the `min` and `max` properties.\n   * @see inputType\n   * @see min\n   * @see max\n   */\n  public get isMinMaxType(): boolean {\n    return isMinMaxType(this);\n  }\n\n  @property() _inputValue: string;\n  public get maskInstance(): IInputMask {\n    return this.maskSettings;\n  }\n  public get inputValue(): string {\n    if (!this._inputValue && !this.maskTypeIsEmpty) return this.maskInstance.getMaskedValue(\"\");\n    return this._inputValue;\n  }\n  public set inputValue(val: string) {\n    let value = val;\n    this._inputValue = val;\n    if (!this.maskTypeIsEmpty) {\n      value = this.maskInstance.getUnmaskedValue(val);\n      this._inputValue = this.maskInstance.getMaskedValue(value);\n      if (!!value && this.maskSettings.saveMaskedValue) {\n        value = this._inputValue;\n      }\n    }\n    this.value = value;\n  }\n  public getFilteredValue(): any {\n    return this.getExpressionValue(this.value);\n  }\n  //TODO remove this method in the future\n  getExpressionValue(val: any): any {\n    if (!this.maskTypeIsEmpty && this.maskSettings.saveMaskedValue)\n      return this.maskInstance.getUnmaskedValue(val);\n    return val;\n  }\n  protected convertToCorrectValue(val: any): any {\n    if (val !== undefined && val !== null && typeof val !== \"string\" && !this.maskTypeIsEmpty && this.maskSettings.saveMaskedValue) {\n      return this.maskInstance.getMaskedValue(val);\n    }\n    return super.convertToCorrectValue(val);\n  }\n\n  protected onChangeQuestionValue(newValue: any): void {\n    super.onChangeQuestionValue(newValue);\n    this.updateInputValue();\n  }\n\n  private updateInputValue() {\n    const _value = this.value;\n    if (this.maskTypeIsEmpty) {\n      this._inputValue = _value;\n    } else if (this.maskSettings.saveMaskedValue) {\n      this._inputValue = (_value !== undefined && _value !== null) ? _value : this.maskInstance.getMaskedValue(\"\");\n    } else {\n      this._inputValue = this.maskInstance.getMaskedValue(_value);\n    }\n  }\n  private hasToConvertToUTC(val: any): boolean {\n    return settings.storeUtcDates && this.isDateTimeLocaleType() && !!val;\n  }\n  private createDate(val?: number | string | Date): Date {\n    return createDate(\"question-text\", val);\n  }\n  protected valueForSurveyCore(val: any): any {\n    if (this.hasToConvertToUTC(val)) {\n      val = this.createDate(val).toISOString();\n    }\n    return super.valueForSurveyCore(val);\n  }\n  protected valueFromDataCore(val: any): any {\n    if (this.hasToConvertToUTC(val)) {\n      const d = this.createDate(val);\n      const locale_d = this.createDate(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n      let res = locale_d.toISOString();\n      val = res.substring(0, res.length - 2);\n    }\n    return super.valueFromDataCore(val);\n  }\n  private dateValidationMessage: string;\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    const isInputUpdate = this.getIsInputTextUpdate();\n    if (isOnValueChanged && isInputUpdate) return;\n    if (!this.isOnValueChanged) {\n      if (this.isValueLessMin) {\n        const minError = new CustomError(\n          this.getMinMaxErrorText(\n            this.minErrorText,\n            this.getCalculatedMinMax(this.renderedMin)\n          ),\n          this\n        );\n        minError.onUpdateErrorTextCallback = err => {\n          err.text = this.getMinMaxErrorText(\n            this.minErrorText,\n            this.getCalculatedMinMax(this.renderedMin)\n          );\n        };\n        errors.push(minError);\n      }\n      if (this.isValueGreaterMax) {\n        const maxError = new CustomError(\n          this.getMinMaxErrorText(\n            this.maxErrorText,\n            this.getCalculatedMinMax(this.renderedMax)\n          ),\n          this\n        );\n        maxError.onUpdateErrorTextCallback = err => {\n          err.text = this.getMinMaxErrorText(\n            this.maxErrorText,\n            this.getCalculatedMinMax(this.renderedMax)\n          );\n        };\n        errors.push(maxError);\n      }\n      if (this.isStepNumberIncorrect) {\n        errors.push(new CustomError(this.getStepErrorText(), this));\n      }\n      if (!!this.dateValidationMessage) {\n        errors.push(new CustomError(this.dateValidationMessage, this));\n      }\n    }\n    if (this.inputType === \"email\" && !this.validators.some((v) => v.getType() === \"emailvalidator\")) {\n      const valName = this.getValidatorTitle();\n      const emailValidator = new EmailValidator();\n      emailValidator.errorOwner = this;\n      const validateResult = emailValidator.validate(this.value, valName);\n\n      if (!!validateResult && !!validateResult.error) {\n        errors.push(validateResult.error);\n      }\n    }\n  }\n\n  protected canSetValueToSurvey(): boolean {\n    if (!this.isMinMaxType) return true;\n    const isValid = !this.isValueLessMin && !this.isValueGreaterMax;\n    if ((!isValid || this.errors.length > 0) && !!this.survey &&\n      (this.survey.isValidateOnValueChanging || this.survey.isValidateOnValueChanged)) {\n      this.validate();\n    }\n    return isValid;\n  }\n  protected convertFuncValuetoQuestionValue(val: any): any {\n    let type = this.maskTypeIsEmpty ? this.inputType : this.maskSettings.getTypeForExpressions();\n    return Helpers.convertValToQuestionVal(val, type);\n  }\n  private getMinMaxErrorText(errorText: string, value: any): string {\n    if (Helpers.isValueEmpty(value)) return errorText;\n    let errorValue = value.toString();\n    if (this.inputType === \"date\" && !!value.toDateString) {\n      errorValue = value.toDateString();\n    }\n    return errorText.replace(\"{0}\", errorValue);\n  }\n  private getStepErrorText(): string {\n    const text = this.getLocalizationString(\"stepError\");\n    return text.replace(\"{0}\", this.renderedStep);\n  }\n  private get isValueLessMin(): boolean {\n    return (\n      !this.isValueEmpty(this.renderedMin) && !this.isEmpty() &&\n      this.getCalculatedMinMax(this.value) <\n        this.getCalculatedMinMax(this.renderedMin)\n    );\n  }\n  private get isValueGreaterMax(): boolean {\n    return (\n      !this.isValueEmpty(this.renderedMax) && !this.isEmpty() &&\n      this.getCalculatedMinMax(this.value) >\n        this.getCalculatedMinMax(this.renderedMax)\n    );\n  }\n  private get isStepNumberIncorrect() : boolean {\n    if (this.inputType !== \"number\" || this.isEmpty()\n      || !Helpers.isNumber(this.renderedStep) || !Helpers.isNumber(this.value)) return false;\n    const val = Helpers.getNumber(this.value);\n    const step = Helpers.getNumber(this.renderedStep);\n    return step > 0 && (val % step) !== 0;\n  }\n  private get isDateInputType(): boolean {\n    return this.inputType === \"date\" || this.isDateTimeLocaleType();\n  }\n  private isDateTimeLocaleType(): boolean {\n    return this.inputType === \"datetime-local\";\n  }\n  private getCalculatedMinMax(minMax: any): any {\n    if (this.isValueEmpty(minMax)) return minMax;\n    return this.isDateInputType ? this.createDate(minMax) : minMax;\n  }\n  private setRenderedMinMax(properties: HashTable<any> = null) {\n    const setProp = (name: string, val: any) => {\n      this.setPropertyValue(name, this.convertFuncValuetoQuestionValue(val));\n    };\n    const setMin = (val: any) => {\n      if (!val && this.isDateInputType && !!settings.minDate) {\n        val = settings.minDate;\n      }\n      setProp(\"renderedMin\", val);\n    };\n    const setMax = (val: any) => {\n      if (!val && this.isDateInputType) {\n        val = !!settings.maxDate ? settings.maxDate : \"2999-12-31\";\n      }\n      setProp(\"renderedMax\", val);\n    };\n    if (!this.runExpressionByProperty(\"minValueExpression\", properties, (val: any) => {\n      setMin(val);\n    })) {\n      setMin(this.min);\n    }\n    if (!this.runExpressionByProperty(\"maxValueExpression\", properties, (val: any) => {\n      setMax(val);\n    })) {\n      setMax(this.max);\n    }\n  }\n\n  /**\n   * A value passed on to the [`step`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step) attribute of the underlying `<input>` element.\n   */\n  public get step(): string {\n    return this.getPropertyValue(\"step\");\n  }\n  public set step(val: string) {\n    this.setPropertyValue(\"step\", val);\n  }\n  public get renderedStep(): string {\n    if (this.isValueEmpty(this.step)) {\n      return this.inputType !== \"number\" ? undefined : \"any\";\n    }\n    return this.step;\n  }\n  protected getIsInputTextUpdate(): boolean {\n    return this.maskTypeIsEmpty ? super.getIsInputTextUpdate() : false;\n  }\n  supportAutoAdvance(): boolean {\n    return !this.getIsInputTextUpdate() && !this.isDateInputType;\n  }\n  public supportGoNextPageError(): boolean {\n    return !this.isDateInputType;\n  }\n  /**\n   * An array of predefined options from which users can select. This property configures an HTML [`<datalist>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist) element and associates it with the underlying `input` element.\n   */\n  public get dataList(): Array<string> {\n    return this.locDataList.value;\n  }\n  public set dataList(val: Array<string>) {\n    this.locDataList.value = val;\n  }\n  get locDataList(): LocalizableStrings {\n    return this.locDataListValue;\n  }\n  public get dataListId(): string {\n    return this.locDataList.hasValue() ? this.id + \"_datalist\" : undefined;\n  }\n  protected setNewValue(newValue: any): void {\n    newValue = this.correctValueType(newValue);\n    if (!!newValue) {\n      this.dateValidationMessage = undefined;\n    }\n    super.setNewValue(newValue);\n  }\n  protected correctValueType(newValue: any): any {\n    if (!newValue) return newValue;\n    if (this.inputType === \"number\" || this.inputType === \"range\") {\n      return Helpers.isNumber(newValue) ? Helpers.getNumber(newValue) : \"\";\n    }\n    if (this.inputType === \"month\") {\n      const d = this.createDate(newValue);\n      const isUtc = d.toISOString().indexOf(newValue) == 0 && newValue.indexOf(\"T\") == -1;\n      const month = isUtc ? d.getUTCMonth() : d.getMonth();\n      const year = isUtc ? d.getUTCFullYear() : d.getFullYear();\n      const m = month + 1;\n      return year + \"-\" + (m < 10 ? \"0\" : \"\") + m;\n    }\n    return newValue;\n  }\n  protected hasPlaceholder(): boolean {\n    return !this.isReadOnly && this.inputType !== \"range\";\n  }\n  protected getControlCssClassBuilder(): CssClassBuilder {\n    const maxLength = this.getMaxLength();\n    return super.getControlCssClassBuilder()\n      .append(this.cssClasses.constrolWithCharacterCounter, !!maxLength)\n      .append(this.cssClasses.characterCounterBig, maxLength > 99);\n  }\n  public isReadOnlyRenderDiv(): boolean {\n    return this.isReadOnly && settings.readOnly.textRenderMode === \"div\";\n  }\n  get inputStyle(): any {\n    var style: any = {};\n    style.width = this.inputWidth;\n    this.updateTextAlign(style);\n    return style;\n  }\n  private updateTextAlign(style: any) {\n    if (this.inputTextAlignment !== \"auto\") {\n      style.textAlign = this.inputTextAlignment;\n    } else if (!this.maskTypeIsEmpty && this.maskSettings.getTextAlignment() !== \"auto\") {\n      style.textAlign = this.maskSettings.getTextAlignment();\n    }\n  }\n  //web-based methods\n  private _isWaitingForEnter = false;\n\n  private updateValueOnEvent(event: any) {\n    const newValue = event.target.value;\n    if (!this.isTwoValueEquals(this.value, newValue)) {\n      this.inputValue = newValue;\n    }\n  }\n  onCompositionUpdate = (event: any) => {\n    if (this.isInputTextUpdate) {\n      setTimeout(() => {\n        this.updateValueOnEvent(event);\n      }, 1);\n    }\n    this.updateRemainingCharacterCounter(event.target.value);\n  };\n  public onKeyUp = (event: any) => {\n    this.updateDateValidationMessage(event);\n    if (this.isInputTextUpdate) {\n      if (!this._isWaitingForEnter || event.keyCode === 13) {\n        this.updateValueOnEvent(event);\n        this._isWaitingForEnter = false;\n      }\n    } else {\n      if (event.keyCode === 13) {\n        this.updateValueOnEvent(event);\n      }\n    }\n    this.updateRemainingCharacterCounter(event.target.value);\n  };\n  private updateDateValidationMessage(event: any): void {\n    this.dateValidationMessage = this.isDateInputType && !!event.target ? event.target.validationMessage : undefined;\n  }\n  public readOnlyBlocker = (event: any) => {\n    if (this.isReadOnlyAttr && [\"color\", \"range\"].indexOf(this.inputType) > -1) {\n      event.preventDefault();\n      return true;\n    }\n  };\n  public onKeyDown = (event: any) => {\n    if (this.readOnlyBlocker(event)) {\n      return;\n    }\n    this.onKeyDownPreprocess && this.onKeyDownPreprocess(event);\n    if (this.isInputTextUpdate) {\n      this._isWaitingForEnter = event.keyCode === 229;\n    }\n    this.onTextKeyDownHandler(event);\n  };\n  public onChange = (event: any): void => {\n    this.updateDateValidationMessage(event);\n    const elementIsFocused = event.target === settings.environment.root.activeElement;\n    if (elementIsFocused) {\n      if (this.isInputTextUpdate) {\n        this.updateValueOnEvent(event);\n      }\n    } else {\n      this.updateValueOnEvent(event);\n    }\n    this.updateRemainingCharacterCounter(event.target.value);\n  };\n  protected onBlurCore(event: any): void {\n    this.updateDateValidationMessage(event);\n    this.updateValueOnEvent(event);\n    this.updateRemainingCharacterCounter(event.target.value);\n    super.onBlurCore(event);\n  }\n  protected onFocusCore(event: any): void {\n    this.updateRemainingCharacterCounter(event.target.value);\n    super.onFocusCore(event);\n  }\n  public afterRenderQuestionElement(el: HTMLElement) {\n    if (!!el) {\n      this.input = el instanceof HTMLInputElement ? el : el.querySelector(\"input\");\n      this.createMaskAdapter();\n    }\n    super.afterRenderQuestionElement(el);\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement) {\n    this.deleteMaskAdapter();\n    this.input = undefined;\n  }\n}\n\nconst minMaxTypes = [\n  \"number\",\n  \"range\",\n  \"date\",\n  \"datetime-local\",\n  \"month\",\n  \"time\",\n  \"week\",\n];\n\nexport function isMinMaxType(obj: any): boolean {\n  const t = !!obj ? obj.inputType : \"\";\n  if (!t) return false;\n  return minMaxTypes.indexOf(t) > -1;\n}\nfunction getWeekTimeNumber(str: string, delimiter: string): number {\n  const strs = str.split(delimiter);\n  if (strs.length !== 2) return -1;\n  if (!Helpers.isNumber(strs[0]) || !Helpers.isNumber(strs[1])) return -1;\n  return parseFloat(strs[0]) * 60 + parseFloat(strs[1]);\n}\nfunction isMinBiggerWeekTime(minStr: string, maxStr: string, delimiter: string): boolean {\n  const min = getWeekTimeNumber(minStr, delimiter);\n  const max = getWeekTimeNumber(maxStr, delimiter);\n  if (min < 0 || max < 0) return false;\n  return min > max;\n}\nfunction getCorrectMinMax(obj: QuestionTextBase, min: any, max: any, isMax: boolean): any {\n  let val = isMax ? max : min;\n  if (!isMinMaxType(obj)) return val;\n  if (Helpers.isValueEmpty(min) || Helpers.isValueEmpty(max)) return val;\n  if (obj.inputType.indexOf(\"date\") === 0 || obj.inputType === \"month\") {\n    const isMonth = obj.inputType === \"month\";\n    const reason = \"question-text-minmax\";\n    const dMin = createDate(reason, isMonth ? min + \"-01\" : min);\n    const dMax = createDate(reason, isMonth ? max + \"-01\" : max);\n    if (!dMin || !dMax) return val;\n    if (dMin > dMax) return isMax ? min : max;\n  }\n  if (obj.inputType === \"week\" || obj.inputType === \"time\") {\n    const delimiter = obj.inputType === \"week\" ? \"-W\" : \":\";\n    if (isMinBiggerWeekTime(min, max, delimiter)) return isMax ? min : max;\n    return val;\n  }\n  if (obj.inputType === \"number\") {\n    if (!Helpers.isNumber(min) || !Helpers.isNumber(max)) return val;\n    if (Helpers.getNumber(min) > Helpers.getNumber(max)) return isMax ? min : max;\n  }\n  if (typeof min === \"string\" || typeof max === \"string\") return val;\n  if (min > max) return isMax ? min : max;\n  return val;\n}\n\nfunction propertyEditorMinMaxUpdate(obj: QuestionTextBase, propertyEditor: any): void {\n  if (!!obj && !!obj.inputType) {\n    propertyEditor.inputType = obj.inputType !== \"range\" ? obj.inputType : \"number\";\n    propertyEditor.textUpdateMode = \"onBlur\";\n  }\n}\n\nSerializer.addClass(\n  \"text\",\n  [\n    {\n      name: \"inputType\",\n      default: \"text\",\n      choices: settings.questions.inputTypes,\n    },\n    {\n      name: \"inputSize:number\", alternativeName: \"size\", minValue: 0, dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.isTextInput;\n      }\n    },\n    {\n      name: \"textUpdateMode\",\n      default: \"default\",\n      choices: [\"default\", \"onBlur\", \"onTyping\"],\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.isTextInput;\n      },\n    },\n    {\n      name: \"autocomplete\",\n      alternativeName: \"autoComplete\",\n      choices: settings.questions.dataList,\n    },\n    {\n      name: \"min\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n      onPropertyEditorUpdate: function(obj: any, propertyEditor: any) {\n        propertyEditorMinMaxUpdate(obj, propertyEditor);\n      },\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(obj, val, obj.max, false);\n      },\n    },\n    {\n      name: \"max\",\n      dependsOn: \"inputType\",\n      nextToProperty: \"*min\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(obj, obj.min, val, true);\n      },\n      onPropertyEditorUpdate: function(obj: any, propertyEditor: any) {\n        propertyEditorMinMaxUpdate(obj, propertyEditor);\n      },\n    },\n    {\n      name: \"minValueExpression:expression\",\n      category: \"logic\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    {\n      name: \"maxValueExpression:expression\",\n      category: \"logic\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    {\n      name: \"minErrorText\",\n      serializationProperty: \"locMinErrorText\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    {\n      name: \"maxErrorText\",\n      serializationProperty: \"locMaxErrorText\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    { name: \"inputTextAlignment\", default: \"auto\", choices: [\"left\", \"right\", \"auto\"] },\n    {\n      name: \"maskType\",\n      default: \"none\",\n      visibleIndex: 0,\n      dependsOn: \"inputType\",\n      visibleIf: (obj: any) => {\n        return obj.inputType === \"text\" || obj.inputType === \"tel\";\n      },\n      choices: (obj: any) => {\n        const choices = getAvailableMaskTypeChoices();\n        return choices;\n      }\n    },\n    {\n      name: \"maskSettings:masksettings\",\n      className: \"masksettings\",\n      visibleIndex: 1,\n      dependsOn: [\"inputType\", \"maskType\"],\n      visibleIf: (obj: any) => {\n        return obj.inputType === \"text\" || obj.inputType === \"tel\";\n      },\n      onGetValue: function (obj: any) {\n        return obj.maskSettings.getData();\n      },\n      onSetValue: function (obj: any, value: any) {\n        obj.maskSettings.setData(value);\n      },\n    },\n    {\n      name: \"step:number\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.inputType === \"number\" || obj.inputType === \"range\";\n      },\n    },\n    {\n      name: \"maxLength:number\",\n      default: -1,\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.isTextInput;\n      },\n    },\n    {\n      name: \"placeholder\",\n      alternativeName: \"placeHolder\",\n      serializationProperty: \"locPlaceholder\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.isTextInput;\n      },\n    },\n    {\n      name: \"dataList:string[]\",\n      serializationProperty: \"locDataList\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        if (!obj) return false;\n        return obj.inputType === \"text\";\n      },\n    },\n  ],\n  function() {\n    return new QuestionTextModel(\"\");\n  },\n  \"textbase\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"text\", (name) => {\n  return new QuestionTextModel(name);\n});\n", "import { Base } from \"./base\";\nimport {\n  ISurveyData,\n  ISurveyImpl,\n  ISurvey,\n  IPanel,\n  IElement,\n  IQuestion,\n  ITextProcessor,\n  IProgressInfo\n} from \"./base-interfaces\";\nimport { SurveyElement } from \"./survey-element\";\nimport { SurveyValidator, IValidatorOwner } from \"./validator\";\nimport { Question, IConditionObject, ValidationContext } from \"./question\";\nimport { QuestionTextModel, isMinMaxType } from \"./question_text\";\nimport { JsonObject, Serializer, property, propertyArray } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { SurveyError } from \"./survey-error\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { HashTable, Helpers } from \"./helpers\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { settings } from \"./settings\";\nimport { InputMaskBase } from \"./mask/mask_base\";\nimport { PanelLayoutColumnModel } from \"./panel-layout-column\";\nimport { getAvailableMaskTypeChoices } from \"./mask/mask_utils\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, ValueGetterContextCore } from \"./conditionProcessValue\";\n\nexport class MultipleTextValueGetterContext extends ValueGetterContextCore {\n  constructor (protected question: QuestionMultipleTextModel) {\n    super();\n  }\n  getRootObj(): IObjectValueContext { return <any>this.question.data; }\n  protected updateValueByItem(name: string, res: IValueGetterInfo): void {\n    const items = this.question.items;\n    for (let i = 0; i < items.length; i++) {\n      const q = items[i].question;\n      if (q.getValueName() === name) {\n        res.isFound = true;\n        res.context = q.getValueGetterContext();\n        return;\n      }\n    }\n  }\n}\n\nexport interface IMultipleTextData extends ILocalizableOwner, IPanel {\n  getSurvey(): ISurvey;\n  getTextProcessor(): ITextProcessor;\n  getAllValues(): any;\n  getMultipleTextValue(name: string): any;\n  setMultipleTextValue(name: string, value: any): any;\n  getItemDefaultValue(name: string): any;\n}\n\nexport class MultipleTextEditorModel extends QuestionTextModel {\n  public get a11y_input_ariaLabel(): string {\n    return this.locTitle.renderedHtml;\n  }\n  public get a11y_input_ariaLabelledBy(): string {\n    return null;\n  }\n\n  public get a11y_input_ariaDescribedBy(): string {\n    return null;\n  }\n}\n\n/**\n * A class that describes an [item](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#items) in a Multiple Textboxes question.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n */\nexport class MultipleTextItemModel extends Base\n  implements IValidatorOwner, ISurveyData, ISurveyImpl {\n  private editorValue: MultipleTextEditorModel;\n  private data: IMultipleTextData;\n\n  valueChangedCallback: (newValue: any) => void;\n\n  constructor(name: any = null, title: string = null) {\n    super();\n    this.editorValue = this.createEditor(name);\n    this.maskSettings = this.editorValue.maskSettings;\n    this.editor.questionTitleTemplateCallback = function () {\n      return \"\";\n    };\n    this.editor.titleLocation = \"left\";\n    if (title) {\n      this.title = title;\n    }\n    this.editor.onPropertyChanged.add((sender, options) => {\n      if (options.name !== \"maskSettings\") {\n        this.onPropertyChanged.fire(this, options);\n      }\n    });\n  }\n  public getType(): string {\n    return \"multipletextitem\";\n  }\n  public get id(): string {\n    return this.editor.id;\n  }\n  public getOriginalObj(): Base {\n    return this.editor;\n  }\n  /**\n   * An item ID that is not visible to respondents.\n   *\n   * > Item IDs must be unique.\n   * @see title\n   */\n  public get name(): string {\n    return this.editor.name;\n  }\n  public set name(val: string) {\n    this.editor.name = val;\n  }\n  public get question(): Question {\n    return <Question>(<any>this.data);\n  }\n  public get editor(): MultipleTextEditorModel {\n    return this.editorValue;\n  }\n  protected createEditor(name: string): MultipleTextEditorModel {\n    return new MultipleTextEditorModel(name);\n  }\n  public addUsedLocales(locales: Array<string>) {\n    super.addUsedLocales(locales);\n    this.editor.addUsedLocales(locales);\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    this.editor.localeChanged();\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.editor.locStrsChanged();\n  }\n  setData(data: IMultipleTextData) {\n    this.data = data;\n    if (!!data) {\n      this.editor.defaultValue = data.getItemDefaultValue(this.name);\n      this.editor.setSurveyImpl(this);\n      this.editor.parent = data;\n      this.editor.setParentQuestion(<any>data);\n    }\n  }\n  public focusIn = (): void => {\n    this.editor.focusIn();\n  };\n  /**\n   * Marks the item as required. If a respondent leaves this item empty, the question displays a [validation error](#requiredErrorText).\n   */\n  public get isRequired(): boolean {\n    return this.editor.isRequired;\n  }\n  public set isRequired(val: boolean) {\n    this.editor.isRequired = val;\n  }\n  /**\n   * A value passed on to the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types) attribute of the underlying `<input>` element.\n   *\n   * Default value: `\"text\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   */\n  public get inputType(): string {\n    return this.editor.inputType;\n  }\n  public set inputType(val: string) {\n    this.editor.inputType = val;\n  }\n  /**\n   * A user-friendly item label to display. If `title` is undefined, [`name`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#name) is displayed instead.\n   */\n  public get title(): string {\n    return this.editor.title;\n  }\n  public set title(val: string) {\n    this.editor.title = val;\n  }\n  get locTitle() {\n    return this.editor.locTitle;\n  }\n  public get fullTitle(): string {\n    return this.editor.fullTitle;\n  }\n  /**\n   * The maximum text length measured in characters. Assign 0 if the length should be unlimited.\n   *\n   * Default value: -1 (inherits the actual value from the `SurveyModel`'s [`maxTextLength`](https://surveyjs.io/form-library/documentation/surveymodel#maxTextLength) property).\n   */\n  public get maxLength(): number {\n    return this.editor.maxLength;\n  }\n  public set maxLength(val: number) {\n    this.editor.maxLength = val;\n  }\n  public getMaxLength(): any {\n    var survey = this.getSurvey();\n    return Helpers.getMaxLength(\n      this.maxLength,\n      survey ? survey.maxTextLength : -1\n    );\n  }\n  /**\n   * A placeholder for the input field.\n   */\n  public get placeholder(): string {\n    return this.editor.placeholder;\n  }\n  public set placeholder(val: string) {\n    this.editor.placeholder = val;\n  }\n  get locPlaceholder(): LocalizableString {\n    return this.editor.locPlaceholder;\n  }\n  public get placeHolder(): string {\n    return this.placeholder;\n  }\n  public set placeHolder(val: string) {\n    this.placeholder = val;\n  }\n  get locPlaceHolder(): LocalizableString {\n    return this.locPlaceholder;\n  }\n  /**\n   * Specifies a custom error message for a [required item](#isRequired).\n   */\n  public get requiredErrorText(): string {\n    return this.editor.requiredErrorText;\n  }\n  public set requiredErrorText(val: string) {\n    this.editor.requiredErrorText = val;\n  }\n  get locRequiredErrorText(): LocalizableString {\n    return this.editor.locRequiredErrorText;\n  }\n  /**\n   * A value passed on to the [`size`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` element.\n   *\n   * If you want to set a uniform `inputSize` for all text box items, use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#inputSize) property within the Multiple Textboxes configuration.\n   */\n  public get inputSize(): number { return this.editor.inputSize; }\n  public set inputSize(val: number) { this.editor.inputSize = val; }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#inputSize) property instead.\n   */\n  public get size(): number { return this.inputSize; }\n  public set size(val: number) { this.inputSize = val; }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the default item value.\n   * @see minValueExpression\n   * @see maxValueExpression\n   */\n  public get defaultValueExpression(): string {\n    return this.editor.defaultValueExpression;\n  }\n  public set defaultValueExpression(val: string) {\n    this.editor.defaultValueExpression = val;\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the minimum item value.\n   * @see maxValueExpression\n   * @see defaultValueExpression\n   */\n  public get minValueExpression(): string {\n    return this.editor.minValueExpression;\n  }\n  public set minValueExpression(val: string) {\n    this.editor.minValueExpression = val;\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the maximum item value.\n   * @see minValueExpression\n   * @see defaultValueExpression\n   */\n  public get maxValueExpression(): string {\n    return this.editor.maxValueExpression;\n  }\n  public set maxValueExpression(val: string) {\n    this.editor.maxValueExpression = val;\n  }\n  /**\n   * Item validators.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   */\n  public get validators(): Array<SurveyValidator> {\n    return this.editor.validators;\n  }\n  public set validators(val: Array<SurveyValidator>) {\n    this.editor.validators = val;\n  }\n  public getValidators(): Array<SurveyValidator> {\n    return this.validators;\n  }\n\n  /**\n   * Specifies the type of a mask applied to the input.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default)\n   * - `\"numeric\"`\n   * - `\"currency\"`\n   * - `\"datetime\"`\n   * - `\"pattern\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see maskSettings\n   */\n  public get maskType(): string {\n    return this.editor.maskType;\n  }\n  public set maskType(val: string) {\n    this.editor.maskType = val;\n    this.maskSettings = this.editor.maskSettings;\n  }\n  /**\n   * An object with properties that configure the mask applied to the input.\n   *\n   * Available properties depend on the specified [`maskType`](#maskType) and belong to corresponding classes. Refer to the class APIs for a full list of properties:\n   *\n   * | `maskType` | Class |\n   * | ---------- | ----- |\n   * | `\"numeric\"` | [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/api-reference/inputmasknumeric) |\n   * | `\"currency\"` | [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskcurrency) |\n   * | `\"datetime\"` | [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskdatetime) |\n   * | `\"pattern\"` | [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern) |\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   */\n  public get maskSettings(): InputMaskBase {\n    return this.getPropertyValue(\"maskSettings\");\n  }\n  public set maskSettings(val: InputMaskBase) {\n    this.setPropertyValue(\"maskSettings\", val);\n    if (this.editor.maskSettings !== val) {\n      this.editor.maskSettings = val;\n    }\n  }\n  /**\n   * Specifies text alignment within the input field.\n   *\n   * Possible values:\n   *\n   * - `\"left\"` - Aligns input text to the left side.\n   * - `\"right\"` - Aligns input text to the right side.\n   * - `\"auto\"` (default) - Applies right alignment if a [numeric or currency input mask](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#maskType) is specified. Otherwise, applies left alignment.\n   */\n  public get inputTextAlignment(): \"left\" | \"right\" | \"auto\" {\n    return this.editor.inputTextAlignment;\n  }\n  public set inputTextAlignment(val: \"left\" | \"right\" | \"auto\") {\n    this.editor.inputTextAlignment = val;\n  }\n  /**\n   * An item value.\n   */\n  public get value() {\n    return this.data ? this.data.getMultipleTextValue(this.name) : null;\n  }\n  public set value(value: any) {\n    if (this.data != null) {\n      this.data.setMultipleTextValue(this.name, value);\n    }\n  }\n  public isEmpty() {\n    return this.editor.isEmpty();\n  }\n  public onValueChanged(newValue: any) {\n    if (this.valueChangedCallback)this.valueChangedCallback(newValue);\n  }\n  //ISurveyImpl\n  getSurveyData(): ISurveyData {\n    return this;\n  }\n  getSurvey(): ISurvey {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.data ? this.data.getTextProcessor() : null;\n  }\n  //ISurveyData\n  getValue(name: string): any {\n    if (!this.data) return null;\n    return this.data.getMultipleTextValue(name);\n  }\n  setValue(name: string, value: any) {\n    if (this.data) {\n      this.data.setMultipleTextValue(name, value);\n    }\n  }\n  getVariable(name: string): any {\n    return undefined;\n  }\n  setVariable(name: string, newValue: any) { }\n  getComment(name: string): string {\n    return null;\n  }\n  setComment(name: string, newValue: string) { }\n  getAllValues(): any {\n    if (this.data) return this.data.getAllValues();\n    return this.value;\n  }\n  getFilteredProperties(): any {\n    return { survey: this.getSurvey() };\n  }\n  findQuestionByName(name: string): IQuestion {\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement(): Base { return undefined; }\n  //IValidatorOwner\n  getValidatorTitle(): string {\n    return this.title;\n  }\n  get validatedValue(): any {\n    return this.value;\n  }\n  set validatedValue(val: any) {\n    this.value = val;\n  }\n  getDataFilteredProperties(): any {\n    return this.getFilteredProperties();\n  }\n}\n\n/**\n * A class that describes the Multiple Text question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-multipletext/ (linkStyle))\n */\nexport class QuestionMultipleTextModel extends Question\n  implements IMultipleTextData, IPanel {\n  public static addDefaultItems(question: QuestionMultipleTextModel) {\n    var names = QuestionFactory.DefaultMutlipleTextItems;\n    for (var i = 0; i < names.length; i++) question.addItem(names[i]);\n  }\n\n  constructor(name: string) {\n    super(name);\n    this.createNewArray(\"items\", (item: any) => {\n      item.setData(this);\n      if (this.survey) {\n        this.survey.multipleTextItemAdded(this, item);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"items\", \"colCount\", \"itemErrorLocation\"], () => {\n      this.calcVisibleRows();\n    });\n    this.registerPropertyChangedHandlers([\"inputSize\"], () => { this.resetItemsSize(); });\n  }\n  public getType(): string {\n    return \"multipletext\";\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean) {\n    super.setSurveyImpl(value, isLight);\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].setData(this);\n    }\n  }\n  public get isAllowTitleLeft(): boolean {\n    return false;\n  }\n  public get hasSingleInput(): boolean { return false; }\n  public get isContainer(): boolean { return true; }\n  public get id() {\n    return this.getPropertyValue(\"id\");\n  }\n  public set id(val: string) {\n    this.items?.map((item, index) => item.editor.id = val + \"_\" + index);\n    this.setPropertyValue(\"id\", val);\n  }\n  onSurveyLoad() {\n    this.editorsOnSurveyLoad();\n    super.onSurveyLoad();\n    if (!Helpers.isValueEmpty(this.rows)) {\n      this.calcVisibleRows();\n    }\n  }\n  setQuestionValue(newValue: any, updateIsAnswered: boolean = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.performForEveryEditor((item: MultipleTextItemModel): void => {\n      item.editor.updateValueFromSurvey(item.value);\n    });\n    this.updateIsAnswered();\n  }\n  onSurveyValueChanged(newValue: any) {\n    super.onSurveyValueChanged(newValue);\n    this.performForEveryEditor((item: MultipleTextItemModel): void => {\n      item.editor.onSurveyValueChanged(item.value);\n    });\n  }\n  private resetItemsSize() {\n    this.performForEveryEditor((item: MultipleTextItemModel): void => {\n      item.editor.resetInputSize();\n    });\n  }\n  private editorsOnSurveyLoad() {\n    this.performForEveryEditor((item: MultipleTextItemModel): void => {\n      item.editor.onSurveyLoad();\n    });\n  }\n  private performForEveryEditor(func: (item: MultipleTextItemModel) => void) {\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      if (item.editor) {\n        func(item);\n      }\n    }\n  }\n  /**\n   * Gets or sets an array of [`MultipleTextItemModel`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel) objects that represent input items.\n   *\n   * Each object in this array should have at least the following properties:\n   *\n   * ```js\n   * {\n   *   \"name\": any, // A unique value used to identify an input item and save an item value to survey results.\n   *   \"title\": string // An item caption. When `title` is undefined, `name` is used. This property supports Markdown.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `title` property, implement Markdown-to-HTML conversion in the [`onTextMarkdown`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   * @see itemTitleWidth\n   * @see addItem\n   */\n  public get items(): Array<MultipleTextItemModel> {\n    return this.getPropertyValue(\"items\");\n  }\n  public set items(val: Array<MultipleTextItemModel>) {\n    this.setPropertyValue(\"items\", val);\n  }\n  /**\n   * Adds a new input item.\n   * @param name An item name.\n   * @param title *(Optional)* An item title.\n   * @see items\n   */\n  public addItem(name: string, title: string = null): MultipleTextItemModel {\n    var item = this.createTextItem(name, title);\n    this.items.push(item);\n    return item;\n  }\n  public getItemByName(name: string): MultipleTextItemModel {\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].name == name) return this.items[i];\n    }\n    return null;\n  }\n  public getElementsInDesign(includeHidden: boolean = false): Array<IElement> {\n    let elements: Array<IElement>;\n    elements = super.getElementsInDesign(includeHidden);\n    return elements.concat(this.items as any);\n  }\n  public addConditionObjectsByContext(objects: Array<IConditionObject>, context: any): void {\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      objects.push({\n        name: this.getValueName() + \".\" + item.name,\n        text: this.processedTitle + \".\" + item.fullTitle,\n        question: this,\n      });\n    }\n  }\n  protected collectNestedQuestionsCore(questions: Question[], visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.items.forEach(item => item.editor.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    if (!path) return super.getConditionJson(operator);\n    var item = this.getItemByName(path);\n    if (!item) return null;\n    var json = new JsonObject().toJsonObject(item);\n    json[\"type\"] = \"text\";\n    return json;\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].locStrsChanged();\n    }\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].localeChanged();\n    }\n  }\n  /**\n   * Specifies the error message position relative to individual input fields.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above input fields.\n   * - `\"bottom\"` - Displays error messages below input fields.\n   */\n  public get itemErrorLocation(): string {\n    return this.getPropertyValue(\"itemErrorLocation\");\n  }\n  public set itemErrorLocation(val: string) {\n    this.setPropertyValue(\"itemErrorLocation\", val);\n  }\n  public getQuestionErrorLocation(): string {\n    if (this.itemErrorLocation !== \"default\") return this.itemErrorLocation;\n    return this.getErrorLocation();\n  }\n  public get showItemErrorOnTop(): boolean {\n    return this.getQuestionErrorLocation() == \"top\";\n  }\n  public get showItemErrorOnBottom(): boolean {\n    return this.getQuestionErrorLocation() == \"bottom\";\n  }\n  public getChildErrorLocation(child: Question): string {\n    return this.getQuestionErrorLocation();\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return Helpers.isValueObject(val, true);\n  }\n  supportAutoAdvance(): boolean {\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].isEmpty()) return false;\n    }\n    return true;\n  }\n  /**\n   * The number of columns used to arrange input items. Accepts the following values: 1, 2, 3, 4, 5.\n   *\n   * Default value: 1\n   */\n  public get colCount(): number {\n    return this.getPropertyValue(\"colCount\");\n  }\n  public set colCount(val: number) {\n    if (val < 1 || val > 5) return;\n    this.setPropertyValue(\"colCount\", val);\n  }\n  /**\n   * A value passed on to the [`inputSize`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` elements.\n   */\n  public get inputSize(): number {\n    return this.getPropertyValue(\"inputSize\");\n  }\n  public set inputSize(val: number) {\n    this.setPropertyValue(\"inputSize\", val);\n  }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#inputSize) property instead.\n   */\n  public get itemSize(): number { return this.inputSize; }\n  public set itemSize(val: number) { this.inputSize = val; }\n  /**\n   * Specifies a uniform width for all text box titles. Accepts CSS values.\n   *\n   * Default value: `\"\"` (the width of each title depends on the title length)\n   * @see items\n   * @see itemErrorLocation\n   */\n  public get itemTitleWidth(): string {\n    return this.getPropertyValue(\"itemTitleWidth\") || \"\";\n  }\n  public set itemTitleWidth(val: string) {\n    this.setPropertyValue(\"itemTitleWidth\", val);\n  }\n  @propertyArray() rows: Array<MutlipleTextRow>;\n\n  protected onRowCreated(row: MutlipleTextRow) {\n    return row;\n  }\n  private calcVisibleRows() {\n    const colCount = this.colCount;\n    const items = this.items;\n    let index = 0;\n    let row: MutlipleTextRow;\n    let errorRow: MutlipleTextErrorRow;\n    let rows: Array<MutlipleTextRow> = [];\n    for (var i = 0; i < items.length; i++) {\n      if (index == 0) {\n        row = this.onRowCreated(new MutlipleTextRow());\n        errorRow = <MutlipleTextErrorRow>this.onRowCreated(new MutlipleTextErrorRow());\n        if (this.showItemErrorOnTop) {\n          rows.push(errorRow);\n          rows.push(row);\n        } else {\n          rows.push(row);\n          rows.push(errorRow);\n        }\n      }\n      row.cells.push(new MultipleTextCell(items[i], this));\n      errorRow.cells.push(new MultipleTextErrorCell(items[i], this));\n      index++;\n      if (index >= colCount || i == items.length - 1) {\n        index = 0;\n        errorRow.onAfterCreated();\n      }\n    }\n    this.rows = rows;\n  }\n\n  public getRows(): Array<any> {\n    if (Helpers.isValueEmpty(this.rows)) {\n      this.calcVisibleRows();\n    }\n    return this.rows;\n  }\n  private isMultipleItemValueChanging = false;\n  protected onValueChanged(): void {\n    super.onValueChanged();\n    this.onItemValueChanged();\n  }\n  protected createTextItem(name: string, title: string): MultipleTextItemModel {\n    return new MultipleTextItemModel(name, title);\n  }\n  protected onItemValueChanged(): void {\n    if (this.isMultipleItemValueChanging) return;\n    for (var i = 0; i < this.items.length; i++) {\n      var itemValue = null;\n      if (this.value && this.items[i].name in this.value) {\n        itemValue = this.value[this.items[i].name];\n      }\n      this.items[i].onValueChanged(itemValue);\n    }\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.items.forEach(item => item.editor.runCondition(properties));\n  }\n  protected getIsRunningValidators(): boolean {\n    if (super.getIsRunningValidators()) return true;\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].editor.isRunningValidators) return true;\n    }\n    return false;\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    let res = true;\n    for (var i = 0; i < this.items.length; i++) {\n      if (context.isOnValueChanged && this.items[i].editor.isEmpty())\n        continue;\n      res = this.items[i].editor.validateElement(context) && res;\n    }\n    return super.validateElementCore(context) && res;\n  }\n  public getAllErrors(): Array<SurveyError> {\n    var result = super.getAllErrors();\n    for (var i = 0; i < this.items.length; i++) {\n      var errors = this.items[i].editor.getAllErrors();\n      if (errors && errors.length > 0) {\n        result = result.concat(errors);\n      }\n    }\n    return result;\n  }\n  public clearErrors() {\n    super.clearErrors();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].editor.clearErrors();\n    }\n  }\n  protected getContainsErrors(): boolean {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var items = this.items;\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].editor.containsErrors) return true;\n    }\n    return false;\n  }\n  protected getIsAnswered(): boolean {\n    if (!super.getIsAnswered()) return false;\n    for (var i = 0; i < this.items.length; i++) {\n      var editor = this.items[i].editor;\n      if (editor.isVisible && !editor.isAnswered) return false;\n    }\n    return true;\n  }\n  public getProgressInfo(): IProgressInfo {\n    var elements = [];\n    for (var i = 0; i < this.items.length; i++) {\n      elements.push(this.items[i].editor);\n    }\n    return SurveyElement.getProgressInfoByElements(elements, this.isRequired);\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new MultipleTextValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!value) return value;\n    var res = {};\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      var val = value[item.name];\n      if (Helpers.isValueEmpty(val)) continue;\n      var itemName = item.name;\n      if (keysAsText && !!item.title) {\n        itemName = item.title;\n      }\n      (<any>res)[itemName] = item.editor.getDisplayValue(keysAsText, val);\n    }\n    return res;\n  }\n  protected allowMobileInDesignMode(): boolean {\n    return true;\n  }\n  //IMultipleTextData\n  getMultipleTextValue(name: string) {\n    if (!this.value) return null;\n    return this.value[name];\n  }\n  setMultipleTextValue(name: string, value: any) {\n    this.isMultipleItemValueChanging = true;\n    if (this.isValueEmpty(value)) {\n      value = undefined;\n    }\n    var newValue = this.value;\n    if (!newValue) {\n      newValue = {};\n    }\n    newValue[name] = value;\n    this.setNewValue(newValue);\n    this.isMultipleItemValueChanging = false;\n  }\n  getItemDefaultValue(name: string): any {\n    return !!this.defaultValue ? this.defaultValue[name] : null;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.textProcessor;\n  }\n  getAllValues() {\n    return this.data ? this.data.getAllValues() : null;\n  }\n  //IPanel\n  addElement(element: IElement, index: number) { }\n  removeElement(element: IElement): boolean {\n    return false;\n  }\n  getQuestionTitleLocation(): string {\n    return \"left\";\n  }\n  getQuestionTitleWidth(): string {\n    return undefined;\n  }\n  getColumsForElement(el: IElement): Array<PanelLayoutColumnModel> {\n    return [];\n  }\n  updateColumns() { }\n  getQuestionStartIndex(): string {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType(): string {\n    return \"row\";\n  }\n  elementWidthChanged(el: IElement) { }\n  get elements(): Array<IElement> {\n    return [];\n  }\n  indexOf(el: IElement): number {\n    return -1;\n  }\n  ensureRowsVisibility(): void {\n    // do nothing\n  }\n  validateContainerOnly(): void {\n    // do nothing\n  }\n  onQuestionValueChanged(el: IElement): void {\n    // do nothing\n  }\n  public getItemLabelCss(item: MultipleTextItemModel): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.itemLabel)\n      .append(this.cssClasses.itemLabelDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.itemLabelReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.itemLabelPreview, this.isPreviewStyle)\n      .append(this.cssClasses.itemLabelAnswered, item.editor.isAnswered)\n      .append(this.cssClasses.itemLabelAllowFocus, !this.isDesignMode)\n      .append(this.cssClasses.itemLabelOnError, item.editor.errors.length > 0)\n      .append(this.cssClasses.itemWithCharacterCounter, !!item.getMaxLength())\n      .toString();\n  }\n  public getItemCss(): string {\n    return new CssClassBuilder().append(this.cssClasses.item).toString();\n  }\n  public getItemTitleCss(): string {\n    return new CssClassBuilder().append(this.cssClasses.itemTitle).toString();\n  }\n  public get ariaRole(): string {\n    return \"group\";\n  }\n  public get ariaRequired() {\n    return null;\n  }\n  public get ariaInvalid() {\n    return null;\n  }\n}\n\nexport class MutlipleTextRow extends Base {\n  @property() public isVisible: boolean = true;\n  @propertyArray() public cells: Array<MultipleTextCell> = [];\n}\nexport class MutlipleTextErrorRow extends MutlipleTextRow {\n  public onAfterCreated(): void {\n    const callback = () => {\n      this.isVisible = this.cells.some((cell) => cell.item?.editor && cell.item?.editor.hasVisibleErrors);\n    };\n    this.cells.forEach((cell) => {\n      if (cell.item?.editor) {\n        cell.item?.editor.registerFunctionOnPropertyValueChanged(\"hasVisibleErrors\", callback);\n      }\n    });\n    callback();\n  }\n}\nexport class MultipleTextCell {\n  constructor(public item: MultipleTextItemModel, protected question: QuestionMultipleTextModel) {}\n  public isErrorsCell: boolean = false;\n  protected getClassName(): string {\n    return new CssClassBuilder().append(this.question.cssClasses.cell).toString();\n  }\n  public get className(): string {\n    return this.getClassName();\n  }\n}\n\nexport class MultipleTextErrorCell extends MultipleTextCell {\n  public isErrorsCell: boolean = true;\n  protected getClassName(): string {\n    return new CssClassBuilder()\n      .append(super.getClassName())\n      .append(this.question.cssClasses.cellError)\n      .append(this.question.cssClasses.cellErrorTop, this.question.showItemErrorOnTop)\n      .append(this.question.cssClasses.cellErrorBottom, this.question.showItemErrorOnBottom)\n      .toString();\n  }\n}\n\nSerializer.addClass(\n  \"multipletextitem\",\n  [\n    { name: \"!name\", isUnique: true },\n    \"isRequired:boolean\",\n    { name: \"placeholder\", alternativeName: \"placeHolder\", serializationProperty: \"locPlaceholder\" },\n    {\n      name: \"inputType\",\n      default: \"text\",\n      choices: settings.questions.inputTypes,\n    },\n    {\n      name: \"maskType\",\n      default: \"none\",\n      visibleIndex: 0,\n      dependsOn: \"inputType\",\n      visibleIf: (obj: any) => {\n        return obj.inputType === \"text\";\n      },\n      choices: (obj: any) => {\n        const choices = getAvailableMaskTypeChoices();\n        return choices;\n      }\n    },\n    {\n      name: \"maskSettings:masksettings\",\n      className: \"masksettings\",\n      visibleIndex: 1,\n      dependsOn: \"inputType\",\n      visibleIf: (obj: any) => {\n        return obj.inputType === \"text\";\n      },\n      onGetValue: function (obj: any) {\n        return obj.maskSettings.getData();\n      },\n      onSetValue: function (obj: any, value: any) {\n        obj.maskSettings.setData(value);\n      },\n    },\n    { name: \"inputTextAlignment\", default: \"auto\", choices: [\"left\", \"right\", \"auto\"] },\n    { name: \"title\", serializationProperty: \"locTitle\" },\n    { name: \"maxLength:number\", default: -1 },\n    { name: \"inputSize:number\", alternativeName: \"size\", minValue: 0 },\n    {\n      name: \"requiredErrorText:text\",\n      serializationProperty: \"locRequiredErrorText\",\n    },\n    { name: \"defaultValueExpression:expression\", visible: false },\n    {\n      name: \"minValueExpression:expression\",\n      category: \"logic\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    {\n      name: \"maxValueExpression:expression\",\n      category: \"logic\",\n      dependsOn: \"inputType\",\n      visibleIf: function(obj: any) {\n        return isMinMaxType(obj);\n      },\n    },\n    {\n      name: \"validators:validators\",\n      baseClassName: \"surveyvalidator\",\n      classNamePart: \"validator\",\n    },\n  ],\n  function () {\n    return new MultipleTextItemModel(\"\");\n  }\n);\n\nSerializer.addClass(\n  \"multipletext\",\n  [\n    { name: \"!items:textitems\", className: \"multipletextitem\", isArray: true },\n    { name: \"inputSize:number\", minValue: 0, visible: false, alternativeName: \"itemSize\" },\n    { name: \"colCount:number\", default: 1, choices: [1, 2, 3, 4, 5] },\n    { name: \"itemErrorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"], visible: false },\n    { name: \"itemTitleWidth\", category: \"layout\" }\n  ],\n  function () {\n    return new QuestionMultipleTextModel(\"\");\n  },\n  \"question\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"multipletext\", (name) => {\n  var q = new QuestionMultipleTextModel(name);\n  QuestionMultipleTextModel.addDefaultItems(q);\n  return q;\n});\n", "import { Serializer } from \"./jsonobject\";\nimport { IElement, IQuestion } from \"./base-interfaces\";\nimport { PanelModel } from \"./panel\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { Question } from \"./question\";\nimport { DomWindowHelper } from \"./global_variables_utils\";\n\n/**\n * The flow panel object. It is a container with flow layout where you can mix questions with markdown text.\n *\n */\nexport class FlowPanelModel extends PanelModel {\n  static contentElementNamePrefix = \"element:\";\n  public contentChangedCallback: () => void;\n  public onGetHtmlForQuestion: (question: Question) => string;\n  public onCustomHtmlProducing: () => string;\n  constructor(name: string = \"\") {\n    super(name);\n    this.createLocalizableString(\"content\", this, true);\n    this.registerPropertyChangedHandlers([\"content\"], () => {\n      this.onContentChanged();\n    });\n  }\n  public getType(): string {\n    return \"flowpanel\";\n  }\n  getChildrenLayoutType(): string {\n    return \"flow\";\n  }\n  onSurveyLoad(): any {\n    super.onSurveyLoad();\n    this.onContentChanged();\n  }\n  public get content(): string {\n    return this.getLocalizableStringText(\"content\");\n  }\n  public set content(val: string) {\n    this.setLocalizableStringText(\"content\", val);\n  }\n  public get locContent(): LocalizableString {\n    return this.getLocalizableString(\"content\");\n  }\n  public get html(): string {\n    return this.getPropertyValue(\"html\", \"\");\n  }\n  public set html(val: string) {\n    this.setPropertyValue(\"html\", val);\n  }\n  protected onContentChanged(): any {\n    var html = \"\";\n    if (!!this.onCustomHtmlProducing) {\n      html = this.onCustomHtmlProducing();\n    } else {\n      html = this.produceHtml();\n    }\n    this.html = html;\n    if (!!this.contentChangedCallback)this.contentChangedCallback();\n  }\n  public produceHtml(): string {\n    var html = [];\n    //contentElementNamePrefix\n    var regEx = /{(.*?(element:)[^$].*?)}/g;\n    var str = this.content;\n    var startIndex = 0;\n    var res = null;\n    while((res = regEx.exec(str)) !== null) {\n      if (res.index > startIndex) {\n        html.push(str.substring(startIndex, res.index));\n        startIndex = res.index;\n      }\n      var question = this.getQuestionFromText(res[0]);\n      if (!!question) {\n        html.push(this.getHtmlForQuestion(question));\n      } else {\n        html.push(\n          str.substring(startIndex, res.index + res[0].length)\n        );\n      }\n      startIndex = res.index + res[0].length;\n    }\n    if (startIndex < str.length) {\n      html.push(str.substring(startIndex, str.length));\n    }\n    return html.join(\"\").replace(new RegExp(\"<br>\", \"g\"), \"<br/>\");\n  }\n  public getQuestionFromText(str: string): Question {\n    str = str.substring(1, str.length - 1);\n    str = str.replace(FlowPanelModel.contentElementNamePrefix, \"\").trim();\n    return this.getQuestionByName(str);\n  }\n  protected getHtmlForQuestion(question: Question): string {\n    if (!!this.onGetHtmlForQuestion) return this.onGetHtmlForQuestion(question);\n    return \"\";\n  }\n  protected getQuestionHtmlId(question: Question): string {\n    return this.name + \"_\" + question.id;\n  }\n  protected onAddElement(element: IElement, index: number) {\n    super.onAddElement(element, index);\n    this.addElementToContent(element);\n    element.renderWidth = \"\";\n  }\n  protected onRemoveElement(element: IElement) {\n    var searchStr = this.getElementContentText(element);\n    this.content = this.content.replace(searchStr, \"\");\n    super.onRemoveElement(element);\n  }\n  dragDropMoveElement(src: IElement, target: IElement, targetIndex: number) {}\n  private addElementToContent(element: IElement) {\n    if (this.isLoadingFromJson) return;\n    var text = this.getElementContentText(element);\n    if (!this.insertTextAtCursor(text)) {\n      this.content = this.content + text;\n    }\n  }\n  private insertTextAtCursor(text: string, prevName: string = null): boolean {\n    if (!this.isDesignMode || !DomWindowHelper.isAvailable()) return false;\n\n    let sel = DomWindowHelper.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      let range = sel.getRangeAt(0);\n      range.deleteContents();\n      const textElement = new Text(text);\n      range.insertNode(textElement);\n      var self = <any>this;\n      if (self.getContent) {\n        var str = self.getContent(prevName);\n        this.content = str;\n      }\n      return true;\n    }\n    return false;\n  }\n  public getElementContentText(element: IElement) {\n    return \"{\" + FlowPanelModel.contentElementNamePrefix + element.name + \"}\";\n  }\n}\n\nSerializer.addClass(\n  \"flowpanel\",\n  [{ name: \"content:html\", serializationProperty: \"locContent\" }],\n  function () {\n    return new FlowPanelModel();\n  },\n  \"panel\"\n);\n", "import { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\nexport class DefaultTitleModel {\n  public static getIconCss(cssClasses: any, isCollapsed: boolean) {\n    return new CssClassBuilder()\n      .append(cssClasses.icon)\n      .append(cssClasses.iconExpanded, !isCollapsed)\n      .toString();\n  }\n}", "import { Question, IConditionObject, ValidationContext } from \"./question\";\nimport { Serializer } from \"./jsonobject\";\nimport { SurveyError } from \"./survey-error\";\n\n/**\n * A base class for question types that cannot have a value ([Html](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)).\n *\n * This class does not implement new functionality&mdash;it only redefines default values of certain properties inherited from the [`Question`](https://surveyjs.io/form-library/documentation/question) class.\n */\nexport class QuestionNonValue extends Question {\n  constructor(name: string) {\n    super(name);\n  }\n  public getType(): string {\n    return \"nonvalue\";\n  }\n  public get hasInput(): boolean {\n    return false;\n  }\n  public get hasTitle(): boolean {\n    return false;\n  }\n  public getTitleLocation(): string {\n    return \"\";\n  }\n  public get hasComment(): boolean {\n    return false;\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    return true;\n  }\n  public getAllErrors(): Array<SurveyError> {\n    return [];\n  }\n  public supportAutoAdvance(): boolean {\n    return false;\n  }\n  public addConditionObjectsByContext(\n    objects: Array<IConditionObject>,\n    context: any\n  ) { }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    return null;\n  }\n  public get ariaRole(): string {\n    return null;\n  }\n  public get ariaRequired(): any {\n    return null;\n  }\n}\nSerializer.addClass(\n  \"nonvalue\",\n  [\n    { name: \"title\", visible: false },\n    { name: \"description\", visible: false },\n    { name: \"valueName\", visible: false },\n    { name: \"enableIf\", visible: false },\n    { name: \"defaultValue\", visible: false },\n    { name: \"correctAnswer\", visible: false },\n    { name: \"clearIfInvisible\", visible: false },\n    { name: \"isRequired\", visible: false, isSerializable: false },\n    { name: \"requiredErrorText\", visible: false },\n    { name: \"readOnly\", visible: false },\n    { name: \"requiredIf\", visible: false },\n    { name: \"validators\", visible: false },\n    { name: \"titleLocation\", visible: false },\n    { name: \"showTitle\", visible: false, isSerializable: false },\n    { name: \"showCommentArea\", visible: false },\n    { name: \"useDisplayValuesInDynamicTexts\", alternativeName: \"useDisplayValuesInTitle\", visible: false },\n  ],\n  function () {\n    return new QuestionNonValue(\"\");\n  },\n  \"question\"\n);\n", "import { Serializer } from \"./jsonobject\";\nimport { Question } from \"./question\";\n\n/**\n * A Model for an question that renders empty \"div\" tag. It used as a base class for some custom widgets\n */\nexport class QuestionEmptyModel extends Question {\n  constructor(name: string) {\n    super(name);\n  }\n  public getType(): string {\n    return \"empty\";\n  }\n}\n\nSerializer.addClass(\n  \"empty\",\n  [],\n  function () {\n    return new QuestionEmptyModel(\"\");\n  },\n  \"question\"\n);\n", "import { Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport {\n  ChoiceItem,\n  QuestionCheckboxBase\n} from \"./question_baseselect\";\nimport { Helpers } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IQuestion } from \"./base-interfaces\";\nimport { SurveyError } from \"./survey-error\";\nimport { CustomError } from \"./error\";\nimport { settings } from \"./settings\";\n\nexport class CheckboxItem extends ChoiceItem {\n  public get isExclusive(): boolean {\n    return this.getPropertyValue(\"isExclusive\");\n  }\n  public set isExclusive(val: boolean) {\n    this.setPropertyValue(\"isExclusive\", val);\n  }\n  protected getBaseType(): string { return \"checkboxitem\"; }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name === \"showCommentArea\" && this.locOwner) {\n      (<any>this.locOwner).onItemHasCommentChanged();\n    }\n  }\n}\n\n/**\n * A class that describes the Checkboxes question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-checkbox/ (linkStyle))\n */\nexport class QuestionCheckboxModel extends QuestionCheckboxBase {\n  private selectAllItemValue: ItemValue;\n  protected selectAllItemText: LocalizableString;\n  private invisibleOldValues: any = {};\n  protected defaultSelectedItemValues: Array<ItemValue>;\n  constructor(name: string) {\n    super(name);\n    this.selectAllItemValue = this.createSelectAllItem();\n    this.registerPropertyChangedHandlers([\"showSelectAllItem\", \"selectAllText\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"choices\"], () => {\n      this.onItemHasCommentChanged();\n    });\n  }\n  protected getDefaultItemComponent(): string {\n    return \"survey-checkbox-item\";\n  }\n  public getType(): string {\n    return \"checkbox\";\n  }\n  protected getItemValueType() {\n    return \"checkboxitem\";\n  }\n  protected createSelectAllItem(): ItemValue {\n    const res = this.createItemValue(\"\");\n    res.value = \"\";\n    res.id = \"selectall\";\n    this.selectAllItemText = this.createLocalizableString(\"selectAllText\", res, true, \"selectAllItemText\");\n    res.locOwner = this;\n    res.setLocText(this.selectAllItemText);\n    return res;\n  }\n  protected onCreating() {\n    super.onCreating();\n    this.createNewArray(\"renderedValue\");\n    this.createNewArray(\"value\");\n  }\n  protected getFirstInputElementId(): string {\n    return this.inputId + \"_0\";\n  }\n  /**\n   * Specifies a property name used to store selected values.\n   *\n   * Set this property if you want to store selected values in an array of objects instead of an array of primitive values. For example, if you set `valuePropertyName` to `\"car\"`, the `value` property will contain an array of objects `[{ car: \"Ford\" }, { car: \"Tesla\" }]`, not an array of string values `[ \"Ford\", \"Tesla\" ]`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/merge-question-values/ (linkStyle))\n   */\n  public get valuePropertyName(): string {\n    return this.getPropertyValue(\"valuePropertyName\");\n  }\n  public set valuePropertyName(val: string) {\n    this.setPropertyValue(\"valuePropertyName\", val);\n  }\n  public getValuePropertyName(): string {\n    return this.valuePropertyName || (!this.isTheOnlyComment ? \"value\" : \"\");\n  }\n  public getQuestionFromArray(name: string, index: number): IQuestion {\n    if (!!name && name === this.getValuePropertyName()) {\n      const v = this.value;\n      if (Array.isArray(v) && index < v.length) return this;\n    }\n    return null;\n  }\n  protected getDependedQuestionsByValueName(isDependOn: boolean): Array<IQuestion> {\n    if (isDependOn && !!this.getValuePropertyName()) return [];\n    return super.getDependedQuestionsByValueName(isDependOn);\n  }\n  /**\n   * Returns the \"Select All\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showSelectAllItem\n   */\n  public get selectAllItem(): ItemValue {\n    return this.selectAllItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Select All\" choice item.\n   * @see showSelectAllItem\n   */\n  public get selectAllText(): string {\n    return this.getLocalizableStringText(\"selectAllText\");\n  }\n  public set selectAllText(val: string) {\n    this.setLocalizableStringText(\"selectAllText\", val);\n  }\n  get locSelectAllText(): LocalizableString {\n    return this.getLocalizableString(\"selectAllText\");\n  }\n  /**\n   * Enable this property to display a \"Select All\" item. When users select it, all other choice options, except [special options](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/documentation#display-special-choices), also become selected.\n   * @see selectAll\n   * @see isAllSelected\n   * @see separateSpecialChoices\n   */\n  public get showSelectAllItem(): boolean {\n    return this.getPropertyValue(\"showSelectAllItem\");\n  }\n  public set showSelectAllItem(val: boolean) {\n    this.setPropertyValue(\"showSelectAllItem\", val);\n  }\n\n  public get hasSelectAll(): boolean {\n    return this.showSelectAllItem;\n  }\n  public set hasSelectAll(val: boolean) {\n    this.showSelectAllItem = val;\n  }\n  /**\n   * Returns `true` if all choice options, except [special options](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/documentation#display-special-choices), are selected.\n   * @see showSelectAllItem\n   */\n  public get isAllSelected(): boolean {\n    return this.allElementsSelected();\n  }\n  public set isAllSelected(val: boolean) {\n    if (val) {\n      this.selectAll();\n    } else {\n      this.clearValue(true);\n    }\n  }\n  public toggleSelectAll(): void {\n    this.isAllSelected = !this.isAllSelected;\n  }\n  protected allElementsSelected(): boolean {\n    if (this.isNoneItemsSelected()) return false;\n    const items = this.getVisibleEnableItems();\n    if (items.length === 0) return false;\n    const val = this.value;\n    if (!val || !Array.isArray(val) || val.length === 0) return false;\n    if (val.length < items.length) return false;\n    const rVal = [];\n    for (let i = 0; i < val.length; i ++) {\n      rVal.push(this.getRealValue(val[i]));\n    }\n    for (let i = 0; i < items.length; i ++) {\n      if (rVal.indexOf(items[i].value) < 0) return false;\n    }\n    return true;\n  }\n  private isNoneItemsSelected(): boolean {\n    const noneItems = this.getNoneItems();\n    for (let i = 0; i < noneItems.length; i ++) {\n      if (this.isItemSelected(noneItems[i])) return true;\n    }\n    return false;\n  }\n  private getNoneItems(): Array<ItemValue> {\n    const res = new Array<ItemValue>();\n    this.visibleChoices.forEach((item) => {\n      if (this.isNoneItem(item)) {\n        res.push(item);\n      }\n    });\n    return res;\n  }\n  /**\n   * Selects all choice options, except [special options](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/documentation#display-special-choices).\n   *\n   * To clear selection, call the `clearValue()` method.\n   * @see clearValue\n   */\n  public selectAll(): void {\n    const val: Array<any> = [];\n    const items = this.getVisibleEnableItems();\n    for (let i = 0; i < items.length; i++) {\n      val.push(items[i].value);\n    }\n    this.renderedValue = val;\n  }\n  public clickItemHandler(item: ItemValue, checked?: boolean): void {\n    this.selectItem(item, checked);\n  }\n  public selectItem(item: ItemValue, checked?: boolean): void {\n    if (this.isReadOnlyAttr || !item) return;\n    if (item === this.selectAllItem) {\n      if (checked === true || checked === false) {\n        this.isAllSelected = checked;\n      } else {\n        this.toggleSelectAll();\n      }\n    } else {\n      if (this.isNoneItem(item)) {\n        this.renderedValue = checked ? [item.value] : [];\n      } else {\n        const newValue: Array<any> = [].concat(this.renderedValue || []);\n        const index = newValue.indexOf(item.value);\n        if (checked) {\n          if (index < 0) {\n            newValue.push(item.value);\n          }\n        } else {\n          if (index > -1) {\n            newValue.splice(index, 1);\n          }\n        }\n        this.renderedValue = newValue;\n      }\n      if (checked) {\n        this.onItemSelected(item);\n      }\n    }\n  }\n  protected isItemSelectedCore(item: ItemValue): boolean {\n    if (item === this.selectAllItem) return this.isAllSelected;\n    var val = this.renderedValue;\n    if (!val || !Array.isArray(val)) return false;\n    for (var i = 0; i < val.length; i++) {\n      if (this.isTwoValueEquals(val[i], item.value)) return true;\n    }\n    return false;\n  }\n  protected hasUnknownValueItem(val: any, includeOther: boolean = false,\n    isFilteredChoices: boolean = true, checkEmptyValue: boolean = false): boolean {\n    return super.hasUnknownValueItem(this.getRealValue(val), includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  protected setCommentValueCore(item: ItemValue, newValue: string): void {\n    newValue = this.trimCommentValue(newValue);\n    if (this.isOtherItemByValue(item)) {\n      super.setCommentValueCore(item, newValue);\n    } else {\n      this.setCommentPropertyValue(item, newValue);\n      const index = this.getItemValIndexByItemValue(item.value);\n      if (index > -1) {\n        const val = this.createValueCopy();\n        const itemVal = val[index];\n        if (newValue) {\n          itemVal[this.commentPropertyValue] = newValue;\n        } else {\n          delete itemVal[this.commentPropertyValue];\n        }\n        this.value = val;\n      }\n    }\n  }\n  protected getCommentValueByItem(item: ItemValue): string {\n    const index = this.getItemValIndexByItemValue(item.value);\n    return index > -1 ? this.value[index][this.commentPropertyValue] : undefined;\n  }\n  private getItemValIndexByItemValue(itemValue: any): number {\n    const val = this.value;\n    if (!Array.isArray(val)) return -1;\n    for (let i = 0; i < val.length; i++) {\n      const rValue = this.getRealValue(val[i]);\n      if (Helpers.isTwoValueEquals(rValue, itemValue)) return i;\n    }\n    return -1;\n  }\n  public get isTheOnlyComment(): boolean {\n    return this.getPropertyValue(\"isTheOnlyComment\", undefined, () => this.calcIsTheOnlyComment());\n  }\n  private calcIsTheOnlyComment(): boolean {\n    for (let i = 0; i < this.choices.length; i++) {\n      const ch = this.choices[i];\n      if (ch.showCommentArea && ch.value !== this.otherItem.value) return false;\n    }\n    return true;\n  }\n  onItemHasCommentChanged(): void {\n    this.resetPropertyValue(\"isTheOnlyComment\");\n  }\n  private getRealValue(val: any): any {\n    if (!val || typeof val !== \"object\") return val;\n    const valProp = this.getValuePropertyName();\n    return !valProp ? val : val[valProp];\n  }\n  private getValueFromReal(val: any): any {\n    const valProp = this.getValuePropertyName();\n    if (!!valProp) {\n      const res: any = {};\n      res[valProp] = val;\n      return res;\n    }\n    return val;\n  }\n  public get isValueArray(): boolean { return true; }\n  /**\n   * Specifies the maximum number of selected choices.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * > This property only limits the number of choice items that can be selected by users. You can select any number of choice items in code, regardless of the `maxSelectedChoices` value.\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see minSelectedChoices\n   */\n  public get maxSelectedChoices(): number {\n    return this.getPropertyValue(\"maxSelectedChoices\");\n  }\n  public set maxSelectedChoices(val: number) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"maxSelectedChoices\", val);\n    this.filterItems();\n  }\n  /**\n   * Specifies the minimum number of selected choices.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * > This property only limits the number of choice items that can be selected by users. You can select any number of choice items in code, regardless of the `minSelectedChoices` value.\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see maxSelectedChoices\n   */\n  public get minSelectedChoices(): number {\n    return this.getPropertyValue(\"minSelectedChoices\");\n  }\n  public set minSelectedChoices(val: number) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minSelectedChoices\", val);\n  }\n  /**\n   * An array of selected choice items. Includes the \"Other\", \"None\", \"Refuse to answer\", and \"Don't know\" choice items if they are selected, but not \"Select All\". Items are sorted in the order they were selected.\n   * @see visibleChoices\n   * @see enabledChoices\n   */\n  public get selectedChoices(): Array<ItemValue> {\n    const val = this.renderedValue as Array<any>;\n    const visChoices = this.visibleChoices;\n    const selectedItemValues = this.selectedItemValues;\n\n    if (this.isEmpty()) return [];\n\n    const allChoices = !!this.defaultSelectedItemValues ? [].concat(this.defaultSelectedItemValues, visChoices) : visChoices;\n    const itemValues = val.map((item) => { return ItemValue.getItemByValue(allChoices, item); }).filter(item => !!item);\n    if (!itemValues.length && !selectedItemValues) {\n      this.updateSelectedItemValues();\n    }\n\n    const validValues = this.validateItemValues(itemValues);\n    return validValues;\n  }\n  public get selectedItems(): Array<ItemValue> { return this.selectedChoices; }\n  public get hasFilteredValue(): boolean { return !!this.getValuePropertyName(); }\n  public getFilteredName(): any {\n    let res = super.getFilteredName();\n    if (this.hasFilteredValue) {\n      res += settings.expressionVariables.unwrapPostfix;\n    }\n    return res;\n  }\n  public getFilteredValue(isUnwrapped?: boolean): any {\n    if (isUnwrapped && this.hasFilteredValue) return this.renderedValue;\n    return super.getFilteredValue(isUnwrapped);\n  }\n  protected getMultipleSelectedItems(): Array<ItemValue> {\n    return this.selectedChoices;\n  }\n  protected validateItemValues(itemValues: Array<ItemValue>): Array<ItemValue> {\n    if (!!itemValues.length) return itemValues;\n\n    const selectedItemValues = this.selectedItemValues;\n    if (!!selectedItemValues && !!selectedItemValues.length) {\n      this.defaultSelectedItemValues = [].concat(selectedItemValues);\n      return selectedItemValues;\n    }\n\n    const val = this.renderedValue as Array<any>;\n    return val.map((item: any) => this.createItemValue(item));\n  }\n  protected getAnswerCorrectIgnoreOrder(): boolean { return true; }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (isOnValueChanged) return;\n\n    if (this.checkMinSelectedChoicesUnreached()) {\n      const minError = new CustomError(\n        this.getLocalizationFormatString(\"minSelectError\", this.minSelectedChoices),\n        this\n      );\n      errors.push(minError);\n    }\n  }\n  protected onVisibleChoicesChanged(): void {\n    super.onVisibleChoicesChanged();\n    this.updateSelectAllItemProps();\n  }\n  protected onEnableItemCallBack(item: ItemValue): boolean {\n    if (!this.shouldCheckMaxSelectedChoices()) return true;\n    return this.isItemSelected(item);\n  }\n  protected onAfterRunItemsEnableCondition(): void {\n    this.updateSelectAllItemProps();\n    const isEnabled = this.maxSelectedChoices < 1 || this.isOtherSelected || !this.shouldCheckMaxSelectedChoices();\n    this.otherItem.setIsEnabled(isEnabled);\n  }\n  private updateSelectAllItemProps(): void {\n    if (!this.hasSelectAll) return;\n    this.selectAllItem.setIsEnabled(this.getSelectAllEnabled());\n  }\n  private getSelectAllEnabled(): boolean {\n    if (!this.hasSelectAll) return true;\n    let visCount = this.getVisibleEnableItems().length;\n    const max = this.maxSelectedChoices;\n    if (max > 0 && max < visCount) return false;\n    return visCount > 0;\n  }\n  private getVisibleEnableItems(): Array<ItemValue> {\n    const res = new Array<ItemValue>();\n    const items = this.visibleChoices;\n    for (let i = 0; i < items.length; i ++) {\n      const item = items[i];\n      if (item.isEnabled && !this.isBuiltInChoice(item) && !item.isExclusive) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n  private shouldCheckMaxSelectedChoices(): boolean {\n    if (this.maxSelectedChoices < 1) return false;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    return len >= this.maxSelectedChoices;\n  }\n\n  private checkMinSelectedChoicesUnreached(): boolean {\n    if (this.minSelectedChoices < 1) return false;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    if (len === 1 && this.isNoneItemsSelected()) return false;\n    return len < this.minSelectedChoices;\n  }\n\n  protected getItemClassCore(item: any, options: any) {\n    const __dummy_value = this.value; //trigger dependencies from koValue for knockout\n    options.isSelectAllItem = item === this.selectAllItem;\n    return new CssClassBuilder()\n      .append(super.getItemClassCore(item, options))\n      .append(this.cssClasses.itemSelectAll, options.isSelectAllItem)\n      .toString();\n  }\n  updateValueFromSurvey(newValue: any, clearData: boolean): void {\n    super.updateValueFromSurvey(newValue, clearData);\n    this.invisibleOldValues = {};\n  }\n  onSurveyLoad(): void {\n    this.onItemHasCommentChanged();\n    super.onSurveyLoad();\n  }\n  protected setDefaultUnknownValue(val : any): void {\n    if (!Array.isArray(val)) {\n      super.setDefaultUnknownValue(val);\n      return;\n    }\n    if (!this.hasActiveChoices) {\n      for (var i = 0; i < val.length; i++) {\n        const rVal = this.getRealValue(val[i]);\n        this.addIntoInvisibleOldValues(rVal);\n      }\n      this.value = val;\n    } else {\n      const newVal = [];\n      let otherVal = \"\";\n      for (var i = 0; i < val.length; i++) {\n        const rVal = this.getRealValue(val[i]);\n        if (!this.hasUnknownValue(rVal)) {\n          newVal.push(rVal);\n        } else {\n          if (!otherVal) {\n            otherVal = rVal;\n            newVal.push(this.otherItem.value);\n          }\n        }\n      }\n      this.renderedValue = newVal;\n      this.otherValue = otherVal;\n    }\n  }\n  private addIntoInvisibleOldValues(val: any) {\n    this.invisibleOldValues[val] = val;\n  }\n  protected hasValueToClearIncorrectValues(): boolean {\n    return super.hasValueToClearIncorrectValues() || !Helpers.isValueEmpty(this.invisibleOldValues);\n  }\n  protected setNewValue(newValue: any) {\n    if (!this.isChangingValueOnClearIncorrect) {\n      this.invisibleOldValues = {};\n    }\n    newValue = this.valueFromData(newValue);\n    var value = this.value;\n    if (!newValue) newValue = [];\n    if (!value) value = [];\n    if (this.isTwoValueEquals(value, newValue)) return;\n    this.removeNoneItemsValues(value, newValue);\n    super.setNewValue(newValue);\n  }\n  protected getCommentFromValue(newValue: any): string {\n    var ind = this.getFirstUnknownIndex(newValue);\n    if (ind < 0) return \"\";\n    return newValue[ind];\n  }\n  public getStoreOthersAsComment(): boolean {\n    if (!!this.getValuePropertyName()) return false;\n    return super.getStoreOthersAsComment();\n  }\n  protected setOtherValueIntoValue(newValue: any): any {\n    var ind = this.getFirstUnknownIndex(newValue);\n    if (ind < 0) return newValue;\n    let otherVal: any = this.otherItem.value;\n    const propName = this.getValuePropertyName();\n    if (propName) {\n      const obj: any = {};\n      obj[propName] = otherVal;\n      otherVal = obj;\n    }\n    newValue.splice(ind, 1, otherVal);\n    return newValue;\n  }\n  private getFirstUnknownIndex(newValue: any): number {\n    if (!Array.isArray(newValue)) return -1;\n    for (var i = 0; i < newValue.length; i++) {\n      if (this.hasUnknownValueItem(newValue[i], false, false)) return i;\n    }\n    return -1;\n  }\n  protected removeNoneItemsValues(value: Array<any>, newValue: Array<any>): void {\n    if (value.length === 1 && newValue.length === 1\n      && this.getRealValue(value[0]) === this.getRealValue(newValue[0])) return;\n    const noneValues = this.getNoneItems().map(item => item.value);\n    if (noneValues.length > 0) {\n      const prevNone = this.noneIndexInArray(value, noneValues);\n      const newNone = this.noneIndexInArray(newValue, noneValues);\n      if (prevNone.index > -1) {\n        if (prevNone.val === newNone.val) {\n          if (newValue.length > 0) {\n            newValue.splice(newNone.index, 1);\n          }\n        } else {\n          const prevNewNone = this.noneIndexInArray(newValue, [prevNone.val]);\n          if (prevNewNone.index > -1 && prevNewNone.index < newValue.length - 1) {\n            newValue.splice(prevNewNone.index, 1);\n          }\n        }\n      } else {\n        if (newNone.index > -1 && newValue.length > 1) {\n          newValue.splice(0, newValue.length, this.getValueFromReal(newNone.val));\n        }\n      }\n    }\n  }\n\n  private noneIndexInArray(val: any, noneValues: Array<any>): { index: number, val: any } {\n    if (!Array.isArray(val)) return { index: -1, val: undefined };\n    for (var i = val.length - 1; i >= 0; i--) {\n      const index = noneValues.indexOf(this.getRealValue(val[i]));\n      if (index > -1) return { index: i, val: noneValues[index] };\n    }\n    return { index: -1, val: undefined };\n  }\n  protected supportSelectAll(): boolean {\n    return this.isSupportProperty(\"showSelectAllItem\");\n  }\n  protected addNonChoicesItems(dict: Array<{ index: number, item: ItemValue }>, isAddAll: boolean): void {\n    super.addNonChoicesItems(dict, isAddAll);\n    if (this.supportSelectAll()) {\n      this.addNonChoiceItem(dict, this.selectAllItem, isAddAll, this.hasSelectAll, settings.specialChoicesOrder.selectAllItem);\n    }\n  }\n  protected isBuiltInChoice(item: ItemValue): boolean {\n    return item === this.selectAllItem || super.isBuiltInChoice(item);\n  }\n\n  public isItemInList(item: ItemValue): boolean {\n    if (item == this.selectAllItem) return this.hasSelectAll;\n    return super.isItemInList(item);\n  }\n  protected getDisplayValueEmpty(): string {\n    return ItemValue.getTextOrHtmlByValue(this.visibleChoices.filter(choice => choice != this.selectAllItemValue), undefined);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!Array.isArray(value))\n      return super.getDisplayValueCore(keysAsText, value);\n    const valuePropName = this.getValuePropertyName();\n    const onGetValueCallback = (index: number): any => {\n      let val = value[index];\n      if (!!valuePropName && !!val[valuePropName]) {\n        val = val[valuePropName];\n      }\n      return val;\n    };\n    return this.getDisplayArrayValue(keysAsText, value, onGetValueCallback);\n  }\n  protected clearIncorrectValuesCore(): void {\n    this.clearIncorrectAndDisabledValues(false);\n  }\n  protected clearDisabledValuesCore(): void {\n    this.clearIncorrectAndDisabledValues(true);\n  }\n  private isChangingValueOnClearIncorrect: boolean = false;\n  private clearIncorrectAndDisabledValues(clearDisabled: boolean) {\n    var val = this.value;\n    var hasChanged = false;\n    var restoredValues = this.restoreValuesFromInvisible();\n    if (!val && restoredValues.length == 0) return;\n    if (!Array.isArray(val) || val.length == 0) {\n      this.isChangingValueOnClearIncorrect = true;\n      if (!clearDisabled) {\n        if (this.showCommentArea) {\n          this.value = null;\n        } else {\n          this.clearValue(true);\n        }\n      }\n      this.isChangingValueOnClearIncorrect = false;\n      if (restoredValues.length == 0) return;\n      val = [];\n    }\n    var newValue = [];\n    for (var i = 0; i < val.length; i++) {\n      const rItemVal = this.getRealValue(val[i]);\n      var isUnkown = this.canClearValueAnUnknown(rItemVal);\n      if (\n        (!clearDisabled && !isUnkown) ||\n        (clearDisabled && !this.isValueDisabled(rItemVal))\n      ) {\n        newValue.push(val[i]);\n      } else {\n        hasChanged = true;\n        if (isUnkown) {\n          this.addIntoInvisibleOldValues(val[i]);\n        }\n      }\n    }\n    for (var i = 0; i < restoredValues.length; i++) {\n      newValue.push(restoredValues[i]);\n      hasChanged = true;\n    }\n    if (!hasChanged) return;\n    this.isChangingValueOnClearIncorrect = true;\n    if (newValue.length == 0) {\n      this.clearValue(true);\n    } else {\n      this.value = newValue;\n    }\n    this.isChangingValueOnClearIncorrect = false;\n  }\n  private restoreValuesFromInvisible(): Array<any> {\n    var res = [];\n    var visItems = this.visibleChoices;\n    for (var i = 0; i < visItems.length; i++) {\n      const item = visItems[i];\n      if (item === this.selectAllItem) continue;\n      var val = visItems[i].value;\n      if (Helpers.isTwoValueEquals(val, this.invisibleOldValues[val])) {\n        if (!this.isItemSelected(item)) {\n          res.push(val);\n        }\n        delete this.invisibleOldValues[val];\n      }\n    }\n    return res;\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    const json = super.getConditionJson(operator, path);\n    if (operator == \"contains\" || operator == \"notcontains\") {\n      json[\"type\"] = \"radiogroup\";\n    }\n    json[\"maxSelectedChoices\"] = 0;\n    json[\"minSelectedChoices\"] = 0;\n    return json;\n  }\n  public isAnswerCorrect(): boolean {\n    return Helpers.isArrayContainsEqual(this.value, this.correctAnswer);\n  }\n  protected setDefaultValueWithOthers() {\n    this.value = this.renderedValueFromDataCore(this.defaultValue);\n  }\n  protected getIsItemValue(val: any, item: ItemValue): boolean {\n    if (!val || !Array.isArray(val)) return false;\n    return val.indexOf(item.value) >= 0;\n  }\n  protected valueFromData(val: any): any {\n    if (!val) return val;\n    if (!Array.isArray(val)) return [super.valueFromData(val)];\n    let value = [];\n    for (let i = 0; i < val.length; i++) {\n      const choiceitem = this.getItemByValue(val[i], this.visibleChoices);\n      if (!!choiceitem) {\n        value.push(this.getChoiceValue(choiceitem, val[i], true));\n      } else {\n        value.push(val[i]);\n      }\n    }\n    return value;\n  }\n  protected rendredValueFromData(val: any): any {\n    val = this.convertValueFromObject(val);\n    return super.rendredValueFromData(val);\n  }\n  private convertValueFromObject(val: any): any {\n    const valProp = this.getValuePropertyName();\n    if (!valProp || !Array.isArray(val)) return val;\n    const res = [];\n    for (let i = 0; i < val.length; i++) {\n      res.push(this.getRealValue(val[i]));\n    }\n    return res;\n  }\n  protected renderedValueFromDataCore(val: any): any {\n    if (!val || !Array.isArray(val)) val = [];\n    if (!this.hasActiveChoices) return val;\n    for (var i = 0; i < val.length; i++) {\n      if (val[i] == this.otherItem.value) return val;\n      if (this.hasUnknownValueItem(val[i], true, false)) {\n        this.otherValue = val[i];\n        var newVal = val.slice();\n        newVal[i] = this.otherItem.value;\n        return newVal;\n      }\n    }\n    return val;\n  }\n  protected renderedValueToDataCore(val: any): any {\n    if (!val || !val.length) return val;\n    const res = [];\n    const qVal = this.createValueCopy();\n    for (var i = 0; i < val.length; i++) {\n      let index = -1;\n      let valItem = val[i];\n      if (valItem === this.otherItem.value && this.needConvertRenderedOtherToDataValue()) {\n        index = this.getFirstUnknownIndex(qVal);\n        valItem = this.otherValue;\n        if (index > -1) {\n          qVal[index] = this.getValueFromReal(this.otherValue);\n        }\n      } else {\n        index = this.getItemValIndexByItemValue(valItem);\n      }\n      if (index > -1) {\n        res.push(qVal[index]);\n      } else {\n        res.push(this.getValueFromReal(valItem));\n      }\n    }\n    return res;\n  }\n  protected valueToData(val: any): any {\n    if (Helpers.isValueEmpty(val)) return val;\n    if (!Array.isArray(val)) {\n      val = [val];\n    }\n    const valProp = this.getValuePropertyName();\n    if (!valProp) return val;\n    const res = [];\n    for (let i = 0; i < val.length; i++) {\n      const item = val[i];\n      res.push(typeof item === \"object\" ? item : this.getValueFromReal(item));\n    }\n    return res;\n  }\n  protected selectOtherValueFromComment(val: boolean): void {\n    var newVal = [];\n    const rendVal = this.renderedValue;\n    if (Array.isArray(rendVal)) {\n      for (var i = 0; i < rendVal.length; i++) {\n        if (rendVal[i] !== this.otherItem.value) {\n          newVal.push(rendVal[i]);\n        }\n      }\n    }\n    if (val) {\n      newVal.push(this.otherItem.value);\n    }\n    this.value = newVal;\n  }\n  public get checkBoxSvgPath(): string {\n    return \"M5,13l2-2l3,3l7-7l2,2l-9,9L5,13z\";\n  }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  public get a11y_input_ariaRole(): string {\n    return \"group\";\n  }\n  public get a11y_input_ariaRequired(): \"true\" | \"false\" {\n    return null;\n  }\n  // EO a11y\n}\nSerializer.addClass(\"checkboxitem\",\n  [{ name: \"isExclusive:boolean\", locationInTable: \"detail\" }],\n  (value: any) => new CheckboxItem(value), \"choiceitem\");\n\nSerializer.addClass(\n  \"checkbox\",\n  [\n    { name: \"showSelectAllItem:boolean\", alternativeName: \"hasSelectAll\" },\n    { name: \"separateSpecialChoices\", visible: true },\n    { name: \"maxSelectedChoices:number\", default: 0,\n      onSettingValue: (obj: any, val: any): any => {\n        if (val <= 0) return 0;\n        const min = obj.minSelectedChoices;\n        return min > 0 && val < min ? min : val;\n      }\n    },\n    { name: \"minSelectedChoices:number\", default: 0,\n      onSettingValue: (obj: any, val: any): any => {\n        if (val <= 0) return 0;\n        const max = obj.maxSelectedChoices;\n        return max > 0 && val > max ? max : val;\n      }\n    },\n    {\n      name: \"selectAllText\",\n      serializationProperty: \"locSelectAllText\",\n      dependsOn: \"showSelectAllItem\",\n      visibleIf: function (obj: any) {\n        return obj.hasSelectAll;\n      }\n    },\n    {\n      name: \"valuePropertyName\",\n      category: \"data\"\n    },\n    { name: \"itemComponent\", visible: false, default: \"survey-checkbox-item\" }\n  ],\n  function () {\n    return new QuestionCheckboxModel(\"\");\n  },\n  \"checkboxbase\"\n);\nSerializer.getProperty(\"checkbox\", \"choices\").type = \"checkboxitem[]\";\n\nQuestionFactory.Instance.registerQuestion(\"checkbox\", (name) => {\n  var q = new QuestionCheckboxModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n", "import { property } from \"./jsonobject\";\nimport { Action, BaseAction, IAction } from \"./actions/action\";\nimport { IListModel, ListModel } from \"./list\";\n\nexport interface IMultiSelectListModel extends IListModel {\n  selectedItems?: Array<IAction>;\n}\nexport class MultiSelectListModel<T extends BaseAction = Action> extends ListModel<T> {\n  public selectedItems: Array<IAction>;\n  @property() hideSelectedItems: boolean;\n\n  private updateItemState() {\n    this.actions.forEach(action => {\n      const isSelected = this.isItemSelected(action);\n      action.visible = this.hideSelectedItems ? !isSelected : true;\n    });\n  }\n\n  constructor(options: IMultiSelectListModel) {\n    super(options as any);\n    this.setSelectedItems(options.selectedItems || []);\n  }\n\n  public onItemClick = (item: T) => {\n    if (this.isItemDisabled(item)) return;\n\n    this.isExpanded = false;\n    if (this.isItemSelected(item)) {\n      this.selectedItems.splice(this.selectedItems.indexOf(item), 1)[0];\n      !!this.onSelectionChanged && (this.onSelectionChanged(<T>item, \"removed\"));\n    } else {\n      this.selectedItems.push(item);\n      !!this.onSelectionChanged && (this.onSelectionChanged(item, \"added\"));\n    }\n  };\n\n  public isItemDisabled: (itemValue: T) => boolean = (itemValue: T) => {\n    return itemValue.enabled !== undefined && !itemValue.enabled;\n  };\n\n  public isItemSelected: (itemValue: T) => boolean = (itemValue: T) => {\n    return !!this.allowSelection && this.selectedItems.filter(item => this.areSameItems(item, itemValue)).length > 0;\n  };\n  public updateState(): void {\n    this.updateItemState();\n    this.raiseUpdate({ needUpdateIsEmpty: true });\n  }\n\n  public setSelectedItems(newItems: Array<IAction>): void {\n    this.selectedItems = newItems;\n    this.updateState();\n  }\n\n  public selectFocusedItem(): void {\n    super.selectFocusedItem();\n    if (this.hideSelectedItems) {\n      this.focusNextVisibleItem();\n    }\n  }\n}", "import { Action, IAction } from \"./actions/action\";\nimport { ComputedUpdater } from \"./base\";\nimport { DropdownListModel } from \"./dropdownListModel\";\nimport { ItemValue } from \"./itemvalue\";\nimport { property } from \"./jsonobject\";\nimport { IMultiSelectListModel, MultiSelectListModel } from \"./multiSelectListModel\";\nimport { Question } from \"./question\";\nimport { settings } from \"./settings\";\nimport { IsTouch } from \"./utils/devices\";\n\nexport class DropdownMultiSelectListModel extends DropdownListModel {\n  @property({ defaultValue: \"\" }) filterStringPlaceholder: string;\n  @property({ defaultValue: true }) closeOnSelect: boolean;\n\n  public get needRenderInput(): boolean {\n    return !this.question.isInputReadOnly || !!this.filterStringPlaceholder;\n  }\n\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.syncFilterStringPlaceholder();\n  }\n\n  private updateListState() {\n    (<MultiSelectListModel<ItemValue>>this.listModel).updateState();\n    this.updateCustomItemValue();\n    this.syncFilterStringPlaceholder();\n  }\n\n  private syncFilterStringPlaceholder() {\n    const selectedActions = this.getSelectedActions();\n    if (selectedActions.length || this.question.selectedItems.length || this.listModel.focusedItem) {\n      this.filterStringPlaceholder = undefined;\n    } else {\n      this.filterStringPlaceholder = this.question.placeholder;\n    }\n  }\n  private getSelectedActions() {\n    return this.listModel.actions.filter(item => item.selected);\n  }\n  protected getFocusFirstInputSelector(): string {\n    if ((<MultiSelectListModel<ItemValue>>this.listModel).hideSelectedItems && IsTouch && !this.isValueEmpty(this.question.value)) {\n      return this.itemSelector;\n    } else {\n      return super.getFocusFirstInputSelector();\n    }\n  }\n  protected getPopupCssClasses(): string { return \"sv-multi-select-list\"; }\n  protected createListModel(): MultiSelectListModel<ItemValue> {\n    const visibleItems = this.getAvailableItems();\n    let _onSelectionChanged = this.onSelectionChanged;\n    if (!_onSelectionChanged) {\n      _onSelectionChanged = (item: ItemValue, status: string) => {\n        this.resetFilterString();\n        if (item.id === \"selectall\") {\n          this.selectAllItems();\n        } else if (status === \"added\" && item.value === settings.noneItemValue) {\n          this.selectNoneItem();\n        } else if (status === \"added\") {\n          this.selectItem(item.value);\n        } else if (status === \"removed\") {\n          this.deselectItem(item.value);\n        }\n        this.popupRecalculatePosition(false);\n        if (this.closeOnSelect) {\n          this.popupModel.isVisible = false;\n        }\n      };\n    }\n    const listOptions: IMultiSelectListModel = {\n      items: visibleItems,\n      onSelectionChanged: _onSelectionChanged,\n      allowSelection: false,\n      locOwner: this.question,\n      elementId: this.listElementId\n    };\n    const res = new MultiSelectListModel<ItemValue>(listOptions);\n    this.setOnTextSearchCallbackForListModel(res);\n    res.forceShowFilter = this.question.choicesLazyLoadEnabled;\n    return res;\n  }\n\n  @property() previousValue: any;\n  @property({ localizable: { defaultStr: \"tagboxDoneButtonCaption\" } }) doneButtonCaption: string;\n  private get shouldResetAfterCancel() {\n    return IsTouch && !this.closeOnSelect;\n  }\n  protected createPopup(): void {\n    super.createPopup();\n    this.popupModel.onFooterActionsCreated.add((_, opt) => {\n      opt.actions.push(<IAction>{\n        id: \"sv-dropdown-done-button\",\n        title: this.doneButtonCaption,\n        innerCss: \"sv-popup__button--done\",\n        needSpace: true,\n        action: () => { this.popupModel.isVisible = false; },\n        enabled: <boolean>(<any>new ComputedUpdater(() => !this.isTwoValueEquals(this.question.renderedValue, this.previousValue)))\n      });\n    });\n    this.popupModel.onVisibilityChanged.add((_, opt: { isVisible: boolean }) => {\n      if (this.shouldResetAfterCancel && opt.isVisible) {\n        this.previousValue = [].concat(this.question.renderedValue || []);\n      }\n    });\n    this.popupModel.onCancel = () => {\n      if (this.shouldResetAfterCancel) {\n        this.question.renderedValue = this.previousValue;\n        this.updateListState();\n      }\n    };\n  }\n\n  public selectAllItems(): void {\n    this.question.toggleSelectAll();\n    if (this.question.isAllSelected && this.question.hideSelectedItems) {\n      this.popupModel.hide();\n    }\n    this.updateListState();\n  }\n  public selectNoneItem(): void {\n    this.question.renderedValue = [settings.noneItemValue];\n    this.updateListState();\n  }\n  public selectItem(id: string): void {\n    let addedItem;\n\n    if (this.allowCustomChoices && id === this.customItemValue.id) {\n      const newChoice = this.createCustomItem();\n      if (!!newChoice) {\n        addedItem = newChoice.id;\n      }\n    } else {\n      addedItem = id;\n    }\n\n    if (addedItem !== undefined && addedItem !== null) {\n      let newValue = [].concat(this.question.renderedValue || []);\n      newValue.push(addedItem);\n      this.question.renderedValue = newValue;\n      this.updateListState();\n    }\n  }\n  public deselectItem(id: string): void {\n    let newValue = [].concat(this.question.renderedValue || []);\n    newValue.splice(newValue.indexOf(id), 1);\n    this.question.renderedValue = newValue;\n    this.applyHintString();\n    this.updateListState();\n  }\n  public clear(): void {\n    super.clear();\n    this.syncFilterStringPlaceholder();\n  }\n  public onClear(event: any): void {\n    super.onClear(event);\n    this.updateListState();\n  }\n  public setHideSelectedItems(newValue: boolean) {\n    (<MultiSelectListModel<ItemValue>>this.listModel).hideSelectedItems = newValue;\n    this.updateListState();\n  }\n  public removeLastSelectedItem() {\n    this.deselectItem(this.question.renderedValue[this.question.renderedValue.length - 1]);\n    this.popupRecalculatePosition(false);\n  }\n\n  constructor(question: Question, onSelectionChanged?: (item: IAction, ...params: any[]) => void) {\n    super(question, onSelectionChanged);\n    this.setHideSelectedItems(question.hideSelectedItems);\n    this.syncFilterStringPlaceholder();\n    this.closeOnSelect = question.closeOnSelect;\n  }\n\n  public inputKeyHandler(event: any): void {\n    if (event.keyCode === 8 && !this.filterString) {\n      this.removeLastSelectedItem();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public setInputStringFromSelectedItem(newValue: any): void {\n    if (this.question.searchEnabled) {\n      this.inputString = null;\n    }\n  }\n\n  protected focusItemOnClickAndPopup() {\n    return;\n  }\n  protected onEscape() {\n    return;\n  }\n  protected beforeScrollToFocusedItem(focusedItem: ItemValue) {\n    return;\n  }\n\n  protected afterScrollToFocusedItem() {\n    if (!this.listModel.focusedItem?.selected) {\n      this.applyHintString();\n    } else {\n      this.hintString = \"\";\n    }\n    this.syncFilterStringPlaceholder();\n  }\n\n  protected onPropertyChangedHandler(sender: any, options: any) {\n    super.onPropertyChangedHandler(sender, options);\n    if (options.name === \"value\" || options.name === \"renderedValue\" || options.name === \"placeholder\") {\n      this.syncFilterStringPlaceholder();\n    }\n  }\n}", "import { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { QuestionCheckboxModel } from \"./question_checkbox\";\nimport { PopupModel } from \"./popup\";\nimport { DropdownMultiSelectListModel } from \"./dropdownMultiSelectListModel\";\nimport { EventBase } from \"./base\";\nimport { settings } from \"./settings\";\nimport { ItemValue } from \"./itemvalue\";\nimport { updateListCssValues } from \"./utils/utils\";\nimport { Helpers } from \"./helpers\";\n\n/**\n * A class that describes the Multi-Select Dropdown (Tag Box) question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/ (linkStyle))\n */\nexport class QuestionTagboxModel extends QuestionCheckboxModel {\n  private dropdownListModelValue: DropdownMultiSelectListModel;\n  private itemDisplayNameMap: { [key: string]: string} = {};\n  private deselectAllItemText: LocalizableString;\n  private isChoicesLoading: boolean;\n\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.deselectAllItemText = this.createLocalizableString(\"deselectAllText\", this.selectAllItem, true, \"deselectAllItemText\");\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"showOtherItem\", \"otherText\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    this.dropdownListModelValue?.locStrsChanged();\n  }\n  private updateReadOnlyText(): void {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n  protected getDefaultItemComponent(): string {\n    return \"\";\n  }\n  public get dropdownListModel(): DropdownMultiSelectListModel {\n    if (!this.isDisposed && !this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownMultiSelectListModel(this);\n    }\n    return this.dropdownListModelValue;\n  }\n  public set dropdownListModel(val: DropdownMultiSelectListModel) {\n    this.dropdownListModelValue = val;\n  }\n  /**\n   * Specifies a comparison operation used to filter the drop-down list. Applies only if [`searchEnabled`](#searchEnabled) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"contains\"` (default)\n   * - `\"startsWith\"`\n   * @see [SurveyModel.onChoicesSearch](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onChoicesSearch)\n   */\n  @property() searchMode: \"contains\" | \"startsWith\";\n\n  /**\n   * Specifies whether users can add their own choices if the desired option isn't available in the dropdown.\n   *\n   * Default value: `false`\n   *\n   *>  Custom choices will only be stored temporarily for the duration of the current browser session. If you want to save them in a data storage, handle the [`onCreateCustomChoiceItem`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCreateCustomChoiceItem) event.\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionTagboxModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setAllowCustomChoices(newValue);\n      }\n    }\n  }) allowCustomChoices: boolean;\n\n  /**\n   * Specifies whether to display a button that clears the selected value.\n   */\n  @property() allowClear: boolean;\n  /**\n   * Specifies whether users can enter a value into the input field to filter the drop-down list.\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionTagboxModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setSearchEnabled(newValue);\n      }\n    }\n  }) searchEnabled: boolean;\n\n  /**\n   * Specifies whether to remove selected items from the drop-down list.\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionTagboxModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setHideSelectedItems(newValue);\n      }\n    }\n  })\n    hideSelectedItems: boolean;\n  /**\n   * Enables lazy loading. If you set this property to `true`, you should implement the Survey's [`onChoicesLazyLoad`](https://surveyjs.io/form-library/documentation/surveymodel#onChoicesLazyLoad) event handler.\n   * @see choicesLazyLoadPageSize\n   * @see SurveyModel.onChoicesLazyLoad\n   */\n  @property({\n    onSet: (newValue: boolean, target: QuestionTagboxModel) => {\n      if (!!target.dropdownListModelValue) {\n        target.dropdownListModel.setChoicesLazyLoadEnabled(newValue);\n      }\n    }\n  }) choicesLazyLoadEnabled: boolean;\n  /**\n   * Specifies the number of choice items to load at a time when choices are loaded on demand.\n   * @see choicesLazyLoadEnabled\n   * @see SurveyModel.onChoicesLazyLoad\n   */\n  @property() choicesLazyLoadPageSize: number;\n  /**\n   * Specifies whether to close the drop-down menu after a user selects a value.\n   */\n  @property({ getDefaultValue: () => { return settings.tagboxCloseOnSelect; } }) closeOnSelect: number;\n\n  @property() textWrapEnabled: boolean;\n\n  /**\n   * A text displayed in the input field when it doesn't have a value.\n   */\n  public get placeholder(): string {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  public set placeholder(val: string) {\n    this.setLocalizableStringText(\"placeholder\", val);\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.setInputPlaceholder(val);\n    }\n  }\n  get locPlaceholder(): LocalizableString {\n    return this.getLocalizableString(\"placeholder\");\n  }\n\n  public get readOnlyText(): string {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  public set readOnlyText(val: string) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText(): LocalizableString {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n\n  public getType(): string {\n    return \"tagbox\";\n  }\n  public supportMultipleComment(item: ItemValue): boolean { return item === this.otherItem; }\n  public get a11yInputAriaRole(): string | null {\n    return \"combobox\";\n  }\n  public get popupModel(): PopupModel {\n    return this.dropdownListModel.popupModel;\n  }\n\n  public getControlClass(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.control)\n      .append(this.cssClasses.controlEmpty, this.isEmpty())\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.controlEditable, !this.isDisabledStyle && !this.isReadOnlyStyle && !this.isPreviewStyle)\n      .append(this.cssClasses.controlDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.controlPreview, this.isPreviewStyle)\n      .toString();\n  }\n  protected updateCssClasses(res: any, css: any): void {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModel.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  public onOpened: EventBase<QuestionTagboxModel> = this.addEvent<QuestionTagboxModel>();\n  public onOpenedCallBack(): void {\n    this.onOpened.fire(this, { question: this, choices: this.choices });\n  }\n\n  protected hasUnknownValue(val: any, includeOther: boolean = false,\n    isFilteredChoices: boolean = true, checkEmptyValue: boolean = false): boolean {\n    if (this.choicesLazyLoadEnabled) return false;\n    return super.hasUnknownValue(val, includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  protected needConvertRenderedOtherToDataValue(): boolean {\n    const val = this.otherValue?.trim();\n    if (!val) return false;\n    return super.hasUnknownValue(val, true, false);\n  }\n  protected onVisibleChoicesChanged(): void {\n    super.onVisibleChoicesChanged();\n\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.updateItems();\n    }\n  }\n  protected getItemIfChoicesNotContainThisValue(value: any, text?: string): any {\n    if (this.choicesLazyLoadEnabled) {\n      return this.createItemValue(value, text);\n    } else {\n      return super.getItemIfChoicesNotContainThisValue(value, text);\n    }\n  }\n  protected validateItemValues(itemValues: Array<ItemValue>): Array<ItemValue> {\n    this.updateItemDisplayNameMap();\n    const val = this.renderedValue as Array<any>;\n    if (!!itemValues.length && itemValues.length === val.length) return itemValues;\n\n    const selectedItemValues = this.selectedItemValues;\n    if (!itemValues.length && !!selectedItemValues && !!selectedItemValues.length) {\n      this.defaultSelectedItemValues = [].concat(selectedItemValues);\n      return selectedItemValues;\n    }\n\n    const itemValueValues = itemValues.map(iV => iV.value);\n    val.filter(item => { return itemValueValues.indexOf(item) === -1; }).forEach(item => {\n      const newItem = this.getItemIfChoicesNotContainThisValue(item, this.itemDisplayNameMap[item]);\n      if (newItem) {\n        itemValues.push(newItem);\n      }\n    });\n    itemValues.sort((a, b) => { return val.indexOf(a.value) - val.indexOf(b.value); });\n    return itemValues;\n  }\n\n  updateItemDisplayNameMap(): void {\n    const func = (item: ItemValue) => { this.itemDisplayNameMap[item.value] = item.text; };\n    (this.defaultSelectedItemValues || []).forEach(func);\n    (this.selectedItemValues as Array<ItemValue> || []).forEach(func);\n    this.visibleChoices.forEach(func);\n  }\n\n  protected getIsQuestionReady(): boolean {\n    return super.getIsQuestionReady() && !this.isChoicesLoading;\n  }\n\n  protected ensureQuestionIsReady(): void {\n    super.ensureQuestionIsReady();\n    if (!!this.dropdownListModel && this.choicesLazyLoadEnabled) {\n      this.dropdownListModel.loadQuestionChoices();\n    }\n  }\n\n  protected valueFromData(val: any): any {\n    const value = super.valueFromData(val);\n    if (!!value && value.length > 0 && this.allowCustomChoices && !this.choicesLazyLoadEnabled) {\n      value.forEach(v => {\n        const item = this.visibleChoices.filter(ch => Helpers.isTwoValueEquals(ch.id, v, false, false))[0];\n        if (!item) {\n          const newChoice = new ItemValue(v);\n          this.customChoices.push(newChoice);\n        }\n      });\n    }\n    return value;\n  }\n\n  public setIsChoicesLoading(value: boolean) {\n    this.isChoicesLoading = value;\n    this.updateIsReady();\n  }\n\n  protected canAddCustomChoices(): boolean {\n    return this.allowCustomChoices;\n  }\n  protected getFirstInputElementId(): string {\n    return this.inputId + (this.searchEnabled || this.allowCustomChoices ? \"_0\" : \"\");\n  }\n  public getInputId(): string {\n    return this.inputId + \"_0\";\n  }\n  protected supportEmptyValidation(): boolean { return true; }\n  protected onBlurCore(event: any): void {\n    this.dropdownListModel.onBlur(event);\n    super.onBlurCore(event);\n  }\n  protected onFocusCore(event: any): void {\n    this.dropdownListModel.onFocus(event);\n    super.onFocusCore(event);\n  }\n  protected allElementsSelected(): boolean {\n    const result = super.allElementsSelected();\n    this.updateSelectAllItemText(result);\n    return result;\n  }\n\n  public updateSelectAllItemText(isAllSelected: boolean): void {\n    this.selectAllItem.setLocText(isAllSelected ? this.deselectAllItemText : this.selectAllItemText);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n  public clearValue(keepComment?: boolean): void {\n    super.clearValue(keepComment);\n    this.dropdownListModelValue?.clear();\n  }\n  public get showClearButton(): boolean {\n    return this.allowClear && !this.isEmpty();\n  }\n}\n\nSerializer.addClass(\n  \"tagbox\",\n  [\n    { name: \"placeholder\", serializationProperty: \"locPlaceholder\" },\n    { name: \"allowClear:boolean\", default: true },\n    { name: \"searchEnabled:boolean\", default: true },\n    {\n      name: \"allowCustomChoices:boolean\", default: false,\n      visibleIf: (obj: any): boolean => !obj.choicesFromQuestion, dependsOn: \"choicesFromQuestion\"\n    },\n    { name: \"textWrapEnabled:boolean\", default: true },\n    { name: \"choicesLazyLoadEnabled:boolean\", default: false, visible: false },\n    { name: \"choicesLazyLoadPageSize:number\", default: 25, visible: false },\n    { name: \"hideSelectedItems:boolean\", default: false },\n    { name: \"closeOnSelect:boolean\" },\n    { name: \"itemComponent\", visible: false, default: \"\" },\n    { name: \"searchMode\", default: \"contains\", choices: [\"contains\", \"startsWith\"] }\n  ],\n  function () {\n    return new QuestionTagboxModel(\"\");\n  },\n  \"checkbox\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"tagbox\", (name) => {\n  const q = new QuestionTagboxModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});", "import { QuestionRankingModel } from \"../question_ranking\";\nimport { ImageItemValue } from \"../question_imagepicker\";\nimport { ItemValue } from \"../itemvalue\";\nimport { QuestionSelectBase } from \"../question_baseselect\";\nimport { DragDropCore } from \"./core\";\nimport { DomDocumentHelper } from \"../global_variables_utils\";\n\nexport class DragDropChoices extends DragDropCore<QuestionSelectBase> {\n  private imagepickerControlsNode: HTMLElement;\n\n  protected get draggedElementType(): string {\n    return \"item-value\";\n  }\n\n  protected createDraggedElementShortcut(\n    text: string,\n    draggedElementNode: HTMLElement,\n    event: PointerEvent\n  ): HTMLElement {\n    if (this.parentElement.getType() === \"imagepicker\") {\n      return this.createImagePickerShortcut(this.draggedElement, text, draggedElementNode, event);\n    }\n    const draggedElementShortcut: any = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n\n    // draggedElementShortcut.innerText = text;\n    draggedElementShortcut.className = \"sv-drag-drop-choices-shortcut\";\n\n    const isDeepClone = true;\n    const clone = <HTMLElement>(\n      draggedElementNode\n        .closest(\"[data-sv-drop-target-item-value]\")\n        .cloneNode(isDeepClone)\n    );\n    clone.classList.add(\"sv-drag-drop-choices-shortcut__content\");\n\n    const dragIcon: any = clone.querySelector(\".svc-item-value-controls__drag-icon\");\n    dragIcon.style.visibility = \"visible\";\n\n    const removeIcon: any = clone.querySelector(\".svc-item-value-controls__remove\");\n    removeIcon.style.backgroundColor = \"transparent\";\n\n    clone.classList.remove(\"svc-item-value--moveup\");\n    clone.classList.remove(\"svc-item-value--movedown\");\n    this.draggedElement.isDragDropMoveDown = false;\n    this.draggedElement.isDragDropMoveUp = false;\n\n    draggedElementShortcut.appendChild(clone);\n\n    const rect = draggedElementNode.getBoundingClientRect();\n    draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n    draggedElementShortcut.shortcutYOffset = event.clientY - rect.y;\n\n    this.isBottom = null;\n\n    if (typeof this.onShortcutCreated === \"function\") {\n      this.onShortcutCreated(draggedElementShortcut);\n    }\n\n    return draggedElementShortcut;\n  }\n\n  public onShortcutCreated: (node: HTMLElement) => void;\n\n  private createImagePickerShortcut(item: ImageItemValue, text: string, draggedElementNode: HTMLElement, event: PointerEvent) {\n    const draggedElementShortcut: any = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n\n    draggedElementShortcut.classList.add(\"sv-drag-drop-image-picker-shortcut\");\n\n    const itemValueNode = draggedElementNode.closest(\"[data-sv-drop-target-item-value]\");\n    this.imagepickerControlsNode = itemValueNode.querySelector(\".svc-image-item-value-controls\");\n    const imageContainerNode: any = itemValueNode.querySelector(\".sd-imagepicker__image-container\");\n    let imageNode: any = itemValueNode.querySelector(item.imageLink ? \"img\" : \".sd-imagepicker__no-image\").cloneNode(true);\n\n    if (!!this.imagepickerControlsNode) {\n      this.imagepickerControlsNode.style.display = \"none\";\n    }\n    imageContainerNode.style.width = imageNode.width + \"px\";\n    imageContainerNode.style.height = imageNode.height + \"px\";\n\n    imageNode.style.objectFit = \"cover\";\n    imageNode.style.borderRadius = \"4px\";\n\n    draggedElementShortcut.appendChild(imageNode);\n\n    return draggedElementShortcut;\n  }\n\n  protected getDropTargetByDataAttributeValue(\n    dataAttributeValue: string\n  ): ItemValue {\n    let dragOverChoice;\n\n    dragOverChoice = this.parentElement.choices.filter(\n      (choice: ItemValue) => \"\" + choice.value == dataAttributeValue\n    )[0];\n\n    return dragOverChoice;\n  }\n\n  private getChoices() {\n    const parent = this.parentElement;\n    if (parent.getType() === \"ranking\") {\n      if (parent.selectToRankEnabled) {\n        return parent.unRankingChoices;\n      } else {\n        return <QuestionRankingModel>parent.rankingChoices;\n      }\n    }\n    return parent.visibleChoices;\n  }\n\n  protected doDragOver = (): any => {\n    if (this.parentElement.getType() === \"imagepicker\") return;\n    const node = this.domAdapter.draggedElementShortcut.querySelector<HTMLElement>(\".svc-item-value-controls__button\");\n    node.style.cursor = \"grabbing\";\n  };\n\n  protected isDropTargetValid(\n    dropTarget: ItemValue,\n    dropTargetNode?: HTMLElement\n  ): boolean {\n    const choices = this.getChoices();\n\n    if (this.parentElement.getType() !== \"imagepicker\") {\n      const dropTargetIndex = choices.indexOf(this.dropTarget);\n      const draggedElementIndex = choices.indexOf(this.draggedElement);\n\n      if (draggedElementIndex > dropTargetIndex && this.dropTarget.isDragDropMoveUp) {\n        this.dropTarget.isDragDropMoveUp = false;\n        return false;\n      }\n\n      if (draggedElementIndex < dropTargetIndex && this.dropTarget.isDragDropMoveDown) {\n        this.dropTarget.isDragDropMoveDown = false;\n        return false;\n      }\n    }\n\n    // shouldn't allow to drop on \"adorners\" (selectall, none, other)\n    if (choices.indexOf(dropTarget) === -1) return false;\n\n    return true;\n  }\n\n  protected doBanDropHere = (): any => {\n    if (this.parentElement.getType() === \"imagepicker\") return;\n    const node = this.domAdapter.draggedElementShortcut.querySelector<HTMLElement>(\".svc-item-value-controls__button\");\n    node.style.cursor = \"not-allowed\";\n  };\n\n  protected isDropTargetDoesntChanged(newIsBottom: boolean): boolean {\n    return (\n      this.dropTarget === this.prevDropTarget && newIsBottom === this.isBottom\n    );\n  }\n\n  protected calculateIsBottom(clientY: number, dropTargetNode?: HTMLElement): boolean {\n    const rect = dropTargetNode.getBoundingClientRect();\n    return clientY >= rect.y + rect.height / 2;\n  }\n\n  protected afterDragOver(dropTargetNode: HTMLElement): void {\n    //if (this.isDropTargetDoesntChanged(this.isBottom)) return;\n\n    const choices = this.getChoices();\n    const dropTargetIndex = choices.indexOf(this.dropTarget);\n    const draggedElementIndex = choices.indexOf(this.draggedElement);\n\n    if (draggedElementIndex < dropTargetIndex && this.isBottom === true) {\n      // drag \"down\"\n      choices.splice(draggedElementIndex, 1);\n      choices.splice(dropTargetIndex, 0, this.draggedElement);\n    } else if (draggedElementIndex > dropTargetIndex && this.isBottom === false) {\n      // drag \"up\"\n      choices.splice(dropTargetIndex, 1);\n      choices.splice(draggedElementIndex, 0, this.dropTarget);\n    } else {\n      return;\n    }\n\n    if (this.parentElement.getType() === \"imagepicker\") return;\n\n    if (draggedElementIndex !== dropTargetIndex) {\n      dropTargetNode.classList.remove(\"svc-item-value--moveup\");\n      dropTargetNode.classList.remove(\"svc-item-value--movedown\");\n      this.dropTarget.isDragDropMoveDown = false;\n      this.dropTarget.isDragDropMoveUp = false;\n    }\n\n    if (draggedElementIndex > dropTargetIndex) {\n      this.dropTarget.isDragDropMoveDown = true;\n    }\n\n    if (draggedElementIndex < dropTargetIndex) {\n      this.dropTarget.isDragDropMoveUp = true;\n    }\n    super.ghostPositionChanged();\n  }\n\n  protected doDrop(): any {\n    const choices = this.parentElement.choices;\n    const filteredChoices = this.getChoices().filter((item: any) => {\n      return choices.indexOf(item) !== -1;\n    });\n\n    const oldIndex = choices.indexOf(this.draggedElement);\n    let newIndex = filteredChoices.indexOf(this.draggedElement);\n\n    choices.splice(oldIndex, 1);\n    choices.splice(newIndex, 0, this.draggedElement);\n\n    return this.parentElement;\n  }\n\n  public clear(): void {\n    if (!!this.parentElement) {\n      this.updateVisibleChoices(this.parentElement);\n    }\n    if (!!this.imagepickerControlsNode) {\n      this.imagepickerControlsNode.style.display = \"flex\";\n      this.imagepickerControlsNode = null;\n    }\n    super.clear();\n  }\n\n  private updateVisibleChoices(parent: any) {\n    parent.getType() === \"ranking\" ?\n      parent.updateRankingChoices() :\n      parent[\"updateVisibleChoices\"]();\n  }\n}\n", "import { ItemValue } from \"../itemvalue\";\nimport { DragDropChoices } from \"./choices\";\nimport { CssClassBuilder } from \"../utils/cssClassBuilder\";\nimport { IsMobile, IsTouch } from \"../utils/devices\";\nimport { DomDocumentHelper } from \"../global_variables_utils\";\nimport { QuestionRankingModel } from \"../question_ranking\";\nexport class DragDropRankingChoices extends DragDropChoices {\n  protected get draggedElementType(): string {\n    return \"ranking-item\";\n  }\n\n  protected createDraggedElementShortcut(\n    text: string,\n    draggedElementNode: HTMLElement,\n    event: PointerEvent\n  ): HTMLElement {\n    const draggedElementShortcut: any = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n\n    draggedElementShortcut.className = this.shortcutClass + \" sv-ranking-shortcut\";\n\n    const isDeepClone = true;\n    const clone = <HTMLElement>draggedElementNode.cloneNode(isDeepClone);\n    draggedElementShortcut.appendChild(clone);\n\n    const rect = draggedElementNode.getBoundingClientRect();\n\n    draggedElementShortcut.style.left = rect.x;\n    draggedElementShortcut.style.top = rect.y;\n    this.domAdapter.rootElement.append(draggedElementShortcut);\n    const shortcutHeight = draggedElementShortcut.offsetHeight;\n    let clientY = event.clientY;\n\n    if (clientY > rect.y + shortcutHeight) {\n      clientY = rect.y + shortcutHeight - 10; //TODO\n    }\n\n    draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n    draggedElementShortcut.shortcutYOffset = clientY - rect.y;\n\n    if (this.parentElement && this.parentElement.useFullItemSizeForShortcut) {\n      draggedElementShortcut.style.width = draggedElementNode.offsetWidth + \"px\";\n      draggedElementShortcut.style.height = draggedElementNode.offsetHeight + \"px\";\n    }\n\n    return draggedElementShortcut;\n  }\n\n  private get shortcutClass(): string {\n    return new CssClassBuilder()\n      .append(this.parentElement.cssClasses.root)\n      .append(this.parentElement.cssClasses.rootMobileMod, IsMobile)\n      .toString();\n  }\n\n  protected getDropTargetByDataAttributeValue(dataAttributeValue: string): ItemValue {\n    return this.parentElement.rankingChoices[dataAttributeValue];\n  }\n\n  private isDragOverRootNode: boolean = false;\n\n  protected findDropTargetNodeByDragOverNode(dragOverNode: HTMLElement): HTMLElement {\n    this.isDragOverRootNode = this.getIsDragOverRootNode(dragOverNode);\n    return super.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n\n  private getIsDragOverRootNode(dragOverNode: HTMLElement) {\n    // dragOverNode might be <path></path> for example and the className prop is obj\n    return typeof dragOverNode.className === \"string\" &&\n      dragOverNode.className.indexOf(\"sv-ranking\") !== -1;\n  }\n\n  protected isDropTargetValid(\n    dropTarget: ItemValue,\n    dropTargetNode?: HTMLElement\n  ): boolean {\n    const choices = this.parentElement.rankingChoices;\n    if (choices.indexOf(dropTarget) === -1)\n      // shouldn't allow to drop on \"adorners\" (selectall, none, other)\n      return false;\n\n    return true;\n  }\n  protected calculateIsBottom(clientY: number, dropTargetNode?: HTMLElement): boolean {\n    if (this.dropTarget instanceof ItemValue && this.draggedElement !== this.dropTarget) {\n      return super.calculateIsBottom(clientY, dropTargetNode);\n    }\n    return false;\n  }\n\n  protected doDragOver = (): any => {\n    const node = this.domAdapter.draggedElementShortcut.querySelector<HTMLElement>(\".sv-ranking-item\");\n    node.style.cursor = \"grabbing\";\n  };\n  public getIndices(model: any, fromChoicesArray: Array<ItemValue>, toChoicesArray: Array<ItemValue>) {\n    let fromIndex = fromChoicesArray.indexOf(this.draggedElement);\n    let toIndex = toChoicesArray.indexOf(this.dropTarget);\n    if (fromIndex < 0 && !!this.draggedElement) {\n      this.draggedElement = ItemValue.getItemByValue(fromChoicesArray, this.draggedElement.value) || this.draggedElement;\n      fromIndex = fromChoicesArray.indexOf(this.draggedElement);\n    }\n    if (toIndex === -1) {\n      const length = model.value.length;\n      toIndex = length;\n    } else if (fromChoicesArray == toChoicesArray) {\n      if (!this.isBottom && fromIndex < toIndex) toIndex--;\n      if (this.isBottom && fromIndex > toIndex) toIndex ++;\n    } else if (fromChoicesArray != toChoicesArray) {\n      if (this.isBottom) toIndex++;\n    }\n\n    return { fromIndex, toIndex };\n  }\n\n  protected afterDragOver(dropTargetNode: HTMLElement): void {\n    const { fromIndex, toIndex } = this.getIndices(this.parentElement, this.parentElement.rankingChoices, this.parentElement.rankingChoices);\n    this.reorderRankedItem(this.parentElement as QuestionRankingModel, fromIndex, toIndex);\n  }\n\n  public reorderRankedItem = (questionModel: QuestionRankingModel, fromIndex: number, toIndex: number): void => {\n    if (fromIndex == toIndex) return;\n    const rankingChoices = questionModel.rankingChoices;\n    const item = rankingChoices[fromIndex];\n    questionModel.isValueSetByUser = true;\n\n    rankingChoices.splice(fromIndex, 1);\n    rankingChoices.splice(toIndex, 0, item);\n\n    this.updateDraggedElementShortcut(toIndex + 1);\n  };\n\n  protected updateDraggedElementShortcut(newIndex: number) {\n    if (this.domAdapter?.draggedElementShortcut) {\n      const newIndexText = newIndex !== null ? newIndex + \"\" : \"\";\n      // TODO should avoid direct DOM manipulation, do through the frameworks instead\n      const indexNode: HTMLElement = this.domAdapter.draggedElementShortcut.querySelector(\n        \".sv-ranking-item__index\"\n      );\n      indexNode.innerText = newIndexText;\n    }\n  }\n\n  protected ghostPositionChanged(): void {\n    this.parentElement.currentDropTarget = this.draggedElement;\n    super.ghostPositionChanged();\n  }\n\n  protected doBanDropHere = (): any => {\n    if (this.isDragOverRootNode) {\n      this.allowDropHere = true;\n      return;\n    }\n\n    const node = this.domAdapter.draggedElementShortcut.querySelector<HTMLElement>(\".sv-ranking-item\");\n    node.style.cursor = \"not-allowed\";\n\n    if (IsTouch) {\n      this.parentElement.updateRankingChoices(true);\n    }\n  };\n\n  protected doDrop(): any {\n    this.parentElement.setValue();\n    return this.parentElement;\n  }\n\n  public clear(): void {\n    if (!!this.parentElement) {\n      this.parentElement.dropTargetNodeMove = null;\n      this.parentElement.updateRankingChoices(true);\n    }\n    super.clear();\n  }\n}\n", "import { ItemValue } from \"../itemvalue\";\nimport { DragDropRankingChoices } from \"./ranking-choices\";\nimport { QuestionRankingModel } from \"../question_ranking\";\n\nexport class DragDropRankingSelectToRank extends DragDropRankingChoices {\n  protected findDropTargetNodeByDragOverNode(\n    dragOverNode: HTMLElement\n  ): HTMLElement {\n    if (dragOverNode.dataset.ranking === \"from-container\" || dragOverNode.dataset.ranking === \"to-container\") {\n      return dragOverNode;\n    }\n\n    let toContainer: HTMLElement = dragOverNode.closest(\"[data-ranking='to-container']\");\n    let fromContainer: HTMLElement = dragOverNode.closest(\"[data-ranking='from-container']\");\n\n    if (this.parentElement.unRankingChoices.length === 0 && fromContainer) return fromContainer;\n    if (this.parentElement.rankingChoices.length === 0 && toContainer) return toContainer;\n\n    return super.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n\n  protected getDropTargetByDataAttributeValue(dataAttributeValue: string): ItemValue {\n    return this.parentElement.rankingChoices[dataAttributeValue] || this.parentElement.unRankingChoices[dataAttributeValue];\n  }\n\n  protected getDropTargetByNode(\n    dropTargetNode: HTMLElement,\n    event: PointerEvent\n  ): any {\n    if (dropTargetNode.dataset.ranking === \"to-container\") {\n      return \"to-container\";\n    }\n\n    if (dropTargetNode.dataset.ranking === \"from-container\" || dropTargetNode.closest(\"[data-ranking='from-container']\")) {\n      return \"from-container\";\n    }\n\n    return super.getDropTargetByNode(dropTargetNode, event);\n  }\n\n  protected isDropTargetValid(\n    dropTarget: ItemValue | string,\n    dropTargetNode?: HTMLElement\n  ): boolean {\n    if (dropTarget === \"to-container\" || dropTarget === \"from-container\") {\n      return true;\n    } else {\n      return super.isDropTargetValid(<ItemValue>dropTarget, dropTargetNode);\n    }\n  }\n\n  protected afterDragOver(dropTargetNode: HTMLElement): void {\n    const questionModel: any = this.parentElement;\n    const rankingChoices = questionModel.rankingChoices;\n    const unRankingChoices = questionModel.unRankingChoices;\n\n    if (this.isDraggedElementUnranked && this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, unRankingChoices, rankingChoices, this.selectToRank);\n      return;\n    }\n\n    if (this.isDraggedElementRanked && this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, rankingChoices, rankingChoices, this.reorderRankedItem);\n      return;\n    }\n\n    if (this.isDraggedElementRanked && !this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, rankingChoices, unRankingChoices, this.unselectFromRank);\n      return;\n    }\n  }\n\n  public doRankBetween(\n    dropTargetNode: HTMLElement,\n    fromChoicesArray: Array<ItemValue>,\n    toChoicesArray: Array<ItemValue>,\n    rankFunction: Function\n  ): void {\n    const questionModel: any = this.parentElement;\n\n    let { fromIndex, toIndex } = this.getIndices(questionModel, fromChoicesArray, toChoicesArray);\n\n    rankFunction(questionModel, fromIndex, toIndex, dropTargetNode);\n  }\n\n  private get isDraggedElementRanked() {\n    return this.parentElement.rankingChoices.indexOf(this.draggedElement) !== -1;\n  }\n\n  private get isDropTargetRanked() {\n    if (this.dropTarget === \"to-container\") return true;\n    return this.parentElement.rankingChoices.indexOf(this.dropTarget) !== -1;\n  }\n\n  private get isDraggedElementUnranked() {\n    return !this.isDraggedElementRanked;\n  }\n\n  private updateChoices(questionModel: QuestionRankingModel, rankingChoices: Array<ItemValue>) {\n    questionModel.isValueSetByUser = true;\n    questionModel.rankingChoices = rankingChoices;\n    questionModel.updateUnRankingChoices(rankingChoices);\n  }\n\n  public selectToRank = (questionModel: QuestionRankingModel, fromIndex: number, toIndex: number): void => {\n    const rankingChoices = [].concat(questionModel.rankingChoices);\n    const unRankingChoices = questionModel.unRankingChoices;\n    const item = unRankingChoices[fromIndex];\n    rankingChoices.splice(toIndex, 0, item);\n    this.updateChoices(questionModel, rankingChoices);\n  };\n\n  public unselectFromRank = (questionModel: QuestionRankingModel, fromIndex: number, toIndex?: number): void => {\n    const rankingChoices = [].concat(questionModel.rankingChoices);\n    rankingChoices.splice(fromIndex, 1);\n    this.updateChoices(questionModel, rankingChoices);\n  };\n}\n", "import { ISurveyImpl } from \"./base-interfaces\";\nimport { DragDropRankingChoices } from \"./dragdrop/ranking-choices\";\nimport { DragDropRankingSelectToRank } from \"./dragdrop/ranking-select-to-rank\";\nimport { ItemValue } from \"./itemvalue\";\nimport { property, propertyArray, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { QuestionCheckboxModel } from \"./question_checkbox\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { IsMobile } from \"./utils/devices\";\nimport { Helpers } from \"./helpers\";\nimport { settings } from \"../src/settings\";\nimport { AnimationGroup, IAnimationGroupConsumer } from \"./utils/animation\";\nimport { DragOrClickHelper } from \"./utils/dragOrClickHelper\";\nimport { classesToSelector } from \"./utils/utils\";\n\n/**\n * A class that describes the Ranking question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-ranking/ (linkStyle))\n */\nexport class QuestionRankingModel extends QuestionCheckboxModel {\n  private domNode: HTMLElement = null;\n  private dragOrClickHelper: DragOrClickHelper;\n\n  constructor(name: string) {\n    super(name);\n    this.registerFunctionOnPropertyValueChanged(\"selectToRankEnabled\", () => {\n      this.clearValue(true);\n      this.setDragDropRankingChoices();\n      this.updateRankingChoicesSync();\n    });\n    this.dragOrClickHelper = new DragOrClickHelper(this.startDrag);\n  }\n\n  public getType(): string {\n    return \"ranking\";\n  }\n\n  public getItemTabIndex(item: ItemValue) {\n    if (this.isDesignMode || item.disabled) return undefined;\n    return 0;\n  }\n  protected supportContainerQueries() {\n    return this.selectToRankEnabled;\n  }\n  public get rootClass(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootMobileMod, this.isMobileMode())\n      .append(this.cssClasses.rootDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.rootReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.rootPreview, this.isPreviewStyle)\n      .append(this.cssClasses.rootDesignMode, !!this.isDesignMode)\n      .append(this.cssClasses.itemOnError, this.hasCssError())\n      .append(this.cssClasses.rootDragHandleAreaIcon, settings.rankingDragHandleArea === \"icon\")\n      .append(this.cssClasses.rootSelectToRankMod, this.selectToRankEnabled)\n      .append(this.cssClasses.rootSelectToRankEmptyValueMod, this.isEmpty())\n      .append(this.cssClasses.rootSelectToRankAlignHorizontal, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"horizontal\")\n      .append(this.cssClasses.rootSelectToRankAlignVertical, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"vertical\")\n      .append(this.cssClasses.rootSelectToRankSwapAreas, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"horizontal\" && this.selectToRankSwapAreas)\n      .toString();\n  }\n  protected isItemSelectedCore(item: ItemValue): boolean {\n    if (this.selectToRankEnabled) {\n      return super.isItemSelectedCore(item);\n    }\n    return true;\n  }\n  protected getItemClassCore(item: ItemValue, options: any): string {\n    return new CssClassBuilder()\n      .append(super.getItemClassCore(item, options))\n      .append(this.cssClasses.itemGhostMod, this.currentDropTarget === item)\n      .toString();\n  }\n\n  public getContainerClasses(containerType?: string) {\n    let isEmpty = false;\n    const isToContainer = containerType === \"to\";\n    const isFromContainer = containerType === \"from\";\n\n    if (isToContainer) {\n      isEmpty = this.renderedRankingChoices.length === 0;\n    } else if (isFromContainer) {\n      isEmpty = this.renderedUnRankingChoices.length === 0;\n    }\n\n    return new CssClassBuilder()\n      .append(this.cssClasses.container)\n      .append(this.cssClasses.containerToMode, isToContainer)\n      .append(this.cssClasses.containerFromMode, isFromContainer)\n      .append(this.cssClasses.containerEmptyMode, isEmpty)\n      .toString();\n  }\n\n  protected isItemCurrentDropTarget(item: ItemValue): boolean {\n    return this.dragDropRankingChoices.dropTarget === item;\n  }\n\n  public get ghostPositionCssClass(): string {\n    if (this.ghostPosition === \"top\")\n      return this.cssClasses.dragDropGhostPositionTop;\n    if (this.ghostPosition === \"bottom\")\n      return this.cssClasses.dragDropGhostPositionBottom;\n    return \"\";\n  }\n\n  public getItemIndexClasses(item: ItemValue) {\n    let noNumber;\n\n    if (this.selectToRankEnabled) {\n      noNumber = this.unRankingChoices.indexOf(item) !== -1;\n    } else {\n      noNumber = this.isEmpty();\n    }\n\n    return new CssClassBuilder()\n      .append(this.cssClasses.itemIndex)\n      .append(this.cssClasses.itemIndexEmptyMode, noNumber)\n      .toString();\n  }\n\n  public getNumberByIndex(index: number): string {\n    return this.isEmpty() ? \"\" : index + 1 + \"\";\n  }\n\n  private updateRankingChoicesSync() {\n    this.blockAnimations();\n    this.updateRankingChoices();\n    this.releaseAnimations();\n  }\n\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean) {\n    super.setSurveyImpl(value, isLight);\n    this.setDragDropRankingChoices();\n    this.updateRankingChoicesSync();\n  }\n  public isAnswerCorrect(): boolean {\n    return Helpers.isArraysEqual(this.value, this.correctAnswer, false);\n  }\n  get requireStrictCompare(): boolean { return true; }\n  onSurveyValueChanged(newValue: any) {\n    super.onSurveyValueChanged(newValue);\n    if (this.isLoadingFromJson) return;\n    this.updateRankingChoices();\n  }\n  onSurveyLoad(): void {\n    this.blockAnimations();\n    super.onSurveyLoad();\n    this.updateRankingChoices();\n    this.releaseAnimations();\n  }\n\n  protected onVisibleChoicesChanged = (): void => {\n    super.onVisibleChoicesChanged();\n\n    if (this.carryForwardStartUnranked && !this.isValueSetByUser && !this.selectToRankEnabled && !this.defaultValue) {\n      this.value = [];\n    }\n\n    // ranking question with only one choice doesn't make sense\n    if (this.visibleChoices.length === 1 && !this.selectToRankEnabled) {\n      this.value = [];\n      this.value.push(this.visibleChoices[0].value);\n      this.updateRankingChoices();\n      return;\n    }\n\n    if (this.isEmpty()) {\n      this.updateRankingChoices();\n      return;\n    }\n\n    if (this.selectToRankEnabled) {\n      this.updateRankingChoices();\n      return;\n    }\n\n    if (this.visibleChoices.length > this.value.length)\n      this.addToValueByVisibleChoices();\n    if (this.visibleChoices.length < this.value.length)\n      this.removeFromValueByVisibleChoices();\n    this.updateRankingChoices();\n  };\n\n  updateValueFromSurvey(newValue: any, clearData: boolean): void {\n    super.updateValueFromSurvey(newValue, clearData);\n    if (newValue)this.isValueSetByUser = true;\n  }\n\n  public localeChanged = (): void => {\n    super.localeChanged();\n    this.updateRankingChoicesSync();\n  };\n\n  private addToValueByVisibleChoices() {\n    const newValue = this.value.slice();\n\n    this.visibleChoices.forEach((choice) => {\n      if (newValue.indexOf(choice.value) === -1) {\n        newValue.push(choice.value);\n      }\n    });\n    this.value = newValue;\n  }\n\n  private removeFromValueByVisibleChoices() {\n    const newValue = this.value.slice();\n    const choices = this.visibleChoices;\n    for (let i = this.value.length - 1; i >= 0; i --) {\n      if (!ItemValue.getItemByValue(choices, this.value[i])) {\n        newValue.splice(i, 1);\n      }\n    }\n    this.value = newValue;\n  }\n\n  private getChoicesAnimationOptions(isRankingChoices: boolean): IAnimationGroupConsumer<ItemValue> {\n    return {\n      getKey(item: ItemValue) {\n        return item.value;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      },\n      isAnimationEnabled: () => this.animationAllowed && !this.isDesignMode && this.isVisible && !!this.domNode,\n      getReorderOptions: (item: ItemValue, movedForward: boolean) => {\n        let cssClass = \"\";\n        if (item !== this.currentDropTarget) {\n          cssClass = movedForward ? \"sv-dragdrop-movedown\" : \"sv-dragdrop-moveup\";\n        }\n        return { cssClass };\n      },\n      getLeaveOptions: (item: ItemValue) => {\n        const choices = isRankingChoices ? this.renderedRankingChoices : this.renderedUnRankingChoices;\n        if (this.renderedSelectToRankAreasLayout == \"vertical\" && choices.length == 1 && choices.indexOf(item) >= 0) {\n          return { cssClass: \"sv-ranking-item--animate-item-removing-empty\" };\n        }\n        return { cssClass: \"sv-ranking-item--animate-item-removing\", onBeforeRunAnimation: (el) => {\n          el.style.setProperty(\"--animation-height\", el.offsetHeight + \"px\");\n        } };\n      },\n      getEnterOptions: (item: ItemValue) => {\n        const choices = isRankingChoices ? this.renderedRankingChoices : this.renderedUnRankingChoices;\n        if (this.renderedSelectToRankAreasLayout == \"vertical\" && choices.length == 1 && choices.indexOf(item) >= 0) {\n          return { cssClass: \"sv-ranking-item--animate-item-adding-empty\" };\n        }\n        return { cssClass: \"sv-ranking-item--animate-item-adding\", onBeforeRunAnimation: (el) => {\n          el.style.setProperty(\"--animation-height\", el.offsetHeight + \"px\");\n        } };\n      },\n      getAnimatedElement: (item: ItemValue) => {\n        const cssClasses = this.cssClasses;\n        let containerSelector = \"\";\n        if (this.selectToRankEnabled) {\n          if (!isRankingChoices && cssClasses.containerFromMode) {\n            containerSelector = classesToSelector(cssClasses.containerFromMode);\n          } else if (isRankingChoices && cssClasses.containerToMode) {\n            containerSelector = classesToSelector(cssClasses.containerToMode);\n          }\n        }\n        const index = isRankingChoices ? this.renderedRankingChoices.indexOf(item) : this.renderedUnRankingChoices.indexOf(item);\n        return this.domNode?.querySelector(`${containerSelector} [data-sv-drop-target-ranking-item='${index}']`);\n      },\n      allowSyncRemovalAddition: true\n    };\n  }\n\n  private _rankingChoicesAnimation = new AnimationGroup(this.getChoicesAnimationOptions(true), (val) => {\n    this._renderedRankingChoices = val;\n  }, () => this.renderedRankingChoices);\n  public get rankingChoicesAnimation(): AnimationGroup<ItemValue> {\n    return this._rankingChoicesAnimation;\n  }\n  private _unRankingChoicesAnimation = new AnimationGroup(this.getChoicesAnimationOptions(false), (val) => {\n    this._renderedUnRankingChoices = val;\n  }, () => this.renderedUnRankingChoices);\n  public get unRankingChoicesAnimation(): AnimationGroup<ItemValue> {\n    return this._unRankingChoicesAnimation;\n  }\n\n  @propertyArray(\n    {\n      onSet: (val, target: QuestionRankingModel) => target.updateRenderedRankingChoices(),\n      onRemove: (_: ItemValue, _i: number, target: QuestionRankingModel) => target.updateRenderedRankingChoices(),\n      onPush: (_: ItemValue, _i: number, target: QuestionRankingModel) => target.updateRenderedRankingChoices(),\n    }) public rankingChoices: Array<ItemValue> = [];\n  @propertyArray(\n    { onSet: (val, target: QuestionRankingModel) => target.updateRenderedUnRankingChoices(),\n      onRemove: (_: ItemValue, _i: number, target: QuestionRankingModel) => target.updateRenderedUnRankingChoices(),\n      onPush: (_: ItemValue, _i: number, target: QuestionRankingModel) => target.updateRenderedUnRankingChoices(),\n    }\n  ) public unRankingChoices: Array<ItemValue> = [];\n\n  @propertyArray() private _renderedRankingChoices: Array<ItemValue> = [];\n  @propertyArray() private _renderedUnRankingChoices: Array<ItemValue> = [];\n\n  public get renderedRankingChoices(): Array<ItemValue> {\n    return this._renderedRankingChoices;\n  }\n\n  public set renderedRankingChoices(val: Array<ItemValue>) {\n    this.rankingChoicesAnimation.sync(val);\n  }\n  public get renderedUnRankingChoices(): Array<ItemValue> {\n    return this._renderedUnRankingChoices;\n  }\n  public set renderedUnRankingChoices(val: Array<ItemValue>) {\n    this.unRankingChoicesAnimation.sync(val);\n  }\n\n  private updateRenderedRankingChoices() {\n    this.renderedRankingChoices = this.rankingChoices;\n  }\n\n  private updateRenderedUnRankingChoices() {\n    this.renderedUnRankingChoices = this.unRankingChoices;\n  }\n\n  private updateRankingChoices(forceUpdate = false): ItemValue[] {\n    if (this.selectToRankEnabled) {\n      this.updateRankingChoicesSelectToRankMode(forceUpdate);\n      return;\n    }\n\n    const newRankingChoices: ItemValue[] = [];\n\n    // ranking question with only one choice doesn't make sense\n    // if (this.visibleChoices.length === 1) {\n    //   this.setPropertyValue(\"rankingChoices\", newRankingChoices);\n    //   return;\n    // }\n\n    if (forceUpdate)this.rankingChoices = [];\n\n    if (this.isEmpty()) {\n      this.rankingChoices = this.visibleChoices;\n      return;\n    }\n\n    this.value.forEach((valueItem: string) => {\n      this.visibleChoices.forEach((choice) => {\n        if (choice.value === valueItem) newRankingChoices.push(choice);\n      });\n    });\n    this.rankingChoices = newRankingChoices;\n  }\n  public updateUnRankingChoices(newRankingChoices: Array<ItemValue>) {\n    const unRankingChoices: ItemValue[] = [];\n    this.visibleChoices.forEach((choice) => {\n      unRankingChoices.push(choice);\n    });\n    newRankingChoices.forEach((rankingChoice: ItemValue) => {\n      unRankingChoices.forEach((choice, index) => {\n        if (choice.value === rankingChoice.value) unRankingChoices.splice(index, 1);\n      });\n    });\n    this.unRankingChoices = unRankingChoices;\n  }\n  private updateRankingChoicesSelectToRankMode(forceUpdate:boolean) {\n    const newRankingChoices: ItemValue[] = [];\n    if (!this.isEmpty()) {\n      this.value.forEach((valueItem: string) => {\n        this.visibleChoices.forEach((choice) => {\n          if (choice.value === valueItem) newRankingChoices.push(choice);\n        });\n      });\n    }\n    this.updateUnRankingChoices(newRankingChoices);\n    this.rankingChoices = newRankingChoices;\n  }\n\n  public dragDropRankingChoices: DragDropRankingChoices;\n  @property({ defaultValue: null }) currentDropTarget: ItemValue;\n\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n\n    this.setDragDropRankingChoices();\n  }\n\n  private setDragDropRankingChoices() {\n    this.dragDropRankingChoices = this.createDragDropRankingChoices();\n  }\n  protected createDragDropRankingChoices() {\n    if (this.selectToRankEnabled)\n      return new DragDropRankingSelectToRank(this.survey, null, this.longTap);\n    return new DragDropRankingChoices(this.survey, null, this.longTap);\n  }\n\n  private draggedChoiceValue: any;\n  private draggedTargetNode: HTMLElement;\n  public handlePointerDown = (\n    event: PointerEvent,\n    choice: ItemValue,\n    node: HTMLElement\n  ): void => {\n    const target: HTMLElement = <HTMLElement>event.target;\n\n    if (!this.isDragStartNodeValid(target)) return;\n\n    if (\n      this.isAllowStartDrag(target, choice)\n    ) {\n      this.draggedChoiceValue = choice.value;\n      this.draggedTargetNode = node;\n      this.dragOrClickHelper.onPointerDown(event);\n    }\n  };\n\n  public startDrag = (event: PointerEvent): void => {\n    const choice = ItemValue.getItemByValue(this.visibleChoices, this.draggedChoiceValue);\n    this.dragDropRankingChoices.startDrag(event, choice, this, this.draggedTargetNode);\n  };\n\n  public handlePointerUp = (\n    event: PointerEvent,\n    choice: ItemValue,\n    node: HTMLElement\n  ): void => {\n    if (!this.selectToRankEnabled) return;\n\n    const target: HTMLElement = <HTMLElement>event.target;\n\n    if (\n      this.isAllowStartDrag(target, choice)\n    ) {\n      this.handleKeydownSelectToRank(<any>event, choice, \" \", false);\n    }\n  };\n\n  private isDragStartNodeValid(target: HTMLElement): boolean {\n    if (settings.rankingDragHandleArea === \"icon\") {\n      return target.classList.contains(this.cssClasses.itemIconHoverMod);\n    }\n\n    return true;\n  }\n\n  private isAllowStartDrag(target: HTMLElement, choice: ItemValue) {\n    return !this.isReadOnly &&\n           !this.isDesignMode &&\n           this.canStartDragDueMaxSelectedChoices(target) &&\n           this.canStartDragDueItemEnabled(choice);\n  }\n\n  private canStartDragDueMaxSelectedChoices(target: HTMLElement):boolean {\n    if (!this.selectToRankEnabled) return true;\n\n    let fromContainer: HTMLElement = target.closest(\"[data-ranking='from-container']\");\n    if (fromContainer) {\n      return this.checkMaxSelectedChoicesUnreached();\n    }\n    return true;\n  }\n\n  private canStartDragDueItemEnabled(item: ItemValue): boolean {\n    return item.enabled;\n  }\n\n  public checkMaxSelectedChoicesUnreached() {\n    if (this.maxSelectedChoices < 1) return true;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    return len < this.maxSelectedChoices;\n  }\n\n  //cross framework initialization\n  public afterRenderQuestionElement(el: HTMLElement): void {\n    this.domNode = el;\n    super.afterRenderQuestionElement(el);\n  }\n  //cross framework destroy\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    this.domNode = undefined;\n    super.beforeDestroyQuestionElement(el);\n  }\n\n  public handleKeydown = (event: KeyboardEvent, choice: ItemValue): void => {\n    if (this.isReadOnlyAttr) return;\n    if (!this.isDesignMode) {\n      const key: any = event.key;\n      const index = this.rankingChoices.indexOf(choice);\n\n      if (this.selectToRankEnabled) {\n        this.handleKeydownSelectToRank(event, choice);\n        return;\n      }\n      if ((key === \"ArrowUp\" && index) || (key === \"ArrowDown\" && index !== this.rankingChoices.length - 1)) {\n        const toIndex = key == \"ArrowUp\" ? index - 1 : index + 1;\n        this.dragDropRankingChoices.reorderRankedItem(this, index, toIndex);\n        this.setValueAfterKeydown(toIndex, \"\", true, event);\n      }\n    }\n  };\n\n  protected supportSelectAll(): boolean { return false; }\n  public supportOther(): boolean { return false; }\n  public supportNone(): boolean { return false; }\n  public supportRefuse(): boolean { return false; }\n  public supportDontKnow(): boolean { return false; }\n\n  public handleKeydownSelectToRank(event: KeyboardEvent, movedElement: ItemValue, hardKey?:string, isNeedFocus: boolean = true): void {\n    if (this.isDesignMode) return;\n\n    let key: any = event.key;\n    if (hardKey) key = hardKey;\n    if (key !== \" \" && key !== \"ArrowUp\" && key !== \"ArrowDown\") return;\n\n    const dnd:any = this.dragDropRankingChoices; //????\n    const rankingChoices = this.rankingChoices;\n    const isMovedElementRanked = rankingChoices.indexOf(movedElement) !== -1;\n    const choices = isMovedElementRanked ? rankingChoices : this.unRankingChoices;\n    const fromIndex = choices.indexOf(movedElement);\n    if (fromIndex < 0) return;\n    let toIndex;\n\n    if (key === \" \" && !isMovedElementRanked) {\n      if (!this.checkMaxSelectedChoicesUnreached() || !this.canStartDragDueItemEnabled(movedElement)) return;\n      toIndex = this.value.length;\n      dnd.selectToRank(this, fromIndex, toIndex);\n      this.setValueAfterKeydown(toIndex, \"to-container\", isNeedFocus, event);\n      return;\n    }\n    if (!isMovedElementRanked) return;\n    if (key === \" \") {\n      dnd.unselectFromRank(this, fromIndex);\n      toIndex = this.unRankingChoices.indexOf(movedElement); //'this.' leads to actual array after the 'unselectFromRank' method\n      this.setValueAfterKeydown(toIndex, \"from-container\", isNeedFocus, event);\n      return;\n    }\n    const delta = key === \"ArrowUp\" ? -1 : (key === \"ArrowDown\" ? 1 : 0);\n    if (delta === 0) return;\n    toIndex = fromIndex + delta;\n    if (toIndex < 0 || toIndex >= rankingChoices.length) return;\n    dnd.reorderRankedItem(this, fromIndex, toIndex);\n    this.setValueAfterKeydown(toIndex, \"to-container\", isNeedFocus, event);\n  }\n\n  private setValueAfterKeydown(index: number, container: string, isNeedFocus: boolean = true, event: KeyboardEvent) {\n    this.setValue();\n\n    if (isNeedFocus) {\n      setTimeout(() => {\n        this.focusItem(index, container);\n      }, 1);\n    }\n    event && event.preventDefault();\n  }\n\n  private focusItem = (index: number, container?: string) => {\n    if (!this.domNode) return;\n    if (this.selectToRankEnabled && container) {\n      const containerSelector = \"[data-ranking='\" + container + \"']\";\n      const itemsNodes: any = this.domNode.querySelectorAll(\n        containerSelector + \" \" + \".\" + this.cssClasses.item\n      );\n      itemsNodes[index].focus();\n    } else {\n      const itemsNodes: any = this.domNode.querySelectorAll(\n        \".\" + this.cssClasses.item\n      );\n      itemsNodes[index].focus();\n    }\n  };\n\n  public isValueSetByUser = false;\n  public setValue = (): void => {\n    const value: string[] = [];\n    this.rankingChoices.forEach((choice: ItemValue) => {\n      value.push(choice.value);\n    });\n    this.value = value;\n    this.isValueSetByUser = true;\n  };\n  public getIconHoverCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.itemIcon)\n      .append(this.cssClasses.itemIconHoverMod)\n      .toString();\n  }\n\n  public getIconFocusCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.itemIcon)\n      .append(this.cssClasses.itemIconFocusMod)\n      .toString();\n  }\n\n  /**\n   * Specifies whether to use a long tap (press and hold) gesture to start dragging.\n   *\n   * Default value: `true`\n   *\n   * Disable this property if you want to start dragging when users perform a scroll gesture.\n  */\n  public get longTap(): boolean {\n    return this.getPropertyValue(\"longTap\");\n  }\n  public set longTap(val: boolean) {\n    this.setPropertyValue(\"longTap\", val);\n  }\n\n  protected getDefaultItemComponent(): string {\n    return \"sv-ranking-item\";\n  }\n\n  /**\n   * Specifies whether users can select choices they want to rank.\n   *\n   * When you enable this property, the Ranking question displays two areas for ranked and unranked choices. To order choices, users should first drag them from the unranked to the ranked area. Use this mode if you want to let users order only the choices they select.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see selectToRankAreasLayout\n  */\n  public get selectToRankEnabled(): boolean {\n    return this.getPropertyValue(\"selectToRankEnabled\", false);\n  }\n  public set selectToRankEnabled(val: boolean) {\n    this.setPropertyValue(\"selectToRankEnabled\", val);\n  }\n\n  public get selectToRankSwapAreas(): boolean {\n    return this.getPropertyValue(\"selectToRankSwapAreas\", false);\n  }\n  public set selectToRankSwapAreas(val: boolean) {\n    this.setPropertyValue(\"selectToRankSwapAreas\", val);\n  }\n\n  @property({ defaultValue: true }) carryForwardStartUnranked: boolean;\n\n  /**\n   * Specifies the layout of the ranked and unranked areas. Applies when [`selectToRankEnabled`](https://surveyjs.io/form-library/documentation/api-reference/ranking-question-model#selectToRankEnabled) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"horizontal\"` (default) - The ranked and unranked areas are positioned next to each other. Users drag and drop choices between them in the horizontal direction.\n   * - `\"vertical\"`- The ranked area is positioned above the unranked area. Users drag and drop choices between them in the vertical direction.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see selectToRankAreasLayout\n  */\n  public get selectToRankAreasLayout(): string {\n    return this.getPropertyValue(\"selectToRankAreasLayout\");\n  }\n  public set selectToRankAreasLayout(val: string) {\n    this.setPropertyValue(\"selectToRankAreasLayout\", val);\n  }\n\n  public get renderedSelectToRankAreasLayout(): string {\n    if (this.isMobileMode()) return \"vertical\";\n    return this.selectToRankAreasLayout;\n  }\n\n  public isMobileMode(): boolean {\n    return IsMobile;\n  }\n\n  /**\n   * A placeholder displayed in the area for ranked choices. Applies when [`selectToRankEnabled`](https://surveyjs.io/form-library/documentation/api-reference/ranking-question-model#selectToRankEnabled) is `true`.\n   */\n  @property({ localizable: { defaultStr: \"selectToRankEmptyRankedAreaText\" } }) selectToRankEmptyRankedAreaText: string;\n  /**\n   * A placeholder displayed in the area for unranked choices. Applies when [`selectToRankEnabled`](https://surveyjs.io/form-library/documentation/api-reference/ranking-question-model#selectToRankEnabled) is `true`.\n   */\n  @property({ localizable: { defaultStr: \"selectToRankEmptyUnrankedAreaText\" } }) selectToRankEmptyUnrankedAreaText: string;\n\n  public get useFullItemSizeForShortcut(): boolean {\n    return this.getPropertyValue(\"useFullItemSizeForShortcut\");\n  }\n  public set useFullItemSizeForShortcut(val: boolean) {\n    this.setPropertyValue(\"useFullItemSizeForShortcut\", val);\n  }\n\n  public get dragDropSvgIcon(): string {\n    return this.cssClasses.dragDropSvgIconId || \"#icon-drag-24x24\";\n  }\n  public get arrowsSvgIcon(): string {\n    return this.cssClasses.arrowsSvgIconId || \"#icon-reorder-24x24\";\n  }\n  public get dashSvgIcon(): string {\n    return this.cssClasses.dashSvgIconId || \"#icon-rankingundefined-16x16\";\n  }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return false;\n  }\n  // EO a11y\n}\n\nSerializer.addClass(\n  \"ranking\",\n  [\n    { name: \"showOtherItem\", visible: false, isSerializable: false },\n    { name: \"otherText\", visible: false, isSerializable: false },\n    { name: \"otherErrorText\", visible: false, isSerializable: false },\n    { name: \"storeOthersAsComment\", visible: false, isSerializable: false },\n    { name: \"showNoneItem\", visible: false, isSerializable: false },\n    { name: \"showRefuseItem\", visible: false, isSerializable: false },\n    { name: \"showDontKnowItem\", visible: false, isSerializable: false },\n    { name: \"noneText\", visible: false, isSerializable: false },\n    { name: \"showSelectAllItem\", visible: false, isSerializable: false },\n    { name: \"selectAllText\", visible: false, isSerializable: false },\n    { name: \"colCount:number\", visible: false, isSerializable: false },\n    { name: \"separateSpecialChoices\", visible: false, isSerializable: false },\n    {\n      name: \"longTap\",\n      default: true,\n      visible: false,\n      isSerializable: false,\n    },\n    {\n      name: \"selectToRankEnabled:switch\",\n      default: false,\n      visible: true,\n      isSerializable: true,\n    },\n    {\n      name: \"selectToRankSwapAreas:switch\",\n      default: false,\n      visible: false,\n      isSerializable: true,\n      dependsOn: \"selectToRankEnabled\",\n    },\n    {\n      name: \"selectToRankAreasLayout\",\n      default: \"horizontal\",\n      choices: [\"horizontal\", \"vertical\"],\n      dependsOn: \"selectToRankEnabled\",\n      visibleIf: (obj: any) => {\n        return !!obj.selectToRankEnabled;\n      },\n      visible: true,\n      isSerializable: true,\n    },\n    {\n      name: \"selectToRankEmptyRankedAreaText:text\",\n      serializationProperty: \"locSelectToRankEmptyRankedAreaText\",\n      category: \"general\",\n      dependsOn: \"selectToRankEnabled\",\n      visibleIf: (obj: any) => {\n        return !!obj.selectToRankEnabled;\n      },\n    },\n    {\n      name: \"selectToRankEmptyUnrankedAreaText:text\",\n      serializationProperty: \"locSelectToRankEmptyUnrankedAreaText\",\n      category: \"general\",\n      dependsOn: \"selectToRankEnabled\",\n      visibleIf: (obj: any) => {\n        return !!obj.selectToRankEnabled;\n      },\n    },\n    {\n      name: \"maxSelectedChoices:number\",\n      visible: true,\n      default: 0,\n      dependsOn: \"selectToRankEnabled\",\n      visibleIf: (obj: any) => {\n        return !!obj.selectToRankEnabled;\n      },\n      isSerializable: true\n    },\n    { name: \"minSelectedChoices:number\",\n      visible: true,\n      default: 0,\n      dependsOn: \"selectToRankEnabled\",\n      visibleIf: (obj: any) => {\n        return !!obj.selectToRankEnabled;\n      },\n      isSerializable: true\n    },\n    { name: \"itemComponent\", visible: false, default: \"sv-ranking-item\" },\n  ],\n  function () {\n    return new QuestionRankingModel(\"\");\n  },\n  \"checkbox\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"ranking\", (name) => {\n  const q: QuestionRankingModel = new QuestionRankingModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n", "import { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { QuestionTextBase } from \"./question_textbase\";\nimport { settings } from \"./settings\";\nimport { ITextArea, TextAreaModel } from \"./utils/text-area\";\nimport { Helpers } from \"./helpers\";\n\n/**\n * A class that describes the Long Text question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-comment/ (linkStyle))\n */\nexport class QuestionCommentModel extends QuestionTextBase {\n  private element: HTMLElement;\n  private textAreaModelValue: TextAreaModel;\n\n  constructor(name: string) {\n    super(name);\n  }\n  public get textAreaModel(): TextAreaModel {\n    if (!this.textAreaModelValue) {\n      this.textAreaModelValue = new TextAreaModel(this.getTextAreaOptions());\n    }\n    return this.textAreaModelValue;\n  }\n  protected getTextAreaOptions(): ITextArea {\n    const _this = this;\n    const updateQuestionValue = (newValue: any) => {\n      if (!Helpers.isTwoValueEquals(_this.value, newValue, false, true, false)) {\n        _this.value = newValue;\n      }\n    };\n\n    const options: ITextArea = {\n      question: this,\n      id: () => this.inputId,\n      propertyNames: [\"value\"],\n      className: () => this.className,\n      placeholder: () => this.renderedPlaceholder,\n      isDisabledAttr: () => this.isDisabledAttr,\n      isReadOnlyAttr: () => this.isReadOnlyAttr,\n      autoGrow: () => this.renderedAutoGrow,\n      maxLength: () => this.getMaxLength(),\n      rows: () => this.rows,\n      cols: () => this.cols,\n      ariaRequired: () => this.a11y_input_ariaRequired,\n      ariaLabel: () => this.a11y_input_ariaLabel,\n      ariaLabelledBy: () => this.a11y_input_ariaLabelledBy,\n      ariaDescribedBy: () => this.a11y_input_ariaDescribedBy,\n      ariaInvalid: () => this.a11y_input_ariaInvalid,\n      ariaErrormessage: () => this.a11y_input_ariaErrormessage,\n      getTextValue: () => { return this.value; },\n      onTextAreaChange: (e) => { updateQuestionValue(e.target.value); },\n      onTextAreaInput: (event) => { this.onInput(event); },\n      onTextAreaKeyDown: (event) => { this.onKeyDown(event); },\n      onTextAreaFocus: (event) => { this.onFocus(event); },\n      onTextAreaBlur: (event) => { this.onBlur(event); }\n    };\n    return options;\n  }\n  /**\n   * Specifies the visible height of the comment area, measured in lines.\n   *\n   * The value of this property is passed on to the `rows` attribute of the underlying `<textarea>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   */\n  public get rows(): number {\n    return this.getPropertyValue(\"rows\");\n  }\n  public set rows(val: number) {\n    this.setPropertyValue(\"rows\", val);\n  }\n  public get cols(): number {\n    return this.getPropertyValue(\"cols\");\n  }\n  public set cols(val: number) {\n    this.setPropertyValue(\"cols\", val);\n  }\n  /**\n   * Specifies whether the question allows line breaks.\n   *\n   * When this property is enabled, a user can press Enter to insert line breaks. They are saved as `\\n` in survey results. The Comment question also recognizes and interprets the `\\n` sequence as a line break when you set the question `value` in code.\n   */\n  public get acceptCarriageReturn(): boolean {\n    return this.getPropertyValue(\"acceptCarriageReturn\");\n  }\n  public set acceptCarriageReturn(val: boolean) {\n    this.setPropertyValue(\"acceptCarriageReturn\", val);\n  }\n  /**\n   * Specifies whether the comment area automatically increases its height to accomodate multi-line content.\n   *\n   * Default value: `false` (inherited from `SurveyModel`'s [`autoGrowComment`](https://surveyjs.io/form-library/documentation/surveymodel#autoGrowComment) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   * @see allowResize\n   */\n  public get autoGrow(): boolean | undefined {\n    return this.getPropertyValue(\"autoGrow\");\n  }\n  public set autoGrow(val: boolean | undefined) {\n    this.setPropertyValue(\"autoGrow\", val);\n  }\n  public get renderedAutoGrow(): boolean {\n    const autoGrow = this.autoGrow;\n    return autoGrow === undefined && this.survey ? this.survey.autoGrowComment : !!autoGrow;\n  }\n  /**\n   * Specifies whether to display a resize handle for the comment area.\n   *\n   * Default value: `true` (inherited from `SurveyModel`'s [`allowResizeComment`](https://surveyjs.io/form-library/documentation/surveymodel#allowResizeComment) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   * @see autoGrow\n   */\n  public get allowResize(): boolean | undefined {\n    return this.getPropertyValue(\"allowResize\");\n  }\n  public set allowResize(val: boolean | undefined) {\n    this.setPropertyValue(\"allowResize\", val);\n  }\n  public get renderedAllowResize(): boolean {\n    const res = this.allowResize;\n    if (res === undefined && this.survey) {\n      return this.survey.allowResizeComment;\n    } else {\n      return !!res;\n    }\n  }\n  public get resizeStyle() {\n    return this.renderedAllowResize ? \"both\" : \"none\";\n  }\n  public getType(): string {\n    return \"comment\";\n  }\n  public afterRenderQuestionElement(el: HTMLElement): void {\n    this.element = el?.querySelector(`#${this.inputId}`) || el;\n    super.afterRenderQuestionElement(el);\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    super.beforeDestroyQuestionElement(el);\n    this.element = undefined;\n  }\n  public onInput(event: any): void {\n    if (this.isInputTextUpdate)\n      this.value = event.target.value;\n    this.updateRemainingCharacterCounter(event.target.value);\n  }\n  protected onBlurCore(event: any): void {\n    super.onBlurCore(event);\n  }\n  public onKeyDown(event: any): void {\n    this.onKeyDownPreprocess && this.onKeyDownPreprocess(event);\n    if (!this.acceptCarriageReturn && (event.key === \"Enter\" || event.keyCode === 13)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  protected setNewValue(newValue: string): any {\n    if (!this.acceptCarriageReturn && !!newValue) {\n      // eslint-disable-next-line no-control-regex\n      newValue = newValue.replace(new RegExp(\"(\\r\\n|\\n|\\r)\", \"gm\"), \"\");\n    }\n    super.setNewValue(newValue);\n  }\n  protected getValueSeparator(): string { return \"\\n\"; }\n  protected notifyStateChanged(prevState: string): void {\n    super.notifyStateChanged(prevState);\n    if (!this.isCollapsed) {\n      this.textAreaModel.updateElement();\n    }\n  }\n  public get className(): string {\n    return (this.cssClasses ? this.getControlClass() : \"panel-comment-root\") || undefined;\n  }\n}\nSerializer.addClass(\n  \"comment\",\n  [\n    { name: \"maxLength:number\", default: -1 },\n    { name: \"cols:number\", default: 50, visible: false, isSerializable: false },\n    { name: \"rows:number\", default: 4 },\n    { name: \"placeholder\",\n      alternativeName: \"placeHolder\",\n      serializationProperty: \"locPlaceholder\" },\n    {\n      name: \"textUpdateMode\",\n      default: \"default\",\n      choices: [\"default\", \"onBlur\", \"onTyping\"],\n    },\n    { name: \"autoGrow:boolean\", defaultFunc: () => undefined },\n    { name: \"allowResize:boolean\", defaultFunc: () => undefined },\n    { name: \"acceptCarriageReturn:boolean\", default: true, visible: false }\n  ],\n  function () {\n    return new QuestionCommentModel(\"\");\n  },\n  \"textbase\"\n);\nQuestionFactory.Instance.registerQuestion(\"comment\", (name) => {\n  return new QuestionCommentModel(name);\n});\n", "import { settings } from \"../settings\";\nimport { DomDocumentHelper } from \"../global_variables_utils\";\n\nconst envStr = \"environment\";\nconst userStr = \"user\";\nexport class Camera {\n  public static mediaDevicesCallback: ((callback: (devices: Array<MediaDeviceInfo>) => void) => void) | undefined;\n  public static clear(): void {\n    Camera.cameraList = undefined;\n    Camera.cameraIndex = -1;\n  }\n  public static setCameraList(list: Array<MediaDeviceInfo>): void {\n    const getDeviceType = function(device: MediaDeviceInfo): string {\n      const lbl = device.label.toLocaleLowerCase();\n      if (lbl.indexOf(userStr) > -1) return userStr;\n      if (lbl.indexOf(envStr) > -1) return envStr;\n      if (lbl.indexOf(\"front\") > -1) return userStr;\n      if (lbl.indexOf(\"back\") > -1) return envStr;\n      return \"\";\n    };\n    Camera.clear();\n    if (Array.isArray(list) && list.length > 0) {\n      Camera.cameraIndex = -1;\n      list.sort((a: MediaDeviceInfo, b: MediaDeviceInfo): number => {\n        if (a === b) return 0;\n        if (a.label !== b.label) {\n          const lblA = getDeviceType(a);\n          const lblB = getDeviceType(b);\n          if (lblA !== lblB) {\n            if (lblA === userStr) return -1;\n            if (lblB === userStr) return 1;\n            if (lblA === envStr) return -1;\n            if (lblB === envStr) return 1;\n          }\n        }\n        const iA = list.indexOf(a);\n        const iB = list.indexOf(b);\n        return iA < iB ? -1 : 1;\n      });\n    }\n    Camera.cameraList = list;\n  }\n  private static cameraList: Array<MediaDeviceInfo>;\n  private static cameraIndex: number = -1;\n  private static cameraFacingMode: string = userStr;\n  private static canSwitchFacingMode: boolean = false;\n  public hasCamera(callback: (res: boolean) => void): void {\n    if (Camera.cameraList !== undefined) {\n      this.hasCameraCallback(callback);\n      return;\n    }\n    if (Camera.mediaDevicesCallback) {\n      const devicesCallback = (devices: Array<MediaDeviceInfo>): void => {\n        this.setVideoInputs(devices);\n        this.hasCameraCallback(callback);\n      };\n      Camera.mediaDevicesCallback(devicesCallback);\n      return;\n    }\n    if (typeof navigator !== \"undefined\" && navigator.mediaDevices) {\n      navigator.mediaDevices.enumerateDevices()\n        .then(devices =>{\n          this.setVideoInputs(devices);\n          this.hasCameraCallback(callback);\n          this.updateCanFlipValue();\n        })\n        .catch(error => {\n          Camera.cameraList = null;\n          this.hasCameraCallback(callback);\n        });\n    } else {\n      Camera.cameraList = null;\n      this.hasCameraCallback(callback);\n    }\n  }\n  public getMediaConstraints(videoSize?: { width?: number, height?: number }): MediaStreamConstraints {\n    const devices = Camera.cameraList;\n    if (!Array.isArray(devices) || devices.length < 1) return undefined;\n    if (Camera.cameraIndex < 0) Camera.cameraIndex = 0;\n    const selDevice = devices[Camera.cameraIndex];\n    const videoConstraints: any = {};\n    if (selDevice && selDevice.deviceId) {\n      videoConstraints.deviceId = { exact: selDevice.deviceId };\n    } else {\n      videoConstraints.facingMode = Camera.cameraFacingMode;\n    }\n    if (videoSize) {\n      if (videoSize?.height) {\n        videoConstraints.height = { ideal: videoSize.height };\n      }\n      if (videoSize?.width) {\n        videoConstraints.width = { ideal: videoSize.width };\n      }\n    }\n    return {\n      video: videoConstraints,\n      audio: false\n    };\n  }\n  public startVideo(videoElement: HTMLVideoElement, callback: (stream: MediaStream) => void, imageWidth?: number, imageHeight?: number): void {\n    if (!videoElement) {\n      callback(undefined);\n      return;\n    }\n    videoElement.style.width = \"100%\";\n    videoElement.style.height = \"auto\";\n    videoElement.style.height = \"100%\";\n    videoElement.style.objectFit = \"contain\";\n    const mediaConstraints = this.getMediaConstraints({ width: imageWidth, height: imageHeight });\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(stream => {\n      videoElement.srcObject = stream;\n      if (!Camera.cameraList[Camera.cameraIndex]?.deviceId && !!stream.getTracks()[0].getCapabilities().facingMode) {\n        Camera.canSwitchFacingMode = true;\n        this.updateCanFlipValue();\n      }\n      videoElement.play();\n      callback(stream);\n    })\n      .catch(error => {\n        callback(undefined);\n      });\n  }\n  public getImageSize(videoEl:HTMLVideoElement): { width: number, height: number } {\n    return { width: videoEl.videoWidth, height: videoEl.videoHeight };\n\n  }\n  public snap(videoElement: HTMLVideoElement, callback: BlobCallback): boolean {\n    if (!videoElement) return false;\n    if (!DomDocumentHelper.isAvailable()) return false;\n    const root = DomDocumentHelper.getDocument();\n    const canvasEl = root.createElement(\"canvas\");\n    const imageSize = this.getImageSize(videoElement);\n    canvasEl.height = imageSize.height;\n    canvasEl.width = imageSize.width;\n    let context = canvasEl.getContext(\"2d\");\n    /*\n    if(this._facingMode == 'user'){\n      context.translate(canvasEl.width, 0);\n      context.scale(-1, 1);\n    }\n    */\n    context.clearRect(0, 0, canvasEl.width, canvasEl.height);\n    context.drawImage(videoElement, 0, 0, canvasEl.width, canvasEl.height);\n    canvasEl.toBlob(callback, \"image/png\");\n    return true;\n  }\n\n  private canFlipValue: boolean = undefined;\n\n  private updateCanFlipValue() {\n    const list = Camera.cameraList;\n    this.canFlipValue = Array.isArray(list) && list.length > 1 || Camera.canSwitchFacingMode;\n    if (this.onCanFlipChangedCallback)this.onCanFlipChangedCallback(this.canFlipValue);\n  }\n  private onCanFlipChangedCallback?: (res: boolean) => void;\n\n  public canFlip(onCanFlipChangedCallback?: (res: boolean) => void): boolean {\n    if (this.canFlipValue === undefined) {\n      this.updateCanFlipValue();\n    }\n    if (onCanFlipChangedCallback) {\n      this.onCanFlipChangedCallback = onCanFlipChangedCallback;\n    }\n    return this.canFlipValue;\n  }\n  public flip(): void {\n    if (!this.canFlip()) return;\n    if (Camera.canSwitchFacingMode) {\n      Camera.cameraFacingMode = Camera.cameraFacingMode === userStr ? \"environment\" : userStr;\n    } else if (Camera.cameraIndex >= Camera.cameraList.length - 1) {\n      Camera.cameraIndex = 0;\n    } else {\n      Camera.cameraIndex ++;\n    }\n  }\n  private hasCameraCallback(callback: (res: boolean) => void): void {\n    callback(Array.isArray(Camera.cameraList));\n  }\n  private setVideoInputs(devices: Array<MediaDeviceInfo>): void {\n    const list: Array<MediaDeviceInfo> = [];\n    devices.forEach(device => {\n      if (device.kind === \"videoinput\") {\n        list.push(device);\n      }\n    });\n    Camera.setCameraList(list.length > 0 ? list : null);\n  }\n}", "import { IPlainDataOptions, ISurveyImpl } from \"./base-interfaces\";\nimport { IQuestionPlainData, Question } from \"./question\";\nimport { property, propertyArray, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { EventBase, ComputedUpdater, Base } from \"./base\";\nimport { UploadingFileError, ExceedSizeError } from \"./error\";\nimport { SurveyError } from \"./survey-error\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { classesToSelector, confirmActionAsync, detectIEOrEdge, isElementVisible, loadFileFromBase64 } from \"./utils/utils\";\nimport { ActionContainer } from \"./actions/container\";\nimport { Action } from \"./actions/action\";\nimport { Helpers } from \"./helpers\";\nimport { Camera } from \"./utils/camera\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { settings } from \"./settings\";\nimport { getRenderedSize } from \"./utils/utils\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { AnimationTab, IAnimationConsumer } from \"./utils/animation\";\n\nexport function dataUrl2File(dataUrl: string, fileName: string, type: string) {\n  const str = atob(dataUrl.split(\",\")[1]);\n  const buffer = new Uint8Array(str.split(\"\").map(c => c.charCodeAt(0))).buffer;\n  return new File([buffer], fileName, { type: type });\n}\n/**\n * A base class for question types that support file upload: `QuestionFileModel` and `QuestionSignaturePadModel`.\n */\nexport class QuestionFileModelBase extends Question {\n  @property() public isUploading: boolean = false;\n  @property({ defaultValue: \"empty\" }) currentState: string;\n  /**\n   * An event that is raised after the upload state has changed.\n   *\n   * Parameters:\n   *\n   * - `sender`: `SurveyModel`\\\n   * A survey instance that raised the event.\n   * - `options.state`: `string`\\\n   * The current upload state: `\"empty\"`, `\"loading\"`, `\"loaded\"`, or `\"error\"`.\n   */\n  public onUploadStateChanged: EventBase<QuestionFileModelBase> = this.addEvent<\n    QuestionFileModelBase\n  >();\n  public onStateChanged: EventBase<QuestionFileModelBase> = this.addEvent<\n    QuestionFileModelBase\n  >();\n  protected stateChanged(state: string) {\n    if (this.currentState == state) {\n      return;\n    }\n    if (state === \"loading\") {\n      this.isUploading = true;\n    }\n    if (state === \"loaded\") {\n      this.isUploading = false;\n    }\n    if (state === \"error\") {\n      this.isUploading = false;\n    }\n    this.currentState = state;\n    this.onStateChanged.fire(this, { state: state });\n    this.onUploadStateChanged.fire(this, { state: state });\n  }\n  public get showLoadingIndicator(): boolean {\n    return this.isUploading;\n  }\n  /**\n   * Specifies whether to store file or signature content as text in `SurveyModel`'s [`data`](https://surveyjs.io/form-library/documentation/surveymodel#data) property.\n   *\n   * If you disable this property, implement `SurveyModel`'s [`onUploadFiles`](https://surveyjs.io/form-library/documentation/surveymodel#onUploadFiles) event handler to specify how to store file content.\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   */\n  public get storeDataAsText(): boolean {\n    return this.getPropertyValue(\"storeDataAsText\");\n  }\n  public set storeDataAsText(val: boolean) {\n    this.setPropertyValue(\"storeDataAsText\", val);\n  }\n  /**\n   * Enable this property if you want to wait until files are uploaded to complete the survey.\n   *\n   * Default value: `false`\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   */\n  public get waitForUpload(): boolean {\n    return this.getPropertyValue(\"waitForUpload\");\n  }\n  public set waitForUpload(val: boolean) {\n    this.setPropertyValue(\"waitForUpload\", val);\n  }\n\n  public clearValue(keepComment?: boolean): void {\n    this.clearOnDeletingContainer();\n    super.clearValue(keepComment);\n  }\n  public clearOnDeletingContainer() {\n    if (!this.survey) return;\n    this.survey.clearFiles(this, this.name, this.value, null, () => { });\n  }\n  protected onCheckForErrors(errors: Array<SurveyError>, isOnValueChanged: boolean, fireCallback: boolean): void {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (this.isUploading && this.waitForUpload) {\n      errors.push(\n        new UploadingFileError(\n          this.getLocalizationString(\"uploadingFile\"),\n          this\n        )\n      );\n    }\n  }\n  protected uploadFiles(files: File[]) {\n    if (this.survey) {\n      this.stateChanged(\"loading\");\n      this.survey.uploadFiles(this, this.name, files, (arg1: any, arg2: any) => {\n        if (Array.isArray(arg1)) {\n          this.setValueFromResult(arg1);\n          if (Array.isArray(arg2)) {\n            arg2.forEach(error => this.errors.push(new UploadingFileError(error, this)));\n            this.stateChanged(\"error\");\n          }\n        }\n        if (arg1 === \"success\" && Array.isArray(arg2)) {\n          this.setValueFromResult(arg2);\n        }\n        if (arg1 === \"error\") {\n          if (typeof (arg2) === \"string\") {\n            this.errors.push(new UploadingFileError(arg2, this));\n          }\n          if (Array.isArray(arg2) && arg2.length > 0) {\n            arg2.forEach(error => this.errors.push(new UploadingFileError(error, this)));\n          }\n          this.stateChanged(\"error\");\n        }\n        this.stateChanged(\"loaded\");\n      });\n    }\n  }\n  protected loadPreview(newValue: any): void { }\n  protected onChangeQuestionValue(newValue: any): void {\n    super.onChangeQuestionValue(newValue);\n    this.stateChanged(this.isEmpty() ? \"empty\" : \"loaded\");\n  }\n\n  protected getIsQuestionReady(): boolean {\n    return super.getIsQuestionReady() && !this.isFileLoading;\n  }\n  private isFileLoadingValue: boolean;\n  protected get isFileLoading(): boolean { return this.isFileLoadingValue; }\n  protected set isFileLoading(val: boolean) {\n    this.isFileLoadingValue = val;\n    this.updateIsReady();\n  }\n}\n\nexport class QuestionFilePage extends Base {\n  private static pageCounter = 0;\n  private static getId() {\n    return \"sv_sfp_\" + QuestionFilePage.pageCounter++;\n  }\n  @propertyArray({}) public items: Array<any>;\n  public id: string;\n  constructor(private question: QuestionFileModel, private index: number) {\n    super();\n    this.id = QuestionFilePage.getId();\n  }\n  get css(): string {\n    return this.question.cssClasses.page;\n  }\n}\n\n/**\n * A class that describes the File Upload question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n */\nexport class QuestionFileModel extends QuestionFileModelBase {\n  @property() isDragging: boolean = false;\n  @propertyArray({}) public previewValue: any[];\n  @propertyArray({}) public pages: QuestionFilePage[];\n\n  navigationDirection: \"left\" | \"right\" | \"left-delete\";\n  @property({ defaultValue: 0, onSet: (val, target) =>{\n    target.updateRenderedPages();\n  } }) indexToShow: number;\n  @property({\n    defaultValue: 1, onSet: (_, target) => {\n      target.updateFileNavigator();\n    }\n  }) pageSize: number;\n  @property({ defaultValue: false }) containsMultiplyFiles: boolean;\n  @property() allowCameraAccess: boolean;\n  /**\n   * Specifies the source of uploaded files.\n   *\n   * Possible values:\n   *\n   * - `\"file\"` (default) - Allows respondents to select a local file.\n   * - `\"camera\"` - Allows respondents to capture and upload a photo.\n   * - `\"file-camera\"` - Allows respondents to select a local file or capture a photo.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/photo-capture/ (linkStyle))\n   * @see filePlaceholder\n   * @see photoPlaceholder\n   * @see fileOrPhotoPlaceholder\n   */\n  @property({\n    onSet: (val: string, obj: QuestionFileModel) => {\n      if (!obj.isLoadingFromJson) {\n        obj.updateCurrentMode();\n      }\n    }\n  }) sourceType: string;\n\n  public fileNavigator: ActionContainer = new ActionContainer();\n  protected prevFileAction: Action;\n  protected nextFileAction: Action;\n  protected fileIndexAction: Action;\n  public closeCameraAction: Action;\n  public takePictureAction: Action;\n  public changeCameraAction: Action;\n  public chooseFileAction: Action;\n  public startCameraAction: Action;\n  public cleanAction: Action;\n  public actionsContainer: ActionContainer;\n\n  get fileNavigatorVisible(): boolean {\n    const showLoadingIndicator = this.showLoadingIndicator;\n    const isPlayingVideo = this.isPlayingVideo;\n    const containsMultipleFiles = this.containsMultiplyFiles;\n    const needToShowFileNavigator = this.pageSize < this.previewValue.length;\n    return !showLoadingIndicator && !isPlayingVideo && containsMultipleFiles && needToShowFileNavigator;\n  }\n  private get pagesCount() {\n    return Math.ceil(this.previewValue.length / this.pageSize);\n  }\n\n  get actionsContainerVisible(): boolean {\n    const showLoadingIndicator = this.showLoadingIndicator;\n    const isPlayingVideo = this.isPlayingVideo;\n    return !showLoadingIndicator && !isPlayingVideo;\n  }\n\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"takePhotoCaption\", this, false, true);\n    this.createLocalizableString(\"clearCaption\", this, false, true);\n    this.actionsContainer = new ActionContainer();\n    this.actionsContainer.locOwner = this;\n    this.fileIndexAction = new Action({\n      id: \"fileIndex\",\n      title: this.getFileIndexCaption(),\n      enabled: false\n    });\n    this.prevFileAction = new Action({\n      id: \"prevPage\",\n      iconSize: 16,\n      action: () => {\n        this.navigationDirection = \"left\";\n        this.indexToShow = this.previewValue.length && ((this.indexToShow - 1 + this.pagesCount) % this.pagesCount) || 0;\n        this.fileIndexAction.title = this.getFileIndexCaption();\n      }\n    });\n    this.nextFileAction = new Action({\n      id: \"nextPage\",\n      iconSize: 16,\n      action: () => {\n        this.navigationDirection = \"right\";\n        this.indexToShow = this.previewValue.length && ((this.indexToShow + 1) % this.pagesCount) || 0;\n        this.fileIndexAction.title = this.getFileIndexCaption();\n      }\n    });\n    this.takePictureAction = new Action({\n      iconName: \"icon-takepicture\",\n      id: \"sv-file-take-picture\",\n      iconSize: \"auto\",\n      innerCss: <string>(new ComputedUpdater<string>(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.takePictureButton).toString()) as any),\n      locTitle: this.locTakePhotoCaption,\n      showTitle: false,\n      action: () => {\n        this.snapPicture();\n      }\n    });\n    this.closeCameraAction = new Action({\n      iconName: \"icon-closecamera\",\n      id: \"sv-file-close-camera\",\n      iconSize: \"auto\",\n      innerCss: <string>(new ComputedUpdater<string>(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.closeCameraButton).toString()) as any),\n      action: () => {\n        this.stopVideo();\n      }\n    });\n    this.changeCameraAction = new Action({\n      iconName: \"icon-changecamera\",\n      id: \"sv-file-change-camera\",\n      iconSize: \"auto\",\n      innerCss: <string>(new ComputedUpdater<string>(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.changeCameraButton).toString()) as any),\n      visible: <boolean>(new ComputedUpdater<boolean>(() => this.canFlipCamera()) as any),\n      action: () => {\n        this.flipCamera();\n      }\n    });\n    this.chooseFileAction = new Action({\n      iconName: \"icon-choosefile\",\n      id: \"sv-file-choose-file\",\n      iconSize: \"auto\",\n      data: { question: this },\n      enabledIf: () => !this.isInputReadOnly,\n      component: \"sv-file-choose-btn\"\n    });\n    this.startCameraAction = new Action({\n      iconName: \"icon-takepicture_24x24\",\n      id: \"sv-file-start-camera\",\n      iconSize: \"auto\",\n      locTitle: this.locTakePhotoCaption,\n      showTitle: <boolean>(new ComputedUpdater<boolean>(() => !this.isAnswered) as any),\n      enabledIf: () => !this.isInputReadOnly,\n      action: () => {\n        this.startVideo();\n      }\n    });\n    this.cleanAction = new Action({\n      iconName: \"icon-clear\",\n      id: \"sv-file-clean\",\n      iconSize: \"auto\",\n      locTitle: this.locClearButtonCaption,\n      showTitle: false,\n      enabledIf: () => !this.isInputReadOnly,\n      innerCss: <string>(new ComputedUpdater<string>(() => this.cssClasses.removeButton) as any),\n      action: () => {\n        this.doClean();\n      }\n    });\n    [this.closeCameraAction, this.changeCameraAction, this.takePictureAction].forEach((action) => {\n      action.cssClasses = {};\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"sourceType\", \"currentMode\", \"isAnswered\"], () => {\n      this.updateActionsVisibility();\n    });\n    this.actionsContainer.actions = [this.chooseFileAction, this.startCameraAction, this.cleanAction];\n    this.fileNavigator.actions = [this.prevFileAction, this.fileIndexAction, this.nextFileAction];\n  }\n  public get videoId(): string { return this.id + \"_video\"; }\n  public get hasVideoUI(): boolean { return this.currentMode !== \"file\"; }\n  public get hasFileUI(): boolean { return this.currentMode !== \"camera\"; }\n  private videoStream: MediaStream;\n  public startVideo(): void {\n    if (this.currentMode === \"file\" || this.isDesignMode || this.isPlayingVideo) return;\n    this.setIsPlayingVideo(true);\n    setTimeout(() => {\n      this.startVideoInCamera();\n    }, 0);\n  }\n  private get videoHtmlElement() {\n    return this.rootElement?.querySelector(`#${this.videoId}`) as HTMLVideoElement;\n  }\n  private startVideoInCamera(): void {\n    this.camera.startVideo(this.videoHtmlElement, (stream: MediaStream) => {\n      this.videoStream = stream;\n      if (!stream) {\n        this.stopVideo();\n      }\n    }, getRenderedSize(this.imageWidth), getRenderedSize(this.imageHeight));\n  }\n  public stopVideo(): void {\n    this.setIsPlayingVideo(false);\n    this.closeVideoStream();\n  }\n  public snapPicture(): void {\n    if (!this.isPlayingVideo) return;\n    const blobCallback = (blob: Blob | null): void => {\n      if (blob) {\n        const file = new File([blob], \"snap_picture.png\", { type: \"image/png\" });\n        this.loadFiles([file]);\n      }\n    };\n    this.camera.snap(this.videoHtmlElement, blobCallback);\n    this.stopVideo();\n  }\n  @property() private canFlipCameraValue: boolean = undefined;\n  public canFlipCamera(): boolean {\n    if (this.canFlipCameraValue === undefined) {\n      this.canFlipCameraValue = this.camera.canFlip((res: boolean) => {\n        this.canFlipCameraValue = res;\n      });\n    }\n    return this.canFlipCameraValue;\n  }\n  public flipCamera(): void {\n    if (!this.canFlipCamera()) return;\n    this.closeVideoStream();\n    this.camera.flip();\n    this.startVideoInCamera();\n  }\n  private closeVideoStream(): void {\n    if (!!this.videoStream) {\n      this.videoStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      this.videoStream = undefined;\n    }\n  }\n  public onHidingContent(): void {\n    super.onHidingContent();\n    this.stopVideo();\n  }\n  protected updateElementCssCore(cssClasses: any): void {\n    super.updateElementCssCore(cssClasses);\n    this.prevFileAction.iconName = this.cssClasses.leftIconId;\n    this.nextFileAction.iconName = this.cssClasses.rightIconId;\n    this.updateCurrentMode();\n  }\n  private getFileIndexCaption(): string {\n    return this.getLocalizationFormatString(\"indexText\", this.indexToShow + 1, this.pagesCount);\n  }\n  private updateFileNavigator() {\n    this.updatePages();\n    this.navigationDirection = undefined;\n    this.indexToShow = this.previewValue.length && ((this.indexToShow + this.pagesCount) % this.pagesCount) || 0;\n    this.fileIndexAction.title = this.getFileIndexCaption();\n  }\n  private updateRenderedPages() {\n    if (this.pages && this.pages[this.indexToShow]) {\n      this.renderedPages = [this.pages[this.indexToShow]];\n    }\n  }\n  private updatePages() {\n    this.blockAnimations();\n    let currentPage: QuestionFilePage;\n    this.pages = [];\n    this.renderedPages = [];\n    this.previewValue.forEach((val, index) => {\n      if (index % this.pageSize == 0) {\n        currentPage = new QuestionFilePage(this, this.pages.length);\n        this.pages.push(currentPage);\n      }\n      currentPage.items.push(val);\n    });\n    this.releaseAnimations();\n    this.updateRenderedPages();\n  }\n  private prevPreviewLength = 0;\n  private previewValueChanged() {\n    this.navigationDirection = undefined;\n    if (this.previewValue.length !== this.prevPreviewLength) {\n      if (this.previewValue.length > 0) {\n        if (this.prevPreviewLength > this.previewValue.length) {\n          if (this.indexToShow >= this.pagesCount && this.indexToShow > 0) {\n            this.indexToShow = this.pagesCount - 1;\n            this.navigationDirection = \"left-delete\";\n          }\n        } else {\n          this.indexToShow = Math.floor(this.prevPreviewLength / this.pageSize);\n        }\n      } else {\n        this.indexToShow = 0;\n      }\n    }\n    this.updatePages();\n    this.fileIndexAction.title = this.getFileIndexCaption();\n    this.containsMultiplyFiles = this.previewValue.length > 1;\n    if (this.previewValue.length > 0 && !this.calculatedGapBetweenItems && !this.calculatedItemWidth) {\n      setTimeout(() => {\n        this.processResponsiveness(0, this._width);\n      }, 1);\n    }\n    this.prevPreviewLength = this.previewValue.length;\n  }\n\n  public getType(): string {\n    return \"file\";\n  }\n\n  protected onChangeQuestionValue(newValue: any): void {\n    super.onChangeQuestionValue(newValue);\n    if (!this.isLoadingFromJson) {\n      this.loadPreview(newValue);\n    }\n  }\n\n  /**\n   * Disable this property only to implement a custom preview.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-custom-preview/ (linkStyle))\n   * @see allowImagesPreview\n   */\n  public get showPreview() {\n    return this.getPropertyValue(\"showPreview\");\n  }\n  public set showPreview(val: boolean) {\n    this.setPropertyValue(\"showPreview\", val);\n  }\n  /**\n   * Specifies whether users can upload multiple files.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   */\n  public get allowMultiple(): boolean {\n    return this.getPropertyValue(\"allowMultiple\");\n  }\n  public set allowMultiple(val: boolean) {\n    this.setPropertyValue(\"allowMultiple\", val);\n  }\n  /**\n   * The height of the following images:\n   *\n   * - [Images in the preview](#allowImagesPreview)\n   * - [Photos taken using the camera](#sourceType)\n   * - Uploaded images in a [generated PDF form](https://surveyjs.io/pdf-generator/documentation/overview)\n   *\n   * > The sizes of previewed images are limited by the height and width of the preview area in single file upload mode or that of a thumbnail area in [multiple file upload mode](#allowMultiple).\n   * @see imageWidth\n   */\n  public get imageHeight(): string {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  public set imageHeight(val: string) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n  /**\n   * The width of the following images:\n   *\n   * - [Images in the preview](#allowImagesPreview)\n   * - [Photos taken using the camera](#sourceType)\n   * - Uploaded images in a [generated PDF form](https://surveyjs.io/pdf-generator/documentation/overview)\n   *\n   * > The sizes of previewed images are limited by the height and width of the preview area in single file upload mode or that of a thumbnail area in [multiple file upload mode](#allowMultiple).\n   * @see imageHeight\n   */\n  public get imageWidth(): string {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  public set imageWidth(val: string) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n  /**\n   * An [accept](https://www.w3schools.com/tags/att_input_accept.asp) attribute value for the underlying `<input>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/store-file-names-in-survey-results/ (linkStyle))\n   */\n  public get acceptedTypes(): string {\n    return this.getPropertyValue(\"acceptedTypes\");\n  }\n  public set acceptedTypes(val: string) {\n    this.setPropertyValue(\"acceptedTypes\", val);\n  }\n  /**\n   * Specifies whether to show a preview of image files.\n   */\n  public get allowImagesPreview(): boolean {\n    return this.getPropertyValue(\"allowImagesPreview\");\n  }\n  public set allowImagesPreview(val: boolean) {\n    this.setPropertyValue(\"allowImagesPreview\", val);\n  }\n  /**\n   * Maximum allowed file size, measured in bytes.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   */\n  public get maxSize(): number {\n    return this.getPropertyValue(\"maxSize\");\n  }\n  public set maxSize(val: number) {\n    this.setPropertyValue(\"maxSize\", val);\n  }\n  public chooseFile(event: MouseEvent): void {\n    if (!this.rootElement) return;\n\n    const inputElement = this.rootElement.querySelector(`#${this.inputId}`) as HTMLInputElement;\n    if (!inputElement) return;\n\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    if (inputElement) {\n      if (this.survey) {\n        this.survey.chooseFiles(inputElement, files => this.loadFiles(files), { element: this, elementType: this.getType(), propertyName: this.name });\n      } else {\n        inputElement.click();\n      }\n    }\n  }\n  /**\n   * Specifies whether users should confirm file deletion.\n   *\n   * Default value: `false`\n   */\n  public get needConfirmRemoveFile(): boolean {\n    return this.getPropertyValue(\"needConfirmRemoveFile\");\n  }\n  public set needConfirmRemoveFile(val: boolean) {\n    this.setPropertyValue(\"needConfirmRemoveFile\", val);\n  }\n  public getConfirmRemoveMessage(fileName: string): string {\n    return (<any>this.confirmRemoveMessage).format(fileName);\n  }\n  @property({ localizable: { defaultStr: \"confirmRemoveFile\" } }) confirmRemoveMessage: string;\n  @property({ localizable: { defaultStr: \"confirmRemoveAllFiles\" } }) confirmRemoveAllMessage: string;\n  @property({ localizable: { defaultStr: \"noFileChosen\" } }) noFileChosenCaption: string;\n  @property({ localizable: { defaultStr: \"chooseFileCaption\" } }) chooseButtonCaption: string;\n  public get takePhotoCaption(): string { return this.getLocalizableStringText(\"takePhotoCaption\"); }\n  public set takePhotoCaption(val: string) { this.setLocalizableStringText(\"takePhotoCaption\", val); }\n  public get locTakePhotoCaption(): LocalizableString { return this.getLocalizableString(\"takePhotoCaption\"); }\n  @property({ localizable: { defaultStr: \"replaceFileCaption\" } }) replaceButtonCaption: string;\n  @property({ localizable: { defaultStr: \"removeFileCaption\" } }) removeFileCaption: string;\n  @property({ localizable: { defaultStr: \"loadingFile\" } }) loadingFileTitle: string;\n  @property({ localizable: { defaultStr: \"chooseFile\" } }) chooseFileTitle: string;\n\n  public get clearButtonCaption(): string {\n    return this.getLocalizableStringText(\"clearCaption\");\n  }\n  public set clearButtonCaption(value: string) {\n    this.setLocalizableStringText(\"clearCaption\", value);\n  }\n  get locClearButtonCaption(): LocalizableString {\n    return this.getLocalizableString(\"clearCaption\");\n  }\n\n  /**\n   * A placeholder text displayed when the File Upload question doesn't contain any files or photos to upload. Applies only when [`sourceType`](#sourceType) value is `\"file-camera\"`.\n   * @see filePlaceholder\n   * @see photoPlaceholder\n   */\n  @property({ localizable: { defaultStr: \"fileOrPhotoPlaceholder\" } }) fileOrPhotoPlaceholder: string;\n  /**\n   * A placeholder text displayed when the File Upload question doesn't contain any photos to upload. Applies only when the [`sourceType`](#sourceType) value is `\"camera\"`.\n   * @see filePlaceholder\n   * @see fileOrPhotoPlaceholder\n   */\n  @property({ localizable: { defaultStr: \"photoPlaceholder\" } }) photoPlaceholder: string;\n  /**\n   * A placeholder text displayed when the File Upload question doesn't contain any files to upload. Applies only when the [`sourceType`](#sourceType) value is `\"file\"`.\n   * @see photoPlaceholder\n   * @see fileOrPhotoPlaceholder\n   */\n  @property({ localizable: { defaultStr: \"filePlaceholder\" } }) filePlaceholder: string;\n\n  @property() locRenderedPlaceholderValue: LocalizableString;\n  public get locRenderedPlaceholder(): LocalizableString {\n    if (this.locRenderedPlaceholderValue === undefined) {\n      this.locRenderedPlaceholderValue = <LocalizableString><unknown>(new ComputedUpdater<LocalizableString>(() => {\n        const isReadOnly = this.isReadOnly;\n        const hasFileUI = (!this.isDesignMode && this.hasFileUI) || (this.isDesignMode && this.sourceType != \"camera\");\n        const hasVideoUI = (!this.isDesignMode && this.hasVideoUI) || (this.isDesignMode && this.sourceType != \"file\");\n        let renderedPlaceholder: LocalizableString;\n        if (isReadOnly) {\n          renderedPlaceholder = this.locNoFileChosenCaption;\n        } else if (hasFileUI && hasVideoUI) {\n          renderedPlaceholder = this.locFileOrPhotoPlaceholder;\n        } else if (hasFileUI) {\n          renderedPlaceholder = this.locFilePlaceholder;\n        } else {\n          renderedPlaceholder = this.locPhotoPlaceholder;\n        }\n        return renderedPlaceholder;\n      }));\n    }\n    return this.locRenderedPlaceholderValue;\n  }\n  public get currentMode(): string {\n    return this.getPropertyValue(\"currentMode\", this.sourceType);\n  }\n  public get isPlayingVideo(): boolean {\n    return this.getPropertyValue(\"isPlayingVideo\", false);\n  }\n  private setIsPlayingVideo(show: boolean): void {\n    this.setPropertyValue(\"isPlayingVideo\", show);\n  }\n  private updateCurrentMode(): void {\n    if (!this.isDesignMode && this.survey) {\n      if (this.sourceType !== \"file\") {\n        this.camera.hasCamera((res: boolean) => {\n          this.setPropertyValue(\"currentMode\", res ? this.sourceType : \"file\");\n        });\n      } else {\n        this.setPropertyValue(\"currentMode\", this.sourceType);\n      }\n    }\n  }\n  private updateActionsVisibility() {\n    const isDesignMode = this.isDesignMode;\n    this.chooseFileAction.visible = (!isDesignMode && this.hasFileUI) || (isDesignMode && this.sourceType !== \"camera\");\n    this.startCameraAction.visible = (!isDesignMode && this.hasVideoUI) || (isDesignMode && this.sourceType !== \"file\");\n    this.cleanAction.visible = !!this.isAnswered;\n  }\n  get inputTitle(): string {\n    if (this.isUploading) return this.loadingFileTitle;\n    if (this.isEmpty()) return this.chooseFileTitle;\n    return \" \";\n  }\n\n  public get chooseButtonText() {\n    return this.isEmpty() || this.allowMultiple ? this.chooseButtonCaption : this.replaceButtonCaption;\n  }\n\n  @property() isClearingFiles: boolean = false;\n\n  public clear(doneCallback?: () => void) {\n    if (!this.survey) return;\n    this.containsMultiplyFiles = false;\n    this.isClearingFiles = true;\n    this.survey.clearFiles(\n      this,\n      this.name,\n      this.value,\n      null,\n      (status, data) => {\n        if (status === \"success\") {\n          this.value = undefined;\n          this.errors = [];\n          !!doneCallback && doneCallback();\n          this.indexToShow = 0;\n          this.fileIndexAction.title = this.getFileIndexCaption();\n          this.isClearingFiles = false;\n        }\n      }\n    );\n  }\n  public get renderCapture(): string {\n    return this.allowCameraAccess ? \"user\" : undefined;\n  }\n\n  get multipleRendered() {\n    return this.allowMultiple ? \"multiple\" : undefined;\n  }\n  public get showFileDecorator(): boolean {\n    const isPlayingVideo = this.isPlayingVideo;\n    const showLoadingIndicator = this.showLoadingIndicator;\n    return !isPlayingVideo && !showLoadingIndicator;\n  }\n  public get showDragAreaPlaceholder() {\n    return !this.isAnswered;\n  }\n  public get showLoadingIndicator(): boolean {\n    return this.isUploading || this.isClearingFiles;\n  }\n  public get allowShowPreview(): boolean {\n    const isShowLoadingIndicator = this.showLoadingIndicator;\n    const isPlayingVideo = this.isPlayingVideo;\n    return !isShowLoadingIndicator && !isPlayingVideo;\n  }\n  public get showPreviewContainer(): boolean {\n    return this.previewValue && this.previewValue.length > 0;\n  }\n  defaultImage(data: any) {\n    return !this.canPreviewImage(data) && !!this.cssClasses.defaultImage;\n  }\n\n  /**\n   * Removes a file with a specified name.\n   */\n  public removeFile(name: string) {\n    this.removeFileByContent(this.value.filter((f: any) => f.name === name)[0]);\n  }\n  protected removeFileByContent(content: any) {\n    if (!this.survey) return;\n    this.isClearingFiles = true;\n    this.survey.clearFiles(\n      this,\n      this.name,\n      this.value,\n      content.name,\n      (status, data) => {\n        if (status === \"success\") {\n          var oldValue = this.value;\n          if (Array.isArray(oldValue)) {\n            this.value = oldValue.filter((f) => !Helpers.isTwoValueEquals(f, content, true, false, false));\n          } else {\n            this.value = undefined;\n          }\n          this.isClearingFiles = false;\n        }\n      }\n    );\n  }\n\n  protected setValueFromResult(arg: any) {\n    this.value = (this.value || []).concat(\n      arg.map((r: any) => {\n        return {\n          name: r.file.name,\n          type: r.file.type,\n          content: r.content,\n        };\n      })\n    );\n  }\n  /**\n   * Loads multiple files into the question.\n   * @param files An array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects.\n   */\n  public loadFiles(files: File[]) {\n    if (!this.survey) {\n      return;\n    }\n    this.errors = [];\n    if (!this.allFilesOk(files)) {\n      return;\n    }\n\n    var loadFilesProc = () => {\n      this.stateChanged(\"loading\");\n      var content = <Array<any>>[];\n      if (this.storeDataAsText) {\n        files.forEach((file) => {\n          let fileReader = new FileReader();\n          fileReader.onload = (e) => {\n            content = content.concat([\n              { name: file.name, type: file.type, content: fileReader.result },\n            ]);\n            if (content.length === files.length) {\n              this.value = (this.value || []).concat(content);\n            }\n          };\n          fileReader.readAsDataURL(file);\n        });\n      } else {\n        this.uploadFiles(files);\n      }\n    };\n    if (this.allowMultiple) {\n      loadFilesProc();\n    } else {\n      this.clear(loadFilesProc);\n    }\n  }\n  private cameraValue: Camera;\n\n  protected get camera(): Camera {\n    if (!this.cameraValue) {\n      this.cameraValue = new Camera();\n    }\n    return this.cameraValue;\n  }\n  public canPreviewImage(fileItem: any): boolean {\n    return this.allowImagesPreview && !!fileItem && this.isFileImage(fileItem);\n  }\n  private prevLoadedPreviewValue: any;\n  protected loadPreview(newValue: any): void {\n    if (this.showPreview && this.prevLoadedPreviewValue === newValue) return;\n    this.previewValue.splice(0, this.previewValue.length);\n    if (!this.showPreview || !newValue) return;\n    this.prevLoadedPreviewValue = newValue;\n    var newValues = Array.isArray(newValue)\n      ? newValue\n      : !!newValue\n        ? [newValue]\n        : [];\n\n    if (this.storeDataAsText) {\n      newValues.forEach((value) => {\n        var content = value.content || value;\n        this.previewValue.push(\n          {\n            name: value.name,\n            type: value.type,\n            content: content,\n          },\n        );\n      });\n      this.previewValueChanged();\n    } else {\n      if (!!this._previewLoader) {\n        this._previewLoader.dispose();\n      }\n      this.isFileLoading = true;\n      this._previewLoader = new FileLoader(this, (status, loaded) => {\n        if (status !== \"error\") {\n          loaded.forEach((val) => {\n            this.previewValue.push(val);\n          });\n          this.previewValueChanged();\n        }\n        this.isFileLoading = false;\n        this._previewLoader.dispose();\n        this._previewLoader = undefined;\n      });\n      this._previewLoader.load(newValues);\n    }\n  }\n  private allFilesOk(files: File[]): boolean {\n    var errorLength = this.errors ? this.errors.length : 0;\n    (files || []).forEach((file) => {\n      if (this.maxSize > 0 && file.size > this.maxSize) {\n        this.errors.push(new ExceedSizeError(this.maxSize, this));\n      }\n    });\n    return errorLength === this.errors.length;\n  }\n  private isFileImage(file: {\n    content: string,\n    name?: string,\n    type?: string,\n  }): boolean {\n    if (!file || !file.content || !file.content.substring) return false;\n    const imagePrefix = \"data:image\";\n    var subStr = file.content && file.content.substring(0, imagePrefix.length);\n    subStr = subStr && subStr.toLowerCase();\n    var result =\n      subStr === imagePrefix ||\n      (!!file.type && file.type.toLowerCase().indexOf(\"image/\") === 0);\n    return result;\n  }\n  public getPlainData(\n    options: IPlainDataOptions = {\n      includeEmpty: true,\n    }\n  ): IQuestionPlainData {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData && !this.isEmpty()) {\n      questionPlainData.isNode = false;\n      var values = Array.isArray(this.value) ? this.value : [this.value];\n      questionPlainData.data = values.map((dataValue, index) => {\n        return {\n          name: index,\n          title: \"File\",\n          value: (dataValue.content && dataValue.content) || dataValue,\n          displayValue: (dataValue.name && dataValue.name) || dataValue,\n          getString: (val: any) =>\n            typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false,\n        };\n      });\n    }\n    return questionPlainData;\n  }\n  public getImageWrapperCss(data: any): string {\n    return new CssClassBuilder().append(this.cssClasses.imageWrapper).append(this.cssClasses.imageWrapperDefaultImage, this.defaultImage(data)).toString();\n  }\n  protected getActionsContainerCss(css: any): string {\n    return new CssClassBuilder()\n      .append(css.actionsContainer)\n      .append(css.actionsContainerAnswered, this.isAnswered)\n      .toString();\n  }\n  public getRemoveButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.removeFileButton)\n      .append(this.cssClasses.contextButton)\n      .toString();\n  }\n  public getChooseFileCss(): string {\n    const isAnswered = this.isAnswered;\n    return new CssClassBuilder()\n      .append(this.cssClasses.chooseFile)\n      .append(this.cssClasses.controlDisabled, this.isReadOnly)\n      .append(this.cssClasses.chooseFileAsText, !isAnswered)\n      .append(this.cssClasses.chooseFileAsTextDisabled, !isAnswered && this.isInputReadOnly)\n      .append(this.cssClasses.contextButton, isAnswered)\n      .append(this.cssClasses.chooseFileAsIcon, isAnswered)\n      .toString();\n  }\n  public getReadOnlyFileCss(): string {\n    return new CssClassBuilder()\n      .append(\"form-control\")\n      .append(this.cssClasses.placeholderInput)\n      .toString();\n  }\n  public get fileRootCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.rootReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.rootPreview, this.isPreviewStyle)\n      .append(this.cssClasses.rootDragging, this.isDragging)\n      .append(this.cssClasses.rootAnswered, this.isAnswered)\n      .append(this.cssClasses.single, !this.allowMultiple)\n      .append(this.cssClasses.singleImage, !this.allowMultiple && this.isAnswered && this.canPreviewImage(this.value[0]))\n      .append(this.cssClasses.mobile, this.isMobile)\n      .toString();\n  }\n  public getFileDecoratorCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.fileDecorator)\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.fileDecoratorDrag, this.isDragging)\n      .toString();\n  }\n\n  private onChange(src: any) {\n    if (!DomWindowHelper.isFileReaderAvailable()) return;\n    if (!src || !src.files || src.files.length < 1) return;\n    let files = [];\n    let allowCount = this.allowMultiple ? src.files.length : 1;\n    for (let i = 0; i < allowCount; i++) {\n      files.push(src.files[i]);\n    }\n    src.value = \"\";\n    this.loadFiles(files);\n  }\n\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    this.actionsContainer.cssClasses = css.actionBar;\n    this.actionsContainer.cssClasses.itemWithTitle = this.actionsContainer.cssClasses.item;\n    this.actionsContainer.cssClasses.item = \"\";\n    this.actionsContainer.cssClasses.itemAsIcon = classes.contextButton;\n    this.actionsContainer.containerCss = classes.actionsContainer;\n    return classes;\n  }\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    this.updateCurrentMode();\n    this.updateActionsVisibility();\n    this.loadPreview(this.value);\n  }\n  protected needResponsiveness(): boolean {\n    return this.supportResponsiveness();\n  }\n  protected supportResponsiveness(): boolean {\n    return true;\n  }\n  protected getObservedElementSelector(): string {\n    return classesToSelector(this.cssClasses.dragArea);\n  }\n  private getFileListSelector(): string {\n    return classesToSelector(this.cssClasses.fileList);\n  }\n\n  @propertyArray() private _renderedPages: Array<QuestionFilePage> = [];\n\n  public get renderedPages(): Array<QuestionFilePage> {\n    return this._renderedPages;\n  }\n  public set renderedPages(val: Array<QuestionFilePage>) {\n    this.pagesAnimation.sync(val);\n  }\n\n  private getPagesAnimationOptions(): IAnimationConsumer<[QuestionFilePage]> {\n    return {\n      getEnterOptions: (page: QuestionFilePage) => {\n        const pageClass = this.cssClasses.page;\n        return { cssClass: pageClass ? new CssClassBuilder()\n          .append(`${pageClass}--enter-from-left`, this.navigationDirection == \"left\" || this.navigationDirection == \"left-delete\")\n          .append(`${pageClass}--enter-from-right`, this.navigationDirection == \"right\").toString() : \"\"\n        };\n      },\n      getLeaveOptions: (page: QuestionFilePage) => {\n        const pageClass = this.cssClasses.page;\n        return {\n          cssClass: pageClass ? new CssClassBuilder()\n            .append(`${pageClass}--leave-to-left`, this.navigationDirection == \"right\")\n            .append(`${pageClass}--leave-to-right`, this.navigationDirection == \"left\").toString() : \"\"\n        };\n      },\n      getAnimatedElement: (page: QuestionFilePage) => {\n        return this.rootElement?.querySelector(`#${page.id}`);\n      },\n      isAnimationEnabled: () => {\n        return this.animationAllowed && !!this.rootElement;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      }\n    };\n  }\n  private pagesAnimation = new AnimationTab<QuestionFilePage>(this.getPagesAnimationOptions(), (val) => {\n    this._renderedPages = val;\n  }, () => this.renderedPages);\n\n  private calcAvailableItemsCount = (availableWidth: number, itemWidth: number, gap: number): number => {\n    let itemsCount = Math.floor(availableWidth / (itemWidth + gap));\n    if ((itemsCount + 1) * (itemWidth + gap) - gap <= availableWidth) itemsCount++;\n    return itemsCount;\n  };\n  private calculatedGapBetweenItems: number;\n  private calculatedItemWidth: number;\n  private _width: number;\n  public triggerResponsiveness(hard?: boolean): void {\n    if (hard) {\n      this.calculatedGapBetweenItems = undefined;\n      this.calculatedItemWidth = undefined;\n    }\n    super.triggerResponsiveness();\n  }\n  protected processResponsiveness(_: number, availableWidth: number): boolean {\n    this._width = availableWidth;\n    if (this.rootElement) {\n      if ((!this.calculatedGapBetweenItems || !this.calculatedItemWidth) && this.allowMultiple) {\n        const fileListSelector = this.getFileListSelector();\n        const fileListElement = fileListSelector ? this.rootElement.querySelector(this.getFileListSelector()) : undefined;\n        if (fileListElement) {\n          const visiblePage = fileListElement.querySelector(classesToSelector(this.cssClasses.page));\n          if (visiblePage) {\n            const firstVisibleItem = visiblePage.querySelector(classesToSelector(this.cssClasses.previewItem));\n            this.calculatedGapBetweenItems = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(visiblePage).gap));\n            if (firstVisibleItem) {\n              this.calculatedItemWidth = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(firstVisibleItem).width));\n            }\n          }\n        }\n      }\n    }\n    if (this.calculatedGapBetweenItems && this.calculatedItemWidth) {\n      this.pageSize = Math.max(this.calcAvailableItemsCount(availableWidth, this.calculatedItemWidth, this.calculatedGapBetweenItems), 1);\n      return true;\n    }\n    return false;\n  }\n\n  //#region\n  // web-based methods\n  private rootElement: HTMLElement;\n  private canDragDrop(): boolean { return !this.isInputReadOnly && this.currentMode !== \"camera\" && !this.isPlayingVideo; }\n  public afterRenderQuestionElement(el: HTMLElement): void {\n    super.afterRenderQuestionElement(el);\n    this.rootElement = el;\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    super.beforeDestroyQuestionElement(el);\n    this.stopVideo();\n    this.rootElement = undefined;\n  }\n  private dragCounter: number = 0;\n  onDragEnter = (event: any) => {\n    if (this.canDragDrop()) {\n      event.preventDefault();\n      this.isDragging = true;\n      this.dragCounter++;\n    }\n  };\n  onDragOver = (event: any) => {\n    if (!this.canDragDrop()) {\n      event.returnValue = false;\n      return false;\n    }\n    event.dataTransfer.dropEffect = \"copy\";\n    event.preventDefault();\n  };\n  onDrop = (event: any) => {\n    if (this.canDragDrop()) {\n      this.isDragging = false;\n      this.dragCounter = 0;\n      event.preventDefault();\n      let src = event.dataTransfer;\n      this.onChange(src);\n    }\n  };\n  onDragLeave = (event: any) => {\n    if (this.canDragDrop()) {\n      this.dragCounter--;\n      if (this.dragCounter === 0) {\n        this.isDragging = false;\n      }\n    }\n  };\n  doChange = (event: any) => {\n    var src = event.target || event.srcElement;\n    this.onChange(src);\n  };\n  doClean = () => {\n    if (this.needConfirmRemoveFile) {\n      confirmActionAsync({\n        message: this.confirmRemoveAllMessage,\n        funcOnYes: () => { this.clearFilesCore(); },\n        locale: this.getLocale(),\n        rootElement: this.survey.rootElement,\n        cssClass: this.cssClasses.confirmDialog\n      });\n      return;\n    }\n    this.clearFilesCore();\n  };\n  private clearFilesCore(): void {\n    if (this.rootElement) {\n      const input = this.rootElement.querySelectorAll(\"input\")[0];\n      if (input) {\n        input.value = \"\";\n      }\n    }\n    this.clear();\n  }\n  doRemoveFile(data: any, event: any) {\n    event.stopPropagation();\n    if (this.needConfirmRemoveFile) {\n      confirmActionAsync({\n        message: this.getConfirmRemoveMessage(data.name),\n        funcOnYes: () => { this.removeFileCore(data); },\n        locale: this.getLocale(),\n        rootElement: this.survey.rootElement,\n        cssClass: this.cssClasses.confirmDialog\n      });\n      return;\n    }\n    this.removeFileCore(data);\n  }\n  private removeFileCore(data: any): void {\n    const previewIndex = this.previewValue.indexOf(data);\n    this.removeFileByContent(previewIndex === -1 ? data : this.value[previewIndex]);\n  }\n  doDownloadFileFromContainer = (event: MouseEvent) => {\n    event.stopPropagation();\n    const currentTarget = event.currentTarget as HTMLElement;\n    if (currentTarget && currentTarget.getElementsByTagName) {\n      const link = currentTarget.getElementsByTagName(\"a\")[0];\n      link?.click();\n    }\n  };\n  doDownloadFile = (event: any, data: any) => {\n    event.stopPropagation();\n    if (detectIEOrEdge()) {\n      event.preventDefault();\n      loadFileFromBase64(data.content, data.name);\n    }\n  };\n  //#endregion\n  public dispose(): void {\n    this.cameraValue = undefined;\n    this.closeVideoStream();\n    super.dispose();\n  }\n}\nSerializer.addClass(\n  \"file\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    { name: \"showPreview:boolean\", default: true, visible: false },\n    \"allowMultiple:boolean\",\n    {\n      name: \"allowImagesPreview:boolean\",\n      default: true,\n      dependsOn: \"showPreview\",\n      visibleIf: (obj: any) => {\n        return !!obj.showPreview;\n      },\n    },\n    \"imageHeight\",\n    \"imageWidth\",\n    \"acceptedTypes\",\n    { name: \"storeDataAsText:boolean\", default: true },\n    { name: \"waitForUpload:boolean\", default: false },\n    { name: \"maxSize:number\", default: 0 },\n    { name: \"defaultValue\", visible: false },\n    { name: \"correctAnswer\", visible: false },\n    { name: \"validators\", visible: false },\n    { name: \"needConfirmRemoveFile:boolean\" },\n    { name: \"sourceType\", choices: [\"file\", \"camera\", \"file-camera\"], default: \"file\", category: \"general\", visible: true },\n    { name: \"fileOrPhotoPlaceholder:text\", serializationProperty: \"locFileOrPhotoPlaceholder\", category: \"general\" },\n    { name: \"photoPlaceholder:text\", serializationProperty: \"locPhotoPlaceholder\", category: \"general\" },\n    { name: \"filePlaceholder:text\", serializationProperty: \"locFilePlaceholder\", category: \"general\" },\n    { name: \"allowCameraAccess:switch\", category: \"general\", visible: false },\n  ],\n  function () {\n    return new QuestionFileModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"file\", (name) => {\n  return new QuestionFileModel(name);\n});\n\nexport class FileLoader {\n  constructor(private fileQuestion: QuestionFileModelBase, private callback: (status: string, files: any[]) => void) {\n  }\n  loaded: any[] = [];\n  load(files: Array<any>): void {\n    let downloadedCount = 0;\n    this.loaded = new Array(files.length);\n    files.forEach((value, index) => {\n      if (this.fileQuestion.survey) {\n        this.fileQuestion.survey.downloadFile(this.fileQuestion, this.fileQuestion.name, value, (status, data) => {\n          if (!this.fileQuestion || !this.callback) {\n            return;\n          }\n          if (status !== \"error\") {\n            this.loaded[index] = {\n              content: data,\n              name: value.name,\n              type: value.type,\n            };\n            downloadedCount++;\n            if (downloadedCount === files.length) {\n              this.callback(status, this.loaded);\n            }\n          } else {\n            this.callback(\"error\", this.loaded);\n          }\n        });\n      }\n    });\n  }\n  public dispose(): void {\n    this.fileQuestion = undefined;\n    this.callback = undefined;\n  }\n}", "import { QuestionNonValue } from \"./questionnonvalue\";\nimport { Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\n/**\n  * A class that describes the HTML question type. Unlike other question types, HTML cannot have a title or value.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-html/ (linkStyle))\n */\nexport class QuestionHtmlModel extends QuestionNonValue {\n  public ignoreHtmlProgressing: boolean;\n  constructor(name: string) {\n    super(name);\n    var locHtml = this.createLocalizableString(\"html\", this);\n    locHtml.onGetTextCallback = (str: string): string => {\n      return !!this.survey && !this.ignoreHtmlProgressing\n        ? this.processHtml(str)\n        : str;\n    };\n  }\n  public getType(): string {\n    return \"html\";\n  }\n  public get isCompositeQuestion(): boolean {\n    return true;\n  }\n  public getProcessedText(text: string): string {\n    if (this.ignoreHtmlProgressing) return text;\n    return super.getProcessedText(text);\n  }\n  /**\n   * HTML markup to display.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-html-form-field/ (linkStyle))\n   *\n   * > If you get the markup from a third party, ensure that it does not contain malicious code.\n   */\n  public get html(): string {\n    return this.getLocalizableStringText(\"html\", \"\");\n  }\n  public set html(val: string) {\n    this.setLocalizableStringText(\"html\", val);\n  }\n  get locHtml(): LocalizableString {\n    return this.getLocalizableString(\"html\");\n  }\n  public get processedHtml() {\n    return this.processHtml(this.html);\n  }\n  private processHtml(html: string): string {\n    return this.survey ? this.survey.processHtml(html, \"html-question\") : this.html;\n  }\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  public get renderCssRoot(): string {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.nested, this.getIsNested()).toString() || undefined;\n  }\n}\nSerializer.addClass(\n  \"html\",\n  [\n    { name: \"html:html\", serializationProperty: \"locHtml\" },\n    { name: \"showNumber\", visible: false },\n    { name: \"state\", visible: false },\n    { name: \"titleLocation\", visible: false },\n    { name: \"descriptionLocation\", visible: false },\n    { name: \"errorLocation\", visible: false },\n    { name: \"indent\", visible: false },\n    { name: \"width\", visible: false },\n  ],\n  function () {\n    return new QuestionHtmlModel(\"\");\n  },\n  \"nonvalue\"\n);\nQuestionFactory.Instance.registerQuestion(\"html\", name => {\n  return new QuestionHtmlModel(name);\n});\n", "import { Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { ChoiceItem, QuestionCheckboxBase } from \"./question_baseselect\";\nimport { ItemValue } from \"./itemvalue\";\nimport { Action } from \"./actions/action\";\nimport { ComputedUpdater } from \"./base\";\n\n/**\n * A class that describes the Radio Button Group question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-radiogroup/ (linkStyle))\n */\nexport class QuestionRadiogroupModel extends QuestionCheckboxBase {\n  constructor(name: string) {\n    super(name);\n  }\n  protected getDefaultItemComponent(): string {\n    return \"survey-radiogroup-item\";\n  }\n  public getType(): string {\n    return \"radiogroup\";\n  }\n\n  protected getFirstInputElementId(): string {\n    return this.inputId + \"_0\";\n  }\n  /**\n   * Returns the selected choice item. If no item is selected, returns `null`.\n   */\n  public get selectedItem(): ChoiceItem { return <ChoiceItem>this.getSingleSelectedItem(); }\n  /**\n   * Specifies whether to display a button that clears the question value.\n   *\n   * Default value: `false`\n   */\n  public get allowClear(): boolean {\n    return this.getPropertyValue(\"allowClear\");\n  }\n  public set allowClear(val: boolean) {\n    this.setPropertyValue(\"allowClear\", val);\n  }\n  /**\n   * @deprecated Use the [`allowClear`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model#allowClear) property instead.\n   */\n  public get showClearButton(): boolean {\n    return this.allowClear;\n  }\n  public set showClearButton(val: boolean) {\n    this.allowClear = val;\n  }\n  public get canShowClearButton(): boolean {\n    return this.allowClear && !this.isReadOnly;\n  }\n  public get clearButtonCaption() {\n    return this.getLocalizationString(\"clearCaption\");\n  }\n  supportAutoAdvance(): boolean {\n    return this.isMouseDown === true && !this.selectedItem?.showCommentArea;\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    const json = super.getConditionJson(operator, path);\n    delete json[\"allowClear\"];\n    delete json[\"showClearButton\"];\n    return json;\n  }\n  protected setNewComment(newValue: string): void {\n    this.isMouseDown = true;\n    super.setNewComment(newValue);\n    this.isMouseDown = false;\n  }\n  public clickItemHandler(item: ItemValue): void {\n    this.selectItem(item);\n  }\n  protected isOtherValueUnused(): boolean {\n    return !this.selectedItem?.showCommentArea;\n  }\n  protected getDefaultTitleActions(): Array<Action> {\n    const actions = [];\n    if (!this.isDesignMode) {\n      const clearAction = new Action(\n        {\n          locTitleName: \"clearCaption\",\n          id: `sv-clr-btn-${this.id}`,\n          action: () => { this.clearValue(true); },\n          innerCss: this.cssClasses.clearButton,\n          visible: <any>new ComputedUpdater(() => this.canShowClearButton)\n        }\n      );\n      actions.push(clearAction);\n    }\n    return actions;\n  }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  public get a11y_input_ariaRole(): string {\n    return \"radiogroup\";\n  }\n  // EO a11y\n}\n\nSerializer.addClass(\n  \"radiogroup\",\n  [\n    { name: \"allowClear:boolean\", alternativeName: \"showClearButton\" },\n    { name: \"separateSpecialChoices\", visible: true },\n    { name: \"itemComponent\", visible: false, default: \"survey-radiogroup-item\" }\n  ],\n  function () {\n    return new QuestionRadiogroupModel(\"\");\n  },\n  \"checkboxbase\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"radiogroup\", (name) => {\n  var q = new QuestionRadiogroupModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n", "import { ItemValue } from \"./itemvalue\";\nimport { Question } from \"./question\";\nimport { property, propertyArray, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { settings } from \"./settings\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { Base } from \"./base\";\nimport { updateListCssValues } from \"./utils/utils\";\nimport { DropdownListModel } from \"./dropdownListModel\";\nimport { SurveyModel } from \"./survey\";\nimport { ISurveyImpl } from \"./base-interfaces\";\nimport { IsTouch } from \"./utils/devices\";\nimport { ITheme } from \"./themes\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\nimport { HashTable } from \"./helpers\";\n\nexport class RenderedRatingItem extends Base {\n  private onStringChangedCallback() {\n    this.text = this.itemValue.text;\n  }\n  public get value(): number {\n    return this.itemValue.getPropertyValue(\"value\");\n  }\n  @property({ defaultValue: \"\" }) highlight: \"none\" | \"highlighted\" | \"unhighlighted\";\n\n  public get locText(): LocalizableString {\n    return this.locString || this.itemValue.locText;\n  }\n  @property({ defaultValue: \"\" }) text: string;\n  @property() style: any;\n  constructor(public itemValue: ItemValue, private locString: LocalizableString = null) {\n    super();\n    this.locText.onStringChanged.add(this.onStringChangedCallback.bind(this));\n    this.onStringChangedCallback();\n  }\n}\n\nclass RatingItemValue extends ItemValue {\n  constructor(value: any, text: string, public description: LocalizableString) {\n    super(value, text);\n  }\n}\n\n/**\n * A class that describes the Rating Scale question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n */\nexport class QuestionRatingModel extends Question {\n  constructor(name: string) {\n    super(name);\n\n    this.createItemValues(\"rateValues\");\n    this.createLocalizableString(\"ratingOptionsCaption\", this, false, true);\n    this.registerFunctionOnPropertiesValueChanged([\"rateMin\", \"rateMax\",\n      \"minRateDescription\", \"maxRateDescription\", \"rateStep\", \"displayRateDescriptionsAsExtremeItems\"],\n    () => this.resetRenderedItems());\n    this.registerFunctionOnPropertiesValueChanged([\"rateType\"],\n      () => {\n        this.setIconsToRateValues();\n        this.resetRenderedItems();\n        this.updateRateCount();\n      });\n    this.registerFunctionOnPropertiesValueChanged([\"rateValues\"],\n      () => {\n        this.setIconsToRateValues();\n        this.resetRenderedItems();\n      });\n    this.registerSychProperties([\"rateValues\"],\n      () => {\n        this.autoGenerate = this.rateValues.length == 0;\n        this.setIconsToRateValues();\n        this.resetRenderedItems();\n      });\n    this.registerFunctionOnPropertiesValueChanged([\"rateColorMode\", \"scaleColorMode\"],\n      () => {\n        this.updateColors((this.survey as SurveyModel).themeVariables);\n      });\n    this.registerFunctionOnPropertiesValueChanged([\"displayMode\"], () => {\n      this.updateRenderAsBasedOnDisplayMode(true);\n    });\n    this.registerSychProperties([\"autoGenerate\"],\n      () => {\n        if (!this.autoGenerate && this.rateValues.length === 0) {\n          this.setPropertyValue(\"rateValues\", this.visibleRateValues);\n        }\n        if (this.autoGenerate) {\n          this.rateValues.splice(0, this.rateValues.length);\n          this.updateRateMax();\n        }\n        this.resetRenderedItems();\n      });\n    this.createLocalizableString(\"minRateDescription\", this, true)\n      .onStringChanged.add((sender, options) => {\n        this.setPropertyValue(\"hasMinRateDescription\", !sender.isEmpty);\n      });\n    this.createLocalizableString(\"maxRateDescription\", this, true)\n      .onStringChanged.add((sender, options) => {\n        this.setPropertyValue(\"hasMaxRateDescription\", !sender.isEmpty);\n      });\n\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n\n    this.initPropertyDependencies();\n  }\n  private setIconsToRateValues() {\n    if (this.rateType == \"smileys\") {\n      this.rateValues.map(item => item.icon = this.getItemSmiley(item));\n    }\n  }\n\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    this.dropdownListModelValue?.locStrsChanged();\n  }\n  private updateReadOnlyText(): void {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (this.jsonObj.rateMin !== undefined && this.jsonObj.rateCount !== undefined && this.jsonObj.rateMax === undefined) {\n      this.updateRateMax();\n    }\n    if (this.jsonObj.rateMax !== undefined && this.jsonObj.rateCount !== undefined && this.jsonObj.rateMin === undefined) {\n      this.updateRateMin();\n    }\n    if (this.jsonObj.autoGenerate === undefined && this.jsonObj.rateValues !== undefined)this.autoGenerate = !this.jsonObj.rateValues.length;\n    this.updateRateCount();\n    this.setIconsToRateValues();\n  }\n  private useRateValues() {\n    return !!this.rateValues.length && !this.autoGenerate;\n  }\n  private updateRateMax() {\n    this.rateMax = this.rateMin + this.rateStep * (this.rateCount - 1);\n  }\n  private updateRateMin() {\n    this.rateMin = this.rateMax - this.rateStep * (this.rateCount - 1);\n  }\n  private updateRateCount() {\n    let newCount = 0;\n    if (this.useRateValues()) {\n      newCount = this.rateValues.length;\n    } else {\n      newCount = Math.trunc((this.rateMax - this.rateMin) / (this.rateStep || 1)) + 1;\n    }\n    if (newCount > 10 && this.rateDisplayMode == \"smileys\") {\n      newCount = 10;\n    }\n    this.rateCount = newCount;\n    if (this.rateValues.length > newCount)this.rateValues.splice(newCount, this.rateValues.length - newCount);\n  }\n  initPropertyDependencies() {\n    this.registerSychProperties([\"rateCount\"],\n      () => {\n        if (!this.useRateValues()) {\n          this.rateMax = this.rateMin + this.rateStep * (this.rateCount - 1);\n        } else {\n          if (this.rateCount < this.rateValues.length) {\n            if (this.rateCount >= 10 && this.rateDisplayMode == \"smileys\") return;\n            this.rateValues.splice(this.rateCount, this.rateValues.length - this.rateCount);\n          } else {\n            for (let i = this.rateValues.length; i < this.rateCount; i++) {\n              this.rateValues.push(new ItemValue(getLocaleString(\"choices_Item\") + (i + 1)));\n            }\n          }\n        }\n      });\n    this.registerSychProperties([\"rateMin\", \"rateMax\", \"rateStep\", \"rateValues\"],\n      () => {\n        this.updateRateCount();\n      });\n  }\n\n  @property({ defaultValue: false }) inputHasValue: boolean;\n\n  public get showSelectedItemLocText(): boolean {\n    return !this.readOnly && !this.inputHasValue && !!this.selectedItemLocText;\n  }\n  public get selectedItemLocText(): LocalizableString {\n    return !this.readOnly && this.visibleRateValues.filter(v => v.value == this.value)[0]?.locText;\n  }\n\n  @property() autoGenerate: boolean;\n\n  /**\n   * A list of rate values.\n   *\n   * This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A value to be saved in survey results\n   *   \"text\": string, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [onTextMarkdown](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you need to specify only the `value` property, you can set the `rateValues` property to an array of numbers, for example, `[ 3, 6, 10 ]`. These values are both saved in survey results and used as display text.\n   *\n   * If you do not specify the `rateValues` property, rate values are generated automatically based upon the [`rateMin`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMin), [`rateMax`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMax), [`rateStep`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateStep), and [`rateCount`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateCount) property values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   */\n  public get rateValues(): Array<any> {\n    return this.getPropertyValue(\"rateValues\");\n  }\n  public set rateValues(val: Array<any>) {\n    this.setPropertyValue(\"rateValues\", val);\n  }\n  public selectItem(item: ItemValue): void {\n    if (!this.isReadOnly && !!item) {\n      this.value = item.value;\n    }\n  }\n  /**\n   * Specifies the first rate value in the generated sequence of rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 1\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMax\n   * @see rateStep\n   * @see rateCount\n   */\n  public get rateMin(): number {\n    return this.getPropertyValue(\"rateMin\");\n  }\n  public set rateMin(val: number) {\n    this.setPropertyValue(\"rateMin\", val);\n  }\n  /**\n   * Specifies the last rate value in the generated sequence of rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 5\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMin\n   * @see rateStep\n   * @see rateCount\n   */\n  public get rateMax(): number {\n    return this.getPropertyValue(\"rateMax\");\n  }\n  public set rateMax(val: number) {\n    this.setPropertyValue(\"rateMax\", val);\n  }\n  /**\n   * Specifies a step with which to generate rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 1\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMin\n   * @see rateMax\n   * @see rateCount\n   */\n  public get rateStep(): number {\n    return this.getPropertyValue(\"rateStep\");\n  }\n  public set rateStep(val: number) {\n    this.setPropertyValue(\"rateStep\", val);\n  }\n  /**\n   * Specifies the number of rate values you want to generate. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Set the [`rateMin`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMin) or [`rateMax`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMax) property to specify the first or the last rate value. Use the [`rateStep`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateStep) property to specify a step with which to generate rate values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   */\n  @property() rateCount: number;\n\n  private static colorsCalculated: boolean = false;\n\n  private static badColor: Array<number>;\n  private static normalColor: Array<number>;\n  private static goodColor: Array<number>;\n\n  private static badColorLight: Array<number>;\n  private static normalColorLight: Array<number>;\n  private static goodColorLight: Array<number>;\n\n  private updateColors(themeVariables: any) {\n    if (this.colorMode === \"monochrome\") return;\n    if (!DomDocumentHelper.isAvailable()) return;\n    if (QuestionRatingModel.colorsCalculated) return;\n\n    function getColorFromProperty(varName: string) {\n      const style = getComputedStyle(DomDocumentHelper.getDocumentElement());\n      return style.getPropertyValue && style.getPropertyValue(varName);\n    }\n    function getRGBColor(colorName: string, varName: string) {\n      let str: string = !!themeVariables && themeVariables[colorName] as any;\n      if (!str) str = getColorFromProperty(varName);\n      if (!str) return null;\n      const canvasElement = DomDocumentHelper.createElement(\"canvas\") as HTMLCanvasElement;\n      if (!canvasElement) return null;\n      var ctx = canvasElement.getContext(\"2d\");\n      ctx.fillStyle = str;\n\n      if (ctx.fillStyle == \"#000000\") {\n        ctx.fillStyle = getColorFromProperty(varName);\n      }\n      const newStr = ctx.fillStyle;\n\n      if (newStr.startsWith(\"rgba\")) {\n        return newStr.substring(5, newStr.length - 1).split(\",\").map(c => +(c.trim()));\n      }\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(newStr);\n      return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n        1\n      ] : null;\n    }\n\n    QuestionRatingModel.badColor = getRGBColor(\"--sjs-special-red\", \"--sd-rating-bad-color\");\n    QuestionRatingModel.normalColor = getRGBColor(\"--sjs-special-yellow\", \"--sd-rating-normal-color\");\n    QuestionRatingModel.goodColor = getRGBColor(\"--sjs-special-green\", \"--sd-rating-good-color\");\n    QuestionRatingModel.badColorLight = getRGBColor(\"--sjs-special-red-light\", \"--sd-rating-bad-color-light\");\n    QuestionRatingModel.normalColorLight = getRGBColor(\"--sjs-special-yellow-light\", \"--sd-rating-normal-color-light\");\n    QuestionRatingModel.goodColorLight = getRGBColor(\"--sjs-special-green-light\", \"--sd-rating-good-color-light\");\n\n    this.colorsCalculated = true;\n    this.resetRenderedItems();\n  }\n\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!this.useRateValues) return super.getDisplayValueCore(keysAsText, value);\n    var res = ItemValue.getTextOrHtmlByValue(this.visibleRateValues, value);\n    return !!res ? res : value;\n  }\n  get visibleRateValues(): ItemValue[] {\n    return this.renderedRateItems.map(i => i.itemValue);\n  }\n  protected supportEmptyValidation(): boolean { return this.renderAs === \"dropdown\"; }\n  public itemValuePropertyChanged(item: ItemValue, name: string, oldValue: any, newValue: any): void {\n    if (!this.useRateValues() && newValue !== undefined)this.autoGenerate = false;\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.runRateItesmCondition(properties);\n  }\n  protected runRateItesmCondition(properties: HashTable<any>): void {\n    if (!this.useRateValues()) return;\n    let isChanged = false;\n    if (this.survey?.areInvisibleElementsShowing) {\n      this.rateValues.forEach(item => {\n        isChanged = isChanged || !item.isVisible;\n        item.setIsVisible(item, true);\n      });\n    } else {\n      isChanged = ItemValue.runConditionsForItems(this.rateValues, undefined, undefined, properties, true);\n    }\n    if (isChanged) {\n      this.resetRenderedItems();\n      if (!this.isEmpty() && !this.isReadOnly) {\n        const item = ItemValue.getItemByValue(this.rateValues, this.value);\n        if (item && !item.isVisible) {\n          this.clearValue();\n        }\n      }\n    }\n  }\n  private getRateValuesCore(): Array<ItemValue> {\n    if (!this.useRateValues()) return this.createRateValues();\n    const items = new Array<ItemValue>();\n    this.rateValues.forEach(item => {\n      if (item.isVisible) {\n        items.push(item);\n      }\n    });\n    return items;\n  }\n  private calculateRateValues(): Array<ItemValue> {\n    let rateValues = this.getRateValuesCore();\n    if (this.rateType == \"smileys\" && rateValues.length > 10) rateValues = rateValues.slice(0, 10);\n    return rateValues;\n  }\n  private calculateRenderedRateItems() : Array<RenderedRatingItem> {\n    const rateValues = this.calculateRateValues();\n    return rateValues.map((v, i) => {\n      let renderedItem: RenderedRatingItem = null;\n      if (this.displayRateDescriptionsAsExtremeItems) {\n        if (i == 0) renderedItem = new RenderedRatingItem(v, this.minRateDescription && this.locMinRateDescription || v.locText);\n        if (i == rateValues.length - 1) renderedItem = new RenderedRatingItem(v, this.maxRateDescription && this.locMaxRateDescription || v.locText);\n      }\n      if (!renderedItem) renderedItem = new RenderedRatingItem(v);\n      return renderedItem;\n    });\n  }\n  private calculateVisibleChoices(): Array<ItemValue> {\n    const rateValues = this.calculateRateValues();\n    return rateValues.map((i, idx) => this.getRatingItemValue(i, idx));\n  }\n  private iCounter = 0;\n  private resetRenderedItems() {\n    if (this.autoGenerate) {\n      const rateValues = this.getRateValuesCore();\n      this.rateMax = rateValues[rateValues.length - 1].value;\n    }\n    if (Array.isArray(this.getPropertyValueWithoutDefault(\"renderedRateItems\"))) {\n      this.setArrayPropertyDirectly(\"renderedRateItems\", this.calculateRenderedRateItems());\n    }\n    if (Array.isArray(this.getPropertyValueWithoutDefault(\"visibleChoices\"))) {\n      this.setArrayPropertyDirectly(\"visibleChoices\", this.calculateVisibleChoices);\n    }\n  }\n  public get renderedRateItems(): Array<RenderedRatingItem> {\n    return this.getPropertyValue(\"renderedRateItems\", undefined, () => this.calculateRenderedRateItems());\n  }\n  public get visibleChoices(): ItemValue[] {\n    return this.getPropertyValue(\"visibleChoices\", undefined, () => this.calculateVisibleChoices());\n  }\n\n  private createRateValues() {\n    var res = [];\n    var value = this.rateMin;\n    var step = this.rateStep;\n    while(value <= this.rateMax &&\n      res.length < settings.ratingMaximumRateValueCount) {\n\n      let item = new ItemValue(value);\n      item.locOwner = this;\n      item.ownerPropertyName = \"rateValues\";\n      res.push(item);\n      value = this.correctValue(value + step, step);\n    }\n    return res;\n  }\n  private getRatingItemValue(item: ItemValue, index: number) {\n    if (!item) return null;\n    const value = item.value;\n    let description: LocalizableString;\n    if (index === 0) {\n      description = this.minRateDescription && this.locMinRateDescription;\n    }\n    if (index === (this.rateCount - 1)) {\n      description = this.maxRateDescription && this.locMaxRateDescription;\n    }\n    let newItem = new RatingItemValue(value, item.text, description);\n    newItem.locOwner = item.locOwner;\n    newItem.ownerPropertyName = item.ownerPropertyName;\n    return newItem;\n  }\n\n  private correctValue(value: number, step: number): number {\n    if (!value) return value;\n    if (Math.round(value) == value) return value;\n    var fr = 0;\n    while(Math.round(step) != step) {\n      step *= 10;\n      fr++;\n    }\n    return parseFloat(value.toFixed(fr));\n  }\n  public getType(): string {\n    return \"rating\";\n  }\n  protected getFirstInputElementId(): string {\n    return this.inputId + \"_0\";\n  }\n  public getInputId(index: number): string {\n    return this.inputId + \"_\" + index;\n  }\n  public get questionName() {\n    return this.name + \"_\" + this.id;\n  }\n  supportAutoAdvance(): boolean {\n    return this.isMouseDown === true || this.renderAs === \"dropdown\";\n  }\n  public supportOther(): boolean {\n    return false;\n  }\n  protected getPlainDataCalculatedValue(propName: string): any {\n    const res = super.getPlainDataCalculatedValue(propName);\n    if (res !== undefined || !this.useRateValues || this.isEmpty()) return res;\n    const item = <any>ItemValue.getItemByValue(this.visibleRateValues, this.value);\n    return item ? item[propName] : undefined;\n  }\n  /**\n   * Specifies a description for the minimum (first) rate value.\n   * @see rateDescriptionLocation\n   * @see displayRateDescriptionsAsExtremeItems\n   * @see rateValues\n   * @see rateMin\n   */\n  public get minRateDescription(): string {\n    return this.getLocalizableStringText(\"minRateDescription\");\n  }\n  public set minRateDescription(val: string) {\n    this.setLocalizableStringText(\"minRateDescription\", val);\n  }\n  get locMinRateDescription(): LocalizableString {\n    return this.getLocalizableString(\"minRateDescription\");\n  }\n  /**\n   * Specifies a description for the maximum (last) rate value.\n   * @see rateDescriptionLocation\n   * @see displayRateDescriptionsAsExtremeItems\n   * @see rateValues\n   * @see rateMax\n   */\n  public get maxRateDescription(): string {\n    return this.getLocalizableStringText(\"maxRateDescription\");\n  }\n  public set maxRateDescription(val: string) {\n    this.setLocalizableStringText(\"maxRateDescription\", val);\n  }\n  get locMaxRateDescription(): LocalizableString {\n    return this.getLocalizableString(\"maxRateDescription\");\n  }\n  public get hasMinRateDescription(): boolean {\n    return this.getPropertyValue(\"hasMinRateDescription\", undefined, () => !!this.minRateDescription);\n  }\n  public get hasMaxRateDescription(): boolean {\n    return this.getPropertyValue(\"hasMaxRateDescription\", undefined, () => !!this.maxRateDescription);\n  }\n  get hasMinLabel(): boolean {\n    return !this.displayRateDescriptionsAsExtremeItems && !!this.hasMinRateDescription;\n  }\n  get hasMaxLabel(): boolean {\n    return !this.displayRateDescriptionsAsExtremeItems && !!this.hasMaxRateDescription;\n  }\n\n  /**\n  * Specifies whether to display [`minRateDescription`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#minRateDescription) and [`maxRateDescription`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#maxRateDescription) values as captions for buttons that correspond to the extreme (first and last) rate values.\n  *\n  * Default value: `false`\n  *\n  * If this property is disabled, the `minRateDescription` and `maxRateDescription` values are displayed as plain non-clickable texts.\n  *\n  * If any of the `minRateDescription` and `maxRateDescription` properties is empty, the corresponding rate value's `value` or `text` is displayed as a button caption.\n  * @see rateDescriptionLocation\n  * @see rateMin\n  * @see rateMax\n  * @see rateValues\n  */\n  @property() displayRateDescriptionsAsExtremeItems: boolean;\n\n  /**\n  * Specifies whether to display rate values as buttons or items in a drop-down list.\n  *\n  * Possible values:\n  *\n  * - `\"buttons\"` - Displays rate values as buttons in a row.\n  * - `\"dropdown\"` - Displays rate values as items in a drop-down list.\n  * - `\"auto\"` (default) - Selects between the `\"buttons\"` and `\"dropdown\"` modes based on the available width. When the width is insufficient to display buttons, the question displays a dropdown.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/ui-adaptation-modes-for-rating-scale/ (linkStyle))\n  * @see rateType\n  */\n  @property() displayMode: \"dropdown\" | \"buttons\" | \"auto\";\n  private updateRenderAsBasedOnDisplayMode(isOnChange?: boolean): void {\n    if (this.isDesignMode) {\n      if (isOnChange || this.renderAs === \"dropdown\") {\n        this.renderAs = \"default\";\n      }\n    } else {\n      if (isOnChange || this.displayMode !== \"auto\") {\n        this.renderAs = this.displayMode === \"dropdown\" ? \"dropdown\" : \"default\";\n      }\n    }\n  }\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    if (this.renderAs === \"dropdown\" && this.displayMode === \"auto\") {\n      this.displayMode = this.renderAs;\n    } else {\n      this.updateRenderAsBasedOnDisplayMode();\n    }\n  }\n  /**\n  * Specifies the alignment of [`minRateDescription`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#minRateDescription) and [`maxRateDescription`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#maxRateDescription) texts.\n  *\n  * Possible values:\n  *\n  * - `\"leftRight\"` (default) - Aligns `minRateDescription` to the left of rate values and `maxRateDescription` to their right.\n  * - `\"top\"` - Displays the descriptions above the minimum and maximum rate values.\n  * - `\"bottom\"` - Displays both descriptions below the minimum and maximum rate values.\n  * - `\"topBottom\"` - Displays `minRateDescription` above the minimum rate value and `maxRateDescription` below the maximum rate value.\n  * @see displayRateDescriptionsAsExtremeItems\n  */\n  @property() rateDescriptionLocation: \"leftRight\" | \"top\" | \"bottom\" | \"topBottom\";\n\n  /**\n   * Specifies the visual representation of rate values.\n   *\n   * Possible values:\n   *\n   * - `\"labels\"` (default) - Displays rate values as buttons with labels.\n   * - `\"stars\"` - Displays rate values as stars.\n   * - `\"smileys\"` - Displays rate values as smiley faces.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see scaleColorMode\n   * @see rateColorMode\n   * @see displayMode\n   */\n  @property() rateType: \"labels\" | \"stars\" | \"smileys\";\n\n  public get rateDisplayMode() {\n    return this.rateType;\n  }\n  public set rateDisplayMode(val: \"labels\" | \"stars\" | \"smileys\") {\n    this.rateType = val;\n  }\n  /**\n   * Specifies how to colorize the smiley face rating scale. Applies only if [`rateType`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateType) is `\"smileys\"`.\n   *\n   * Possible values:\n   *\n   * - `\"monochrome\"` (default) - Displays emojis in monochrome.\n   * - `\"colored\"` - Displays emojis in color.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateColorMode\n   */\n  @property() scaleColorMode: \"monochrome\" | \"colored\";\n  /**\n   * Specifies how to colorize the selected emoji. Applies only if [`rateType`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateType) is `\"smileys\"`.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` - Displays the selected emoji in default survey color.\n   * - `\"scale\"` (default) - Inherits the color from the scale.\n   * @see scaleColorMode\n   */\n  @property() rateColorMode: \"default\" | \"scale\";\n\n  public get isStar() {\n    return this.rateType == \"stars\";\n  }\n  public get isSmiley() {\n    return this.rateType == \"smileys\";\n  }\n  getDefaultItemComponent(): string {\n    if (this.renderAs == \"dropdown\") return \"sv-rating-dropdown-item\";\n    if (this.isStar) return \"sv-rating-item-star\";\n    if (this.isSmiley) return \"sv-rating-item-smiley\";\n    return \"sv-rating-item\";\n  }\n  /**\n   * The name of a component used to render items.\n   */\n  public get itemComponent(): string {\n    return this.getPropertyValue(\"itemComponent\", this.getDefaultItemComponent());\n  }\n  public set itemComponent(value: string) {\n    this.setPropertyValue(\"itemComponent\", value);\n  }\n\n  protected valueToData(val: any): any {\n    if (this.useRateValues()) {\n      var item = ItemValue.getItemByValue(this.rateValues, val);\n      return !!item ? item.value : val;\n    }\n    return !isNaN(val) ? parseFloat(val) : val;\n  }\n  public setValueFromClick(value: any) {\n    if (this.isReadOnlyAttr) return;\n    if (this.value === ((typeof (this.value) === \"string\") ? value : parseFloat(value))) {\n      this.clearValue(true);\n    } else {\n      this.value = value;\n    }\n    for (let i: number = 0; i < this.renderedRateItems.length; i++) {\n      this.renderedRateItems[i].highlight = \"none\";\n    }\n  }\n  public onItemMouseIn(item: RenderedRatingItem) {\n    if (IsTouch) return;\n    if (this.isReadOnly || !item.itemValue.isEnabled || this.isDesignMode) return;\n    let high = true;\n    let selected = this.value != null;\n    if (this.rateType !== \"stars\") {\n      item.highlight = \"highlighted\";\n      return;\n    }\n    for (let i: number = 0; i < this.renderedRateItems.length; i++) {\n      this.renderedRateItems[i].highlight = high && !selected && \"highlighted\" || !high && selected && \"unhighlighted\" || \"none\";\n      if (this.renderedRateItems[i] == item) high = false;\n      if (this.renderedRateItems[i].itemValue.value == this.value) selected = false;\n    }\n  }\n  public onItemMouseOut(item: RenderedRatingItem) {\n    if (IsTouch) return;\n    this.renderedRateItems.forEach(item => item.highlight = \"none\");\n  }\n\n  public get itemSmallMode() {\n    return !this.isSingleInputActive && this.inMatrixMode && settings.matrix.rateSize == \"small\";\n  }\n\n  public get ratingRootCss(): string {\n    const hasLabel = this.hasMaxLabel || this.hasMinLabel;\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootWrappable, this.displayMode == \"buttons\" || (!!this.survey && this.survey.isDesignMode) || (this.displayMode == \"auto\" && !this.supportResponsiveness()))\n      .append(this.cssClasses.rootLabelsTop, hasLabel && this.rateDescriptionLocation == \"top\")\n      .append(this.cssClasses.rootLabelsBottom, hasLabel && this.rateDescriptionLocation == \"bottom\")\n      .append(this.cssClasses.rootLabelsDiagonal, hasLabel && this.rateDescriptionLocation == \"topBottom\")\n      .append(this.cssClasses.itemSmall, this.itemSmallMode && this.rateType != \"labels\")\n      .toString();\n  }\n\n  public get itemStarIcon(): string {\n    return this.itemSmallMode ? \"icon-rating-star-small\" : \"icon-rating-star\";\n  }\n  public get itemStarIconAlt(): string {\n    return this.itemStarIcon + \"-2\";\n  }\n\n  public getItemSmiley(item: ItemValue) {\n    const icons = [\"terrible\", \"very-poor\", \"poor\", \"not-good\", \"average\", \"normal\", \"good\", \"very-good\", \"excellent\", \"perfect\"];\n    const priority = [\"very-good\", \"not-good\", \"normal\", \"good\", \"average\", \"excellent\", \"poor\", \"perfect\", \"very-poor\", \"terrible\"];\n    const count = this.useRateValues() ? this.rateValues.length : this.rateMax - this.rateMin + 1;\n    const selectedPriority = priority.slice(0, count);\n    const selectedIcons = icons.filter(i => selectedPriority.indexOf(i) != -1);\n    if (!this.useRateValues()) {\n      return selectedIcons[item.value - this.rateMin];\n    } else {\n      return selectedIcons[this.rateValues.indexOf(item)];\n    }\n  }\n\n  public getItemSmileyIconName(item: ItemValue) {\n    return \"icon-\" + this.getItemSmiley(item);\n  }\n\n  public getItemClassByText(item: ItemValue, text: string) {\n    return this.getItemClass(item);\n  }\n\n  private getRenderedItemColor(index: number, light: boolean): string {\n    let startColor = light ? QuestionRatingModel.badColorLight : QuestionRatingModel.badColor;\n    let endColor = light ? QuestionRatingModel.goodColorLight : QuestionRatingModel.goodColor;\n    const normalIndex = (this.rateCount - 1) / 2.0;\n    const middleColor = light ? QuestionRatingModel.normalColorLight : QuestionRatingModel.normalColor;\n    if (index < normalIndex) {\n      endColor = middleColor;\n    } else {\n      startColor = middleColor;\n      index -= normalIndex;\n    }\n    if (!startColor || !endColor) return null;\n    const curColor = [0, 0, 0, 0];\n    for (let i = 0; i < 4; i++) {\n      curColor[i] = startColor[i] + (endColor[i] - startColor[i]) * index / normalIndex;\n      if (i < 3) curColor[i] = Math.trunc(curColor[i]);\n    }\n    return \"rgba(\" + curColor[0] + \", \" + curColor[1] + \", \" + curColor[2] + \", \" + curColor[3] + \")\";\n  }\n\n  public getItemStyle(item: ItemValue, highlight: \"none\" | \"highlighted\" | \"unhighlighted\" = \"none\") {\n    if (this.scaleColorMode === \"monochrome\" && this.rateColorMode == \"default\" ||\n      this.isPreviewStyle ||\n      this.isReadOnlyStyle) return {};\n    const index = this.visibleRateValues.indexOf(item);\n    const color = this.getRenderedItemColor(index, false);\n    const colorLight = highlight == \"highlighted\" && this.scaleColorMode === \"colored\" && this.getRenderedItemColor(index, true);\n    return colorLight ? { \"--sd-rating-item-color\": color, \"--sd-rating-item-color-light\": colorLight } : { \"--sd-rating-item-color\": color };\n  }\n\n  public getItemClass(item: ItemValue, highlight: \"none\" | \"highlighted\" | \"unhighlighted\" = \"none\") {\n    let isSelected = this.value == item.value;\n    if (this.isStar) {\n      if (!this.useRateValues()) {\n        isSelected = this.value >= item.value;\n      } else {\n        isSelected = this.rateValues.indexOf(this.rateValues.filter(i => i.value == this.value)[0]) >= this.rateValues.indexOf(item);\n      }\n    }\n    const isDisabled = this.isReadOnly || !item.isEnabled;\n    const allowHover = !isDisabled && (this.value != item.value) && !(!!this.survey && this.survey.isDesignMode);\n    const renderedItem = this.renderedRateItems.filter(i => i.itemValue == item)[0];\n    const isHighlighted = this.isStar && renderedItem?.highlight == \"highlighted\";\n    const isUnhighlighted = this.isStar && renderedItem?.highlight == \"unhighlighted\";\n    let itemClass = this.cssClasses.item;\n    let itemSelectedClass = this.cssClasses.selected;\n    let itemDisabledClass = this.cssClasses.itemDisabled;\n    let itemReadOnlyClass = this.cssClasses.itemReadOnly;\n    let itemPreviewClass = this.cssClasses.itemPreview;\n    let itemHoverClass = this.cssClasses.itemHover;\n    let itemitemOnErrorClass = this.cssClasses.itemOnError;\n    let itemHighlightedClass = null;\n    let itemUnhighlightedClass = null;\n    let itemScaleColoredClass = null;\n    let itemRateColoredClass = null;\n    let itemSmallClass = null;\n\n    if (this.isStar) {\n      itemClass = this.cssClasses.itemStar;\n      itemSelectedClass = this.cssClasses.itemStarSelected;\n      itemDisabledClass = this.cssClasses.itemStarDisabled;\n      itemReadOnlyClass = this.cssClasses.itemStarReadOnly;\n      itemPreviewClass = this.cssClasses.itemStarPreview;\n      itemHoverClass = this.cssClasses.itemStarHover;\n      itemitemOnErrorClass = this.cssClasses.itemStarOnError;\n      itemHighlightedClass = this.cssClasses.itemStarHighlighted;\n      itemUnhighlightedClass = this.cssClasses.itemStarUnhighlighted;\n      itemSmallClass = this.cssClasses.itemStarSmall;\n    }\n    if (this.isSmiley) {\n      itemClass = this.cssClasses.itemSmiley;\n      itemSelectedClass = this.cssClasses.itemSmileySelected;\n      itemDisabledClass = this.cssClasses.itemSmileyDisabled;\n      itemReadOnlyClass = this.cssClasses.itemSmileyReadOnly;\n      itemPreviewClass = this.cssClasses.itemSmileyPreview;\n      itemHoverClass = this.cssClasses.itemSmileyHover;\n      itemitemOnErrorClass = this.cssClasses.itemSmileyOnError;\n      itemHighlightedClass = this.cssClasses.itemSmileyHighlighted;\n      itemScaleColoredClass = this.cssClasses.itemSmileyScaleColored;\n      itemRateColoredClass = this.cssClasses.itemSmileyRateColored;\n      itemSmallClass = this.cssClasses.itemSmileySmall;\n    }\n\n    const hasFixedSize =\n      !this.isStar &&\n      !this.isSmiley &&\n      (!this.displayRateDescriptionsAsExtremeItems ||\n        this.useRateValues() && item != this.rateValues[0] && item != this.rateValues[this.rateValues.length - 1] ||\n        !this.useRateValues() && item.value != this.rateMin && item.value != this.rateMax\n      ) &&\n      item.locText.calculatedText.length <= 2 &&\n      Number.isInteger(Number(item.locText.calculatedText));\n\n    const options: any = { item: item, css: \"\" };\n\n    options.css = new CssClassBuilder()\n      .append(itemClass)\n      .append(itemSelectedClass, isSelected)\n      .append(itemDisabledClass, this.isDisabledStyle)\n      .append(itemReadOnlyClass, this.isReadOnlyStyle)\n      .append(itemPreviewClass, this.isPreviewStyle)\n      .append(itemHoverClass, allowHover)\n      .append(itemHighlightedClass, isHighlighted)\n      .append(itemScaleColoredClass, this.scaleColorMode == \"colored\")\n      .append(itemRateColoredClass, this.rateColorMode == \"scale\" && isSelected)\n      .append(itemUnhighlightedClass, isUnhighlighted)\n      .append(itemitemOnErrorClass, this.hasCssError())\n      .append(itemSmallClass, this.itemSmallMode)\n      .append(this.cssClasses.itemFixedSize, hasFixedSize)\n      .toString();\n\n    if (!!this.survey) {\n      this.survey.updateChoiceItemCss(this, options);\n    }\n\n    return options.css;\n  }\n  //methods for mobile view\n  public getControlClass(): string {\n    this.isEmpty();\n    return new CssClassBuilder()\n      .append(this.cssClasses.control)\n      .append(this.cssClasses.controlEmpty, this.isEmpty())\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.controlDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.controlPreview, this.isPreviewStyle)\n      .toString();\n  }\n  public get placeholder(): string {\n    return this.getLocalizableStringText(\"ratingOptionsCaption\");\n  }\n  public set placeholder(val: string) {\n    this.setLocalizableStringText(\"ratingOptionsCaption\", val);\n  }\n  get locPlaceholder(): LocalizableString {\n    return this.getLocalizableString(\"ratingOptionsCaption\");\n  }\n  get allowClear(): boolean {\n    return true;\n  }\n  get searchEnabled(): boolean {\n    return false;\n  }\n  public get renderedValue(): any {\n    return this.value;\n  }\n  public set renderedValue(val: any) {\n    this.value = val;\n  }\n  public isItemSelected(item: ItemValue): boolean {\n    return item.value == this.value;\n  }\n  public get readOnlyText(): string {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  public set readOnlyText(val: string) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText(): LocalizableString {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n\n  public needResponsiveWidth() {\n    const rateValues = this.getPropertyValue(\"rateValues\");\n    const rateStep = this.getPropertyValue(\"rateStep\");\n    const rateMax = this.getPropertyValue(\"rateMax\");\n    const rateMin = this.getPropertyValue(\"rateMin\");\n    return this.displayMode != \"dropdown\" && !!(this.hasMinRateDescription ||\n      this.hasMaxRateDescription ||\n      (rateStep && (rateMax - rateMin) / rateStep > 9));\n  }\n\n  // TODO: return responsiveness after design improvement\n  protected supportResponsiveness(): boolean {\n    return !this.inMatrixMode;\n  }\n  protected onBeforeSetCompactRenderer(): void {\n    if (!this.isDisposed && !this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n  }\n  protected getCompactRenderAs(): string {\n    return (this.displayMode == \"buttons\") ? \"default\" : \"dropdown\";\n  }\n  protected getDesktopRenderAs(): string {\n    return (this.displayMode == \"dropdown\") ? \"dropdown\" : \"default\";\n  }\n\n  private dropdownListModelValue: DropdownListModel;\n  public set dropdownListModel(val: DropdownListModel) {\n    this.dropdownListModelValue = val;\n    this.updateElementCss();\n  }\n  public get dropdownListModel(): DropdownListModel {\n    if (this.renderAs === \"dropdown\") {\n      this.onBeforeSetCompactRenderer();\n    }\n    return this.dropdownListModelValue;\n  }\n  protected onBlurCore(event: any): void {\n    this.dropdownListModel?.onBlur(event);\n    super.onBlurCore(event);\n  }\n  protected updateCssClasses(res: any, css: any) {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModelValue.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  public themeChanged(theme: ITheme): void {\n    this.colorsCalculated = false;\n    this.updateColors(theme.cssVariables);\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean) {\n    super.setSurveyImpl(value, isLight);\n    if (!this.survey) return;\n    this.updateColors((this.survey as SurveyModel).themeVariables);\n    this.updateRenderAsBasedOnDisplayMode();\n  }\n  public dispose(): void {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n\n  //a11y\n  public get a11yInputAriaRole(): string | null {\n    return this.renderAs === \"dropdown\" ? \"combobox\" : null;\n  }\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  public get a11y_input_ariaRole(): string {\n    return \"radiogroup\";\n  }\n  // EO a11y\n}\nSerializer.addClass(\n  \"rating\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    {\n      name: \"rateType\",\n      alternativeName: \"rateDisplayMode\",\n      default: \"labels\",\n      category: \"rateValues\",\n      choices: [\"labels\", \"stars\", \"smileys\"],\n      visibleIndex: 1\n    },\n    {\n      name: \"scaleColorMode\",\n      category: \"rateValues\",\n      default: \"monochrome\",\n      choices: [\"monochrome\", \"colored\"],\n      visibleIf: function (obj: any) {\n        return obj.rateDisplayMode == \"smileys\";\n      },\n      visibleIndex: 2\n    },\n    {\n      name: \"rateColorMode\",\n      category: \"rateValues\",\n      default: \"scale\",\n      choices: [\"default\", \"scale\"],\n      visibleIf: function (obj: any) {\n        return obj.rateDisplayMode == \"smileys\" && obj.scaleColorMode == \"monochrome\";\n      },\n      visibleIndex: 3\n    },\n    {\n      name: \"autoGenerate\",\n      category: \"rateValues\",\n      default: true,\n      choices: [true, false],\n      visibleIndex: 5\n    },\n    {\n      name: \"rateCount:number\",\n      default: 5,\n      category: \"rateValues\",\n      visibleIndex: 4,\n      onSettingValue: (obj: any, val: any): any => {\n        if (val < 2) return 2;\n        if (val > settings.ratingMaximumRateValueCount && val > obj.rateValues.length) return settings.ratingMaximumRateValueCount;\n        if (val > 10 && obj.rateDisplayMode == \"smileys\") return 10;\n        return val;\n      },\n    },\n    {\n      name: \"rateValues:itemvalue[]\",\n      baseValue: function () {\n        return getLocaleString(\"choices_Item\");\n      },\n      category: \"rateValues\",\n      visibleIf: function (obj: any) {\n        return !obj.autoGenerate;\n      },\n      visibleIndex: 6\n    },\n    {\n      name: \"rateMin:number\", default: 1,\n      onSettingValue: (obj: any, val: any): any => {\n        return val > obj.rateMax - obj.rateStep ? obj.rateMax - obj.rateStep : val;\n      },\n      visibleIf: function (obj: any) {\n        return !!obj.autoGenerate;\n      },\n      visibleIndex: 7\n    },\n    {\n      name: \"rateMax:number\", default: 5,\n      onSettingValue: (obj: any, val: any): any => {\n        return val < obj.rateMin + obj.rateStep ? obj.rateMin + obj.rateStep : val;\n      },\n      visibleIf: function (obj: any) {\n        return !!obj.autoGenerate;\n      },\n      visibleIndex: 8\n    },\n    {\n      name: \"rateStep:number\", default: 1, minValue: 0.1,\n      onSettingValue: (obj: any, val: any): any => {\n        if (val <= 0) val = 1;\n        if (val > obj.rateMax - obj.rateMin)\n          val = obj.rateMax - obj.rateMin;\n        return val;\n      },\n      visibleIf: function (obj: any) {\n        return !!obj.autoGenerate;\n      },\n      visibleIndex: 9\n    },\n    {\n      name: \"minRateDescription\",\n      alternativeName: \"mininumRateDescription\",\n      serializationProperty: \"locMinRateDescription\",\n      visibleIndex: 18\n    },\n    {\n      name: \"maxRateDescription\",\n      alternativeName: \"maximumRateDescription\",\n      serializationProperty: \"locMaxRateDescription\",\n      visibleIndex: 19\n    },\n    {\n      name: \"displayRateDescriptionsAsExtremeItems:boolean\",\n      default: false,\n      visibleIndex: 21,\n      visibleIf: function (obj: any) {\n        return obj.rateType == \"labels\";\n      }\n    },\n    {\n      name: \"rateDescriptionLocation\",\n      default: \"leftRight\",\n      choices: [\"leftRight\", \"top\", \"bottom\", \"topBottom\"],\n      visibleIndex: 20\n    },\n    {\n      name: \"displayMode\",\n      default: \"auto\",\n      choices: [\"auto\", \"buttons\", \"dropdown\"],\n      visibleIndex: 0\n    },\n    { name: \"itemComponent\", visible: false,\n      defaultFunc: (obj: any): any => {\n        if (!obj) return \"sv-rating-item\";\n        if (!!obj.getOriginalObj) obj = obj.getOriginalObj();\n        return obj.getDefaultItemComponent();\n      } }\n  ],\n  function () {\n    return new QuestionRatingModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"rating\", (name) => {\n  return new QuestionRatingModel(name);\n});\n", "import { Action } from \"./actions/action\";\nimport { ComputedUpdater } from \"./base\";\nimport { ExpressionRunner } from \"./conditions\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\nimport { HashTable, Helpers } from \"./helpers\";\nimport { ItemValue } from \"./itemvalue\";\nimport { property, propertyArray, Serializer } from \"./jsonobject\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { Question } from \"./question\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { DragOrClickHelper } from \"./utils/dragOrClickHelper\";\n\ninterface ISliderLabelItemOwner extends ILocalizableOwner{\n  getTextByItem(item: ItemValue):string;\n}\nexport class SliderLabelItemValue extends ItemValue {\n  protected getBaseType(): string {\n    return \"sliderlabel\";\n  }\n  protected onGetText(text:string):string {\n    if (!!text || !this.locOwner) return super.onGetText(text);\n    return (this.locOwner as ISliderLabelItemOwner).getTextByItem(this);\n  }\n  protected getCorrectValue(value: any) {\n    if (typeof value === \"number\") return value;\n    if (Helpers.isNumber(value)) {\n      return parseFloat(value.toString());\n    }\n    return this.value || 0;\n  }\n}\n\n/**\n * A class that describes the Slider question type.\n *\n * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n *\n * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n */\nexport class QuestionSliderModel extends Question implements ISliderLabelItemOwner {\n  /**\n   * Specifies whether the slider allows selecting a single value (`\"single\"`) or a value range (`\"range\"`).\n   *\n   * Possible values:\n   *\n   * - `\"single\"` (default)\n   * - `\"range\"`\n   *\n   * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n   *\n   * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   */\n  @property({ defaultValue: \"single\" }) sliderType: \"range\" | \"single\";\n  /**\n   * Defines the maximum value on the slider scale.\n   *\n   * Default value: 100\n   *\n   * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n   *\n   * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   * @see maxValueExpression\n   */\n  @property({ defaultValue: 100 }) max: number;\n  /**\n   * Defines the minimum value on the slider scale.\n   *\n   * Default value: 0\n   *\n   * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n   *\n   * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   * @see minValueExpression\n   */\n  @property({ defaultValue: 0 }) min: number;\n  /**\n   * An expression that dynamically calculates the maximum scale value. Overrides the static [`max`](#max) property if defined.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   */\n  @property({ defaultValue: null }) maxValueExpression: string | null;\n  /**\n   * An expression that dynamically calculates the minimum scale value. Overrides the static [`min`](#min) property if defined.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   */\n  @property({ defaultValue: null }) minValueExpression: string | null;\n  /**\n   * Specifies the maximum length between the two thumbs of a range slider. Applies only if [`sliderType`](#sliderType) is `\"range\"`.\n   *\n   * Default value: `null`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   */\n  @property({ defaultValue: null }) maxRangeLength: number | null;\n  /**\n   * Specifies the minimum length between the two thumbs of a range slider. Applies only if [`sliderType`](#sliderType) is `\"range\"`.\n   *\n   * Default value: `null`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   */\n  @property({ defaultValue: null }) minRangeLength: number | null;\n  /**\n   * A formatting string for thumb tooltips. You can use `{0}` as a placeholder for a tooltip's numeric value.\n   *\n   * Default value: `\"{0}\"`\n   * @see tooltipVisibility\n   */\n  @property({ defaultValue: \"{0}\" }) tooltipFormat: string;\n  /**\n   * A formatting string for [auto-generated](#labelCount) or [custom labels](#customLabels). You can use `{0}` as a placeholder for the label's numeric value.\n   *\n   * Default value: `\"{0}\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   *\n   * > If you are using custom labels, `labelFormat` affects only those that do not define the `text` property.\n   * @see showLabels\n   * @see tooltipFormat\n   */\n  @property({ defaultValue: \"{0}\" }) labelFormat: string;\n  /**\n   * Controls the visibility of thumb tooltips.\n   *\n   * Possible values:\n   *\n   * - `\"auto\"` (default) - Displays the tooltips when the thumb or selected range is hovered over or focused.\n   * - `\"never\"` - Hides the tooltips entirely.\n   * @see tooltipFormat\n   */\n  @property({ defaultValue: \"auto\" }) tooltipVisibility: \"auto\" | /*\"always\" |*/ \"never\";\n  /**\n   * Sets the interval between selectable scale values.\n   *\n   * Default value: 1\n   *\n   * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n   *\n   * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   */\n  public get step(): number {\n    // if (this.segmentCount) {\n    //   return (this.renderedMax - this.renderedMin) / this.segmentCount;\n    // }\n    return this.getPropertyValue(\"step\");\n  }\n  public set step(val: number) {\n    this.setPropertyValue(\"step\", val);\n  }\n  // @property({ defaultValue: null }) segmentCount: number | null;\n  /**\n   * Specifies whether the slider displays value labels along the scale.\n   *\n   * Default value: `true`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   * @see labelCount\n   * @see customLabels\n   * @see labelFormat\n   */\n  @property({ defaultValue: true }) showLabels: boolean;\n  /**\n   * Defines how many auto-generated labels should be displayed along the slider scale. Ignored if the [`customLabels`](#customLabels) property is set.\n   *\n   * Default value: -1 (the number of labels is calculated automatically based on the [`min`](#min) and [`max`](#max) values)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   * @see showLabels\n   * @see labelFormat\n   */\n  public get labelCount(): number {\n    if (this.customLabels.length > 0) return this.customLabels.length;\n    if (this.tickSize) {\n      return Math.round(100 / this.tickSize) + 2;\n    }\n    return this.getPropertyValue(\"labelCount\");\n  }\n  public set labelCount(val: number) {\n    this.setPropertyValue(\"labelCount\", val);\n  }\n  @property({ defaultValue: true }) autoGenerate: boolean;\n  /**\n   * Specifies custom scale labels. Overrides auto-generated labels if defined.\n   *\n   * This property accepts an array of numbers or objects with the following fields:\n   *\n   * - `value`: `number`\\\n   * The scale value where the label should appear.\n   *\n   * - `text`: `string`\\\n   * The label text to display.\n   *\n   * Numbers and objects can be combined in the same array. For instance, the following slider configuration specifies textual labels for extreme scale points and adds numeric labels between them.\n   *\n   * ```js\n   * const surveyJson = {\n   *   \"elements\": [\n   *     {\n   *       \"type\": \"slider\",\n   *       // ...\n   *       \"customLabels\": [\n   *         { value: 0, text: \"Lowest\" },\n   *         20,\n   *         40\n   *         60\n   *         80,\n   *         { value: 100, text: \"Highest\" },\n   *       ]\n   *     }\n   *   ]\n   * };\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   * @see showLabels\n   * @see labelCount\n   * @see labelFormat\n   */\n  public get customLabels(): ItemValue[] {\n    return this.getPropertyValue(\"customLabels\");\n  }\n  public set customLabels(val: ItemValue[]) {\n    this.setPropertyValue(\"customLabels\", val);\n  }\n  @property({ defaultValue: true }) allowDragRange: boolean;\n  @property({ defaultValue: null }) tickSize: number | null;\n  /**\n   * Allows the start and end thumbs to cross over each other. If `false`, the thumbs cannot be swapped. Applies only if [`sliderType`](#sliderType) is `\"range\"`.\n   *\n   * Default value: `false` if [`minRangeLength`](#minRangeLength) is defined, `true` otherwise.\n   */\n  public get allowSwap(): boolean {\n    if (this.minRangeLength) return false;\n    return this.getPropertyValue(\"allowSwap\", true);\n  }\n  public set allowSwap(val: boolean) {\n    this.setPropertyValue(\"allowSwap\", val);\n  }\n  /**\n   * Specifies whether to display a button that clears the selected slider value and resets it to `undefined`.\n   *\n   * Default value: `false`\n   */\n  @property({ defaultValue: false }) allowClear: boolean;\n\n  constructor(name: string) {\n    super(name);\n    this.createItemValues(\"customLabels\");\n    this.dragOrClickHelper = new DragOrClickHelper(null, false);\n    this.initPropertyDependencies();\n  }\n  @property({ defaultValue: null }) focusedThumb: number | null;\n  @property({ defaultValue: null }) animatedThumb: boolean | null;\n  public dragOrClickHelper: DragOrClickHelper;\n  public get generatedLabels(): ItemValue[] {\n    return this.getPropertyValue(\"generatedLabels\", undefined, () => this.calcGeneratedLabels());\n  }\n  get tooltipVisibilityPG(): boolean {\n    return this.tooltipVisibility === \"auto\";\n  }\n  set tooltipVisibilityPG(newValue: boolean) {\n    this.tooltipVisibility = newValue ? \"auto\" : \"never\";\n  }\n  public get renderedValue(): number[] {\n    return this.getPropertyValue(\"renderedValue\", undefined, () => this.calcRenderedValue());\n  }\n  public set renderedValue(val: number[]) {\n    this.setPropertyValue(\"renderedValue\", val);\n  }\n\n  public getType(): string {\n    return \"slider\";\n  }\n\n  public get rootCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.root)\n      .append(this.cssClasses.rootSingleMode, this.sliderType === \"single\")\n      .append(this.cssClasses.rootNegativeScaleMode, !!this.isNegativeScale)\n      .append(this.cssClasses.rootDesignMode, !!this.isDesignMode)\n      .append(this.cssClasses.rootAnimatedThumbMode, !!this.animatedThumb)\n      .toString();\n  }\n\n  public getThumbContainerCss = (thumbNumber: number): string => {\n    return new CssClassBuilder()\n      .append(this.cssClasses.thumbContainer)\n      .append(this.cssClasses.thumbContainerIndeterminateMode, !!this.isIndeterminate)\n      .append(this.cssClasses.thumbContainerFocusedMode, thumbNumber === this.focusedThumb)\n      .toString();\n  };\n\n  public get tooltipCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.tooltip)\n      .append(this.cssClasses.tooltipOnHoverMode, this.tooltipVisibility === \"auto\")\n      .toString();\n  }\n\n  public getLabelCss = (locText: LocalizableString): string => {\n    return new CssClassBuilder()\n      .append(this.cssClasses.label)\n      .append(this.cssClasses.labelLongMod, locText.renderedHtml.length > 10)\n      .toString();\n  };\n\n  public get renderedLabelCount(): number {\n    return this.labelCount < 0 ? 6 : this.labelCount;\n  }\n\n  public get renderedMax(): number {\n    return this.max; // TODO\n  }\n\n  public get renderedMin(): number {\n    return this.min; // TODO\n  }\n\n  public get renderedMaxRangeLength(): number {\n    return this.maxRangeLength ?? this.renderedMax - this.renderedMin;\n  }\n\n  public get renderedMinRangeLength(): number {\n    return this.minRangeLength ?? this.step;\n  }\n\n  public get renderedLabels(): Array<ItemValue> {\n    const generatedLabels = this.generatedLabels; // need this const due to observability reasons\n    const customLabels = this.customLabels; // need this const due to observability reasons\n    if (this.autoGenerate) return generatedLabels;\n    return customLabels;\n  }\n\n  public isIndeterminate = false;\n  public get isNegativeScale():boolean {\n    return this.renderedMin < 0;\n  }\n\n  public getTrackPercentLeft = ():number => {\n    const { renderedValue, sliderType, renderedMin: min } = this;\n    let result;\n    if (sliderType === \"single\") {\n      if (renderedValue[0] > 0) {\n        result = this.getPercent(Math.max(0, min));\n      } else {\n        result = this.getPercent(renderedValue[0]);\n      }\n    } else {\n      result = this.getPercent(Math.min(...renderedValue));\n    }\n\n    return result;\n  };\n\n  public getTrackPercentRight = ():number => {\n    const { renderedValue, sliderType, renderedMax: max } = this;\n    let result;\n\n    if (sliderType === \"single\") {\n      if (renderedValue[0] > 0) {\n        result = this.getPercent(renderedValue[0]);\n      } else {\n        result = this.getPercent(Math.min(0, max));\n      }\n    } else {\n      result = this.getPercent(Math.max(...renderedValue));\n    }\n\n    return 100 - result;\n  };\n\n  public getPercent = (value:number):number => {\n    const { renderedMax: max, renderedMin: min } = this;\n    const fullRange = max - min;\n    return (Math.abs(value - min) / fullRange) * 100;\n  };\n\n  public ensureMaxRangeBorders = (newValue:number, inputNumber:number):number => {\n    const { renderedMaxRangeLength, renderedValue } = this;\n    const value:number[] = renderedValue.slice();\n    const oldValue = value[inputNumber];\n\n    let isOutOfRange = false;\n\n    value[inputNumber] = newValue;\n\n    for (let i = 0; i < value.length - 1; i++) {\n      if (Math.abs(value[i] - value[i + 1]) > renderedMaxRangeLength) {\n        isOutOfRange = true;\n        break;\n      }\n    }\n\n    return isOutOfRange ? oldValue : newValue;\n  };\n\n  public ensureMinRangeBorders = (newValue:number, inputNumber:number):number => {\n    const { renderedMinRangeLength, renderedValue, allowSwap, renderedMin: min, renderedMax: max } = this;\n    const value:number[] = renderedValue.slice();\n    const oldValue = value[inputNumber];\n\n    let isOutOfRange = false;\n\n    value[inputNumber] = newValue;\n\n    for (let i = 0; i < value.length - 1; i++) {\n      if (Math.abs(value[i] - value[i + 1]) < renderedMinRangeLength) {\n        isOutOfRange = true;\n        break;\n      }\n    }\n\n    if (!allowSwap) {\n      const prevValue = inputNumber > 0 ? value[inputNumber - 1] : min;\n      const nextValue = inputNumber < value.length - 1 ? value[inputNumber + 1] : max;\n      if (newValue <= prevValue || newValue >= nextValue) {\n        isOutOfRange = true;\n      }\n    }\n\n    return isOutOfRange ? oldValue : newValue;\n  };\n\n  public getClosestToStepValue = (value: number): number => {\n    const { step, renderedMin: min, renderedMax: max } = this;\n\n    const maxByStep = min + Math.trunc((max - min) / step) * step;\n    let result = min + Math.round((value - min) / step) * step;\n    result = Math.min(maxByStep, result);\n    return result;\n  };\n\n  public handleRangeOnChange = (event: InputEvent): void => {\n    if (!this.isRangeMoving) return;\n    if (!this.isAllowToChange()) return;\n    const { renderedMax: max, renderedMin: min, renderedValue, ensureMaxRangeBorders, ensureMinRangeBorders } = this;\n    const inputNode = <HTMLInputElement>event.target;\n    const diff = this.oldInputValue - +inputNode.value;\n    this.oldInputValue = +inputNode.value;\n\n    let borderArrived = false;\n    for (let i = 0; i < renderedValue.length; i++) {\n      let newVal = renderedValue[i] - diff;\n      newVal = ensureMaxRangeBorders(newVal, i);\n      newVal = ensureMinRangeBorders(newVal, i);\n      if (newVal <= max && newVal >= min) {\n        renderedValue.splice(i, 1, newVal);\n      } else {\n        borderArrived = true;\n      }\n    }\n\n    if (borderArrived) { borderArrived = false; return; }\n  };\n\n  public prepareInputRangeForMoving = (event: PointerEvent, rootNode: HTMLElement): void => {\n    const { renderedMax: max, renderedMin: min } = this;\n\n    this.isRangeMoving = true;\n    this.animatedThumb = false;\n\n    //const inputNode = this.rangeInputRef.current;\n    const inputNode = <HTMLInputElement>event.target;\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", \"20px\");\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", \"initial\");\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"static\");\n\n    const leftPercent = ((event.clientX - rootNode.getBoundingClientRect().x) / rootNode.getBoundingClientRect().width) * 100;\n    const newInputValue = leftPercent / 100 * (max - min) + min;\n    inputNode.value = \"\" + newInputValue;\n    this.oldInputValue = newInputValue;\n  };\n\n  public handleRangePointerDown = (event: PointerEvent, rootNode: HTMLElement) => {\n    const { dragOrClickHelper, allowDragRange, step, prepareInputRangeForMoving } = this;\n    const inputNode = <HTMLInputElement>event.target;\n\n    if (step) {\n      inputNode.step = \"0.1\";\n    }\n\n    if (allowDragRange) {\n      dragOrClickHelper.dragHandler = () => { prepareInputRangeForMoving.call(this, event, rootNode); };\n      dragOrClickHelper.onPointerDown(event);\n    }\n  };\n\n  public handleRangePointerUp = (event: PointerEvent, rootNode: HTMLElement) => {\n    const { step, renderedValue, getClosestToStepValue } = this;\n    const inputNode = <HTMLInputElement>event.target;\n\n    if (this.isRangeMoving) {\n      this.refreshInputRange();\n      this.isRangeMoving = false;\n      if (step) {\n        // const input = this.rangeInputRef.current as HTMLInputElement; //TODO\n        inputNode.step = \"\" + step;\n\n        for (let i = 0; i < renderedValue.length; i++) {\n          renderedValue[i] = getClosestToStepValue(renderedValue[i]);\n        }\n        this.setSliderValue(renderedValue);\n      }\n      return;\n    }\n\n    // const inputNode = this.rangeInputRef.current;\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", \"0px\");\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", \"initial\");\n    inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"static\");\n    this.setValueByClickOnPath(event, rootNode);\n  };\n\n  public refreshInputRange = (inputRef?: HTMLElement):void => {\n    const { allowDragRange, renderedValue, getPercent } = this;\n    if (!allowDragRange) return;\n    //if (!this.rangeInputRef.current) return;\n    const input:HTMLElement = inputRef || DomDocumentHelper.getDocument().getElementById(\"sjs-slider-input-range-input\"); //TODO\n\n    if (!input) return;\n    const percentLastValue = getPercent(renderedValue[renderedValue.length - 1]);\n    const percentFirstValue = getPercent(renderedValue[0]);\n    let percent: number = percentLastValue - percentFirstValue;\n\n    //const inputNode = this.rangeInputRef.current;\n    input.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", `calc(${percent}% - 20px - 20px)`); //TODO 20px is thumb width remove hardcode\n    input.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", `calc(${percentFirstValue}% + 20px)`);\n    input.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"absolute\");\n  };\n\n  public setSliderValue = (newValue: number | number[]) => { // TODO move to setNewValue\n    if (this.isAllowToChange()) {\n      let result;\n      if (this.sliderType === \"single\") {\n        result = Array.isArray(newValue) ? newValue[0] : newValue;\n      } else if (this.sliderType === \"range\") {\n        result = newValue;\n      }\n      this.value = result;\n      this.resetPropertyValue(\"renderedValue\");\n    }\n  };\n\n  public setValueByClickOnPath = (event: PointerEvent, rootNode: HTMLElement) => {\n    const { renderedMax: max, renderedMin: min } = this;\n    let isRtl = DomDocumentHelper.getComputedStyle(DomDocumentHelper.getBody()).direction == \"rtl\";\n\n    let percent = ((event.clientX - rootNode.getBoundingClientRect().x) / rootNode.getBoundingClientRect().width) * 100;\n    if (isRtl) percent = 100 - percent;\n\n    let newValue = percent / 100 * (max - min) + min;\n    this.setValueByClick(newValue, event.target as HTMLInputElement);\n  };\n\n  public setValueByClick = (newValue: number, inputNode?: HTMLInputElement) => {\n    const { step, getClosestToStepValue, ensureMaxRangeBorders, ensureMinRangeBorders, renderedValue, refreshInputRange, setSliderValue } = this;\n\n    this.animatedThumb = true;\n\n    const value = renderedValue.slice();\n    let thumbIndex = 0;\n\n    for (let i = 0; i < value.length; i++) {\n      const currentMinValueDiff = Math.abs(value[thumbIndex] - newValue);\n      const newMinValueDiff = Math.abs(value[i] - newValue);\n      if (newMinValueDiff < currentMinValueDiff) {\n        thumbIndex = i;\n      }\n    }\n\n    if (value.length > 1) {\n      newValue = ensureMaxRangeBorders(newValue, thumbIndex);\n      newValue = ensureMinRangeBorders(newValue, thumbIndex);\n    }\n    value[thumbIndex] = newValue;\n\n    if (step) {\n      const currentValue = renderedValue.slice();\n      for (let i = 0; i < value.length; i++) {\n        const currentValueStep = currentValue[i] / step;\n        const newValueStep = value[i] / step;\n        const newValueRound = Math.round(newValueStep);\n\n        if (newValueRound === currentValueStep) {\n          if (newValueStep > currentValueStep) {\n            value[i] = value[i] + step;\n          } else if (newValueStep < currentValueStep) {\n            value[i] = value[i] - step;\n          }\n        }\n\n        value[i] = getClosestToStepValue(value[i]);\n      }\n    }\n\n    setSliderValue(value);\n    //refreshInputRange(this.rangeInputRef.current);\n    refreshInputRange();\n  };\n\n  public handleOnChange = (event: InputEvent, inputNumber: number): void => {\n    if (!this.isAllowToChange()) return;\n    if (this.oldValue === null) return; // Firefox raise one more OnChange after PointerUp and break the value\n    const { allowSwap, ensureMaxRangeBorders, ensureMinRangeBorders, renderedValue } = this;\n    const inputNode = <HTMLInputElement>event.target;\n\n    let newValue: number = +inputNode.value;\n\n    if (renderedValue.length > 1) {\n      newValue = ensureMaxRangeBorders(newValue, inputNumber);\n      if (!allowSwap) {\n        newValue = ensureMinRangeBorders(newValue, inputNumber);\n      }\n    }\n\n    renderedValue.splice(inputNumber, 1, newValue);\n  };\n\n  public handlePointerDown = (e: PointerEvent)=> {\n    const { step, renderedValue } = this;\n    if (step) {\n      for (let i = 0; i < renderedValue.length; i++) {\n        const input:any = DomDocumentHelper.getDocument().getElementById(`sjs-slider-input-${i}`); //TODO\n        input.step = 0.1;\n      }\n    }\n    this.oldValue = this.renderedValue;\n    this.animatedThumb = false;\n  };\n\n  public handlePointerUp = (event:PointerEvent) => {\n    event.stopPropagation();\n    const { step, focusedThumb, renderedValue, allowSwap, renderedMinRangeLength, getClosestToStepValue, refreshInputRange, setSliderValue } = this;\n    const focusedThumbValue = renderedValue[focusedThumb];\n    const inputNode = <HTMLInputElement>event.target;\n\n    renderedValue.sort((a, b)=>a - b);\n\n    this.focusedThumb = renderedValue.indexOf(focusedThumbValue);\n    if (step) {\n      for (let i = 0; i < renderedValue.length; i++) {\n        renderedValue[i] = getClosestToStepValue(renderedValue[i]);\n        const input:any = DomDocumentHelper.getDocument().getElementById(`sjs-slider-input-${i}`); //TODO\n        input.step = step;\n      }\n    }\n\n    if (allowSwap) {\n      for (let i = 0; i < renderedValue.length - 1; i++) {\n        if (Math.abs(renderedValue[i] - renderedValue[i + 1]) < renderedMinRangeLength) {\n          this.setPropertyValue(\"renderedValue\", <number[]>this.oldValue);\n          break;\n        }\n      }\n    }\n\n    setSliderValue(renderedValue);\n    refreshInputRange();\n    this.oldValue = null;\n  };\n\n  public handleKeyDown = (event: KeyboardEvent) => {\n    this.oldValue = this.renderedValue;\n    this.animatedThumb = true;\n  };\n\n  public handleKeyUp = (event: KeyboardEvent) => {\n    this.oldValue = null;\n    this.setSliderValue(this.renderedValue);\n  };\n\n  public handleOnFocus = (inputNumber: number): void => {\n    this.focusedThumb = inputNumber;\n  };\n\n  public handleOnBlur = (): void => {\n    this.focusedThumb = null;\n  };\n\n  public handleLabelPointerUp = (event: PointerEvent, newValue: number) => {\n    const inputNode = <HTMLInputElement>event.target;\n    if (isNaN(newValue)) return;\n    this.setValueByClick(newValue, inputNode);\n  };\n\n  public getTooltipValue = (tooltipNumber: number):string => {\n    const { step, getClosestToStepValue, renderedValue, tooltipFormat, formatNumber } = this;\n    let value = renderedValue[tooltipNumber];\n    value = step ? getClosestToStepValue(value) : value;\n    value = formatNumber(value);\n    return tooltipFormat.replace(\"{0}\", \"\" + value);\n  };\n\n  public getTextByItem(item: ItemValue): string {\n    const res = item.value.toString();\n    return this.labelFormat.replace(\"{0}\", \"\" + res);\n  }\n\n  public getLabelText = (labelNumber: number):string => {\n    const { step, renderedMax: max, renderedMin: min, renderedLabelCount: labelCount, formatNumber } = this;\n    const fullRange = max - min;\n    const isDecimal = step % 1 != 0;\n    const count = labelCount - 1;\n    let labelStep = count === 0 ? 0 : labelNumber * fullRange / count;\n    return isDecimal ? \"\" + formatNumber(labelStep + min) : \"\" + Math.round(labelStep + min);\n  };\n\n  public getLabelPosition = (labelNumber: number):number => {\n    const { max, min, renderedLabelCount: labelCount, customLabels } = this;\n    const count = labelCount - 1;\n    if (count === 0) return 0;\n    const fullRange = max - min;\n    const labelStep = min + labelNumber * fullRange / count;\n    return labelStep;\n  };\n\n  public endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (this.jsonObj.customLabels !== undefined) {\n      this.autoGenerate = false;\n    }\n    if (!this.isDesignMode && this.sliderType === \"range\") {\n      this.createNewArray(\"value\");\n    }\n  }\n\n  public updateValueFromSurvey(newValue: any, clearData: boolean): void {\n    newValue = this.ensureValueRespectMinMax(newValue);\n    super.updateValueFromSurvey(newValue, clearData);\n    if (this.isIndeterminate) {\n      this.isIndeterminate = false;\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.runExpressionByProperty(\"maxValueExpression\", properties, (value: number) => {\n      this.max = value ?? this.renderedMax;\n    });\n    this.runExpressionByProperty(\"minValueExpression\", properties, (value: number) => {\n      this.min = value ?? this.renderedMin;\n    });\n  }\n  protected initPropertyDependencies() {\n    // this.registerSychProperties([\"segmentCount\"],\n    //   () => {\n    //     if (this.segmentCount) {\n    //       this.step = (this.renderedMax - this.renderedMin) / this.segmentCount;\n    //     }\n    //   }\n    // );\n    // this.registerSychProperties([\"step\"],\n    //   () => {\n    //     if (this.step) {\n    //       this.segmentCount = (this.renderedMax - this.renderedMin) / this.step;\n    //     }\n    //   }\n    // );\n    this.registerFunctionOnPropertiesValueChanged([\"min\", \"max\", \"step\", \"autoGenerate\", \"labelFormat\", \"labelCount\"],\n      () => {\n        this.resetPropertyValue(\"generatedLabels\");\n        this.locStrsChanged();\n      }\n    );\n    this.registerSychProperties([\"autoGenerate\"],\n      () => {\n        if (!this.autoGenerate && this.customLabels.length === 0) {\n          this.setPropertyValue(\"customLabels\", this.calcGeneratedLabels());\n        }\n        if (this.autoGenerate) {\n          this.customLabels.splice(0, this.customLabels.length);\n        }\n      }\n    );\n    this.registerFunctionOnPropertiesValueChanged([\"min\", \"max\", \"step\", \"maxRangeLength\", \"minRangeLength\", \"sliderType\"],\n      () => {\n        this.resetPropertyValue(\"renderedValue\");\n      }\n    );\n  }\n\n  protected setNewValue(newValue: any): void {\n    newValue = this.ensureValueRespectMinMax(newValue);\n    super.setNewValue(newValue);\n    if (this.isIndeterminate) {\n      this.isIndeterminate = false;\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n\n  protected setDefaultValue() {\n    super.setDefaultValue();\n    const val = this.defaultValue;\n    if (this.sliderType === \"single\" && Array.isArray(val)) {\n      this.setSliderValue(val);\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n\n  protected getDefaultTitleActions(): Array<Action> {\n    const actions = [];\n    if (!this.isDesignMode) {\n      const clearAction = new Action(\n        {\n          locTitleName: \"clearCaption\",\n          id: `sv-clr-btn-${this.id}`,\n          action: () => { this.clearValue(true); },\n          innerCss: this.cssClasses.clearButton,\n          visible: <any>new ComputedUpdater(() => this.allowClear && !this.isReadOnly)\n        }\n      );\n      actions.push(clearAction);\n    }\n    return actions;\n  }\n\n  protected getItemValueType():string {\n    return \"sliderlabel\";\n  }\n\n  protected createLabelItem(value: number) {\n    const res = new SliderLabelItemValue(value);\n    res.locOwner = this;\n    return res;\n  }\n\n  private isRangeMoving = false;\n  private oldInputValue: number | null = null;\n  private oldValue: number | number[] | null = null;\n\n  private calcRenderedValue = ():number[] => {\n    const { renderedMax: max, renderedMin: min, renderedMaxRangeLength, getClosestToStepValue, sliderType } = this;\n    let result;\n\n    if (sliderType === \"single\") {\n      result = this.ensureValueRespectMinMax(this.value);\n      if (typeof result === \"undefined\" || result === null || result.length === 0) {\n        this.isIndeterminate = true;\n        return this.isNegativeScale ? [Math.min(max, 0)] : [min];\n      } else {\n        return Array.isArray(result) ? [result[0]] : [result];\n      }\n    }\n\n    result = Array.isArray(this.value) ? this.value.slice() : [];\n\n    if (result.length === 0) {\n      const fullRange = max - min;\n      this.isIndeterminate = true;\n      if (Math.abs(fullRange) > renderedMaxRangeLength) {\n        const range = (fullRange - renderedMaxRangeLength) / 2;\n        return [getClosestToStepValue(min + range), getClosestToStepValue(max - range)];\n      }\n      return [min, max]; // TODO support several values 3 and more\n    }\n\n    return result.map(v=>this.ensureValueRespectMinMax(v));\n  };\n\n  private calcGeneratedLabels() : Array<SliderLabelItemValue> {\n    const labels:SliderLabelItemValue[] = [];\n    for (let i = 0; i < this.renderedLabelCount; i++) {\n      labels.push(this.createLabelItem(this.getLabelPosition(i)));\n    }\n    return labels;\n  }\n\n  private formatNumber(number:number) {\n    return parseFloat(number.toFixed(4));\n  }\n\n  private ensureValueRespectMinMax(value: number[] | number):number[] | number {\n    if (!Array.isArray(value)) {\n      if (value < this.min) value = this.min;\n      if (value > this.max) value = this.max;\n    } else {\n      value.forEach((el, i, array) => {\n        if (el < this.min) value[i] = this.min;\n        if (el > this.max) value[i] = this.max;\n        if (i === 0) {\n          if (typeof el === \"undefined\" || el === null) value[i] = this.min;\n        } else if (i === array.length - 1) {\n          if (typeof el === \"undefined\" || el === null) value[i] = this.max;\n        }\n      });\n    }\n    return value;\n  }\n\n  private isAllowToChange():boolean {\n    return !this.isReadOnly && !this.isDisabledAttr && !this.isPreviewStyle && !this.isDisabledStyle;\n  }\n}\n\nfunction getCorrectMinMax(min: any, max: any, isMax: boolean, step: number): any {\n  let val = isMax ? max : min;\n  if (min >= max) return isMax ? min + step : max - step;\n  return val;\n}\n\nSerializer.addClass(\n  \"sliderlabel\",\n  [\n    { name: \"!value:number\" },\n    { name: \"visibleIf\", visible: false },\n    { name: \"enableIf\", visible: false }\n  ],\n  (value: any) => new SliderLabelItemValue(value),\n  \"itemvalue\"\n);\n\nSerializer.addClass(\n  \"slider\",\n  [\n    {\n      name: \"sliderType\",\n      default: \"single\",\n      choices: [\"single\", \"range\"],\n    },\n    {\n      name: \"autoGenerate\",\n      default: true,\n      isSerializable: false,\n      choices: [true, false]\n    },\n    {\n      name: \"min:number\",\n      default: 0,\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(val, obj.max, false, obj.step);\n      },\n    },\n    {\n      name: \"max:number\",\n      default: 100,\n      onSettingValue: (obj: any, val: any): any => {\n        return getCorrectMinMax(obj.min, val, true, obj.step);\n      },\n    },\n    {\n      name: \"step:number\",\n      default: 1,\n      // visibleIf: function (obj: any) {\n      //   return obj.autoGenerate;\n      // },\n    },\n    // {\n    //   name: \"segmentCount:number\",\n    //   // visibleIf: function (obj: any) {\n    //   //   return obj.autoGenerate;\n    //   // },\n    // },\n    {\n      name: \"minValueExpression\",\n      type: \"expression\"\n    },\n    {\n      name: \"maxValueExpression\",\n      type: \"expression\"\n    },\n    {\n      name: \"minRangeLength:number\",\n      visibleIf: function (obj: any) {\n        return obj.sliderType === \"range\";\n      },\n    },\n    {\n      name: \"maxRangeLength:number\",\n      visibleIf: function (obj: any) {\n        return obj.sliderType === \"range\";\n      }\n    },\n    {\n      name: \"customLabels:sliderlabel[]\",\n      visibleIf: function (obj: any) {\n        return !obj.autoGenerate;\n      },\n    },\n    {\n      name: \"showLabels:boolean\",\n      default: true,\n    },\n    {\n      name: \"tooltipVisibility:string\",\n      default: \"auto\",\n      visible: false,\n      choices: [\"auto\", \"never\"]\n    },\n    {\n      name: \"tooltipVisibilityPG:boolean\",\n      default: true,\n      isSerializable: false,\n    },\n    {\n      name: \"labelFormat:string\",\n      default: \"{0}\"\n    },\n    {\n      name: \"tooltipFormat:string\",\n      default: \"{0}\"\n    },\n    {\n      name: \"allowDragRange:boolean\",\n      default: true,\n      visible: false,\n      visibleIf: function (obj: any) {\n        return obj.sliderType === \"range\";\n      },\n    },\n    {\n      name: \"allowSwap:boolean\",\n      default: true,\n      visibleIf: function (obj: any) {\n        return obj.sliderType === \"range\";\n      },\n    },\n    {\n      name: \"labelCount:number\",\n      default: -1,\n      visibleIf: function (obj: any) {\n        return obj.autoGenerate;\n      },\n    },\n    {\n      name: \"allowClear:boolean\",\n      default: false,\n    },\n  ],\n  function () {\n    return new QuestionSliderModel(\"\");\n  },\n  \"question\",\n);\nQuestionFactory.Instance.registerQuestion(\"slider\", (name) => {\n  return new QuestionSliderModel(name);\n});", "import { QuestionFactory } from \"./questionfactory\";\nimport { property, Serializer } from \"./jsonobject\";\nimport { Question } from \"./question\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { preventDefaults } from \"./utils/utils\";\nimport { ActionContainer } from \"./actions/container\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\n\n/**\n * A class that describes the Yes/No (Boolean) question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-boolean/ (linkStyle))\n */\nexport class QuestionBooleanModel extends Question {\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"labelFalse\", this, true, \"booleanUncheckedLabel\");\n    this.createLocalizableString(\"labelTrue\", this, true, \"booleanCheckedLabel\");\n  }\n  public getType(): string {\n    return \"boolean\";\n  }\n  isLayoutTypeSupported(layoutType: string): boolean {\n    return true;\n  }\n  supportAutoAdvance(): boolean {\n    return this.renderAs !== \"checkbox\";\n  }\n  public get isIndeterminate(): boolean {\n    return this.isEmpty();\n  }\n  /**\n   * Gets or sets the question value as a Boolean value.\n   *\n   * If you set the `valueTrue` and `valueFalse` properties, the `value` property contains their values instead of Boolean values. This may be inconvenient when you operate the question value in code. To access the standard Boolean values, use the `booleanValue` property.\n   * @see valueTrue\n   * @see valueFalse\n   */\n  public get booleanValue(): any {\n    if (this.isEmpty()) return null;\n    return this.value == this.getValueTrue();\n  }\n  public set booleanValue(val: any) {\n    if (this.isReadOnly || this.isDesignMode) {\n      return;\n    }\n    this.setBooleanValue(val);\n  }\n  private setBooleanValue(val: any) {\n    if (this.isValueEmpty(val)) {\n      this.value = undefined;\n    } else {\n      this.value = val == true ? this.getValueTrue() : this.getValueFalse();\n    }\n  }\n  public get defaultValue(): any {\n    return this.getPropertyValue(\"defaultValue\");\n  }\n  public set defaultValue(val: any) {\n    if (val === true) val = \"true\";\n    if (val === false) val = \"false\";\n    this.setPropertyValue(\"defaultValue\", val);\n    this.updateValueWithDefaults();\n  }\n  public getDefaultValue(): any {\n    const val = this.defaultValue;\n    if (val === \"indeterminate\" || val === undefined || val === null) return undefined;\n    return val == \"true\" ? this.getValueTrue() : this.getValueFalse();\n  }\n  public get locTitle(): LocalizableString {\n    const original = this.getLocalizableString(\"title\");\n    if ((this.isLabelRendered && !this.showTitle || this.isValueEmpty(original.text)) && !this.isValueEmpty(this.locLabel.text)) return this.locLabel;\n    return original;\n  }\n  public get labelRenderedAriaID(): string {\n    return this.isLabelRendered ? this.ariaTitleId : null;\n  }\n\n  public beforeDestroyQuestionElement(el: HTMLElement): void {\n    super.beforeDestroyQuestionElement(el);\n    this.leftAnswerElement = undefined;\n  }\n\n  /**\n   * @deprecated Use the [`title`](https://surveyjs.io/form-library/documentation/api-reference/boolean-question-model#title) property instead.\n   */\n  @property({ localizable: true }) label: string;\n  @property({ defaultValue: true }) useTitleAsLabel: boolean;\n  get isLabelRendered(): boolean {\n    return this.titleLocation === \"hidden\" && this.useTitleAsLabel;\n  }\n  get canRenderLabelDescription(): boolean {\n    return this.isLabelRendered && this.hasDescription && (this.hasDescriptionUnderTitle || this.hasDescriptionUnderInput);\n  }\n  /**\n   * Gets or sets a text label that corresponds to a positive answer.\n   *\n   * Default value: \"Yes\"\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see valueTrue\n   * @see valueFalse\n   */\n  public get labelTrue(): string {\n    return this.getLocalizableStringText(\"labelTrue\");\n  }\n  public set labelTrue(val: string) {\n    this.setLocalizableStringText(\"labelTrue\", val);\n  }\n  get locLabelTrue(): LocalizableString {\n    return this.getLocalizableString(\"labelTrue\");\n  }\n  get isDeterminated(): boolean {\n    return this.booleanValue !== null && this.booleanValue !== undefined;\n  }\n\n  /**\n   * Specifies whether to swap the order of the Yes and No answers.\n   *\n   * Default value: `false`\n   *\n   * By default, the order is [ \"No\", \"Yes\"]. Enable this property to reorder the answers as follows: [ \"Yes\", \"No\" ].\n   */\n  @property({ defaultValue: false }) swapOrder: boolean;\n  get locLabelLeft(): LocalizableString {\n    return this.swapOrder ? this.getLocalizableString(\"labelTrue\") : this.getLocalizableString(\"labelFalse\");\n  }\n  get locLabelRight(): LocalizableString {\n    return this.swapOrder ? this.getLocalizableString(\"labelFalse\") : this.getLocalizableString(\"labelTrue\");\n  }\n\n  /**\n   * Gets or sets a text label that corresponds to a negative answer.\n   *\n   * Default value: \"No\"\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see valueTrue\n   * @see valueFalse\n   */\n  public get labelFalse(): string {\n    return this.getLocalizableStringText(\"labelFalse\");\n  }\n  public set labelFalse(val: string) {\n    this.setLocalizableStringText(\"labelFalse\", val);\n  }\n  get locLabelFalse(): LocalizableString {\n    return this.getLocalizableString(\"labelFalse\");\n  }\n  /**\n   * A value to save in survey results when respondents give a positive answer.\n   *\n   * Default value: `true`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see labelTrue\n   * @see labelFalse\n   */\n  @property()\n    valueTrue: any;\n  /**\n   * A value to save in survey results when respondents give a negative answer.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see labelTrue\n   * @see labelFalse\n   */\n  @property()\n    valueFalse: any;\n\n  public getValueTrue(): any {\n    return this.valueTrue !== undefined ? this.valueTrue : true;\n  }\n  public getValueFalse(): any {\n    return this.valueFalse !== undefined ? this.valueFalse : false;\n  }\n  protected setDefaultValue(): void {\n    if (this.isDefaultValueSet(\"true\", this.valueTrue))this.setBooleanValue(true);\n    if (this.isDefaultValueSet(\"false\", this.valueFalse))this.setBooleanValue(false);\n    const val = this.defaultValue;\n    if (val === \"indeterminate\" || val === null || val === undefined)this.setBooleanValue(undefined);\n  }\n  private isDefaultValueSet(defaultValueCheck: any, valueTrueOrFalse: any): boolean {\n    return this.defaultValue == defaultValueCheck || (valueTrueOrFalse !== undefined && this.defaultValue === valueTrueOrFalse);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (value == this.getValueTrue()) return this.locLabelTrue.textOrHtml;\n    return this.locLabelFalse.textOrHtml;\n  }\n  private getItemCssValue(css: any): string {\n    return new CssClassBuilder()\n      .append(css.item)\n      .append(css.itemOnError, this.hasCssError())\n      .append(css.itemDisabled, this.isDisabledStyle)\n      .append(css.itemReadOnly, this.isReadOnlyStyle)\n      .append(css.itemPreview, this.isPreviewStyle)\n      .append(css.itemHover, !this.isDesignMode)\n      .append(css.itemChecked, !!this.booleanValue)\n      .append(css.itemExchanged, !!this.swapOrder)\n      .append(css.itemIndeterminate, !this.isDeterminated)\n      .toString();\n  }\n\n  public getItemCss(): string {\n    return this.getItemCssValue(this.cssClasses);\n  }\n  public getCheckboxItemCss() {\n    return this.getItemCssValue(\n      {\n        item: this.cssClasses.checkboxItem,\n        itemOnError: this.cssClasses.checkboxItemOnError,\n        itemDisabled: this.cssClasses.checkboxItemDisabled,\n        itemDisable: this.cssClasses.checkboxItemDisabled,\n        itemReadOnly: this.cssClasses.checkboxItemReadOnly,\n        itemPreview: this.cssClasses.checkboxItemPreview,\n        itemChecked: this.cssClasses.checkboxItemChecked,\n        itemIndeterminate: this.cssClasses.checkboxItemIndeterminate\n      }\n    );\n  }\n\n  public getLabelCss(checked: boolean): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.label)\n      .append(this.cssClasses.disabledLabel, this.booleanValue === !checked || this.isDisabledStyle)\n      .append(this.cssClasses.labelReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.labelPreview, this.isPreviewStyle)\n      .append(this.cssClasses.labelTrue, !this.isIndeterminate && checked === !this.swapOrder)\n      .append(this.cssClasses.labelFalse, !this.isIndeterminate && checked === this.swapOrder)\n      .toString();\n  }\n\n  updateValueFromSurvey(newValue: any, clearData: boolean = false): void {\n    super.updateValueFromSurvey(newValue, clearData);\n  }\n\n  protected onValueChanged(): void {\n    super.onValueChanged();\n  }\n\n  public get svgIcon(): string {\n    if (this.booleanValue && this.cssClasses.svgIconCheckedId) return this.cssClasses.svgIconCheckedId;\n    if (!this.isDeterminated && this.cssClasses.svgIconIndId) return this.cssClasses.svgIconIndId;\n    if (!this.booleanValue && this.cssClasses.svgIconUncheckedId) return this.cssClasses.svgIconUncheckedId;\n    return this.cssClasses.svgIconId;\n  }\n\n  public get itemSvgIcon(): string {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n\n  public get allowClick(): boolean {\n    return this.isIndeterminate && !this.isInputReadOnly;\n  }\n\n  public getCheckedLabel(): LocalizableString {\n    if (this.booleanValue === true) {\n      return this.locLabelTrue;\n    } else if (this.booleanValue === false) {\n      return this.locLabelFalse;\n    }\n  }\n  protected setQuestionValue(newValue: any, updateIsAnswered: boolean = true): void {\n    if (newValue === \"true\" && this.valueTrue !== \"true\") newValue = true;\n    if (newValue === \"false\" && this.valueFalse !== \"false\") newValue = false;\n    if (newValue === \"indeterminate\" || newValue === null) newValue = undefined;\n    super.setQuestionValue(newValue, updateIsAnswered);\n  }\n  /* #region web-based methods */\n  public onLabelClick(event: any, value: boolean) {\n    if (this.allowClick) {\n      preventDefaults(event);\n      this.booleanValue = value;\n    }\n    return true;\n  }\n  private calculateBooleanValueByEvent(event: any, isRightClick: boolean) {\n    let isRtl = false;\n    if (DomDocumentHelper.isAvailable()) {\n      isRtl = DomDocumentHelper.getComputedStyle(event.target).direction == \"rtl\";\n    }\n    this.booleanValue = isRtl ? !isRightClick : isRightClick;\n  }\n  public onSwitchClickModel(event: any) {\n    if (this.allowClick) {\n      preventDefaults(event);\n      var isRightClick =\n        event.offsetX / event.target.offsetWidth > 0.5;\n      this.calculateBooleanValueByEvent(event, isRightClick);\n      return;\n    }\n    return true;\n  }\n  public onKeyDownCore(event: any): boolean {\n    if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\") {\n      event.stopPropagation();\n      this.calculateBooleanValueByEvent(event, event.key === \"ArrowRight\");\n    }\n    return true;\n  }\n  /* #endregion */\n\n  public getRadioItemClass(css: any, value: any): string {\n    let className = undefined;\n    if (css.radioItem) {\n      className = css.radioItem;\n    }\n    if (css.radioItemChecked && value === this.value) {\n      className = (className ? className + \" \" : \"\") + css.radioItemChecked;\n    }\n    if (this.isDisabledStyle) {\n      className += \" \" + css.radioItemDisabled;\n    }\n    if (this.isReadOnlyStyle) {\n      className += \" \" + css.radioItemReadOnly;\n    }\n    if (this.isPreviewStyle) {\n      className += \" \" + css.radioItemPreview;\n    }\n    return className;\n  }\n\n  protected supportResponsiveness(): boolean {\n    return true;\n  }\n  protected getCompactRenderAs(): string {\n    return \"radio\";\n  }\n  protected createActionContainer(allowAdaptiveActions?: boolean): ActionContainer {\n    return super.createActionContainer(this.renderAs !== \"checkbox\");\n  }\n\n  protected getIsTitleRenderedAsString(): boolean { return false; }\n\n  //a11y\n  public get isNewA11yStructure(): boolean {\n    return true;\n  }\n  public get a11y_input_ariaRole(): string {\n    return \"switch\";\n  }\n  // EO a11y\n}\n\nSerializer.addClass(\n  \"boolean\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    { name: \"label:text\", serializationProperty: \"locLabel\", isSerializable: false, visible: false },\n    {\n      name: \"labelTrue:text\",\n      serializationProperty: \"locLabelTrue\",\n    },\n    {\n      name: \"labelFalse:text\",\n      serializationProperty: \"locLabelFalse\",\n    },\n    \"valueTrue\",\n    \"valueFalse\",\n    { name: \"swapOrder:boolean\", category: \"general\" },\n    { name: \"renderAs\", default: \"default\", visible: false },\n  ],\n  function () {\n    return new QuestionBooleanModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"boolean\", (name) => {\n  return new QuestionBooleanModel(name);\n});\n", "import { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { QuestionCheckboxBase, ChoiceItem } from \"./question_baseselect\";\nimport { ItemValue } from \"./itemvalue\";\nimport { Helpers } from \"./helpers\";\nimport { ILocalizableOwner, LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { classesToSelector } from \"./utils/utils\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\n\nexport class ImageItemValue extends ChoiceItem implements ILocalizableOwner {\n\n  @property({ defaultValue: false }) private videoNotLoaded: boolean;\n  @property({ defaultValue: false }) private imageNotLoaded: boolean;\n\n  constructor(value: any, text?: string, protected typeName?: string\n  ) {\n    super(value, text, typeName);\n    this.createLocalizableString(\"imageLink\", this, false);\n  }\n  protected getBaseType(): string { return \"imageitemvalue\"; }\n  /**\n   * The image or video link property.\n   */\n  public get imageLink(): string {\n    return this.getLocalizableStringText(\"imageLink\");\n  }\n  public set imageLink(val: string) {\n    this.setLocalizableStringText(\"imageLink\", val);\n    this.imageNotLoaded = false;\n    this.videoNotLoaded = false;\n  }\n  private aspectRatio: number;\n\n  get locImageLink(): LocalizableString {\n    return this.getLocalizableString(\"imageLink\");\n  }\n  getLocale(): string {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text: string, name: string, item?: any): string {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name: string): string {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr: LocalizableString): any {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text: string): string {\n    return !!this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n\n  public onErrorHandler(): void {\n    this.contentNotLoaded = true;\n  }\n\n  public set contentNotLoaded(val: boolean) {\n    if (this.locOwner instanceof QuestionImagePickerModel && this.locOwner.contentMode == \"video\") {\n      this.videoNotLoaded = val;\n    } else {\n      this.imageNotLoaded = val;\n    }\n  }\n  public get contentNotLoaded(): boolean {\n    return this.locOwner instanceof QuestionImagePickerModel && this.locOwner.contentMode == \"video\" ? this.videoNotLoaded : this.imageNotLoaded;\n  }\n\n}\n\n/**\n  * A class that describes the Image Picker question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n */\nexport class QuestionImagePickerModel extends QuestionCheckboxBase {\n  constructor(name: string) {\n    super(name);\n    this.colCount = 0;\n    this.registerPropertyChangedHandlers([\"minImageWidth\", \"maxImageWidth\", \"minImageHeight\", \"maxImageHeight\", \"visibleChoices\", \"colCount\", \"isResponsiveValue\"], () => {\n      if (!!this._width) {\n        this.processResponsiveness(0, this._width);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"imageWidth\", \"imageHeight\"], () => {\n      this.calcIsResponsive();\n    });\n    this.calcIsResponsive();\n  }\n  public getType(): string {\n    return \"imagepicker\";\n  }\n  supportAutoAdvance(): boolean {\n    return !this.multiSelect;\n  }\n  public get hasSingleInput(): boolean {\n    return false;\n  }\n  protected getItemValueType() {\n    return \"imageitemvalue\";\n  }\n  public get isCompositeQuestion(): boolean {\n    return true;\n  }\n  protected get itemFlowDirection() {\n    return \"row\";\n  }\n  public supportOther(): boolean { return false; }\n  public supportNone(): boolean { return false; }\n  public supportRefuse(): boolean { return false; }\n  public supportDontKnow(): boolean { return false; }\n  public isAnswerCorrect(): boolean {\n    if (!this.multiSelect) return super.isAnswerCorrect();\n    return Helpers.isArrayContainsEqual(this.value, this.correctAnswer);\n  }\n  /**\n   * Specifies whether users can select multiple images or videos.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   */\n  public get multiSelect(): boolean {\n    return this.getPropertyValue(\"multiSelect\");\n  }\n  public set multiSelect(newValue: boolean) {\n    this.setPropertyValue(\"multiSelect\", newValue);\n  }\n  public isItemSelected(item: ItemValue): boolean {\n    var val = this.value;\n    const imageItemValue = item as ImageItemValue;\n    if (this.isValueEmpty(val)) return false;\n    if (!imageItemValue.imageLink || imageItemValue.contentNotLoaded) return false;\n    if (!this.multiSelect) return this.isTwoValueEquals(val, item.value);\n    if (!Array.isArray(val)) return false;\n    for (var i = 0; i < val.length; i++) {\n      if (this.isTwoValueEquals(val[i], item.value)) return true;\n    }\n    return false;\n  }\n  public getItemEnabled(item: ItemValue): boolean {\n    const imageItemValue = item as ImageItemValue;\n    if (!imageItemValue.imageLink || imageItemValue.contentNotLoaded) return false;\n    return super.getItemEnabled(item);\n  }\n  public clearIncorrectValues() {\n    if (this.multiSelect) {\n      var val = this.value;\n      if (!val) return;\n      if (!Array.isArray(val) || val.length == 0) {\n        this.clearValue(true);\n        return;\n      }\n      var newValue = [];\n      for (var i = 0; i < val.length; i++) {\n        if (!this.hasUnknownValue(val[i], true)) {\n          newValue.push(val[i]);\n        }\n      }\n      if (newValue.length == val.length) return;\n      if (newValue.length == 0) {\n        this.clearValue(true);\n      } else {\n        this.value = newValue;\n      }\n    } else {\n      super.clearIncorrectValues();\n    }\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    if (!this.multiSelect && !Array.isArray(value)) return super.getDisplayValueCore(keysAsText, value);\n    return this.getDisplayArrayValue(keysAsText, value);\n  }\n\n  /**\n   * Specifies whether to display labels under images or videos. Labels text are taken from the `text` property of each object in the [`choices`](#choices) array.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   */\n  public get showLabel(): boolean {\n    return this.getPropertyValue(\"showLabel\");\n  }\n  public set showLabel(newValue: boolean) {\n    this.setPropertyValue(\"showLabel\", newValue);\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (!this.isDesignMode && this.multiSelect) {\n      this.createNewArray(\"renderedValue\");\n      this.createNewArray(\"value\");\n    }\n    this.calcIsResponsive();\n  }\n  protected getValueCore() {\n    var value = super.getValueCore();\n    if (value !== undefined) {\n      return value;\n    }\n    if (this.multiSelect) {\n      return [];\n    }\n    return value;\n  }\n  private convertValToArrayForMultSelect(val: any): any {\n    if (!this.multiSelect) return val;\n    if (this.isValueEmpty(val) || Array.isArray(val)) return val;\n    return [val];\n  }\n  protected renderedValueFromDataCore(val: any): any {\n    return this.convertValToArrayForMultSelect(val);\n  }\n  protected renderedValueToDataCore(val: any): any {\n    return this.convertValToArrayForMultSelect(val);\n  }\n  /**\n   * Specifies the height of containers for images or videos. Accepts positive numbers and CSS values.\n   *\n   * Default value: `auto`\n   *\n   * This property allows you to specify the exact image height. If you do not set it, the height will be calculated automatically based on the [`minImageHeight`](#minImageHeight) and [`maxImageHeight`](#maxImageHeight) values and available screen height.\n   *\n   * Use the [`imageFit`](#imageFit) property to specify how to fit the images or videos into their containers.\n   * @see imageWidth\n   */\n  public get imageHeight() {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  public set imageHeight(val: number) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n  public get imageScale() {\n    return this.survey ? (this.survey as any)[\"widthScale\"] / 100 : 1;\n  }\n  @property({}) private responsiveImageHeight: number;\n  public get renderedImageHeight(): number {\n    const height = this.isResponsive ? Math.floor(this.responsiveImageHeight) : this.imageHeight * this.imageScale;\n    return (height ? height : 150 * this.imageScale);\n  }\n  /**\n   * Specifies the width of containers for images or videos. Accepts positive numbers and CSS values.\n   *\n   * Default value: `auto`\n   *\n   * This property allows you to specify the exact image width. If you do not set it, the width will be calculated automatically based on the [`minImageWidth`](#minImageWidth) and [`maxImageWidth`](#maxImageWidth) values and available screen width.\n   *\n   * Use the [`imageFit`](#imageFit) property to specify how to fit the images or videos into their containers.\n   * @see imageHeight\n   */\n  public get imageWidth() {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  public set imageWidth(val: number) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n\n  @property({}) private responsiveImageWidth: number;\n  public get renderedImageWidth(): number {\n    const width = this.isResponsive ? Math.floor(this.responsiveImageWidth) : this.imageWidth * this.imageScale;\n    return (width ? width : 200 * this.imageScale);\n  }\n  /**\n   * Specifies how to resize images or videos to fit them into their containers.\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on accepted values.\n   * @see imageHeight\n   * @see imageWidth\n   */\n  public get imageFit(): string {\n    return this.getPropertyValue(\"imageFit\");\n  }\n  public set imageFit(val: string) {\n    this.setPropertyValue(\"imageFit\", val);\n  }\n  /**\n   * Specifies the type of content that choice items display.\n   *\n   * Possible values:\n   *\n   * - `\"image\"` (default) - Images in one of the following formats: JPEG, GIF, PNG, APNG, SVG, BMP, ICO.\n   * - `\"video\"` - Videos in one of the following formats: MP4, MOV, WMV, FLV, AVI, MKV.\n   */\n  public get contentMode(): string {\n    return this.getPropertyValue(\"contentMode\");\n  }\n  public set contentMode(val: string) {\n    this.setPropertyValue(\"contentMode\", val);\n    if (val === \"video\") {\n      this.showLabel = true;\n    }\n  }\n  protected valueToData(val: any): any {\n    return val;\n  }\n  public get inputType() {\n    return this.multiSelect ? \"checkbox\" : \"radio\";\n  }\n\n  protected isBuiltInChoice(item: ItemValue): boolean {\n    return false;\n  }\n  protected addToVisibleChoices(items: Array<ItemValue>, isAddAll: boolean): void {\n    this.addNewItemToVisibleChoices(items, isAddAll);\n  }\n  public getSelectBaseRootCss(): string {\n    const isResponsive = this.isResponsive;\n    return new CssClassBuilder()\n      .append(super.getSelectBaseRootCss())\n      .append(this.cssClasses.rootResponsive, isResponsive)\n      .append(this.cssClasses.rootStatic, !isResponsive)\n      .append(this.cssClasses.rootColumn, this.getCurrentColCount() == 1)\n      .toString();\n  }\n\n  //responsive mode\n  @property({}) private isResponsiveValue = false;\n  /**\n   * Specifies a maximum width for image or video containers. Accepts positive numbers and CSS values.\n   *\n   * Default value: 3000\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-create-calculator-form/ (linkStyle))\n   *\n   * The `minImageWidth`, `maxImageWidth`, `minImageHeight`, and `maxImageHeight` properties specify boundary values for container sizes. The resulting sizes are selected depending on the available screen space. If you want to specify the exact width and height, use the [`imageWidth`](#imageWidth) and [`imageHeight`](#imageHeight) properties.\n   */\n  @property({}) public maxImageWidth: number;\n  /**\n   * Specifies a minimum width for image or video containers. Accepts positive numbers and CSS values.\n   *\n   * Default value: 200\n   *\n   * The `minImageWidth`, `maxImageWidth`, `minImageHeight`, and `maxImageHeight` properties specify boundary values for container sizes. The resulting sizes are selected depending on the available screen space. If you want to specify the exact width and height, use the [`imageWidth`](#imageWidth) and [`imageHeight`](#imageHeight) properties.\n   */\n  @property({}) public minImageWidth: number;\n  /**\n   * Specifies a maximum height for image or video containers. Accepts positive numbers and CSS values.\n   *\n   * Default value: 3000\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-create-calculator-form/ (linkStyle))\n   *\n   * The `minImageWidth`, `maxImageWidth`, `minImageHeight`, and `maxImageHeight` properties specify boundary values for container sizes. The resulting sizes are selected depending on the available screen space. If you want to specify the exact width and height, use the [`imageWidth`](#imageWidth) and [`imageHeight`](#imageHeight) properties.\n   */\n  @property({}) public maxImageHeight: number;\n  /**\n   * Specifies a minimum height for image or video containers. Accepts positive numbers and CSS values.\n   *\n   * Default value: 133\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-create-calculator-form/ (linkStyle))\n   *\n   * The `minImageWidth`, `maxImageWidth`, `minImageHeight`, and `maxImageHeight` properties specify boundary values for container sizes. The resulting sizes are selected depending on the available screen space. If you want to specify the exact width and height, use the [`imageWidth`](#imageWidth) and [`imageHeight`](#imageHeight) properties.\n   */\n  @property({}) public minImageHeight: number;\n\n  private get isResponsive() {\n    return this.isResponsiveValue;\n  }\n  private get exactSizesAreEmpty(): boolean {\n    return !([\"imageHeight\", \"imageWidth\"].some(propName => this[propName] !== undefined && this[propName] !== null));\n  }\n  private calcIsResponsive() {\n    this.isResponsiveValue = this.exactSizesAreEmpty;\n  }\n\n  protected getObservedElementSelector(): string {\n    return classesToSelector(this.cssClasses.root);\n  }\n  protected supportResponsiveness(): boolean {\n    return true;\n  }\n  protected needResponsiveness() {\n    return this.supportResponsiveness();\n  }\n  public needResponsiveWidth() {\n    return this.colCount > 2;\n  }\n\n  private _width: number;\n\n  public onContentLoaded = (item: ImageItemValue, event: any) => {\n    item.contentNotLoaded = false;\n    const content: any = event.target;\n    if (this.contentMode == \"video\") {\n      item[\"aspectRatio\"] = content.videoWidth / content.videoHeight;\n    } else {\n      item[\"aspectRatio\"] = content.naturalWidth / content.naturalHeight;\n    }\n    this._width && this.processResponsiveness(0, this._width);\n  };\n\n  @property({}) private responsiveColCount: number;\n\n  protected getCurrentColCount(): number {\n    if (this.responsiveColCount === undefined || this.colCount === 0) {\n      return this.colCount;\n    }\n    return this.responsiveColCount;\n  }\n  @property() gridColCount: number = undefined;\n  getContainerStyle() {\n    if (!this.isResponsive) return {};\n    return {\n      gridAutoFlow: !this.gridColCount ? \"column\" : null,\n      gridTemplateColumns: this.gridColCount ? `repeat(${this.gridColCount}, 1fr)` : null\n    };\n  }\n\n  protected processResponsiveness(_: number, availableWidth: number): boolean {\n    this._width = availableWidth = Math.floor(availableWidth);\n    const calcAvailableColumnsCount = (availableWidth: number, minWidth: number, gap: number): number => {\n      let itemsInRow = Math.floor(availableWidth / (minWidth + gap));\n      if ((itemsInRow + 1) * (minWidth + gap) - gap <= availableWidth) itemsInRow++;\n      return itemsInRow;\n    };\n    if (this.isResponsive) {\n      const itemsCount = this.choices.length + (this.isDesignMode ? 1 : 0);\n      const gap = (this.gapBetweenItems || 0) * this.imageScale;\n      const minWidth = this.minImageWidth * this.imageScale;\n      const maxWidth = this.maxImageWidth * this.imageScale;\n      const maxHeight = this.maxImageHeight * this.imageScale;\n      const minHeight = this.minImageHeight * this.imageScale;\n      let colCount = this.colCount;\n      let width: number;\n      const availableColumnsCount: number = calcAvailableColumnsCount(availableWidth, minWidth, gap);\n      if (colCount === 0) {\n        if ((gap + minWidth) * itemsCount - gap > availableWidth) {\n          width = Math.floor((availableWidth - gap * (availableColumnsCount - 1)) / availableColumnsCount);\n        } else {\n          width = Math.floor(((availableWidth - gap * (itemsCount - 1)) / itemsCount));\n        }\n        this.gridColCount = Math.max(Math.min(itemsCount, availableColumnsCount), 1);\n\n      } else {\n        if (availableColumnsCount < colCount) {\n          this.responsiveColCount = Math.max(availableColumnsCount, 1);\n          colCount = this.responsiveColCount;\n        } else {\n          this.responsiveColCount = colCount;\n        }\n        this.gridColCount = this.responsiveColCount;\n        width = Math.floor((availableWidth - gap * (colCount - 1)) / colCount);\n      }\n      width = Math.max(minWidth, Math.min(width, maxWidth));\n      let height: number = Number.MIN_VALUE;\n      this.choices.forEach((item: ImageItemValue) => {\n        const tempHeight = width / item[\"aspectRatio\"];\n        height = tempHeight > height ? tempHeight : height;\n      });\n      if (height > maxHeight) {\n        height = maxHeight;\n      } else if (height < minHeight) {\n        height = minHeight;\n      }\n      const oldResponsiveImageWidth = this.responsiveImageWidth;\n      const oldResponsiveImageHeight = this.responsiveImageHeight;\n      this.responsiveImageWidth = width;\n      this.responsiveImageHeight = height;\n      return oldResponsiveImageWidth !== this.responsiveImageWidth || oldResponsiveImageHeight !== this.responsiveImageHeight;\n    }\n    return false;\n  }\n\n  public triggerResponsiveness(hard = true): void {\n    if (hard && this.reCalcGapBetweenItemsCallback) {\n      this.reCalcGapBetweenItemsCallback();\n    }\n    super.triggerResponsiveness(hard);\n  }\n\n  private gapBetweenItems: number;\n  private reCalcGapBetweenItemsCallback: () => void;\n  public afterRender(el: HTMLElement): void {\n    super.afterRender(el);\n    const selector = this.getObservedElementSelector();\n    const observedElement = el && selector ? el.querySelector(selector) : undefined;\n    if (!!observedElement) {\n      this.reCalcGapBetweenItemsCallback = () => {\n        this.gapBetweenItems = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(observedElement).gap)) || 16;\n      };\n      this.reCalcGapBetweenItemsCallback();\n    }\n  }\n  //a11y\n  public get ariaRole(): string {\n    return this.multiSelect ? \"group\" : \"radiogroup\";\n  }\n  public get ariaRequired(): \"true\" | \"false\" {\n    return null;\n  }\n  public get inputRequiredAttribute(): boolean | null {\n    return this.multiSelect ? this.hasRequiredError() : null;\n  }\n  // EO a11y\n}\nSerializer.addClass(\n  \"imageitemvalue\",\n  [{ name: \"imageLink:file\", serializationProperty: \"locImageLink\" }],\n  (value: any) => new ImageItemValue(value),\n  \"itemvalue\"\n);\nSerializer.addClass(\n  \"responsiveImageSize\",\n  [],\n  undefined,\n  \"number\"\n);\nSerializer.addClass(\n  \"imagepicker\",\n  [\n    { name: \"showOtherItem\", visible: false },\n    { name: \"otherText\", visible: false },\n    { name: \"showNoneItem\", visible: false },\n    { name: \"showRefuseItem\", visible: false },\n    { name: \"showDontKnowItem\", visible: false },\n    { name: \"noneText\", visible: false },\n    { name: \"optionsCaption\", visible: false },\n    { name: \"otherErrorText\", visible: false },\n    { name: \"storeOthersAsComment\", visible: false },\n    {\n      name: \"contentMode\",\n      default: \"image\",\n      choices: [\"image\", \"video\"],\n    },\n    {\n      name: \"imageFit\",\n      default: \"contain\",\n      choices: [\"none\", \"contain\", \"cover\", \"fill\"],\n    },\n    { name: \"imageHeight:number\", minValue: 0 },\n    { name: \"imageWidth:number\", minValue: 0 },\n    { name: \"minImageWidth:responsiveImageSize\", default: 200, minValue: 0 },\n    { name: \"minImageHeight:responsiveImageSize\", default: 133, minValue: 0 },\n    { name: \"maxImageWidth:responsiveImageSize\", default: 3000, minValue: 0 },\n    { name: \"maxImageHeight:responsiveImageSize\", default: 3000, minValue: 0 },\n    \"showLabel:boolean\",\n    { name: \"colCount:number\", default: 0, choices: [0, 1, 2, 3, 4, 5] },\n    \"multiSelect:boolean\"\n  ],\n  function () {\n    return new QuestionImagePickerModel(\"\");\n  },\n  \"checkboxbase\"\n);\n\nSerializer.getProperty(\"imagepicker\", \"choices\").type = \"imageitemvalue[]\";\n\nQuestionFactory.Instance.registerQuestion(\"imagepicker\", (name) => {\n  var q = new QuestionImagePickerModel(name);\n  //q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n", "import { QuestionNonValue } from \"./questionnonvalue\";\nimport { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { getRenderedStyleSize, getRenderedSize } from \"./utils/utils\";\nimport { Helpers } from \"./helpers\";\n\nconst videoSuffics = [\".mp4\", \".mov\", \".wmv\", \".flv\", \".avi\", \".mkv\"];\nconst youtubeUrl = \"https://www.youtube.com/\";\nconst youtubeEmbed = \"embed\";\n\n/**\n  * A class that describes the Image question type. Unlike other question types, Image cannot have a title or value.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-image/ (linkStyle))\n */\nexport class QuestionImageModel extends QuestionNonValue {\n  @property({ defaultValue: false }) contentNotLoaded: boolean;\n\n  constructor(name: string) {\n    super(name);\n    const locImageLink = this.createLocalizableString(\"imageLink\", this, false);\n    locImageLink.onGetTextCallback = (text: string): string => {\n      return getCorrectImageLink(text, this.contentMode == \"youtube\");\n    };\n    this.createLocalizableString(\"altText\", this, false);\n    this.registerPropertyChangedHandlers([\"contentMode\", \"imageLink\"], () => this.calculateRenderedMode());\n  }\n  public getType(): string {\n    return \"image\";\n  }\n  public get isCompositeQuestion(): boolean {\n    return false;\n  }\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    this.calculateRenderedMode();\n  }\n  /**\n   * Specifies an image or video URL.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   * @see contentMode\n   */\n  public get imageLink(): string {\n    return this.getLocalizableStringText(\"imageLink\");\n  }\n  public set imageLink(val: string) {\n    this.setLocalizableStringText(\"imageLink\", val);\n  }\n  get locImageLink(): LocalizableString {\n    return this.getLocalizableString(\"imageLink\");\n  }\n  /**\n   * Specifies a value for the `alt` attribute of the underlying `<img>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   */\n  public get altText(): string {\n    return this.getLocalizableStringText(\"altText\");\n  }\n  public set altText(val: string) {\n    this.setLocalizableStringText(\"altText\", val);\n  }\n  get locAltText(): LocalizableString {\n    return this.getLocalizableString(\"altText\");\n  }\n  /**\n   * Specifies the height of a container for the image or video. Accepts positive numbers and CSS values.\n   *\n   * Default value: 150\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   *\n   * > Use the [`imageFit`](#imageFit) property to specify how to fit the image or video into the container.\n   * @see imageWidth\n   */\n  public get imageHeight(): string {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  public set imageHeight(val: string) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n\n  public get renderedStyleHeight(): string {\n    return this.imageHeight ? getRenderedStyleSize(this.imageHeight) : undefined;\n  }\n\n  public get renderedHeight(): number {\n    return this.imageHeight ? getRenderedSize(this.imageHeight) : undefined;\n  }\n  /**\n   * Specifies the width of a container for the image or video. Accepts positive numbers and CSS values.\n   *\n   * Default value: 200\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   *\n   * > Use the [`imageFit`](#imageFit) property to specify how to fit the image or video into the container.\n   * @see imageHeight\n   */\n  public get imageWidth(): string {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  public set imageWidth(val: string) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n  public get renderedStyleWidth(): string {\n    return this.imageWidth ? getRenderedStyleSize(this.imageWidth) : undefined;\n  }\n  public get renderedWidth(): number {\n    return this.imageWidth ? getRenderedSize(this.imageWidth) : undefined;\n  }\n  /**\n   * Specifies how to resize the image or video to fit it into its container.\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on accepted values.\n   * @see imageHeight\n   * @see imageWidth\n   */\n  public get imageFit(): string {\n    return this.getPropertyValue(\"imageFit\");\n  }\n  public set imageFit(val: string) {\n    this.setPropertyValue(\"imageFit\", val);\n  }\n  /**\n   * Specifies the type of content that the Image question displays.\n   *\n   * Possible values:\n   *\n   * - `\"image\"` - An image in one of the following formats: JPEG, GIF, PNG, APNG, SVG, BMP, ICO.\n   * - `\"video\"` - A video in one of the following formats: MP4, MOV, WMV, FLV, AVI, MKV.\n   * - `\"youtube\"` - A link to a YouTube video.\n   * - `\"auto\"` (default) - Selects one of the above based on the [`imageLink`](https://surveyjs.io/form-library/documentation/questionimagemodel#imageLink) property.\n   */\n  public get contentMode(): string {\n    return this.getPropertyValue(\"contentMode\");\n  }\n  public set contentMode(val: string) {\n    this.setPropertyValue(\"contentMode\", val);\n    if (val === \"video\") {\n      this.showLabel = true;\n    }\n  }\n  /**\n   * Returns the type of content that the Image question displays: `\"image\"`, `\"video\"`, or `\"youtube\"`.\n   * @see contentMode\n   */\n  public get renderedMode(): string {\n    return this.getPropertyValue(\"renderedMode\", \"image\");\n  }\n\n  public get ariaInvalid() {\n    return null;\n  }\n  public get ariaLabel () {\n    return null;\n  }\n  public get renderedAltText() {\n    return this.altText || this.title;\n  }\n\n  public getImageCss(): string {\n    const imageHeightProperty = this.getPropertyByName(\"imageHeight\");\n    const imageWidthProperty = this.getPropertyByName(\"imageWidth\");\n    const isDefaultSize = imageHeightProperty.isDefaultValue(this.imageHeight) && imageWidthProperty.isDefaultValue(this.imageWidth);\n\n    return new CssClassBuilder()\n      .append(this.cssClasses.image)\n      .append(this.cssClasses.adaptive, isDefaultSize)\n      .toString();\n  }\n\n  public onLoadHandler(): void {\n    this.contentNotLoaded = false;\n  }\n  public onErrorHandler(): void {\n    this.contentNotLoaded = true;\n  }\n\n  private setRenderedMode(val: string) {\n    this.setPropertyValue(\"renderedMode\", val);\n  }\n  protected calculateRenderedMode() {\n    if (this.contentMode !== \"auto\") {\n      this.setRenderedMode(this.contentMode);\n    } else {\n      if (this.isYoutubeVideo()) {\n        this.setRenderedMode(\"youtube\");\n      } else if (this.isVideo()) {\n        this.setRenderedMode(\"video\");\n      } else {\n        this.setRenderedMode(\"image\");\n      }\n    }\n  }\n  private isYoutubeVideo(): boolean {\n    return Helpers.isUrlYoutubeVideo(this.imageLink);\n  }\n  private isVideo(): boolean {\n    let link = this.imageLink;\n    if (!link) return false;\n    link = link.toLowerCase();\n    for (let i = 0; i < videoSuffics.length; i++) {\n      if (link.endsWith(videoSuffics[i])) return true;\n    }\n    return false;\n  }\n}\n\nfunction getCorrectImageLink(val: string, isYouTube: boolean): string {\n  if (!val || !Helpers.isUrlYoutubeVideo(val)) return isYouTube ? \"\" : val;\n  let res = val.toLocaleLowerCase();\n  if (res.indexOf(youtubeEmbed) > -1) return val;\n  let id = \"\";\n  for (var i = val.length - 1; i >= 0; i --) {\n    if (val[i] === \"=\" || val[i] === \"/\") break;\n    id = val[i] + id;\n  }\n  return youtubeUrl + youtubeEmbed + \"/\" + id;\n}\n\nSerializer.addClass(\n  \"image\",\n  [\n    { name: \"imageLink:file\", serializationProperty: \"locImageLink\" },\n    { name: \"altText\", serializationProperty: \"locAltText\", alternativeName: \"text\", category: \"general\" },\n    {\n      name: \"contentMode\",\n      default: \"auto\",\n      choices: [\"auto\", \"image\", \"video\", \"youtube\"],\n    },\n    {\n      name: \"imageFit\",\n      default: \"contain\",\n      choices: [\"none\", \"contain\", \"cover\", \"fill\"],\n    },\n    { name: \"imageHeight\", default: \"150\" },\n    { name: \"imageWidth\", default: \"200\" },\n  ],\n  function () {\n    return new QuestionImageModel(\"\");\n  },\n  \"nonvalue\"\n);\n\nQuestionFactory.Instance.registerQuestion(\"image\", (name) => {\n  return new QuestionImageModel(name);\n});\n", "/*!\n * Signature Pad v4.2.0 | https://github.com/szimek/signature_pad\n * (c) 2024 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, pressure, time) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(`Point is invalid: (${x}, ${y})`);\n        }\n        this.x = +x;\n        this.y = +y;\n        this.pressure = pressure || 0;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return (this.x === other.x &&\n            this.y === other.y &&\n            this.pressure === other.pressure &&\n            this.time === other.time);\n    }\n    velocityFrom(start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    }\n}\n\nclass Bezier {\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        const dxm = m1.x - m2.x;\n        const dym = m1.y - m2.y;\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nclass SignatureEventTarget {\n    constructor() {\n        try {\n            this._et = new EventTarget();\n        }\n        catch (error) {\n            this._et = document;\n        }\n    }\n    addEventListener(type, listener, options) {\n        this._et.addEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        return this._et.dispatchEvent(event);\n    }\n    removeEventListener(type, callback, options) {\n        this._et.removeEventListener(type, callback, options);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper(...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad extends SignatureEventTarget {\n    constructor(canvas, options = {}) {\n        super();\n        this.canvas = canvas;\n        this._drawingStroke = false;\n        this._isEmpty = true;\n        this._lastPoints = [];\n        this._data = [];\n        this._lastVelocity = 0;\n        this._lastWidth = 0;\n        this._handleMouseDown = (event) => {\n            if (event.buttons === 1) {\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handleMouseUp = (event) => {\n            if (event.buttons === 1) {\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this._handlePointerStart = (event) => {\n            event.preventDefault();\n            this._strokeBegin(event);\n        };\n        this._handlePointerMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handlePointerEnd = (event) => {\n            if (this._drawingStroke) {\n                event.preventDefault();\n                this._strokeEnd(event);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        this.dotSize = options.dotSize || 0;\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.compositeOperation = options.compositeOperation || 'source-over';\n        this.canvasContextOptions = ('canvasContextOptions' in options ? options.canvasContextOptions : {});\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n            : SignaturePad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const { _ctx: ctx, canvas } = this;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset(this._getPointGroupOptions());\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}) {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            const ratio = options.ratio || window.devicePixelRatio || 1;\n            const width = options.width || this.canvas.width / ratio;\n            const height = options.height || this.canvas.height / ratio;\n            const xOffset = options.xOffset || 0;\n            const yOffset = options.yOffset || 0;\n            this._reset(this._getPointGroupOptions());\n            image.onload = () => {\n                this._ctx.drawImage(image, xOffset, yOffset, width, height);\n                resolve();\n            };\n            image.onerror = (error) => {\n                reject(error);\n            };\n            image.crossOrigin = 'anonymous';\n            image.src = dataUrl;\n            this._isEmpty = false;\n        });\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                if (typeof encoderOptions !== 'object') {\n                    encoderOptions = undefined;\n                }\n                return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n            default:\n                if (typeof encoderOptions !== 'number') {\n                    encoderOptions = undefined;\n                }\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        this.canvas.style.userSelect = 'none';\n        const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n        if (window.PointerEvent && !isIOS) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.style.userSelect = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups, { clear = true } = {}) {\n        if (clear) {\n            this.clear();\n        }\n        this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n        this._data = this._data.concat(pointGroups);\n    }\n    toData() {\n        return this._data;\n    }\n    _getPointGroupOptions(group) {\n        return {\n            penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n            dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n            minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n            maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n            velocityFilterWeight: group && 'velocityFilterWeight' in group\n                ? group.velocityFilterWeight\n                : this.velocityFilterWeight,\n            compositeOperation: group && 'compositeOperation' in group\n                ? group.compositeOperation\n                : this.compositeOperation,\n        };\n    }\n    _strokeBegin(event) {\n        const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', { detail: event, cancelable: true }));\n        if (cancelled) {\n            return;\n        }\n        this._drawingStroke = true;\n        const pointGroupOptions = this._getPointGroupOptions();\n        const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), { points: [] });\n        this._data.push(newPointGroup);\n        this._reset(pointGroupOptions);\n        this._strokeUpdate(event);\n    }\n    _strokeUpdate(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('beforeUpdateStroke', { detail: event }));\n        const x = event.clientX;\n        const y = event.clientY;\n        const pressure = event.pressure !== undefined\n            ? event.pressure\n            : event.force !== undefined\n                ? event.force\n                : 0;\n        const point = this._createPoint(x, y, pressure);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point, pointGroupOptions);\n            if (!lastPoint) {\n                this._drawDot(point, pointGroupOptions);\n            }\n            else if (curve) {\n                this._drawCurve(curve, pointGroupOptions);\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                pressure: point.pressure,\n            });\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n    }\n    _strokeEnd(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        this._strokeUpdate(event);\n        this._drawingStroke = false;\n        this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n    }\n    _handlePointerEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.addEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n    }\n    _handleMouseEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset(options) {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n        this._ctx.fillStyle = options.penColor;\n        this._ctx.globalCompositeOperation = options.compositeOperation;\n    }\n    _createPoint(x, y, pressure) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n    }\n    _addPoint(point, options) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint, options) {\n        const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - options.velocityFilterWeight) * this._lastVelocity;\n        const newWidth = this._strokeWidth(velocity, options);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity, options) {\n        return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve(curve, options) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.ceil(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = options.penColor;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot(point, options) {\n        const ctx = this._ctx;\n        const width = options.dotSize > 0\n            ? options.dotSize\n            : (options.minWidth + options.maxWidth) / 2;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = options.penColor;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { points } = group;\n            const pointGroupOptions = this._getPointGroupOptions(group);\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n                    if (j === 0) {\n                        this._reset(pointGroupOptions);\n                    }\n                    const curve = this._addPoint(point, pointGroupOptions);\n                    if (curve) {\n                        drawCurve(curve, pointGroupOptions);\n                    }\n                }\n            }\n            else {\n                this._reset(pointGroupOptions);\n                drawDot(points[0], pointGroupOptions);\n            }\n        }\n    }\n    toSVG({ includeBackgroundColor = false } = {}) {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n        svg.setAttribute('width', maxX.toString());\n        svg.setAttribute('height', maxY.toString());\n        if (includeBackgroundColor && this.backgroundColor) {\n            const rect = document.createElement('rect');\n            rect.setAttribute('width', '100%');\n            rect.setAttribute('height', '100%');\n            rect.setAttribute('fill', this.backgroundColor);\n            svg.appendChild(rect);\n        }\n        this._fromData(pointGroups, (curve, { penColor }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` +\n                    `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n                    `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n                    `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', penColor);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, (point, { penColor, dotSize, minWidth, maxWidth }) => {\n            const circle = document.createElement('circle');\n            const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n            circle.setAttribute('r', size.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', penColor);\n            svg.appendChild(circle);\n        });\n        return svg.outerHTML;\n    }\n}\n\nexport { SignaturePad as default };\n//# sourceMappingURL=signature_pad.js.map\n", "import { property, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport SignaturePad from \"signature_pad\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { SurveyModel } from \"./survey\";\nimport { ConsoleWarnings } from \"./console-warnings\";\nimport { ITheme } from \"./themes\";\nimport { dataUrl2File, FileLoader, QuestionFileModelBase } from \"./question_file\";\nimport { isBase64URL } from \"./utils/utils\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\n\nvar defaultWidth = 300;\nvar defaultHeight = 200;\n\n/**\n * A class that describes the Signature question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/signature-pad-widget-javascript/ (linkStyle))\n */\nexport class QuestionSignaturePadModel extends QuestionFileModelBase {\n  @property({ defaultValue: false }) isDrawingValue: boolean;\n  @property({ defaultValue: false }) isReadyForUpload: boolean;\n\n  private getPenColorFromTheme(): string {\n    const _survey = this.survey as SurveyModel;\n    return !!_survey && !!_survey.themeVariables && _survey.themeVariables[\"--sjs-primary-backcolor\"];\n  }\n  private updateColors(signaturePad: SignaturePad) {\n    const penColorFromTheme = this.getPenColorFromTheme();\n    const penColorProperty = this.getPropertyByName(\"penColor\");\n    signaturePad.penColor = this.penColor || penColorFromTheme || penColorProperty.defaultValue || \"#1ab394\";\n\n    const backgroundColorProperty = this.getPropertyByName(\"backgroundColor\");\n    const backgroundColorFromTheme = penColorFromTheme ? \"transparent\" : undefined;\n    const background = !!this.backgroundImage ? \"transparent\" : this.backgroundColor;\n    signaturePad.backgroundColor = background || backgroundColorFromTheme || backgroundColorProperty.defaultValue || \"#ffffff\";\n  }\n\n  protected getCssRoot(cssClasses: any): string {\n    return new CssClassBuilder()\n      .append(super.getCssRoot(cssClasses))\n      .append(cssClasses.small, this.signatureWidth.toString() === \"300\")\n      .toString();\n  }\n\n  protected getFormat() {\n    return this.dataFormat === \"jpeg\" ? \"image/jpeg\" :\n      (this.dataFormat === \"svg\" ? \"image/svg+xml\" : \"\");\n  }\n  protected updateValue() {\n    if (this.signaturePad) {\n\n      var data = this.signaturePad.toDataURL(this.getFormat());\n      this.valueIsUpdatingInternally = true;\n      this.value = data;\n      this.valueIsUpdatingInternally = false;\n    }\n  }\n\n  constructor(name: string) {\n    super(name);\n  }\n  public getType(): string {\n    return \"signaturepad\";\n  }\n  public afterRenderQuestionElement(el: HTMLElement) {\n    if (DomWindowHelper.isAvailable()) {\n      if (!!el) {\n        if (!this.isDesignMode) {\n          this.initSignaturePad(el);\n        }\n        this.element = el;\n      }\n    }\n    super.afterRenderQuestionElement(el);\n  }\n  public beforeDestroyQuestionElement(el: HTMLElement) {\n    if (!!el) {\n      this.destroySignaturePad(el);\n    }\n  }\n  public themeChanged(theme: ITheme): void {\n    if (!!this.signaturePad) {\n      this.updateColors(this.signaturePad);\n    }\n  }\n  private canvas: any;\n  private element: any;\n  private scale: number;\n  private valueIsUpdatingInternally: boolean = false;\n  @property({ defaultValue: false }) valueWasChangedFromLastUpload: boolean;\n\n  private resizeCanvas() {\n    this.canvas.width = this.containerWidth;\n    this.canvas.height = this.containerHeight;\n  }\n\n  private scaleCanvas(refresh: boolean = true, resize: boolean = false) {\n    const canvas = this.canvas;\n    const scale = canvas.offsetWidth / this.containerWidth;\n    if (this.scale != scale || resize) {\n      this.scale = scale;\n      canvas.style.width = this.renderedCanvasWidth;\n      this.resizeCanvas();\n      this.signaturePad.minWidth = this.penMinWidth * scale;\n      this.signaturePad.maxWidth = this.penMaxWidth * scale;\n      canvas.getContext(\"2d\").scale(1 / scale, 1 / scale);\n\n      if (refresh) {\n        this.loadPreview(this.value);\n      }\n    }\n  }\n\n  private fromUrl(url: string): void {\n    this.isFileLoading = true;\n    if (isBase64URL(url)) {\n      this.fromDataUrl(url);\n      this.isFileLoading = false;\n    } else {\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = url;\n      img.onload = () => {\n        if (!!this.canvas) {\n          const canvas = DomDocumentHelper.createElement(\"canvas\") as HTMLCanvasElement;\n          canvas.width = this.containerWidth;\n          canvas.height = this.containerHeight;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n          var dataURL = canvas.toDataURL(this.getFormat());\n          this.fromDataUrl(dataURL);\n        }\n        this.isFileLoading = false;\n      };\n      img.onerror = () => {\n        this.isFileLoading = false;\n      };\n    }\n  }\n  private fromDataUrl(data: string) {\n    this._loadedData = data;\n    if (this.signaturePad) {\n      let ratio = 1;\n      let scale = this.scale;\n\n      if (this.dataFormat === \"svg\") {\n        const devicePixelRatio = DomWindowHelper.getDevicePixelRatio();\n        ratio = devicePixelRatio || 1;\n        scale = 1;\n      }\n\n      const options = {\n        width: this.canvas.width * scale / ratio,\n        height: this.canvas.height * scale / ratio\n      };\n      this.signaturePad.fromDataURL(data, options);\n    }\n  }\n  private _loadedData: string = undefined;\n  public get loadedData(): string {\n    return this._loadedData;\n  }\n  protected loadPreview(newValue: any): void {\n    if (!newValue) {\n      if (this.signaturePad && this.canvas) {\n        this.canvas.getContext(\"2d\").clearRect(0, 0, this.canvas.width * this.scale, this.canvas.height * this.scale);\n        this.signaturePad.clear();\n      }\n      this.valueWasChangedFromLastUpload = false;\n      return;\n    }\n    if (this.storeDataAsText) {\n      this.fromDataUrl(newValue);\n    } else {\n      if (this.loadedData) {\n        this.fromDataUrl(this.loadedData);\n      } else {\n        var newValues = !!newValue ? [newValue] : [];\n        if (!!this._previewLoader) {\n          this._previewLoader.dispose();\n        }\n        this.isFileLoading = true;\n        this._previewLoader = new FileLoader(this, (status, loaded) => {\n          if (status === \"success\" && loaded && loaded.length > 0 && loaded[0].content) {\n            this.fromDataUrl(loaded[0].content);\n            this.isFileLoading = false;\n          } else if (status === \"skipped\") {\n            this.fromUrl(newValue);\n          }\n          this._previewLoader.dispose();\n          this._previewLoader = undefined;\n        });\n        this._previewLoader.load(newValues);\n      }\n    }\n  }\n\n  protected onChangeQuestionValue(newValue: any): void {\n    super.onChangeQuestionValue(newValue);\n    if (!this.isLoadingFromJson) {\n      this._loadedData = undefined;\n      this.loadPreview(newValue);\n    }\n  }\n\n  public onSurveyLoad(): void {\n    super.onSurveyLoad();\n    this.loadPreview(this.value);\n  }\n\n  private updateValueHandler = () => {\n    this._loadedData = undefined;\n    this.scaleCanvas(true, true);\n  };\n\n  initSignaturePad(el: HTMLElement) {\n    var canvas: any = el.getElementsByTagName(\"canvas\")[0];\n    this.canvas = canvas;\n    this.resizeCanvas();\n    var signaturePad = new SignaturePad(canvas, { backgroundColor: \"#ffffff\" });\n    this.signaturePad = signaturePad;\n    if (this.isInputReadOnly) {\n      signaturePad.off();\n    }\n\n    this.readOnlyChangedCallback = () => {\n      if (this.isInputReadOnly) {\n        signaturePad.off();\n      } else {\n        signaturePad.on();\n      }\n    };\n\n    this.updateColors(signaturePad);\n\n    (signaturePad as any).addEventListener(\"beginStroke\", () => {\n      this.scaleCanvas();\n      this.isDrawingValue = true;\n      canvas.focus();\n    }, { once: false });\n\n    (signaturePad as any).addEventListener(\"endStroke\", () => {\n      this.isDrawingValue = false;\n      if (this.storeDataAsText) {\n        this.updateValue();\n      } else {\n        this.valueWasChangedFromLastUpload = true;\n      }\n    }, { once: false });\n\n    this.updateValueHandler();\n    this.readOnlyChangedCallback();\n    var propertyChangedHandler = (sender: any, options: any) => {\n      if (options.name === \"signatureWidth\" || options.name === \"signatureHeight\") {\n        if (!this.valueIsUpdatingInternally)this.updateValueHandler();\n      }\n    };\n    this.onPropertyChanged.add(propertyChangedHandler);\n    this.signaturePad.propertyChangedHandler = propertyChangedHandler;\n  }\n  destroySignaturePad(el: HTMLElement) {\n    if (this.signaturePad) {\n      this.onPropertyChanged.remove(this.signaturePad.propertyChangedHandler);\n      this.signaturePad.off();\n    }\n    this.readOnlyChangedCallback = null;\n    this.signaturePad = null;\n  }\n\n  /**\n   * Specifies the format in which to store the signature image.\n   *\n   * Possible values:\n   *\n   * - `\"png\"` (default)\n   * - `\"jpeg\"`\n   * - `\"svg\"`\n   */\n  public get dataFormat(): string {\n    return this.getPropertyValue(\"dataFormat\");\n  }\n  public set dataFormat(val: string) {\n    this.setPropertyValue(\"dataFormat\", correctFormatData(val));\n  }\n  /**\n   * Specifies the width of the signature area. Accepts positive integer numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/signature-pad-widget-javascript/ (linkStyle))\n   */\n  public get signatureWidth(): number {\n    return this.getPropertyValue(\"signatureWidth\");\n  }\n  public set signatureWidth(val: number) {\n    this.setPropertyValue(\"signatureWidth\", val);\n  }\n  /**\n   * Specifies the height of the signature area. Accepts positive integer numbers.\n   */\n  public get signatureHeight(): number {\n    return this.getPropertyValue(\"signatureHeight\");\n  }\n  public set signatureHeight(val: number) {\n    this.setPropertyValue(\"signatureHeight\", val);\n  }\n  /**\n   * Specifies whether the signature area should be scaled to fit into the question width.\n   *\n   * Default value: `false`\n   *\n   * This property auto-scales the signature area to fill all available width within the question box while maintaining the default 3:2 aspect ratio. If you set [custom width](#signatureWidth) and [height](#signatureHeight) values, the setting will keep the aspect ratio of these dimensions.\n   *\n   * > The signature area is scaled only for display. The image saved in survey results will have dimensions specified by the [`signatureHeight`](#signatureHeight) and [`signatureWidth`](#signatureWidth) properties.\n   */\n  @property() signatureAutoScaleEnabled: boolean;\n  /**\n   * Speicifies the minimum width of pen strokes, measured in pixels.\n   *\n   * Default value: 0.5\n   */\n  @property() penMinWidth: number;\n  /**\n   * Speicifies the maximum width of pen strokes, measured in pixels.\n   *\n   * Default value: 2.5\n   */\n  @property() penMaxWidth: number;\n\n  private get containerHeight(): any {\n    return this.signatureHeight || defaultHeight;\n  }\n\n  private get containerWidth(): any {\n    return this.signatureWidth || defaultWidth;\n  }\n\n  public get renderedCanvasWidth(): string {\n    return this.signatureAutoScaleEnabled ? \"100%\" : this.containerWidth + \"px\";\n  }\n\n  //todo: need to remove this property\n  public get height(): number {\n    return this.getPropertyValue(\"height\");\n  }\n  public set height(val: number) {\n    this.setPropertyValue(\"height\", val);\n  }\n\n  /**\n   * Specifies whether to display a button that clears the signature area.\n   *\n   * Default value: `true`\n   */\n  public get allowClear(): boolean {\n    return this.getPropertyValue(\"allowClear\");\n  }\n  public set allowClear(val: boolean) {\n    this.setPropertyValue(\"allowClear\", val);\n  }\n  public get canShowClearButton(): boolean {\n    const hasSignature = !this.nothingIsDrawn();\n    const isUploading = this.isUploading;\n    return !this.isInputReadOnly && this.allowClear && hasSignature && !isUploading;\n  }\n  /**\n   * Specifies a color for the pen.\n   *\n   * This property accepts color values in the following formats:\n   *\n   * - Hexadecimal colors (`\"#FF0000\"`)\n   * - RGB colors (`\"rgb(255,0,0)\"`)\n   * - Color names (`\"red\"`)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   * @see backgroundColor\n   */\n  public get penColor(): string {\n    return this.getPropertyValue(\"penColor\");\n  }\n  public set penColor(val: string) {\n    this.setPropertyValue(\"penColor\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  /**\n   * Specifies a color for the signature area background. Ignored if [`backgroundImage`](#backgroundImage) is set.\n   *\n   * This property accepts color values in the following formats:\n   *\n   * - Hexadecimal colors (`\"#FF0000\"`)\n   * - RGB colors (`\"rgb(255,0,0)\"`)\n   * - Color names (`\"red\"`)\n   * @see penColor\n   */\n  public get backgroundColor(): string {\n    return this.getPropertyValue(\"backgroundColor\");\n  }\n  public set backgroundColor(val: string) {\n    this.setPropertyValue(\"backgroundColor\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  /**\n   * An image to display in the background of the signature area. Accepts a base64 or URL string value.\n   * @see backgroundColor\n   */\n  public get backgroundImage(): string {\n    return this.getPropertyValue(\"backgroundImage\");\n  }\n  public set backgroundImage(val: string) {\n    this.setPropertyValue(\"backgroundImage\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  get clearButtonCaption(): string {\n    return this.getLocalizationString(\"clearCaption\");\n  }\n  /**\n   * A Boolean value that specifies whether to show the placeholder text in the signature area.\n   *\n   * Default value: `true`\n   *\n   * Use the [`placeholder`](#placeholder) and [`placeholderReadOnly`](#placeholderReadOnly) properties to specify placeholder texts for the signature area in edit mode and in read-only or preview mode.\n   */\n  @property({}) showPlaceholder: boolean;\n\n  public get locRenderedPlaceholder() {\n    return this.isReadOnly ? this.locPlaceholderReadOnly : this.locPlaceholder;\n  }\n\n  public nothingIsDrawn(): boolean {\n    const isDrawing = this.isDrawingValue;\n    const isEmpty = this.isEmpty();\n    const isUploading = this.isUploading;\n    const valueWasChangedFromLastUpload = this.valueWasChangedFromLastUpload;\n    return !isDrawing && isEmpty && !isUploading && !valueWasChangedFromLastUpload;\n  }\n\n  public needShowPlaceholder(): boolean {\n    return this.showPlaceholder && this.nothingIsDrawn();\n  }\n  /**\n   * A placeholder text for the signature area. Applies when the [`showPlaceholder`](#showPlaceholder) property is `true`.\n   */\n  @property({ localizable: { defaultStr: \"signaturePlaceHolder\" } }) placeholder: string;\n\n  /**\n   * A placeholder text for the signature area in read-only or preview mode. Applies when the [`showPlaceholder`](#showPlaceholder) property is `true`.\n   */\n  @property({ localizable: { defaultStr: \"signaturePlaceHolderReadOnly\" } }) placeholderReadOnly: string;\n  protected onBlurCore(event: any): void {\n    super.onBlurCore(event);\n    if (!this.storeDataAsText) {\n      if (!this.element.contains(event.relatedTarget)) {\n        if (!this.valueWasChangedFromLastUpload) return;\n        this.uploadFiles([dataUrl2File(this.signaturePad.toDataURL(this.getFormat()), this.name + \".\" + correctFormatData(this.dataFormat), this.getFormat())]);\n        this.valueWasChangedFromLastUpload = false;\n      }\n    }\n  }\n  protected uploadResultItemToValue(r: any) {\n    return r.content;\n  }\n  protected setValueFromResult(arg: any) {\n    this.valueIsUpdatingInternally = true;\n    this.value = arg?.length ? arg.map((r: any) => r.content)[0] : undefined;\n    this.valueIsUpdatingInternally = false;\n  }\n  public clearValue(keepComment?: boolean): void {\n    this.valueWasChangedFromLastUpload = false;\n    super.clearValue(keepComment);\n    this._loadedData = undefined;\n    this.loadPreview(this.value);\n  }\n  endLoadingFromJson(): void {\n    super.endLoadingFromJson();\n    //todo: need to remove this code\n    if (this.signatureWidth === 300 && !!this.width && typeof this.width === \"number\" && this.width) {\n      ConsoleWarnings.warn(\"Use signatureWidth property to set width for the signature pad\");\n      this.signatureWidth = this.width;\n      this.width = undefined;\n    }\n    if (this.signatureHeight === 200 && !!this.height) {\n      ConsoleWarnings.warn(\"Use signatureHeight property to set width for the signature pad\");\n      this.signatureHeight = this.height;\n      this.height = undefined;\n    }\n  }\n}\n\nfunction correctFormatData(val: string): string {\n  if (!val) val = \"png\";\n  val = val.replace(\"image/\", \"\").replace(\"+xml\", \"\");\n  if (val !== \"jpeg\" && val !== \"svg\") val = \"png\";\n  return val;\n}\n\nSerializer.addClass(\n  \"signaturepad\",\n  [\n    {\n      name: \"signatureWidth:number\",\n      category: \"general\",\n      default: 300,\n    },\n    {\n      name: \"signatureHeight:number\",\n      category: \"general\",\n      default: 200,\n    },\n    {\n      name: \"signatureAutoScaleEnabled:boolean\",\n      category: \"general\",\n      default: false,\n    },\n    {\n      name: \"penMinWidth:number\",\n      category: \"general\",\n      default: 0.5,\n    },\n    {\n      name: \"penMaxWidth:number\",\n      category: \"general\",\n      default: 2.5,\n    },\n    //need to remove this property\n    {\n      name: \"height:number\",\n      category: \"general\",\n      visible: false\n    },\n    {\n      name: \"allowClear:boolean\",\n      category: \"general\",\n      default: true,\n    },\n    { name: \"showPlaceholder:boolean\", category: \"general\", default: true },\n    {\n      name: \"placeholder:text\",\n      serializationProperty: \"locPlaceholder\",\n      category: \"general\",\n      dependsOn: \"showPlaceholder\",\n      visibleIf: (obj: QuestionSignaturePadModel) => obj.showPlaceholder\n    },\n    {\n      name: \"placeholderReadOnly:text\",\n      serializationProperty: \"locPlaceholderReadOnly\",\n      category: \"general\",\n      dependsOn: \"showPlaceholder\",\n      visibleIf: (obj: QuestionSignaturePadModel) => obj.showPlaceholder\n    },\n    {\n      name: \"backgroundImage:file\",\n      category: \"general\",\n    },\n    {\n      name: \"penColor:color\",\n      category: \"general\",\n    },\n    {\n      name: \"backgroundColor:color\",\n      category: \"general\",\n    },\n    {\n      name: \"dataFormat\",\n      category: \"general\",\n      default: \"png\",\n      choices: [\n        { value: \"png\", text: \"PNG\" },\n        { value: \"jpeg\", text: \"JPEG\" },\n        { value: \"svg\", text: \"SVG\" },\n      ],\n      onSettingValue: (obj: any, val: any): any => {\n        return correctFormatData(val);\n      }\n    },\n    { name: \"defaultValue\", visible: false },\n    { name: \"correctAnswer\", visible: false },\n    { name: \"storeDataAsText:boolean\", default: true },\n    { name: \"waitForUpload:boolean\", default: false },\n\n  ],\n  function () {\n    return new QuestionSignaturePadModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"signaturepad\", (name) => {\n  return new QuestionSignaturePadModel(name);\n});\n", "import { HashTable, Helpers } from \"./helpers\";\nimport {\n  IElement,\n  IQuestion,\n  IPanel,\n  ISurveyData,\n  ISurvey,\n  ISurveyImpl,\n  ITextProcessor,\n  IProgressInfo,\n  IPlainDataOptions\n} from \"./base-interfaces\";\nimport { SurveyElement } from \"./survey-element\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { TextContextProcessor } from \"./textPreProcessor\";\nimport { Base } from \"./base\";\nimport { Question, QuestionValueGetterContext, IConditionObject, IQuestionPlainData, QuestionItemValueGetterContext, QuestionArrayGetterContext, ValidationContext } from \"./question\";\nimport { PanelModel } from \"./panel\";\nimport { JsonObject, property, propertyArray, Serializer } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { KeyDuplicationError } from \"./error\";\nimport { settings } from \"./settings\";\nimport { classesToSelector, cleanHtmlElementAfterAnimation, confirmActionAsync, prepareElementForVerticalAnimation, setPropertiesOnElementForAnimation } from \"./utils/utils\";\nimport { SurveyError } from \"./survey-error\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { ActionContainer } from \"./actions/container\";\nimport { Action, IAction } from \"./actions/action\";\nimport { ComputedUpdater } from \"./base\";\nimport { AdaptiveActionContainer } from \"./actions/adaptive-container\";\nimport { ITheme } from \"./themes\";\nimport { AnimationGroup, AnimationProperty, AnimationTab, IAnimationConsumer, IAnimationGroupConsumer } from \"./utils/animation\";\nimport { QuestionSingleInputSummary, QuestionSingleInputSummaryItem } from \"./questionSingleInputSummary\";\nimport { getLocaleString } from \"./surveyStrings\";\nimport { IObjectValueContext, IValueGetterContext, IValueGetterInfo, IValueGetterItem, VariableGetterContext } from \"./conditionProcessValue\";\n\nexport interface IQuestionPanelDynamicData {\n  getItemIndex(item: ISurveyData): number;\n  getVisibleItemIndex(item: ISurveyData): number;\n  getPanelItemData(item: ISurveyData): any;\n  setPanelItemData(item: ISurveyData, name: string, val: any): any;\n  getSharedQuestionFromArray(name: string, panelIndex: number): Question;\n  getSurvey(): ISurvey;\n  getRootData(): ISurveyData;\n}\nexport class PanelDynamicItemGetterContext extends QuestionItemValueGetterContext {\n  constructor(private item: QuestionPanelDynamicItem) {\n    super();\n  }\n  protected getIndex(): number { return this.panelIndex; }\n  protected getQuestionData(): Question { return <Question>(<any>this.item.data); }\n  getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (path.length === 0) return undefined;\n    if (path.length === 1) {\n      const val = this.getPanelValue(path[0].name);\n      if (val !== undefined) {\n        return { isFound: true, value: val, context: this };\n      }\n    }\n    const expVar = settings.expressionVariables;\n    const panelPrefix = expVar.panel;\n    if (path.length > 1 && path[0].name.toLocaleLowerCase() === expVar.parentPanel.toLocaleLowerCase()) {\n      const q = <Question>(<any>this.item.data);\n      if (!!q && !!q.parentQuestion && !!q.parent && !!(<any>q.parent).data) {\n        path[0].name = panelPrefix;\n        return (<QuestionPanelDynamicItem>(<any>q.parent).data).getValueGetterContext().getValue(path, true, index, createObjects);\n      }\n    }\n    const panel = this.item.panel;\n    const isPanelPrefix = path[0].name === panelPrefix;\n    if (isPanelPrefix || !isRoot) {\n      if (isPanelPrefix) {\n        path.shift();\n      }\n      const res = new QuestionArrayGetterContext(panel.questions).getValue(path, false, index, createObjects);\n      if (!!res && res.isFound) return res;\n      const allValues = this.item.getAllValues();\n      if (isRoot) {\n        const res = this.getValueFromBindedQuestions(path, allValues);\n        if (!!res) return res;\n      }\n      return new VariableGetterContext(allValues).getValue(path, false, index, createObjects);\n    }\n    return undefined;\n  }\n  getTextValue(name: string, value: any, isDisplayValue: boolean): string {\n    name = name.toLocaleLowerCase();\n    if ([this.indexVar, this.visIndexVar].indexOf(name) > -1 && value > -1) {\n      value ++;\n    }\n    return super.getTextValue(name, value, isDisplayValue);\n  }\n  private get indexVar() { return settings.expressionVariables.panelIndex.toLocaleLowerCase(); }\n  private get visIndexVar() { return settings.expressionVariables.visiblePanelIndex.toLocaleLowerCase(); }\n\n  private getPanelValue(name: string): any {\n    name = name.toLocaleLowerCase();\n    if (name === this.indexVar) {\n      return this.panelIndex;\n    }\n    if (name == this.visIndexVar) {\n      return this.visiblePanelIndex;\n    }\n    return undefined;\n  }\n  private get panelIndex(): number {\n    return this.getPanels(false).indexOf(this.item.panel);\n  }\n  private get visiblePanelIndex(): number {\n    return this.getPanels(true).indexOf(this.item.panel);\n  }\n  private getPanels(isVisible: boolean): Array<PanelModel> {\n    const data: any = this.item.data;\n    if (!data) return [];\n    return isVisible ? data.visiblePanels : data.panels;\n  }\n}\n\nexport class PanelDynamicValueGetterContext extends QuestionValueGetterContext {\n  constructor (protected question: Question) {\n    super(question);\n  }\n  public getValue(path: Array<IValueGetterItem>, isRoot: boolean, index: number, createObjects: boolean): IValueGetterInfo {\n    if (!createObjects && this.question.isEmpty()) return { isFound: path.length === 0, value: undefined };\n    if (index > -1) {\n      const pd = <QuestionPanelDynamicModel>this.question;\n      if (index >= 0 && index < pd.panels.length) {\n        const item = <QuestionPanelDynamicItem>pd.panels[index].data;\n        return item.getValueGetterContext().getValue(path, false, index, createObjects);\n      }\n      return { isFound: false, value: undefined, context: this };\n    }\n    return super.getValue(path, isRoot, index, createObjects);\n  }\n}\n\ninterface IPanelDynamicTabbedMenuItem extends IAction {\n  panelId: string;\n}\nclass PanelDynamicTabbedMenuItem extends Action {\n  public panelId: string;\n  constructor(innerItem: IPanelDynamicTabbedMenuItem) {\n    super(innerItem);\n  }\n}\n\nexport class QuestionPanelDynamicItem implements ISurveyData, ISurveyImpl, IObjectValueContext {\n  private panelValue: PanelModel;\n  private textPreProcessor: TextContextProcessor;\n  constructor(public data: IQuestionPanelDynamicData, panel: PanelModel) {\n    this.data = data;\n    this.panelValue = panel;\n    this.textPreProcessor = new TextContextProcessor(this);\n    this.setSurveyImpl();\n  }\n  public get panel(): PanelModel {\n    return this.panelValue;\n  }\n  public setSurveyImpl() {\n    this.panel.setSurveyImpl(this);\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new PanelDynamicItemGetterContext(this);\n  }\n  public getValue(name: string): any {\n    var values = this.getAllValues();\n    return values[name];\n  }\n  public setValue(name: string, newValue: any): void {\n    const oldItemData = this.data.getPanelItemData(this);\n    const oldValue = !!oldItemData ? oldItemData[name] : undefined;\n    if (Helpers.isTwoValueEquals(newValue, oldValue, false, true, false)) return;\n    this.data.setPanelItemData(this, name, Helpers.getUnbindValue(newValue));\n    const questions = this.panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      if (q.getValueName() !== name) {\n        q.checkBindings(name, newValue);\n      }\n      const suffix = settings.commentSuffix;\n      if (name.endsWith(suffix)) {\n        name = name.substring(0, name.length - suffix.length);\n        const cQ = this.panel.getQuestionByName(name);\n        if (!!cQ) {\n          newValue = cQ.value;\n        }\n      }\n      const triggerName = settings.expressionVariables.panel + \".\" + name;\n      q.runTriggers(triggerName, newValue);\n    }\n  }\n  getVariable(name: string): any {\n    return undefined;\n  }\n  setVariable(name: string, newValue: any) { }\n  public getComment(name: string): string {\n    var result = this.getValue(name + settings.commentSuffix);\n    return result ? result : \"\";\n  }\n  public setComment(name: string, newValue: string, locNotification: any) {\n    this.setValue(name + settings.commentSuffix, newValue);\n  }\n  findQuestionByName(name: string): IQuestion {\n    if (!name) return undefined;\n    const prefix = settings.expressionVariables.panel + \".\";\n    if (name.indexOf(prefix) === 0) {\n      return this.panel.getQuestionByName(name.substring(prefix.length));\n    }\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement(): Base { return undefined; }\n  getAllValues(): any {\n    return this.data.getPanelItemData(this);\n  }\n  getFilteredProperties(): any {\n    if (!!this.data && !!this.data.getRootData())\n      return this.data.getRootData().getFilteredProperties();\n    return { survey: this.getSurvey() };\n  }\n  getSurveyData(): ISurveyData {\n    return this;\n  }\n  getSurvey(): ISurvey {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor(): ITextProcessor {\n    return this.textPreProcessor;\n  }\n}\n\nexport class QuestionPanelDynamicTemplateSurveyImpl implements ISurveyImpl {\n  constructor(public data: IQuestionPanelDynamicData) { }\n  getSurveyData(): ISurveyData {\n    return null;\n  }\n  getSurvey(): ISurvey {\n    return this.data.getSurvey();\n  }\n  getTextProcessor(): ITextProcessor {\n    return null;\n  }\n}\n\n/**\n  * A class that describes the Dynamic Panel question type.\n  *\n  * Dynamic Panel allows respondents to add panels based on a panel template and delete them. Specify the [`templateElements`](https://surveyjs.io/form-library/documentation/questionpaneldynamicmodel#templateElements) property to configure panel template elements.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/ (linkStyle))\n  */\nexport class QuestionPanelDynamicModel extends Question\n  implements IQuestionPanelDynamicData {\n  private templateValue: PanelModel;\n  private isValueChangingInternally: boolean;\n  private changingValueQuestion: Question;\n\n  renderModeChangedCallback: () => void;\n  panelCountChangedCallback: () => void;\n  currentIndexChangedCallback: () => void;\n\n  constructor(name: string) {\n    super(name);\n    this.createNewArray(\"panels\",\n      (panel: PanelModel) => { this.onPanelAdded(panel); },\n      (panel: PanelModel) => { this.onPanelRemoved(panel); });\n    this.createNewArray(\"visiblePanels\");\n    this.templateValue = this.createAndSetupNewPanelObject();\n    this.template.renderWidth = \"100%\";\n    this.template.selectedElementInDesign = this;\n\n    this.template.addElementCallback = (element) => {\n      this.addOnPropertyChangedCallback(<SurveyElement><any>element);\n      this.rebuildPanels();\n    };\n    this.template.removeElementCallback = () => {\n      this.rebuildPanels();\n    };\n\n    this.createLocalizableString(\"confirmDeleteText\", this, false, \"confirmDelete\");\n    this.createLocalizableString(\"keyDuplicationError\", this, false, true);\n    this.createLocalizableString(\"addPanelText\", this, false, \"addPanel\");\n    this.createLocalizableString(\"removePanelText\", this, false, \"removePanel\");\n    this.createLocalizableString(\"prevPanelText\", this, false, \"pagePrevText\");\n    this.createLocalizableString(\"nextPanelText\", this, false, \"pageNextText\");\n    this.createLocalizableString(\"noEntriesText\", this, false, \"noEntriesText\");\n    this.createLocalizableString(\"editPanelText\", this, false, \"editText\");\n    this.createLocalizableString(\"templateTabTitle\", this, true, \"panelDynamicTabTextFormat\");\n    this.createLocalizableString(\"tabTitlePlaceholder\", this, true, \"tabTitlePlaceholder\");\n    this.registerPropertyChangedHandlers([\"panelsState\"], () => {\n      this.setPanelsState();\n    });\n    this.registerPropertyChangedHandlers([\"newPanelPosition\", \"displayMode\", \"showProgressBar\"], () => {\n      this.updateFooterActions();\n    });\n    this.registerPropertyChangedHandlers([\"allowAddPanel\"], () => { this.updateNoEntriesTextDefaultLoc(); });\n    this.registerPropertyChangedHandlers([\"minPanelCount\"], () => { this.onMinPanelCountChanged(); });\n    this.registerPropertyChangedHandlers([\"maxPanelCount\"], () => { this.onMaxPanelCountChanged(); });\n    this.registerPropertyChangedHandlers([\"templateQuestionTitleLocation\", \"templateQuestionTitleWidth\"], () => {\n      const panels = this.visiblePanelsCore;\n      if (panels) panels.forEach((panel) => { panel.updateElementCss(true); });\n    });\n  }\n  public get isCompositeQuestion(): boolean { return true; }\n  public get hasSingleInput(): boolean { return false; }\n  public get isContainer(): boolean { return true; }\n  public getFirstQuestionToFocus(withError: boolean): Question {\n    for (var i = 0; i < this.visiblePanelsCore.length; i++) {\n      const res = this.visiblePanelsCore[i].getFirstQuestionToFocus(withError);\n      if (!!res) return res;\n    }\n    if (this.showAddPanelButton && (!withError || this.currentErrorCount > 0)) return this;\n    return null;\n  }\n  protected getFirstInputElementId(): string {\n    if (this.showAddPanelButton) return this.addButtonId;\n    return super.getFirstInputElementId();\n  }\n  protected getFirstErrorInputElementId(): string {\n    const question = this.getFirstQuestionToFocus(true);\n    return question ? question.inputId : super.getFirstErrorInputElementId();\n  }\n  public setSurveyImpl(value: ISurveyImpl, isLight?: boolean): void {\n    super.setSurveyImpl(value, isLight);\n    this.setTemplatePanelSurveyImpl();\n    this.setPanelsSurveyImpl();\n  }\n  private assignOnPropertyChangedToTemplate() {\n    var elements = this.template.elements;\n    for (var i = 0; i < elements.length; i++) {\n      this.addOnPropertyChangedCallback(<SurveyElement><any>elements[i]);\n    }\n  }\n  private addOnPropertyChangedCallback(element: SurveyElement) {\n    if (element.isQuestion) {\n      (<Question>element).setParentQuestion(this);\n    }\n    element.onPropertyChanged.add((element, options) => {\n      this.onTemplateElementPropertyChanged(element, options);\n    });\n    if (element.isPanel) {\n      (<PanelModel>element).addElementCallback = (element) => {\n        this.addOnPropertyChangedCallback(<SurveyElement><any>element);\n      };\n    }\n  }\n  private onTemplateElementPropertyChanged(element: any, options: any) {\n    if (this.isLoadingFromJson || this.useTemplatePanel || this.panelsCore.length == 0)\n      return;\n    var property = Serializer.findProperty(element.getType(), options.name);\n    if (!property) return;\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var question = panels[i].getQuestionByName(element.name);\n      if (!!question && (<any>question)[options.name] !== options.newValue) {\n        (<any>question)[options.name] = options.newValue;\n      }\n    }\n  }\n  private get useTemplatePanel(): boolean {\n    return this.isDesignMode && !this.isContentElement;\n  }\n  public getType(): string {\n    return \"paneldynamic\";\n  }\n  public clearOnDeletingContainer(): void {\n    this.panelsCore.forEach((panel) => {\n      panel.clearOnDeletingContainer();\n    });\n  }\n  public get isAllowTitleLeft(): boolean {\n    return false;\n  }\n  public removeElement(element: IElement): boolean {\n    return this.template.removeElement(element);\n  }\n\n  /**\n   * A `PanelModel` object used as a template to create dynamic panels.\n   * @see PanelModel\n   * @see templateElements\n   * @see templateTitle\n   * @see panels\n   * @see panelCount\n   */\n  public get template(): PanelModel {\n    return this.templateValue;\n  }\n  public getPanel(): IPanel {\n    return this.template;\n  }\n  /**\n   * An array of questions and panels included in a panel template.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see template\n   * @see panels\n   * @see panelCount\n   */\n  public get templateElements(): Array<IElement> {\n    return this.template.elements;\n  }\n  /**\n   * A template for panel titles.\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{panelIndex}` - A panel index within the collection of all panels. Starts with 1.\n   * - `{visiblePanelIndex}` - A panel index within the collection of visible panels. Starts with 1.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/breakable-loop/ (linkStyle))\n   * @see template\n   * @see templateDescription\n   * @see templateElements\n   * @see panels\n   * @see panelCount\n   */\n  public get templateTitle(): string {\n    return this.template.title;\n  }\n  public set templateTitle(newValue: string) {\n    this.template.title = newValue;\n  }\n  get locTemplateTitle(): LocalizableString {\n    return this.template.locTitle;\n  }\n  /**\n   * A template for tab titles. Applies when [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) is `\"tab\"`.\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{panelIndex}` - A panel index within the collection of all panels. Starts with 1.\n   * - `{visiblePanelIndex}` - A panel index within the collection of visible panels. Starts with 1.\n   *\n   * If you want to customize individual tab titles, handle `SurveyModel`'s [`onGetDynamicPanelTabTitle`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetDynamicPanelTabTitle) event.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/tabbed-interface-for-duplicate-group-option/ (linkStyle))\n   * @see templateTitle\n   * @see tabTitlePlaceholder\n   * @see displayMode\n   */\n  public get templateTabTitle(): string {\n    return this.locTemplateTabTitle.text;\n  }\n  public set templateTabTitle(newValue: string) {\n    this.locTemplateTabTitle.text = newValue;\n  }\n  get locTemplateTabTitle(): LocalizableString {\n    return this.getLocalizableString(\"templateTabTitle\");\n  }\n  /**\n   * A placeholder for tab titles that applies when the [`templateTabTitle`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateTabTitle) expression doesn't produce a meaningful value.\n   *\n   * Default value: `\"New Panel\"` (taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization))\n   */\n  public get tabTitlePlaceholder(): string {\n    return this.locTabTitlePlaceholder.text;\n  }\n  public set tabTitlePlaceholder(newValue: string) {\n    this.locTabTitlePlaceholder.text = newValue;\n  }\n  get locTabTitlePlaceholder(): LocalizableString {\n    return this.getLocalizableString(\"tabTitlePlaceholder\");\n  }\n  /**\n   * A template for panel descriptions.\n   * @see template\n   * @see templateTitle\n   * @see templateElements\n   * @see panels\n   * @see panelCount\n   */\n  public get templateDescription(): string {\n    return this.template.description;\n  }\n  public set templateDescription(newValue: string) {\n    this.template.description = newValue;\n  }\n  get locTemplateDescription(): LocalizableString {\n    return this.template.locDescription;\n  }\n  /**\n   * A Boolean expression that is evaluated against each panel. If the expression evaluates to `false`, the panel becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{panel}` placeholder to reference the current panel in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visiblePanels\n   */\n  public get templateVisibleIf(): string {\n    return this.getPropertyValue(\"templateVisibleIf\");\n  }\n  public set templateVisibleIf(val: string) {\n    this.setPropertyValue(\"templateVisibleIf\", val);\n    this.template.visibleIf = val;\n  }\n  protected get items(): Array<ISurveyData> {\n    var res = [];\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      res.push(this.panelsCore[i].data);\n    }\n    return res;\n  }\n  /**\n   * An array of `PanelModel` objects created based on a panel template.\n   * @see PanelModel\n   * @see template\n   * @see panelCount\n   */\n  public get panels(): Array<PanelModel> {\n    this.buildPanelsFirstTime(this.canBuildPanels);\n    return this.panelsCore;\n  }\n  /**\n   * An array of currently visible panels ([`PanelModel`](https://surveyjs.io/form-library/documentation/api-reference/panel-model) objects).\n   * @see templateVisibleIf\n   */\n  public get visiblePanels(): Array<PanelModel> {\n    this.buildPanelsFirstTime(this.canBuildPanels);\n    return this.visiblePanelsCore;\n  }\n  protected get panelsCore(): Array<PanelModel> {\n    return this.getPropertyValue(\"panels\");\n  }\n  protected get visiblePanelsCore(): Array<PanelModel> {\n    return this.getPropertyValue(\"visiblePanels\");\n  }\n  private onPanelAdded(panel: PanelModel): void {\n    this.onPanelRemovedCore(panel);\n    if (!panel.visible) return;\n    let index = 0;\n    const panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      if (panels[i] === panel) break;\n      if (panels[i].visible) index++;\n    }\n    this.visiblePanelsCore.splice(index, 0, panel);\n    this.addTabFromToolbar(panel, index);\n    if (!this.currentPanel) {\n      this.currentPanel = panel;\n    }\n    this.updateRenderedPanels();\n  }\n  private onPanelRemoved(panel: PanelModel): void {\n    let index = this.onPanelRemovedCore(panel);\n    if (this.currentPanel === panel) {\n      const visPanels = this.visiblePanelsCore;\n      if (index >= visPanels.length) index = visPanels.length - 1;\n      this.currentPanel = index >= 0 ? visPanels[index] : null;\n    }\n    this.updateRenderedPanels();\n  }\n  private onPanelRemovedCore(panel: PanelModel): number {\n    const visPanels = this.visiblePanelsCore;\n    let index = visPanels.indexOf(panel);\n    if (index > -1) {\n      visPanels.splice(index, 1);\n      this.removeTabFromToolbar(panel);\n    }\n    return index;\n  }\n  /**\n   * A zero-based index of the currently displayed panel.\n   *\n   * When `displayMode` is `\"list\"` or Dynamic Panel is empty (`panelCount` is 0), this property contains -1.\n   * @see currentPanel\n   * @see panels\n   * @see panelCount\n   * @see displayMode\n   */\n  public get currentIndex(): number {\n    if (this.isRenderModeList) return -1;\n    if (this.useTemplatePanel) return 0;\n    return this.visiblePanelsCore.indexOf(this.currentPanel);\n  }\n  public set currentIndex(val: number) {\n    if (val < 0 || this.visiblePanelCount < 1) return;\n    if (val >= this.visiblePanelCount) val = this.visiblePanelCount - 1;\n    this.currentPanel = this.visiblePanelsCore[val];\n  }\n  /**\n   * A `PanelModel` object that is the currently displayed panel.\n   *\n   * When `displayMode` is `\"list\"` or Dynamic Panel is empty (`panelCount` is 0), this property contains `null`.\n   * @see currentIndex\n   * @see panels\n   * @see panelCount\n   * @see displayMode\n   */\n  public get currentPanel(): PanelModel {\n    if (this.isDesignMode) return this.template;\n    if (this.isRenderModeList || this.useTemplatePanel) return null;\n    let res = this.getPropertyValue(\"currentPanel\", null);\n    if (!res && this.visiblePanelCount > 0) {\n      res = this.visiblePanelsCore[0];\n      this.currentPanel = res;\n    }\n    return res;\n  }\n  public set currentPanel(val: PanelModel) {\n    if (this.isRenderModeList || this.useTemplatePanel) return;\n    const curPanel = this.getPropertyValue(\"currentPanel\");\n    const index = !!val ? this.visiblePanelsCore.indexOf(val) : -1;\n    if (!!val && index < 0 || val === curPanel) return;\n    if (curPanel) {\n      curPanel.onHidingContent();\n    }\n    this.setPropertyValue(\"currentPanel\", val);\n    this.updateRenderedPanels();\n    this.updateFooterActions();\n    this.updateTabToolbarItemsPressedState();\n    this.fireCallback(this.currentIndexChangedCallback);\n    if (index > -1 && this.survey) {\n      const options = {\n        panel: val,\n        visiblePanelIndex: index\n      };\n      this.survey.dynamicPanelCurrentIndexChanged(this, options);\n    }\n  }\n\n  @propertyArray({}) private _renderedPanels: Array<PanelModel> = [];\n\n  private updateRenderedPanels() {\n    if (this.isRenderModeList) {\n      this.renderedPanels = [].concat(this.visiblePanels);\n    } else if (this.currentPanel) {\n      this.renderedPanels = [this.currentPanel];\n    } else {\n      this.renderedPanels = [];\n    }\n  }\n\n  public set renderedPanels(val: Array<PanelModel>) {\n    if (this.renderedPanels.length == 0 || val.length == 0) {\n      this.blockAnimations();\n      this.panelsAnimation.sync(val);\n      this.releaseAnimations();\n    } else {\n      this.isPanelsAnimationRunning = true;\n      this.panelsAnimation.sync(val);\n    }\n  }\n\n  public get renderedPanels(): Array<PanelModel> {\n    return this._renderedPanels;\n  }\n  private isPanelsAnimationRunning: boolean = false;\n  private getPanelsAnimationOptions(): IAnimationConsumer<[PanelModel]> {\n    const getDirectionCssClass = () => {\n      if (this.isRenderModeList) return \"\";\n      let cssClass = new CssClassBuilder();\n      let isRemoving = false;\n      const leavingPanel = this.renderedPanels.filter(el => el !== this.currentPanel)[0];\n      let leavingPanelIndex = this.visiblePanels.indexOf(leavingPanel);\n      if (leavingPanelIndex < 0) {\n        isRemoving = true;\n        leavingPanelIndex = this.removedPanelIndex;\n      }\n      return cssClass\n        .append(\"sv-pd-animation-adding\", !!this.focusNewPanelCallback)\n        .append(\"sv-pd-animation-removing\", isRemoving)\n        .append(\"sv-pd-animation-left\", leavingPanelIndex <= this.currentIndex)\n        .append(\"sv-pd-animation-right\", leavingPanelIndex > this.currentIndex)\n        .toString();\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      getAnimatedElement: (panel) => {\n        if (panel && this.cssContent) {\n          const contentSelector = classesToSelector(this.cssContent);\n          return this.getWrapperElement()?.querySelector(`:scope ${contentSelector} #${panel.id}`)?.parentElement;\n        }\n      },\n      getEnterOptions: () => {\n        const cssClass = new CssClassBuilder().append(this.cssClasses.panelWrapperEnter).append(getDirectionCssClass()).toString();\n        return {\n          onBeforeRunAnimation: (el) => {\n            if (this.focusNewPanelCallback) {\n              const scolledElement = this.isRenderModeList ? el : el.parentElement;\n              SurveyElement.ScrollElementToViewCore(scolledElement, false, false, { behavior: \"smooth\" });\n            }\n            if (!this.isRenderModeList && el.parentElement) {\n              setPropertiesOnElementForAnimation(el.parentElement, { heightTo: el.offsetHeight + \"px\" });\n            } else {\n              prepareElementForVerticalAnimation(el);\n            }\n          },\n          onAfterRunAnimation: (el) => {\n            cleanHtmlElementAfterAnimation(el);\n            if (el.parentElement) {\n              cleanHtmlElementAfterAnimation(el.parentElement);\n            }\n          },\n          cssClass: cssClass\n        };\n      },\n      getLeaveOptions: () => {\n        const cssClass = new CssClassBuilder().append(this.cssClasses.panelWrapperLeave).append(getDirectionCssClass()).toString();\n        return {\n          onBeforeRunAnimation: (el) => {\n            if (!this.isRenderModeList && el.parentElement) {\n              setPropertiesOnElementForAnimation(el.parentElement, { heightFrom: el.offsetHeight + \"px\" });\n            } else {\n              prepareElementForVerticalAnimation(el);\n            }\n          },\n          onAfterRunAnimation: (el) => {\n            cleanHtmlElementAfterAnimation(el);\n            if (el.parentElement) {\n              cleanHtmlElementAfterAnimation(el.parentElement);\n            }\n          },\n          cssClass: cssClass\n        };\n      },\n      isAnimationEnabled: () => {\n        return this.animationAllowed && !!this.getWrapperElement();\n      },\n    };\n  }\n\n  private _panelsAnimations: AnimationProperty<Array<PanelModel>, IAnimationGroupConsumer<PanelModel>>;\n  private disablePanelsAnimations() {\n    this.panelsCore.forEach((panel) => {\n      panel.blockAnimations();\n    });\n  }\n  private enablePanelsAnimations() {\n    this.panelsCore.forEach((panel) => {\n      panel.releaseAnimations();\n    });\n  }\n  private updatePanelsAnimation() {\n    this._panelsAnimations = new (this.isRenderModeList ? AnimationGroup : AnimationTab)(this.getPanelsAnimationOptions(), (val, isTempUpdate?: boolean) => {\n      this._renderedPanels = val;\n      if (!isTempUpdate) {\n        this.isPanelsAnimationRunning = false;\n        this.focusNewPanel();\n      }\n    }, () => this._renderedPanels);\n  }\n\n  get panelsAnimation(): AnimationProperty<Array<PanelModel>, IAnimationGroupConsumer<PanelModel>> {\n    if (!this._panelsAnimations) {\n      this.updatePanelsAnimation();\n    }\n    return this._panelsAnimations;\n  }\n\n  public onHidingContent(): void {\n    super.onHidingContent();\n    if (this.currentPanel) {\n      this.currentPanel.onHidingContent();\n    } else {\n      this.visiblePanelsCore.forEach(panel => panel.onHidingContent());\n    }\n  }\n  /**\n   * Specifies whether to display a confirmation dialog when a respondent wants to delete a panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see confirmDeleteText\n   */\n  public get confirmDelete(): boolean {\n    return this.getPropertyValue(\"confirmDelete\");\n  }\n  public set confirmDelete(val: boolean) {\n    this.setPropertyValue(\"confirmDelete\", val);\n  }\n  /**\n   * Specifies a key question. Set this property to the name of a question used in the template, and Dynamic Panel will display `keyDuplicationError` if a user tries to enter a duplicate value in this question.\n   * @see keyDuplicationError\n   */\n  public get keyName(): string {\n    return this.getPropertyValue(\"keyName\", \"\");\n  }\n  public set keyName(val: string) {\n    this.setPropertyValue(\"keyName\", val);\n  }\n  /**\n   * A message displayed in a confirmation dialog that appears when a respondent wants to delete a panel.\n   * @see confirmDelete\n   */\n  public get confirmDeleteText() {\n    return this.getLocalizableStringText(\"confirmDeleteText\");\n  }\n  public set confirmDeleteText(val: string) {\n    this.setLocalizableStringText(\"confirmDeleteText\", val);\n  }\n  get locConfirmDeleteText(): LocalizableString {\n    return this.getLocalizableString(\"confirmDeleteText\");\n  }\n  /**\n   * An error message displayed when users enter a duplicate value into a question that accepts only unique values (`isUnique` is set to `true` or `keyName` is specified).\n   *\n   * A default value for this property is taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization). Refer to the following help topic for more information: [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization).\n   * @see keyName\n   */\n  public get keyDuplicationError() {\n    return this.getLocalizableStringText(\"keyDuplicationError\");\n  }\n  public set keyDuplicationError(val: string) {\n    this.setLocalizableStringText(\"keyDuplicationError\", val);\n  }\n  get locKeyDuplicationError(): LocalizableString {\n    return this.getLocalizableString(\"keyDuplicationError\");\n  }\n  /**\n   * A caption for the Previous button. Applies only if `displayMode` is different from `\"list\"`.\n   * @see displayMode\n   * @see isPrevButtonVisible\n   */\n  public get prevPanelText(): string { return this.getLocalizableStringText(\"prevPanelText\"); }\n  public set prevPanelText(val: string) { this.setLocalizableStringText(\"prevPanelText\", val); }\n  get locPrevPanelText(): LocalizableString { return this.getLocalizableString(\"prevPanelText\"); }\n  /**\n   * @deprecated Use the [`prevPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#prevPanelText) property instead.\n   */\n  public get panelPrevText(): string { return this.prevPanelText; }\n  public set panelPrevText(val: string) { this.prevPanelText = val; }\n  get locPanelPrevText(): LocalizableString { return this.locPrevPanelText; }\n  /**\n   * A caption for the Next button. Applies only if `displayMode` is different from `\"list\"`.\n   * @see displayMode\n   * @see isNextButtonVisible\n   */\n  public get nextPanelText(): string { return this.getLocalizableStringText(\"nextPanelText\"); }\n  public set nextPanelText(val: string) { this.setLocalizableStringText(\"nextPanelText\", val); }\n  get locNextPanelText(): LocalizableString { return this.getLocalizableString(\"nextPanelText\"); }\n  /**\n   * @deprecated Use the [`nextPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#nextPanelText) property instead.\n   */\n  public get panelNextText(): string { return this.nextPanelText; }\n  public set panelNextText(val: string) { this.nextPanelText = val; }\n  get locPanelNextText(): LocalizableString { return this.locNextPanelText; }\n  /**\n   * A caption for the Add Panel button.\n   */\n  public get addPanelText(): string { return this.getLocalizableStringText(\"addPanelText\"); }\n  public set addPanelText(value: string) { this.setLocalizableStringText(\"addPanelText\", value); }\n  get locAddPanelText(): LocalizableString { return this.getLocalizableString(\"addPanelText\"); }\n  /**\n   * @deprecated Use the [`addPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#addPanelText) property instead.\n   */\n  public get panelAddText(): string { return this.addPanelText; }\n  public set panelAddText(value: string) { this.addPanelText = value; }\n  get locPanelAddText(): LocalizableString { return this.locAddPanelText; }\n  /**\n   * A caption for the Remove Panel button.\n   * @see removePanelButtonLocation\n   */\n  public get removePanelText(): string { return this.getLocalizableStringText(\"removePanelText\"); }\n  public set removePanelText(val: string) { this.setLocalizableStringText(\"removePanelText\", val); }\n  get locRemovePanelText(): LocalizableString { return this.getLocalizableString(\"removePanelText\"); }\n  /**\n   * @deprecated Use the [`removePanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanelText) property instead.\n   */\n  public get panelRemoveText(): string { return this.removePanelText; }\n  public set panelRemoveText(val: string) { this.removePanelText = val; }\n  get locPanelRemoveText(): LocalizableString { return this.locRemovePanelText; }\n  public get isProgressTopShowing(): boolean {\n    return this.displayMode == \"carousel\" && (this.progressBarLocation === \"top\" || this.progressBarLocation === \"topBottom\");\n  }\n  public get isProgressBottomShowing(): boolean {\n    return this.displayMode == \"carousel\" && (this.progressBarLocation === \"bottom\" || this.progressBarLocation === \"topBottom\");\n  }\n  /**\n   * Indicates whether the Previous button is visible.\n   * @see currentIndex\n   * @see currentPanel\n   * @see prevPanelText\n   */\n  public get isPrevButtonVisible(): boolean { return this.currentIndex > 0; }\n  public get isPrevButtonShowing(): boolean { return this.isPrevButtonVisible; }\n  /**\n   * Indicates whether the Next button is visible.\n   * @see currentIndex\n   * @see currentPanel\n   * @see nextPanelText\n   */\n  public get isNextButtonVisible(): boolean {\n    return this.currentIndex >= 0 && this.currentIndex < this.visiblePanelCount - 1;\n  }\n  public get isNextButtonShowing(): boolean { return this.isNextButtonVisible; }\n  public get isRangeShowing(): boolean {\n    return (\n      this.showProgressBar && this.currentIndex >= 0 && this.visiblePanelCount > 1\n    );\n  }\n  public getElementsInDesign(includeHidden: boolean = false): Array<IElement> {\n    return includeHidden ? [this.template] : this.templateElements;\n  }\n  private isAddingNewPanels: boolean = false;\n  private addingNewPanelsValue: any;\n  private isNewPanelsValueChanged: boolean;\n  private prepareValueForPanelCreating() {\n    this.addingNewPanelsValue = this.value;\n    this.isAddingNewPanels = true;\n    this.isNewPanelsValueChanged = false;\n  }\n  private setValueAfterPanelsCreating() {\n    this.isAddingNewPanels = false;\n    if (this.isNewPanelsValueChanged) {\n      this.isValueChangingInternally = true;\n      this.value = this.addingNewPanelsValue;\n      this.isValueChangingInternally = false;\n    }\n  }\n  protected getValueCore() {\n    return this.isAddingNewPanels\n      ? this.addingNewPanelsValue\n      : super.getValueCore();\n  }\n  protected setValueCore(newValue: any) {\n    if (this.isAddingNewPanels) {\n      this.isNewPanelsValueChanged = true;\n      this.addingNewPanelsValue = newValue;\n    } else {\n      super.setValueCore(newValue);\n    }\n  }\n  public setIsMobile(val: boolean) {\n    super.setIsMobile(val);\n    (this.panelsCore || []).forEach(panel => panel.getQuestions(true).forEach(question => {\n      question.setIsMobile(val);\n    }));\n  }\n  public themeChanged(theme: ITheme): void {\n    super.themeChanged(theme);\n    (this.panelsCore || []).forEach(panel =>\n      panel.getQuestions(true).forEach(question => {\n        question.themeChanged(theme);\n      })\n    );\n  }\n\n  /**\n   * The number of panels in Dynamic Panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see minPanelCount\n   * @see maxPanelCount\n   */\n  public get panelCount(): number {\n    return !this.canBuildPanels || this.wasNotRenderedInSurvey\n      ? this.getPropertyValue(\"panelCount\")\n      : this.panelsCore.length;\n  }\n  public set panelCount(val: number) {\n    if (val < 0) return;\n    if (!this.isLoadingFromJson && this.isDesignMode) {\n      const min = this.minPanelCount;\n      if (val < min) {\n        val = min;\n      }\n      const max = this.maxPanelCount;\n      if (max > 0 && val > max) {\n        val = max;\n      }\n    }\n    if (!this.canBuildPanels || this.wasNotRenderedInSurvey) {\n      this.setPropertyValue(\"panelCount\", val);\n      this.updateFooterActions();\n      return;\n    }\n    if (val == this.panelsCore.length || this.useTemplatePanel) return;\n    this.updateBindings(\"panelCount\", val);\n    this.prepareValueForPanelCreating();\n    const isAddingOnePanel = val - this.panelCount === 1;\n    for (let i = this.panelCount; i < val; i++) {\n      const panel = this.createNewPanel();\n      this.panelsCore.push(panel);\n      if (this.displayMode == \"list\" && this.panelsState != \"default\") {\n        if (this.panelsState === \"expanded\") {\n          panel.expand();\n        } else {\n          if (!!panel.title) {\n            panel.collapse();\n          }\n        }\n      }\n    }\n    if (isAddingOnePanel) {\n      this.singleInputOnAddItem(this.settingPanelCountBasedOnValue);\n    }\n    if (val < this.panelCount) {\n      this.panelsCore.splice(val, this.panelCount - val);\n    }\n    this.disablePanelsAnimations();\n    this.setValueAfterPanelsCreating();\n    this.setValueBasedOnPanelCount();\n    this.reRunCondition();\n    this.updateFooterActions();\n    this.fireCallback(this.panelCountChangedCallback);\n    this.enablePanelsAnimations();\n  }\n  /**\n   * Returns the number of visible panels in Dynamic Panel.\n   * @see templateVisibleIf\n   */\n  public get visiblePanelCount(): number { return this.visiblePanels.length; }\n  /**\n   * Specifies whether users can expand and collapse panels. Applies if `displayMode` is `\"list\"` and the `templateTitle` property is specified.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - All panels are displayed in full and cannot be collapsed.\n   * - `\"expanded\"` - All panels are displayed in full and can be collapsed in the UI.\n   * - `\"collapsed\"` - All panels display only their titles and descriptions and can be expanded in the UI.\n   * - `\"firstExpanded\"` - Only the first panel is displayed in full; other panels are collapsed and can be expanded in the UI.\n   * @see displayMode\n   * @see templateTitle\n   */\n  public get panelsState(): string {\n    return this.getPropertyValue(\"panelsState\");\n  }\n  public set panelsState(val: string) {\n    this.setPropertyValue(\"panelsState\", val);\n  }\n  public getStructuredValue(level: number = -1): any {\n    if (level < 0 || this.isEmpty() || !Array.isArray(this.value)) return this.value;\n    const data = new Array<any>();\n    const valCount = Math.min(this.visiblePanelCount, this.value.length);\n    for (let i = 0; i < valCount; i++) {\n      const panel = this.visiblePanels[i];\n      const panelData: any = {};\n      panel.collectValues(panelData, level);\n      data.push(panelData);\n    }\n    return data;\n  }\n  private setTemplatePanelSurveyImpl() {\n    this.template.setSurveyImpl(\n      this.useTemplatePanel\n        ? this.surveyImpl\n        : new QuestionPanelDynamicTemplateSurveyImpl(this)\n    );\n  }\n  private setPanelsSurveyImpl() {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var panel = this.panelsCore[i];\n      if (panel == this.template) continue;\n      panel.setSurveyImpl(<QuestionPanelDynamicItem>panel.data);\n    }\n  }\n  private setPanelsState() {\n    if (this.useTemplatePanel || this.displayMode != \"list\" || !this.templateTitle)\n      return;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var state = this.panelsState;\n      if (state === \"firstExpanded\") {\n        state = i === 0 ? \"expanded\" : \"collapsed\";\n      }\n      this.panelsCore[i].state = state;\n    }\n  }\n  private setValueBasedOnPanelCount() {\n    var value = this.value;\n    if (!value || !Array.isArray(value)) value = [];\n    if (value.length == this.panelCount) return;\n    for (var i = value.length; i < this.panelCount; i++) {\n      const panelValue = this.panels[i].getValue();\n      const val = !Helpers.isValueEmpty(panelValue) ? panelValue : {};\n      value.push(val);\n    }\n    if (value.length > this.panelCount) {\n      value.splice(this.panelCount, value.length - this.panelCount);\n    }\n    this.isValueChangingInternally = true;\n    this.value = value;\n    this.isValueChangingInternally = false;\n  }\n  /**\n   * A minimum number of panels in Dynamic Panel. Users cannot delete panels if `panelCount` equals `minPanelCount`.\n   *\n   * Default value: 0\n   * @see panelCount\n   * @see maxPanelCount\n   * @see allowRemovePanel\n   */\n  public get minPanelCount(): number {\n    return this.getPropertyValue(\"minPanelCount\");\n  }\n  public set minPanelCount(val: number) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minPanelCount\", val);\n  }\n  private onMinPanelCountChanged(): void {\n    const val = this.minPanelCount;\n    if (val > this.maxPanelCount)this.maxPanelCount = val;\n    if (this.panelCount < val)this.panelCount = val;\n  }\n  /**\n   * A maximum number of panels in Dynamic Panel. Users cannot add new panels if `panelCount` equals `maxPanelCount`.\n   *\n   * Default value: 100 (inherited from [`settings.panel.maxPanelCount`](https://surveyjs.io/form-library/documentation/settings#panelMaximumPanelCount))\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see panelCount\n   * @see minPanelCount\n   * @see allowAddPanel\n   */\n  public get maxPanelCount(): number {\n    return this.getPropertyValue(\"maxPanelCount\");\n  }\n  public set maxPanelCount(val: number) {\n    if (val <= 0) return;\n    if (val > settings.panel.maxPanelCount)\n      val = settings.panel.maxPanelCount;\n    this.setPropertyValue(\"maxPanelCount\", val);\n    this.updateFooterActions();\n  }\n  private onMaxPanelCountChanged(): void {\n    const val = this.maxPanelCount;\n    if (val < this.minPanelCount)this.minPanelCount = val;\n    if (this.panelCount > val)this.panelCount = val;\n    this.updateFooterActions();\n  }\n  /**\n   * Specifies whether users are allowed to add new panels.\n   *\n   * Default value: `true`\n   *\n   * By default, users add new panels to the end. If you want to let users insert a new panel after the current panel, set the [`newPanelPosition`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#newPanelPosition) property to `\"next\"`.\n   * @see canAddPanel\n   * @see allowRemovePanel\n   */\n  public get allowAddPanel(): boolean {\n    return this.getPropertyValue(\"allowAddPanel\");\n  }\n  public set allowAddPanel(val: boolean) {\n    this.setPropertyValue(\"allowAddPanel\", val);\n  }\n  public get addButtonId(): string {\n    return this.id + \"addPanel\";\n  }\n  /**\n   * Specifies the position of newly added panels.\n   *\n   * Possible values:\n   *\n   * - `\"last\"` (default) - New panels are added to the end.\n   * - `\"next\"` - New panels are inserted after the current panel.\n   * @see allowAddPanel\n   * @see addPanel\n   */\n  public get newPanelPosition(): string {\n    return this.getPropertyValue(\"newPanelPosition\");\n  }\n  public set newPanelPosition(val: string) {\n    this.setPropertyValue(\"newPanelPosition\", val);\n  }\n  /**\n   * Specifies whether users are allowed to delete panels.\n   *\n   * Default value: `true`\n   * @see canRemovePanel\n   * @see allowAddPanel\n   */\n  public get allowRemovePanel(): boolean {\n    return this.getPropertyValue(\"allowRemovePanel\");\n  }\n  public set allowRemovePanel(val: boolean) {\n    this.setPropertyValue(\"allowRemovePanel\", val);\n  }\n  /**\n   * Gets or sets the location of question titles relative to their input fields.\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Dynamic Panel's `titleLocation` property, which in turn inherits the [`questionTitleLocation`](https://surveyjs.io/form-library/documentation/surveymodel#questionTitleLocation) property value specified for the Dynamic Panel's container (page or survey).\n   * - `\"top\"` - Displays question titles above input fields.\n   * - `\"bottom\"` - Displays question titles below input fields.\n   * - `\"left\"` - Displays question titles to the left of input fields.\n   * - `\"hidden\"` - Hides question titles.\n   * @see titleLocation\n   */\n  public get templateQuestionTitleLocation(): string {\n    return this.getPropertyValue(\"templateQuestionTitleLocation\");\n  }\n  public set templateQuestionTitleLocation(val: string) {\n    this.setPropertyValue(\"templateQuestionTitleLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`templateQuestionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateQuestionTitleLocation) property instead.\n   */\n  public get templateTitleLocation(): string {\n    return this.templateQuestionTitleLocation;\n  }\n  public set templateTitleLocation(val: string) {\n    this.templateQuestionTitleLocation = val;\n  }\n  /**\n   * Sets consistent width for question titles in CSS values. Applies only when [`templateQuestionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateQuestionTitleLocation) evaluates to `\"left\"`.\n   *\n   * Default value: `undefined` (inherits the actual value from the [`questionTitleWidth`](https://surveyjs.io/form-library/documentation/api-reference/page-model#questionTitleWidth) property of the parent panel or page.\n   */\n  public get templateQuestionTitleWidth(): string {\n    return this.template.questionTitleWidth;\n  }\n  public set templateQuestionTitleWidth(val: string) {\n    this.template.questionTitleWidth = val;\n  }\n  /**\n   * Specifies the error message position.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   */\n  public get templateErrorLocation(): string {\n    return this.getPropertyValue(\"templateErrorLocation\");\n  }\n  public set templateErrorLocation(value: string) {\n    this.setPropertyValue(\"templateErrorLocation\", value.toLowerCase());\n  }\n  public resetSingleInput(): void {\n    super.resetSingleInput();\n    this.locTemplateTitle.onGetTextCallback = null;\n  }\n  protected getSingleInputQuestionsCore(question: Question, checkDynamic: boolean): Array<Question> {\n    this.onFirstRendering();\n    const res = new Array<Question>();\n    const panels = this.visiblePanels;\n    if (checkDynamic) {\n      for (let i = 0; i < panels.length; i ++) {\n        const panel = panels[i];\n        if (!panel.hasValueAnyQuestion(true) || !panel.validate(false, false)) {\n          this.fillSingleInputQuestionsByPanel(res, panel);\n        }\n      }\n    }\n    return this.getSingleInputQuestionsForDynamic(question, res);\n  }\n  protected fillSingleInputQuestionsInContainer(res: Array<Question>, innerQuestion: Question): void {\n    const panel = this.getPanelByQuestion(innerQuestion);\n    this.fillSingleInputQuestionsByPanel(res, panel);\n  }\n  private fillSingleInputQuestionsByPanel(res: Array<Question>, panel: PanelModel): void {\n    if (panel) {\n      panel.visibleQuestions.forEach(q => q.addNestedQuestion(res, true, false, false));\n    }\n  }\n  protected getSingleQuestionLocTitleCore(): LocalizableString {\n    const res = this.locTemplateTitle;\n    res.onGetTextCallback = (text: string): string => {\n      const q = this.singleInputQuestion;\n      if (!q) return text;\n      return this.processSingleInputTitle(text, this.getPanelByQuestion(q));\n    };\n    return res;\n  }\n  private processSingleInputTitle(text: string, panel: PanelModel): string {\n    if (!text) text = this.getSingleInputTitleTemplate();\n    if (!panel) return text;\n    return panel.getProcessedText(text);\n  }\n  private getSingleInputTitleTemplate(): string {\n    return this.getLocalizationString(\"panelDynamicTabTextFormat\");\n  }\n  private getPanelByQuestion(question: Question): PanelModel {\n    let parent = question.parent;\n    while(!!parent && !!parent.parent) {\n      parent = parent.parent;\n    }\n    return <PanelModel>parent;\n  }\n  protected getSingleInputAddTextCore(): string {\n    if (!this.canAddPanel) return undefined;\n    return this.panelAddText;\n  }\n  protected singleInputAddItemCore(): void {\n    this.addPanelUI();\n  }\n  protected singleInputRemoveItemCore(question: Question): void {\n    const panel = this.getPanelByQuestion(question);\n    const index = this.visiblePanelsCore.indexOf(panel);\n    this.removePanelUI(index);\n  }\n  protected getSingleQuestionOnChange(index: number): Question {\n    const panels = this.visiblePanelsCore;\n    if (panels.length > 0) {\n      if (index < 0 || index >= panels.length) index = panels.length - 1;\n      const row = panels[index];\n      const vQs = row.visibleQuestions;\n      if (vQs.length > 0) {\n        return vQs[0];\n      }\n    }\n    return null;\n  }\n  protected createSingleInputSummary(): QuestionSingleInputSummary {\n    const res = new QuestionSingleInputSummary(this, this.locNoEntriesText);\n    const items = new Array<QuestionSingleInputSummaryItem>();\n    this.visiblePanels.forEach((panel) => {\n      const locText = new LocalizableString(this, true, undefined, this.locTemplateTitle.localizationName);\n      locText.setJson(this.locTemplateTitle.getJson());\n      locText.onGetTextCallback = (text: string): string => {\n        return this.processSingleInputTitle(this.templateTitle, panel);\n      };\n      const bntEdit = new Action({ locTitle: this.getLocalizableString(\"editPanelText\"), action: () => { this.singInputEditPanel(panel); } });\n      const btnRemove = this.canRemovePanel ? new Action({ locTitle: this.locPanelRemoveText, action: () => { this.removePanelUI(panel); } }) : undefined;\n      items.push(new QuestionSingleInputSummaryItem(locText, bntEdit, btnRemove));\n    });\n    res.items = items;\n    return res;\n  }\n  protected singleInputMoveToFirstCore(): void {\n    let panel = this.singleInputQuestion?.parent;\n    while(!!panel && !!panel.parent) {\n      panel = panel.parent;\n    }\n    this.singInputEditPanel(<PanelModel>panel);\n  }\n  private singInputEditPanel(panel: PanelModel): void {\n    if (!panel) return;\n    const qs = panel.visibleQuestions;\n    if (qs.length > 0) {\n      this.setSingleInputQuestion(qs[0]);\n    }\n  }\n  /**\n   * Specifies whether to display survey element numbers within the dynamic panel and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `\"onSurvey\"` - Continues numbering across the entire survey.\n   * - `\"onPanel\"` - Starts numbering within the dynamic panel from scratch.\n   * - `\"off\"` (default) - Hides question numbers.\n   */\n  public get showQuestionNumbers(): string {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  public set showQuestionNumbers(val: string) {\n    this.setPropertyValue(\"showQuestionNumbers\", val);\n    if (!this.isLoadingFromJson && this.survey) {\n      this.survey.questionVisibilityChanged(this, this.visible, true);\n    }\n  }\n  protected notifySurveyOnChildrenVisibilityChanged(): boolean { return this.showQuestionNumbers === \"onSurvey\"; }\n  /**\n   * Specifies the location of the Remove Panel button relative to panel content.\n   *\n   * Possible values:\n   *\n   * - `\"bottom\"` (default) - Displays the Remove Panel button below panel content.\n   * - `\"right\"` - Displays the Remove Panel button to the right of panel content.\n   * @see removePanelText\n   */\n  public get removePanelButtonLocation(): string {\n    return this.getPropertyValue(\"removePanelButtonLocation\");\n  }\n  public set removePanelButtonLocation(val: string) {\n    this.setPropertyValue(\"removePanelButtonLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`removePanelButtonLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanelButtonLocation) property instead.\n   */\n  public get panelRemoveButtonLocation(): string { return this.removePanelButtonLocation; }\n  public set panelRemoveButtonLocation(val: string) { this.removePanelButtonLocation = val; }\n  /**\n   * @deprecated Use the [`showProgressBar`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#showProgressBar) property instead.\n   */\n  public get showRangeInProgress(): boolean {\n    return this.showProgressBar;\n  }\n  public set showRangeInProgress(val: boolean) {\n    this.showProgressBar = val;\n  }\n  /**\n   * @deprecated Use the [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) property instead.\n   */\n  public get renderMode(): string {\n    let displayMode = this.displayMode;\n    if (displayMode == \"carousel\") {\n      const progressBarLocation = this.progressBarLocation;\n      if (progressBarLocation == \"top\") {\n        return \"progressTop\";\n      } else if (progressBarLocation == \"bottom\") {\n        return \"progressBottom\";\n      } else if (progressBarLocation == \"topBottom\") {\n        return \"progressTopBottom\";\n      }\n    }\n    return displayMode;\n  }\n  public set renderMode(val: string) {\n    if ((val || \"\").startsWith(\"progress\")) {\n      if (val == \"progressTop\") {\n        this.progressBarLocation = \"top\";\n      } else if (val == \"progressBottom\") {\n        this.progressBarLocation = \"bottom\";\n      } else if (val == \"progressTopBottom\") {\n        this.progressBarLocation = \"topBottom\";\n      }\n      this.displayMode = \"carousel\";\n    } else {\n      this.displayMode = val as any;\n    }\n    // this.updatePanelView();\n  }\n  private updatePanelView() {\n    this.blockAnimations();\n    this.updateRenderedPanels();\n    this.releaseAnimations();\n    this.updatePanelsAnimation();\n  }\n  /**\n   * Specifies how to display panels.\n   *\n   * Possible values:\n   *\n   * - `\"list\"` (default) - Displays panels one under the other. [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/)\n   * - `\"carousel\"` - Displays panels in a carousel. Users can switch between panels using navigation buttons.\n   * - `\"tab\"` - Displays each panel within a tab. Use the [`templateTabTitle`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateTabTitle) to specify a template for tab titles. [View Demo](https://surveyjs.io/form-library/examples/tabbed-interface-for-duplicate-group-option/)\n   * @see showProgressBar\n   * @see progressBarLocation\n   */\n  @property({\n    onSet: (val, target: QuestionPanelDynamicModel) => {\n      target.fireCallback(target.renderModeChangedCallback);\n      target.updatePanelView();\n    }\n  }) displayMode: \"list\" | \"carousel\" | \"tab\";\n  /**\n   * Specifies whether to display the progress bar. Applies only if [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) is `\"carousel\"`.\n   *\n   * Default value: `true`\n   * @see progressBarLocation\n   */\n  @property({\n    onSet: (val, target: QuestionPanelDynamicModel) => {\n      target.fireCallback(target.currentIndexChangedCallback);\n    }\n  }) showProgressBar: true | false;\n  /**\n   * Specifies the alignment of the [progress bar](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#showProgressBar) relative to the currently displayed panel. Applies only if [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) is `\"carousel\"`.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` (default) - Displays the progress bar at the top of the current panel.\n   * - `\"bottom\"` - Displays the progress bar at the bottom of the current panel.\n   * - `\"topBottom\"` - Displays the progress bar at the top and bottom of the current panel.\n   */\n  @property({\n    onSet: (val, target: QuestionPanelDynamicModel) => {\n      // target.updatePanelView();\n    }\n  }) progressBarLocation: \"top\" | \"bottom\" | \"topBottom\";\n  public get tabAlign(): \"center\" | \"left\" | \"right\" {\n    return this.getPropertyValue(\"tabAlign\");\n  }\n  public set tabAlign(val: \"center\" | \"left\" | \"right\") {\n    this.setPropertyValue(\"tabAlign\", val);\n    if (this.isRenderModeTab) {\n      this.tabbedMenu.containerCss = this.getTabbedMenuCss();\n    }\n  }\n  public get isRenderModeList(): boolean {\n    return this.displayMode === \"list\" || this.isSingleInputActive;\n  }\n  public get isRenderModeTab(): boolean {\n    return this.displayMode === \"tab\" && !this.isSingleInputActive;\n  }\n  public setVisibleIndex(value: number): number {\n    if (!this.isVisible) return 0;\n    const onSurveyNumbering = this.showQuestionNumbers === \"onSurvey\";\n    let startIndex = onSurveyNumbering ? value : 0;\n    const panels = this.isDesignMode ? [this.template] : this.visiblePanelsCore;\n    for (let i = 0; i < panels.length; i++) {\n      let counter = this.setPanelVisibleIndex(panels[i], startIndex, this.showQuestionNumbers != \"off\");\n      if (onSurveyNumbering) {\n        startIndex += counter;\n      }\n    }\n    super.setVisibleIndex(!onSurveyNumbering ? value : -1);\n    return !onSurveyNumbering ? 1 : startIndex - value;\n  }\n  private setPanelVisibleIndex(\n    panel: PanelModel,\n    index: number,\n    showIndex: boolean\n  ): number {\n    if (!showIndex) {\n      panel.setVisibleIndex(-1);\n      return 0;\n    }\n    return panel.setVisibleIndex(index);\n  }\n\n  /**\n   * Indicates whether it is possible to add a new panel.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to add new panels (`allowAddPanel` is `true`).\n   * - Dynamic Panel or its parent survey is not in read-only state.\n   * - `panelCount` is less than `maxPanelCount`.\n   * @see allowAddPanel\n   * @see isReadOnly\n   * @see panelCount\n   * @see maxPanelCount\n   * @see canRemovePanel\n   */\n  public get canAddPanel(): boolean {\n    if (this.isDesignMode) return false;\n    if (!this.legacyNavigation && !this.isRenderModeList &&\n      (this.currentIndex < this.visiblePanelCount - 1 && this.newPanelPosition !== \"next\")) {\n      return false;\n    }\n    return (\n      this.allowAddPanel &&\n      !this.isReadOnly &&\n      this.panelCount < this.maxPanelCount\n    );\n  }\n  /**\n   * Indicates whether it is possible to delete panels.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to delete panels (`allowRemovePanel` is `true`).\n   * - Dynamic Panel or its parent survey is not in read-only state.\n   * - `panelCount` exceeds `minPanelCount`.\n   * @see allowRemovePanel\n   * @see isReadOnly\n   * @see panelCount\n   * @see minPanelCount\n   * @see canAddPanel\n   */\n  public get canRemovePanel(): boolean {\n    if (this.isDesignMode) return false;\n    return (\n      this.allowRemovePanel &&\n      !this.isReadOnly &&\n      this.panelCount > this.minPanelCount\n    );\n  }\n  protected rebuildPanels() {\n    if (this.isLoadingFromJson) return;\n    this.prepareValueForPanelCreating();\n    var panels = [];\n    if (this.useTemplatePanel) {\n      new QuestionPanelDynamicItem(this, this.template);\n      panels.push(this.template);\n    } else {\n      for (var i = 0; i < this.panelCount; i++) {\n        panels.push(this.createNewPanel());\n      }\n    }\n    this.panelsCore.splice(0, this.panelsCore.length, ...panels);\n    this.setValueAfterPanelsCreating();\n    this.setPanelsState();\n    this.reRunCondition();\n    this.updateFooterActions();\n    this.fireCallback(this.panelCountChangedCallback);\n    this.updateTabToolbar();\n  }\n  /**\n   * If it is not empty, then this value is set to every new panel, including panels created initially, unless the defaultValue is not empty\n   * @see defaultValue\n   * @see copyDefaultValueFromLastEntry\n   */\n  public get defaultPanelValue(): any {\n    return this.getPropertyValue(\"defaultPanelValue\");\n  }\n  public set defaultPanelValue(val: any) {\n    this.setPropertyValue(\"defaultPanelValue\", val);\n  }\n  /**\n   * Specifies whether default values for a new panel should be copied from the last panel.\n   *\n   * If you also specify `defaultValue`, it will be merged with the copied values.\n   * @see defaultValue\n   */\n  public get copyDefaultValueFromLastEntry(): boolean {\n    return this.getPropertyValue(\"copyDefaultValueFromLastEntry\");\n  }\n  public set copyDefaultValueFromLastEntry(val: boolean) {\n    this.setPropertyValue(\"copyDefaultValueFromLastEntry\", val);\n  }\n  /**\n   * @deprecated Use the [`copyDefaultValueFromLastEntry`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#copyDefaultValueFromLastEntry) property instead.\n   */\n  public get defaultValueFromLastPanel(): boolean {\n    return this.copyDefaultValueFromLastEntry;\n  }\n  public set defaultValueFromLastPanel(val: boolean) {\n    this.copyDefaultValueFromLastEntry = val;\n  }\n  protected isDefaultValueEmpty(): boolean {\n    return (\n      super.isDefaultValueEmpty() && this.isValueEmpty(this.defaultPanelValue)\n    );\n  }\n  protected setDefaultValue() {\n    if (\n      this.isValueEmpty(this.defaultPanelValue) ||\n      !this.isValueEmpty(this.defaultValue)\n    ) {\n      super.setDefaultValue();\n      return;\n    }\n    if (!this.isEmpty() || this.panelCount == 0) return;\n    var newValue = [];\n    for (var i = 0; i < this.panelCount; i++) {\n      newValue.push(this.defaultPanelValue);\n    }\n    this.value = newValue;\n  }\n  public get isValueArray(): boolean { return true; }\n  public isEmpty(): boolean {\n    var val = this.value;\n    if (!val || !Array.isArray(val)) return true;\n    for (var i = 0; i < val.length; i++) {\n      if (!this.isRowEmpty(val[i])) return false;\n    }\n    return true;\n  }\n  public getProgressInfo(): IProgressInfo {\n    return SurveyElement.getProgressInfoByElements(\n      this.visiblePanelsCore,\n      this.isRequired\n    );\n  }\n  private isRowEmpty(val: any) {\n    for (var prop in val) {\n      if (val.hasOwnProperty(prop)) return false;\n    }\n    return true;\n  }\n\n  /**\n   * @deprecated Call the [`addPanel(undefined, true)`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#addPanel) method instead.\n   */\n  public addPanelUI(): PanelModel {\n    return this.addPanel(undefined, true);\n  }\n  /**\n   * Adds a new panel based on the [template](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#template).\n   * @param index *(Optional)* An index at which to insert the new panel. `undefined` adds the panel to the end or inserts it after the current panel if [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#renderMode) is `\"tab\"`. A negative index (for instance, -1) adds the panel to the end in all cases, regardless of the `displayMode` value.\n   * @param runAdditionalActions *(Optional)* Pass `true` if you want to perform additional actions: check whether a new panel [can be added](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#canAddPanel), expand and focus the new panel, and run animated effects. Default value: `false` (the listed actions are skipped).\n   * @see panelCount\n   * @see panels\n   * @see allowAddPanel\n   * @see newPanelPosition\n   */\n  public addPanel(index?: number, runAdditionalActions?: boolean): PanelModel {\n    const isUI = runAdditionalActions === true;\n    if (isUI) {\n      if (!this.canAddPanel) return null;\n      if (!this.canLeaveCurrentPanel()) return null;\n    }\n    const newPanel = this.addPanelCore(index);\n    if (isUI) {\n      if (this.displayMode === \"list\" && this.panelsState !== \"default\") {\n        newPanel.expand();\n      }\n      this.focusNewPanelCallback = () => {\n        newPanel?.focusFirstQuestion();\n      };\n      if (!this.isPanelsAnimationRunning) {\n        this.focusNewPanel();\n      }\n    }\n    return newPanel;\n  }\n  private addPanelCore(index: number): PanelModel {\n    const curIndex = this.currentIndex;\n    if (index === undefined) {\n      index = curIndex < 0 ? this.panelCount : curIndex + 1;\n    }\n    if (index < 0 || index > this.panelCount) {\n      index = this.panelCount;\n    }\n    this.updateValueOnAddingPanel(curIndex < 0 ? this.panelCount - 1 : curIndex, index);\n    if (!this.isRenderModeList) {\n      this.currentIndex = index;\n    }\n    this.notifyOnPanelAddedRemoved(true, index);\n    return this.panelsCore[index];\n  }\n  private focusNewPanelCallback: () => void;\n  private focusNewPanel() {\n    if (this.focusNewPanelCallback) {\n      this.focusNewPanelCallback();\n      this.focusNewPanelCallback = undefined;\n    }\n  }\n  private updateValueOnAddingPanel(prevIndex: number, index: number): void {\n    this.panelCount++;\n    let newValue = this.value;\n    if (!Array.isArray(newValue) || newValue.length !== this.panelCount) return;\n    let hasModified = false;\n    const lastIndex = this.panelCount - 1;\n    if (index < lastIndex) {\n      hasModified = true;\n      const rec = newValue[lastIndex];\n      newValue.splice(lastIndex, 1);\n      newValue.splice(index, 0, rec);\n    }\n    if (!this.isValueEmpty(this.defaultPanelValue)) {\n      hasModified = true;\n      this.copyValue(newValue[index], this.defaultPanelValue);\n    }\n    if (this.copyDefaultValueFromLastEntry && newValue.length > 1) {\n      const fromIndex = prevIndex > -1 && prevIndex <= lastIndex ? prevIndex : lastIndex;\n      hasModified = true;\n      this.copyValue(newValue[index], newValue[fromIndex]);\n    }\n    if (hasModified) {\n      this.value = newValue;\n    }\n  }\n  private canLeaveCurrentPanel(): boolean {\n    return this.displayMode === \"list\" || !this.currentPanel || this.currentPanel.validate(true, true);\n  }\n  private copyValue(dest: any, src: any) {\n    for (var key in src) {\n      dest[key] = src[key];\n    }\n  }\n  public getPanelRemoveButtonId(panel: PanelModel): string {\n    return panel.id + \"_remove_button\";\n  }\n  public isRequireConfirmOnDelete(val: any): boolean {\n    if (!this.confirmDelete) return false;\n    const index = this.getVisualPanelIndex(val);\n    if (index < 0 || index >= this.visiblePanelCount) return false;\n    const panelValue = this.visiblePanelsCore[index].getValue();\n    return !this.isValueEmpty(panelValue) &&\n      (this.isValueEmpty(this.defaultPanelValue) || !this.isTwoValueEquals(panelValue, this.defaultPanelValue));\n  }\n  /**\n   * Switches Dynamic Panel to the next panel. Returns `true` in case of success, or `false` if `displayMode` is `\"list\"` or the current panel contains validation errors.\n   * @see displayMode\n   */\n  public goToNextPanel(): boolean {\n    if (this.currentIndex < 0) return false;\n    if (!this.canLeaveCurrentPanel()) return false;\n    this.currentIndex++;\n    return true;\n  }\n  /**\n   * Switches Dynamic Panel to the previous panel.\n   */\n  public goToPrevPanel() {\n    if (this.currentIndex < 0) return;\n    this.currentIndex--;\n  }\n  /**\n   * @deprecated Call the [`removePanel(value, true)`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanel) method instead.\n   */\n  public removePanelUI(value: any): void {\n    this.removePanel(value, this.isRequireConfirmOnDelete(value));\n  }\n  /**\n   * Deletes a panel from the [`panels`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#panels) array.\n   * @param value A `PanelModel` instance or zero-based panel index.\n   * @param confirmDelete *(Optional)* Pass `true` if you want to perform additional actions: check whether the panel [can be removed](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#canRemovePanel) and display a confirmation dialog.\n   * @see addPanel\n   */\n  public removePanel(value: any, confirmDelete?: boolean): void {\n    const visIndex = this.getVisualPanelIndex(value);\n    if (visIndex < 0 || visIndex >= this.visiblePanelCount) return;\n    const isUI = confirmDelete !== undefined;\n    if (isUI) {\n      if (!this.canRemovePanel) return;\n      const removePanel = () => {\n        this.removePanelCore(visIndex);\n        const pnlCount = this.visiblePanelCount;\n        const nextIndex = visIndex >= pnlCount ? pnlCount - 1 : visIndex;\n        let id = pnlCount === 0 ? this.addButtonId : (nextIndex > -1 ? this.getPanelRemoveButtonId(this.visiblePanels[nextIndex]) : \"\");\n        if (!!id) {\n          SurveyElement.FocusElement(id, true, this.survey?.rootElement);\n        }\n      };\n      if (confirmDelete) {\n        confirmActionAsync({\n          message: this.confirmDeleteText,\n          funcOnYes: () => { removePanel(); },\n          locale: this.getLocale(),\n          rootElement: this.survey.rootElement,\n          cssClass: this.cssClasses.confirmDialog\n        });\n      } else {\n        removePanel();\n      }\n    } else {\n      this.removePanelCore(visIndex);\n    }\n  }\n  private removedPanelIndex: number;\n  private removePanelCore(visIndex: number): void {\n    this.removedPanelIndex = visIndex;\n    const panel = this.visiblePanelsCore[visIndex];\n    const index = this.panelsCore.indexOf(panel);\n    if (index < 0) return;\n    if (this.survey && !this.survey.dynamicPanelRemoving(this, index, panel)) return;\n    this.panelsCore.splice(index, 1);\n    this.updateBindings(\"panelCount\", this.panelCount);\n    this.singleInputOnRemoveItem(visIndex);\n    var value = this.value;\n    if (!value || !Array.isArray(value) || index >= value.length) {\n      this.updateFooterActions();\n    } else {\n      this.isValueChangingInternally = true;\n      value.splice(index, 1);\n      this.value = value;\n      this.updateFooterActions();\n      this.fireCallback(this.panelCountChangedCallback);\n      this.notifyOnPanelAddedRemoved(false, index, panel);\n      this.isValueChangingInternally = false;\n    }\n  }\n  private notifyOnPanelAddedRemoved(isAdded: boolean, index: number, panel?: PanelModel): void {\n    if (!panel) {\n      panel = this.panelsCore[index];\n    }\n    if (this.survey) {\n      const updateIndeces = this.showQuestionNumbers === \"onSurvey\";\n      if (isAdded) {\n        this.survey.dynamicPanelAdded(this, index, panel, updateIndeces);\n      } else {\n        this.survey.dynamicPanelRemoved(this, index, panel, updateIndeces);\n      }\n    }\n    if (isAdded && !!panel && this.showQuestionNumbers === \"onPanel\") {\n      panel.setVisibleIndex(0);\n    }\n  }\n  private getVisualPanelIndex(val: any): number {\n    if (Helpers.isNumber(val)) return val;\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i] === val || visPanels[i].data === val) return i;\n    }\n    return -1;\n  }\n  private getPanelVisibleIndexById(id: string): number {\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i].id === id) return i;\n    }\n    return -1;\n  }\n  public locStrsChanged() {\n    super.locStrsChanged();\n    this.locTemplateTitle.strChanged();\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      panels[i].locStrsChanged();\n    }\n    if (this.tabbedMenu) {\n      this.tabbedMenu.locStrsChanged();\n    }\n  }\n  public clearIncorrectValues() {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.clearIncorrectValuesInPanel(i);\n    }\n  }\n  public clearErrors() {\n    super.clearErrors();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].clearErrors();\n    }\n  }\n  public getQuestionFromArray(name: string, index: number): IQuestion {\n    if (index < 0 || index >= this.panelsCore.length) return null;\n    return this.panelsCore[index].getQuestionByName(name);\n  }\n  private clearIncorrectValuesInPanel(index: number) {\n    var panel = this.panelsCore[index];\n    panel.clearIncorrectValues();\n    var val = this.value;\n    var values = !!val && index < val.length ? val[index] : null;\n    if (!values) return;\n    var isChanged = false;\n    for (var key in values) {\n      if (this.getSharedQuestionFromArray(key, index)) continue;\n      var q = panel.getQuestionByValueName(key);\n      if (!!q) continue;\n      if (\n        this.iscorrectValueWithPostPrefix(panel, key, settings.commentSuffix) ||\n        this.iscorrectValueWithPostPrefix(\n          panel,\n          key,\n          settings.matrix.totalsSuffix\n        )\n      )\n        continue;\n      delete values[key];\n      isChanged = true;\n    }\n    if (isChanged) {\n      val[index] = values;\n      this.value = val;\n    }\n  }\n  private iscorrectValueWithPostPrefix(\n    panel: PanelModel,\n    key: string,\n    postPrefix: string\n  ): boolean {\n    if (key.indexOf(postPrefix) !== key.length - postPrefix.length)\n      return false;\n    return !!panel.getQuestionByName(key.substring(0, key.indexOf(postPrefix)));\n  }\n  public getSharedQuestionFromArray(name: string, panelIndex: number): Question {\n    return !!this.survey && !!this.valueName ? <Question>(this.survey.getQuestionByValueNameFromArray(this.valueName, name, panelIndex)) : null;\n  }\n  public addConditionObjectsByContext(objects: Array<IConditionObject>, context: any): void {\n    const contextQ = !!context?.isValidator ? context.errorOwner : context;\n    const hasContext = !!context && (context === true || this.template.questions.indexOf(contextQ) > -1);\n    const panelObjs = new Array<IConditionObject>();\n    const questions = this.template.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].addConditionObjectsByContext(panelObjs, context);\n    }\n    for (var index = 0; index < settings.panel.maxPanelCountInCondition; index++) {\n      const indexStr = \"[\" + index + \"].\";\n      const prefixName = this.getValueName() + indexStr;\n      const prefixText = this.processedTitle + indexStr;\n      for (var i = 0; i < panelObjs.length; i++) {\n        if (!!panelObjs[i].context) {\n          objects.push(panelObjs[i]);\n        } else {\n          objects.push({\n            name: prefixName + panelObjs[i].name,\n            text: prefixText + panelObjs[i].text,\n            question: panelObjs[i].question,\n          });\n        }\n      }\n    }\n    if (hasContext) {\n      const prefixName = context === true ? this.getValueName() + \".\" : \"\";\n      const prefixText = context === true ? this.processedTitle + \".\" : \"\";\n      const panelPrefix = settings.expressionVariables.panel + \".\";\n      for (var i = 0; i < panelObjs.length; i++) {\n        if (panelObjs[i].question == context) continue;\n        const obj: IConditionObject = {\n          name: prefixName + panelPrefix + panelObjs[i].name,\n          text: prefixText + panelPrefix + panelObjs[i].text,\n          question: panelObjs[i].question\n        };\n        obj.context = this;\n        objects.push(obj);\n      }\n    }\n  }\n  protected collectNestedQuestionsCore(questions: Question[], visibleOnly: boolean, includeNested: boolean, includeItSelf: boolean): void {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    const panels = visibleOnly ? this.visiblePanelsCore : this.panelsCore;\n    if (!Array.isArray(panels)) return;\n    panels.forEach(panel => {\n      panel.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n    });\n  }\n  public getConditionJson(operator: string = null, path: string = null): any {\n    if (!path) return super.getConditionJson(operator);\n    var questionName = path;\n    var pos = path.indexOf(\".\");\n    if (pos > -1) {\n      questionName = path.substring(0, pos);\n      path = path.substring(pos + 1);\n    }\n    var question = this.template.getQuestionByName(questionName);\n    if (!question) return null;\n    return question.getConditionJson(operator, path);\n  }\n  protected onReadOnlyChanged(): void {\n    var readOnly = this.isReadOnly;\n    this.template.readOnly = readOnly;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].readOnly = readOnly;\n    }\n    this.updateNoEntriesTextDefaultLoc();\n    this.updateFooterActions();\n    super.onReadOnlyChanged();\n  }\n  private updateNoEntriesTextDefaultLoc(): void {\n    const loc = this.getLocalizableString(\"noEntriesText\");\n    if (!loc) return;\n    loc.localizationName = (this.isReadOnly || !this.allowAddPanel) ? \"noEntriesReadonlyText\" : \"noEntriesText\";\n  }\n  public onSurveyLoad(): void {\n    this.template.readOnly = this.isReadOnly;\n    this.template.onSurveyLoad();\n    if (this.panelCount < this.minPanelCount) {\n      this.panelCount = this.minPanelCount;\n    }\n    if (this.panelCount > this.maxPanelCount) {\n      this.panelCount = this.maxPanelCount;\n    }\n    this.buildPanelsFirstTime();\n    super.onSurveyLoad();\n  }\n  private hasPanelBuildFirstTime: boolean;\n  private isBuildingPanelsFirstTime: boolean;\n  private buildPanelsFirstTime(force: boolean = false): void {\n    if (this.hasPanelBuildFirstTime) return;\n    if (!force && this.wasNotRenderedInSurvey) return;\n    this.blockAnimations();\n    this.hasPanelBuildFirstTime = true;\n    this.isBuildingPanelsFirstTime = true;\n    if (this.getPropertyValue(\"panelCount\") > 0) {\n      this.panelCount = this.getPropertyValue(\"panelCount\");\n    }\n    if (this.useTemplatePanel) {\n      this.rebuildPanels();\n    }\n    this.setPanelsSurveyImpl();\n    this.setPanelsState();\n    this.assignOnPropertyChangedToTemplate();\n    if (this.data && this.isValueChangedWithoutPanels) {\n      this.isValueChangedWithoutPanels = false;\n      this.runTriggersOnBuildPanelsFirstTime();\n    }\n    if (!!this.survey) {\n      for (var i = 0; i < this.panelCount; i++) {\n        this.notifyOnPanelAddedRemoved(true, i);\n      }\n    }\n    this.updateIsReady();\n    if (!this.showAddPanelButton) {\n      this.updateNoEntriesTextDefaultLoc();\n    }\n    this.updateFooterActions();\n    this.isBuildingPanelsFirstTime = false;\n    this.releaseAnimations();\n  }\n  private runTriggersOnBuildPanelsFirstTime(): void {\n    const val = this.value;\n    this.visiblePanelsCore.forEach(p => {\n      const panelValue = this.getPanelItemData(p.data);\n      if (!Helpers.isValueEmpty(panelValue)) {\n        const triggeredValue = Helpers.createCopyWithPrefix(panelValue, settings.expressionVariables.panel + \".\");\n        p.questions.forEach(q => q.runTriggers(\"\", undefined, triggeredValue));\n      }\n    });\n  }\n  private get showAddPanelButton(): boolean { return this.allowAddPanel && !this.isReadOnly; }\n  private get wasNotRenderedInSurvey(): boolean {\n    return !this.hasPanelBuildFirstTime && !this.wasRendered && !!this.survey;\n  }\n  private get canBuildPanels(): boolean {\n    return !this.isLoadingFromJson && !this.useTemplatePanel;\n  }\n  protected onFirstRenderingCore(): void {\n    super.onFirstRenderingCore();\n    this.buildPanelsFirstTime();\n    this.template.onFirstRendering();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].onFirstRendering();\n    }\n  }\n  public localeChanged(): void {\n    super.localeChanged();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].localeChanged();\n    }\n  }\n  protected runConditionCore(properties: HashTable<any>): void {\n    super.runConditionCore(properties);\n    this.runPanelsCondition(this.panelsCore, properties);\n  }\n  public runTriggers(name: string, value: any, keys?: any): void {\n    super.runTriggers(name, value, keys);\n    this.visiblePanelsCore.forEach(p => {\n      p.questions.forEach(q => q.runTriggers(name, value, keys));\n    });\n  }\n  private reRunCondition() {\n    if (!this.data) return;\n    this.runCondition(this.getDataFilteredProperties());\n  }\n  protected runPanelsCondition(panels: PanelModel[], properties: HashTable<any>): void {\n    this.isValueChangingInternally = true;\n    let visibleIndex = 0;\n    for (var i = 0; i < panels.length; i++) {\n      const panel = panels[i];\n      const panelName = settings.expressionVariables.panel;\n      const newProps = Helpers.createCopy(properties);\n      newProps[panelName] = panel;\n      panel.runCondition(newProps);\n      if (panel.isVisible) {\n        visibleIndex++;\n      }\n    }\n    this.isValueChangingInternally = false;\n  }\n  private isValueChangedWithoutPanels: boolean;\n  onAnyValueChanged(name: string, questionName: string): void {\n    super.onAnyValueChanged(name, questionName);\n    if (!this.hasPanelBuildFirstTime && name === this.getValueName()) {\n      this.isValueChangedWithoutPanels = true;\n    }\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].onAnyValueChanged(name, questionName);\n      this.panelsCore[i].onAnyValueChanged(settings.expressionVariables.panel, \"\");\n    }\n  }\n  private hasKeysDuplicated(context: ValidationContext): boolean {\n    var keyValues: Array<any> = [];\n    var res;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      res =\n        this.isValueDuplicated(this.panelsCore[i], keyValues, context) ||\n        res;\n    }\n    return res;\n  }\n  private updatePanelsContainsErrors() {\n    var question = this.changingValueQuestion;\n    var parent = <PanelModel>question.parent;\n    while(!!parent) {\n      parent.updateContainsErrors();\n      parent = <PanelModel>parent.parent;\n    }\n    this.updateContainsErrors();\n  }\n  protected validateElementCore(context: ValidationContext): boolean {\n    if (this.isValueChangingInternally || this.isBuildingPanelsFirstTime) return true;\n    let res = true;\n    if (!!this.changingValueQuestion) {\n      const qRes = this.changingValueQuestion.validateElement(context);\n      res = !this.hasKeysDuplicated(context) && qRes;\n      this.updatePanelsContainsErrors();\n    } else {\n      res = this.validateInPanels(context);\n    }\n    return super.validateElementCore(context) && res;\n  }\n  protected getContainsErrors(): boolean {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      if (panels[i].containsErrors) return true;\n    }\n    return false;\n  }\n  protected getIsAnswered(): boolean {\n    if (!super.getIsAnswered()) return false;\n    var panels = this.visiblePanelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var visibleQuestions = <Array<any>>[];\n      panels[i].addQuestionsToList(visibleQuestions, true);\n      for (var j = 0; j < visibleQuestions.length; j++) {\n        if (!visibleQuestions[j].isAnswered) return false;\n      }\n    }\n    return true;\n  }\n  protected clearValueOnHidding(isClearOnHidden: boolean): void {\n    if (!isClearOnHidden) {\n      if (!!this.survey && this.survey.getQuestionClearIfInvisible(\"onHidden\") === \"none\") return;\n      this.clearValueInPanelsIfInvisible(\"onHiddenContainer\");\n    }\n    super.clearValueOnHidding(isClearOnHidden);\n  }\n  public clearValueIfInvisible(reason: string = \"onHidden\"): void {\n    const panelReason = reason === \"onHidden\" ? \"onHiddenContainer\" : reason;\n    this.clearValueInPanelsIfInvisible(panelReason);\n    super.clearValueIfInvisible(reason);\n  }\n  private clearValueInPanelsIfInvisible(reason: string): void {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      const panel = this.panelsCore[i];\n      var questions = panel.questions;\n      this.isSetPanelItemData = {};\n      for (var j = 0; j < questions.length; j++) {\n        const q = questions[j];\n        if (q.visible && !panel.isVisible) continue;\n        q.clearValueIfInvisible(reason);\n        this.isSetPanelItemData[q.getValueName()] = this.maxCheckCount + 1;\n      }\n    }\n    this.isSetPanelItemData = {};\n  }\n  protected getIsRunningValidators(): boolean {\n    if (super.getIsRunningValidators()) return true;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var questions = this.panelsCore[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        if (questions[j].isRunningValidators) return true;\n      }\n    }\n    return false;\n  }\n  public getAllErrors(): Array<SurveyError> {\n    var result = super.getAllErrors();\n    const panels = this.visiblePanelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var questions = panels[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        var errors = questions[j].getAllErrors();\n        if (errors && errors.length > 0) {\n          result = result.concat(errors);\n        }\n      }\n    }\n    return result;\n  }\n  public getValueGetterContext(): IValueGetterContext {\n    return new PanelDynamicValueGetterContext(this);\n  }\n  protected getDisplayValueCore(keysAsText: boolean, value: any): any {\n    var values = this.getUnbindValue(value);\n    if (!values || !Array.isArray(values)) return values;\n    for (var i = 0; i < this.panelsCore.length && i < values.length; i++) {\n      var val = values[i];\n      if (!val) continue;\n      values[i] = this.getPanelDisplayValue(i, val, keysAsText);\n    }\n    return values;\n  }\n\n  private getPanelDisplayValue(\n    panelIndex: number,\n    val: any,\n    keysAsText: boolean\n  ): any {\n    if (!val) return val;\n    var panel = this.panelsCore[panelIndex];\n    var keys = Object.keys(val);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var question = panel.getQuestionByValueName(key);\n      if (!question) {\n        question = this.getSharedQuestionFromArray(key, panelIndex);\n      }\n      if (!!question) {\n        var qValue = question.getDisplayValue(keysAsText, val[key]);\n        val[key] = qValue;\n        if (keysAsText && !!question.title && question.title !== key) {\n          val[question.title] = qValue;\n          delete val[key];\n        }\n      }\n    }\n    return val;\n  }\n  private validateInPanels(context: ValidationContext): boolean {\n    let res = true;\n    const panels = this.visiblePanels;\n    const keyValues: Array<any> = [];\n    for (let i = 0; i < panels.length; i++) {\n      let isPnlValid = panels[i].validateElement(context);\n      isPnlValid = !this.isValueDuplicated(panels[i], keyValues, context) && isPnlValid;\n      if (!this.isRenderModeList && !isPnlValid && res && context.focusOnFirstError) {\n        this.currentIndex = i;\n      }\n      res = isPnlValid && res;\n    }\n    return res;\n  }\n  private isValueDuplicated(panel: PanelModel, keyValues: Array<any>, context: ValidationContext): boolean {\n    if (!this.keyName) return false;\n    var question = <Question>panel.getQuestionByValueName(this.keyName);\n    if (!question || question.isEmpty()) return false;\n    var value = question.value;\n    if (\n      !!this.changingValueQuestion &&\n      question != this.changingValueQuestion\n    ) {\n      question.validateElement(context);\n    }\n    for (var i = 0; i < keyValues.length; i++) {\n      if (value == keyValues[i]) {\n        if (context.fireCallback) {\n          question.addError(\n            new KeyDuplicationError(this.keyDuplicationError, this)\n          );\n        }\n        context.setError(question);\n        return true;\n      }\n    }\n    keyValues.push(value);\n    return false;\n  }\n  public getPanelActions(panel: PanelModel): Array<IAction> {\n    let actions = panel.footerActions;\n    if (this.removePanelButtonLocation !== \"right\") {\n      actions.push(new Action({\n        id: `remove-panel-${panel.id}`,\n        component: \"sv-paneldynamic-remove-btn\",\n        visible: <any>new ComputedUpdater(() => [this.canRenderRemovePanel(panel, \"bottom\")].every((val: boolean) => val === true)),\n        data: { question: this, panel: panel }\n      }));\n    }\n    if (!!this.survey) {\n      actions = this.survey.getUpdatedPanelFooterActions(panel, actions, this);\n    }\n    return actions;\n  }\n  public canRenderRemovePanelOnRight(panel: PanelModel): boolean {\n    return this.canRenderRemovePanel(panel, \"right\");\n  }\n  private canRenderRemovePanel(panel: PanelModel, side: string): boolean {\n    const canRemove = this.canRemovePanel;\n    const notCollpased = panel.state !== \"collapsed\";\n    return this.removePanelButtonLocation === side && canRemove && notCollpased;\n  }\n  protected createNewPanel(): PanelModel {\n    var panel = this.createAndSetupNewPanelObject();\n    var json = this.template.toJSON();\n    new JsonObject().toObject(json, panel);\n    panel.renderWidth = \"100%\";\n    panel.updateCustomWidgets();\n    panel.questions.forEach(q => q.setParentQuestion(this));\n    new QuestionPanelDynamicItem(this, panel);\n    if (this.wasRendered) {\n      panel.onFirstRendering();\n      panel.locStrsChanged();\n    }\n    panel.onGetFooterActionsCallback = () => {\n      return this.getPanelActions(panel);\n    };\n    panel.onGetFooterToolbarCssCallback = () => { return this.cssClasses.panelFooter; };\n    panel.registerPropertyChangedHandlers([\"visible\"], () => {\n      if (panel.visible)this.onPanelAdded(panel);\n      else this.onPanelRemoved(panel);\n      this.updateFooterActions();\n    });\n    return panel;\n  }\n  protected createAndSetupNewPanelObject(): PanelModel {\n    var panel = this.createNewPanelObject();\n    panel.isInteractiveDesignElement = false;\n    panel.setParentQuestion(this);\n    panel.onGetQuestionTitleLocation = () => this.getTemplateQuestionTitleLocation();\n    panel.onGetQuestionTitleWidth = () => this.templateQuestionTitleWidth;\n    return panel;\n  }\n  private getTemplateQuestionTitleLocation(): string {\n    return this.templateQuestionTitleLocation != \"default\"\n      ? this.templateQuestionTitleLocation\n      : this.getTitleLocationCore();\n  }\n  public getChildErrorLocation(child: Question): string {\n    if (this.templateErrorLocation !== \"default\") return this.templateErrorLocation;\n    return super.getChildErrorLocation(child);\n  }\n  protected createNewPanelObject(): PanelModel {\n    return Serializer.createClass(\"panel\");\n  }\n  private settingPanelCountBasedOnValue: boolean;\n  private setPanelCountBasedOnValue() {\n    if (this.isValueChangingInternally || this.useTemplatePanel) return;\n    var val = this.value;\n    var newPanelCount = val && Array.isArray(val) ? val.length : 0;\n    if (newPanelCount == 0 && this.getPropertyValue(\"panelCount\") > 0) {\n      newPanelCount = this.getPropertyValue(\"panelCount\");\n    }\n    this.settingPanelCountBasedOnValue = true;\n    this.panelCount = newPanelCount;\n    this.settingPanelCountBasedOnValue = false;\n  }\n  public setQuestionValue(newValue: any): void {\n    if (this.settingPanelCountBasedOnValue) return;\n    super.setQuestionValue(newValue, false);\n    this.setPanelCountBasedOnValue();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelUpdateValueFromSurvey(this.panelsCore[i]);\n    }\n    this.updateIsAnswered();\n  }\n  public onSurveyValueChanged(newValue: any): void {\n    if (newValue === undefined && this.isAllPanelsEmpty()) return;\n    super.onSurveyValueChanged(newValue);\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelSurveyValueChanged(this.panelsCore[i]);\n    }\n    if (newValue === undefined) {\n      this.setValueBasedOnPanelCount();\n    }\n    this.updateIsReady();\n  }\n  private isAllPanelsEmpty(): boolean {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      if (!Helpers.isValueEmpty(this.panelsCore[i].getValue()))\n        return false;\n    }\n    return true;\n  }\n  private panelUpdateValueFromSurvey(panel: PanelModel) {\n    const questions = panel.questions;\n    var values = this.getPanelItemData(panel.data);\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      q.updateValueFromSurvey(values[q.getValueName()]);\n      q.updateCommentFromSurvey(\n        values[q.getValueName() + settings.commentSuffix]\n      );\n      q.initDataUI();\n    }\n  }\n  private panelSurveyValueChanged(panel: PanelModel) {\n    var questions = panel.questions;\n    var values = this.getPanelItemData(panel.data);\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      q.onSurveyValueChanged(values[q.getValueName()]);\n    }\n  }\n  protected onSetData(): void {\n    super.onSetData();\n    if (!this.isLoadingFromJson && this.useTemplatePanel) {\n      this.setTemplatePanelSurveyImpl();\n      this.rebuildPanels();\n    }\n  }\n  protected isNewValueCorrect(val: any): boolean {\n    return Array.isArray(val);\n  }\n  public getValueChangingOptions(childQuestion: Question): any {\n    let pnl = childQuestion.parent;\n    while(pnl.parent) {\n      pnl = pnl.parent;\n    }\n    const panel = pnl;\n    const panelIndex = this.panels.indexOf(<PanelModel>panel);\n    return {\n      question: this,\n      panel: panel,\n      name: childQuestion.name,\n      panelIndex: panelIndex,\n      panelData: this.getPanelItemDataByIndex(panelIndex),\n      oldValue: childQuestion.value\n    };\n  }\n  //IQuestionPanelDynamicData\n  getItemIndex(item: ISurveyData): number {\n    var res = this.items.indexOf(item);\n    return res > -1 ? res : this.items.length;\n  }\n  getVisibleItemIndex(item: ISurveyData): number {\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i].data === item) return i;\n    }\n    return visPanels.length;\n  }\n  getPanelItemData(item: ISurveyData): any {\n    return this.getPanelItemDataByIndex(this.items.indexOf(item));\n  }\n  private getPanelItemDataByIndex(index: number): any {\n    const items = this.items;\n    var qValue = this.value;\n    if (index < 0 && Array.isArray(qValue) && qValue.length > items.length) {\n      index = items.length;\n    }\n    if (index < 0) return {};\n    if (!qValue || !Array.isArray(qValue) || qValue.length <= index) return {};\n    return qValue[index];\n  }\n  private isSetPanelItemData: HashTable<number> = {};\n  private static maxCheckCount = 3;\n  setPanelItemData(item: ISurveyData, name: string, val: any): void {\n    if (this.isSetPanelItemData[name] > this.maxCheckCount)\n      return;\n    if (!this.isSetPanelItemData[name]) {\n      this.isSetPanelItemData[name] = 0;\n    }\n    this.isSetPanelItemData[name]++;\n    var items = this.items;\n    var index = items.indexOf(item);\n    if (index < 0) index = items.length;\n    var qValue = this.getUnbindValue(this.value);\n    if (!qValue || !Array.isArray(qValue)) {\n      qValue = [];\n    }\n    if (qValue.length <= index) {\n      for (var i = qValue.length; i <= index; i++) {\n        qValue.push({});\n      }\n    }\n    if (!qValue[index]) qValue[index] = {};\n    const oldVal = qValue[index][name];\n    if (!this.isValueEmpty(val)) {\n      qValue[index][name] = val;\n    } else {\n      delete qValue[index][name];\n    }\n    if (index >= 0 && index < this.panelsCore.length) {\n      this.changingValueQuestion = this.panelsCore[index].getQuestionByValueName(\n        name\n      );\n    }\n    this.value = qValue;\n    this.changingValueQuestion = null;\n    this.isSetPanelItemData[name]--;\n    if (this.isSetPanelItemData[name] - 1) {\n      delete this.isSetPanelItemData[name];\n    }\n  }\n  getRootData(): ISurveyData {\n    return this.data;\n  }\n  public getPlainData(options: IPlainDataOptions = { includeEmpty: true }): IQuestionPlainData {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      questionPlainData.isNode = true;\n      const prevData = Array.isArray(questionPlainData.data) ? [].concat(questionPlainData.data) : [];\n      questionPlainData.data = this.panels.map(\n        (panel: PanelModel, index: number) => {\n          var panelDataItem = <any>{\n            name: panel.name || index,\n            title: panel.title || \"Panel\",\n            value: panel.getValue(),\n            displayValue: panel.getValue(),\n            getString: (val: any) =>\n              typeof val === \"object\" ? JSON.stringify(val) : val,\n            isNode: true,\n            data: panel.questions\n              .map((question: Question) => question.getPlainData(options))\n              .filter((d: any) => !!d),\n          };\n          (options.calculations || []).forEach((calculation) => {\n            panelDataItem[calculation.propertyName] = (<any>panel)[\n              calculation.propertyName\n            ];\n          });\n          return panelDataItem;\n        }\n      );\n      questionPlainData.data = questionPlainData.data.concat(prevData);\n    }\n    return questionPlainData;\n  }\n  public updateElementCss(reNew?: boolean) {\n    super.updateElementCss(reNew);\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var el = this.panelsCore[i];\n      el.updateElementCss(reNew);\n    }\n  }\n  public get progressText(): string {\n    var rangeMax = this.visiblePanelCount;\n    return this.getLocalizationFormatString(\"panelDynamicProgressText\", this.currentIndex + 1, rangeMax);\n  }\n  public get progress(): string {\n    return ((this.currentIndex + 1) / this.visiblePanelCount) * 100 + \"%\";\n  }\n  public get progressBarAriaLabel(): string {\n    return getLocaleString(\"progressbar\", this.getLocale());\n  }\n  public getRootCss(): string {\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.empty, this.getShowNoEntriesPlaceholder()).toString();\n  }\n  public get cssHeader(): string {\n    const showTab = this.isRenderModeTab && !!this.visiblePanelCount;\n    return new CssClassBuilder()\n      .append(super.getCssHeader(this.cssClasses))\n      .append(this.cssClasses.headerTab, this.hasTitleOnTop && showTab)\n      .toString();\n  }\n  public getTabsContainerCss(): string {\n    return new CssClassBuilder().append(this.cssClasses.tabsContainer).append(this.cssClasses.tabsContainerWithHeader, this.hasTitleOnTop).toString();\n  }\n  public getPanelWrapperCss(panel: PanelModel): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.panelWrapper, !panel || panel.visible)\n      .append(this.cssClasses.panelWrapperList, this.isRenderModeList)\n      .append(this.cssClasses.panelWrapperInRow, this.removePanelButtonLocation === \"right\")\n      .toString();\n  }\n  public getPanelRemoveButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.button)\n      .append(this.cssClasses.buttonRemove)\n      .append(this.cssClasses.buttonRemoveRight, this.removePanelButtonLocation === \"right\")\n      .toString();\n  }\n  public getAddButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.button)\n      .append(this.cssClasses.buttonAdd)\n      .append(this.cssClasses.buttonAdd + \"--list-mode\", this.displayMode === \"list\")\n      .toString();\n  }\n  public getPrevButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.buttonPrev)\n      .append(this.cssClasses.buttonPrevDisabled, !this.isPrevButtonVisible)\n      .toString();\n  }\n  public getNextButtonCss(): string {\n    return new CssClassBuilder()\n      .append(this.cssClasses.buttonNext)\n      .append(this.cssClasses.buttonNextDisabled, !this.isNextButtonVisible)\n      .toString();\n  }\n  /**\n   * A text displayed when Dynamic Panel contains no entries.\n   */\n  public get noEntriesText(): string {\n    return this.getLocalizableStringText(\"noEntriesText\");\n  }\n  public set noEntriesText(val: string) {\n    this.setLocalizableStringText(\"noEntriesText\", val);\n  }\n  public get locNoEntriesText(): LocalizableString {\n    return this.getLocalizableString(\"noEntriesText\");\n  }\n  public getShowNoEntriesPlaceholder(): boolean {\n    return !!this.cssClasses.noEntriesPlaceholder && !this.isDesignMode && this.visiblePanelCount === 0;\n  }\n  public needResponsiveWidth(): boolean {\n    const panel = <PanelModel>this.getPanel();\n    if (!!panel && panel.needResponsiveWidth()) return true;\n    return false;\n  }\n  private tabbedMenuValue: AdaptiveActionContainer<PanelDynamicTabbedMenuItem>;\n  public get hasTabbedMenu(): boolean {\n    return this.isRenderModeTab && this.visiblePanels.length > 0;\n  }\n  public get tabbedMenu(): AdaptiveActionContainer<PanelDynamicTabbedMenuItem> | null {\n    if (!this.isRenderModeTab) return null;\n    if (!this.tabbedMenuValue) {\n      this.tabbedMenuValue = new AdaptiveActionContainer<PanelDynamicTabbedMenuItem>();\n      this.tabbedMenuValue.dotsItem.popupModel.showPointer = false;\n      this.tabbedMenuValue.dotsItem.popupModel.verticalPosition = \"bottom\";\n      this.tabbedMenuValue.dotsItem.popupModel.horizontalPosition = \"center\";\n      this.updateElementCss(false);\n    }\n    return this.tabbedMenuValue;\n  }\n  @property({ defaultValue: false }) _showFooterToolbar: boolean;\n\n  get showFooterToolbar() {\n    return this.footerToolbar && this._showFooterToolbar;\n  }\n\n  private footerToolbarValue: ActionContainer;\n  public get footerToolbar(): ActionContainer {\n    if (!this.footerToolbarValue) {\n      this.initFooterToolbar();\n    }\n    return this.footerToolbarValue;\n  }\n  @property({ defaultValue: false, onSet: (_, target) => { target.updateFooterActions(); } })\n    legacyNavigation: boolean;\n\n  public get ariaRole() {\n    return \"group\";\n  }\n  public get ariaRequired() {\n    return null;\n  }\n  public get ariaInvalid() {\n    return null;\n  }\n  private updateFooterActionsCallback: any;\n  private updateFooterActions() {\n    if (!!this.updateFooterActionsCallback) {\n      this.updateFooterActionsCallback();\n    }\n  }\n  private initFooterToolbar() {\n    this.footerToolbarValue = this.createActionContainer();\n    const items = [];\n    const prevTextBtn = new Action({\n      id: \"sv-pd-prev-btn\",\n      title: this.prevPanelText,\n      action: () => {\n        this.goToPrevPanel();\n      }\n    });\n    const nextTextBtn = new Action({\n      id: \"sv-pd-next-btn\",\n      title: this.nextPanelText,\n      action: () => {\n        this.goToNextPanel();\n      }\n    });\n    const addBtn = new Action({\n      id: \"sv-pd-add-btn\",\n      component: \"sv-paneldynamic-add-btn\",\n      data: { question: this }\n    });\n    const prevBtnIcon = new Action({\n      id: \"sv-prev-btn-icon\",\n      component: \"sv-paneldynamic-prev-btn\",\n      data: { question: this }\n    });\n    const progressText = new Action({\n      id: \"sv-pd-progress-text\",\n      component: \"sv-paneldynamic-progress-text\",\n      data: { question: this }\n    });\n    const nextBtnIcon = new Action({\n      id: \"sv-pd-next-btn-icon\",\n      component: \"sv-paneldynamic-next-btn\",\n      data: { question: this }\n    });\n    items.push(prevTextBtn, nextTextBtn, addBtn, prevBtnIcon, progressText, nextBtnIcon);\n    this.updateFooterActionsCallback = () => {\n      const isLegacyNavigation = this.legacyNavigation;\n      const isRenderModeList = this.isRenderModeList;\n      const isMobile = this.isMobile;\n      const showNavigation = !isLegacyNavigation && !isRenderModeList;\n      prevTextBtn.visible = showNavigation && this.currentIndex > 0;\n      nextTextBtn.visible = showNavigation && this.currentIndex < this.visiblePanelCount - 1;\n      nextTextBtn.needSpace = isMobile && nextTextBtn.visible && prevTextBtn.visible;\n      addBtn.visible = this.canAddPanel;\n      addBtn.needSpace = this.isMobile && !nextTextBtn.visible && prevTextBtn.visible;\n      progressText.visible = !this.isRenderModeList && !isMobile;\n      progressText.needSpace = !isLegacyNavigation && !this.isMobile;\n\n      const showLegacyNavigation = isLegacyNavigation && !isRenderModeList;\n      prevBtnIcon.visible = showLegacyNavigation;\n      nextBtnIcon.visible = showLegacyNavigation;\n      prevBtnIcon.needSpace = showLegacyNavigation;\n    };\n    this.updateFooterActionsCallback();\n    this.footerToolbarValue.setItems(items);\n    this.footerToolbar.flushUpdates();\n    this._showFooterToolbar = new ComputedUpdater<boolean>(() => this.footerToolbarValue?.hasVisibleActions) as any as boolean;\n  }\n  private createTabByPanel(panel: PanelModel, visPanelIndex: number) {\n    if (!this.isRenderModeTab) return;\n\n    const locTitle = new LocalizableString(panel, true);\n    locTitle.onGetTextCallback = (str: string): string => {\n      if (!str) {\n        str = this.locTabTitlePlaceholder.renderedHtml;\n      }\n      if (!this.survey) return str;\n      const options = {\n        title: str,\n        panel: panel,\n        visiblePanelIndex: visPanelIndex\n      };\n      this.survey.dynamicPanelGetTabTitle(this, options);\n      return options.title;\n    };\n    locTitle.sharedData = this.locTemplateTabTitle;\n    const panelId = panel.id;\n    const isActive = this.getPanelVisibleIndexById(panelId) === this.currentIndex;\n    const newItem = new PanelDynamicTabbedMenuItem({\n      id: `${this.id}_tab_${panelId}`,\n      panelId: panelId,\n      pressed: isActive,\n      locTitle: locTitle,\n      disableHide: isActive,\n      action: () => {\n        this.currentIndex = this.getPanelVisibleIndexById(panelId);\n      }\n    });\n    return newItem;\n  }\n  private getTabbedMenuCss(cssClasses?: any): string {\n    const css = cssClasses ?? this.cssClasses;\n    return new CssClassBuilder()\n      .append(css.tabsRoot)\n      .append(css.tabsLeft, this.tabAlign === \"left\")\n      .append(css.tabsRight, this.tabAlign === \"right\")\n      .append(css.tabsCenter, this.tabAlign === \"center\")\n      .toString();\n  }\n  private updateTabToolbarItemsPressedState() {\n    if (!this.isRenderModeTab) return;\n    if (this.currentIndex < 0 || this.currentIndex >= this.visiblePanelCount) return;\n    const panel = this.visiblePanelsCore[this.currentIndex];\n    this.tabbedMenu.actions.forEach(action => {\n      const isActive = action.panelId === panel.id;\n      action.pressed = isActive;\n      action.disableHide = isActive;\n    });\n  }\n  private updateTabToolbar() {\n    if (!this.isRenderModeTab) return;\n\n    const items: Array<Action> = [];\n    const visPanels = this.visiblePanelsCore;\n    for (let i = 0; i < visPanels.length; i++) {\n      this.visiblePanelsCore.forEach(panel => items.push(this.createTabByPanel(visPanels[i], i)));\n    }\n    this.tabbedMenu.setItems(items);\n  }\n  private addTabFromToolbar(panel: PanelModel, index: number) {\n    if (!this.isRenderModeTab) return;\n\n    const newItem = this.createTabByPanel(panel, index);\n    this.tabbedMenu.actions.splice(index, 0, newItem);\n    this.updateTabToolbarItemsPressedState();\n  }\n  private removeTabFromToolbar(panel: PanelModel) {\n    if (!this.isRenderModeTab) return;\n    const removedItem = this.tabbedMenu.actions.find(a => a.panelId == panel.id);\n    if (!removedItem) return;\n    this.tabbedMenu.actions.splice(this.tabbedMenu.actions.indexOf(removedItem), 1);\n    this.updateTabToolbarItemsPressedState();\n  }\n\n  get showNavigation(): boolean {\n    if (this.isReadOnly && this.visiblePanelCount == 1) return false;\n    return this.visiblePanelCount > 0 && !!this.cssClasses.footer;\n  }\n  showSeparator(index: number): boolean {\n    return this.isRenderModeList && index < this.renderedPanels.length - 1;\n  }\n\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    const tabbedMenu = <AdaptiveActionContainer>this.tabbedMenu;\n    if (!!tabbedMenu) {\n      tabbedMenu.containerCss = this.getTabbedMenuCss(classes);\n      tabbedMenu.cssClasses = classes.tabs;\n      tabbedMenu.dotsItem.cssClasses = classes.tabs;\n      tabbedMenu.dotsItem.popupModel.contentComponentData.model.cssClasses = css.list;\n    }\n    return classes;\n  }\n  protected onMobileChanged(): void {\n    super.onMobileChanged();\n    this.updateFooterActions();\n  }\n}\n\nSerializer.addClass(\n  \"paneldynamic\",\n  [\n    { name: \"showCommentArea:switch\", layout: \"row\", visible: true, category: \"general\" },\n    {\n      name: \"templateElements\",\n      alternativeName: \"questions\",\n      baseClassName: \"question\",\n      visible: false,\n      isLightSerializable: false\n    },\n    { name: \"templateTitle:text\", serializationProperty: \"locTemplateTitle\" },\n    {\n      name: \"templateTabTitle\", serializationProperty: \"locTemplateTabTitle\",\n      visibleIf: (obj: any) => { return obj.displayMode === \"tab\"; }\n    },\n    {\n      name: \"tabTitlePlaceholder\", serializationProperty: \"locTabTitlePlaceholder\",\n      visibleIf: (obj: any) => { return obj.displayMode === \"tab\"; }\n    },\n    {\n      name: \"templateDescription:text\",\n      serializationProperty: \"locTemplateDescription\",\n    },\n    { name: \"minWidth\", defaultFunc: () => \"auto\" },\n    { name: \"noEntriesText:text\", serializationProperty: \"locNoEntriesText\" },\n    { name: \"allowAddPanel:boolean\", default: true },\n    { name: \"allowRemovePanel:boolean\", default: true },\n    { name: \"newPanelPosition\", choices: [\"next\", \"last\"], default: \"last\", category: \"layout\" },\n    {\n      name: \"panelCount:number\",\n      isBindable: true,\n      default: 0,\n      choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    },\n    { name: \"minPanelCount:number\", default: 0, minValue: 0 },\n    {\n      name: \"maxPanelCount:number\",\n      defaultFunc: () => settings.panel.maxPanelCount,\n    },\n    \"defaultPanelValue:panelvalue\",\n    { name: \"copyDefaultValueFromLastEntry:boolean\", alternativeName: \"defaultValueFromLastPanel\" },\n    {\n      name: \"panelsState\",\n      default: \"default\",\n      choices: [\"default\", \"collapsed\", \"expanded\", \"firstExpanded\"],\n      visibleIf: (obj: any) => { return obj.displayMode === \"list\"; }\n    },\n    { name: \"keyName\" },\n    {\n      name: \"keyDuplicationError\",\n      serializationProperty: \"locKeyDuplicationError\",\n    },\n    { name: \"confirmDelete:boolean\" },\n    {\n      name: \"confirmDeleteText\",\n      serializationProperty: \"locConfirmDeleteText\",\n      visibleIf: (obj: any) => { return obj.confirmDelete; }\n    },\n    {\n      name: \"addPanelText\", alternativeName: \"panelAddText\",\n      serializationProperty: \"locAddPanelText\",\n      visibleIf: (obj: any) => { return obj.allowAddPanel; }\n    },\n    {\n      name: \"removePanelText\", alternativeName: \"panelRemoveText\",\n      serializationProperty: \"locRemovePanelText\",\n      visibleIf: (obj: any) => { return obj.allowRemovePanel; }\n    },\n    {\n      name: \"prevPanelText\", alternativeName: \"panelPrevText\",\n      serializationProperty: \"locPrevPanelText\",\n      visibleIf: (obj: any) => { return obj.displayMode !== \"list\"; }\n    },\n    {\n      name: \"nextPanelText\", alternativeName: \"panelNextText\",\n      serializationProperty: \"locNextPanelText\",\n      visibleIf: (obj: any) => { return obj.displayMode !== \"list\"; }\n    },\n    {\n      name: \"showQuestionNumbers\",\n      default: \"off\",\n      choices: [\"off\", \"onPanel\", \"onSurvey\"],\n    },\n    { name: \"renderMode\", visible: false, isSerializable: false },\n    { name: \"displayMode\", default: \"list\", choices: [\"list\", \"carousel\", \"tab\"] },\n    {\n      name: \"showProgressBar:boolean\", alternativeName: \"showRangeInProgress\",\n      default: true,\n      visibleIf: (obj: any) => { return obj.displayMode === \"carousel\"; }\n    },\n    {\n      name: \"progressBarLocation\",\n      default: \"top\",\n      choices: [\"top\", \"bottom\", \"topBottom\"],\n      visibleIf: (obj: any) => { return obj.showProgressBar && obj.displayMode === \"carousel\"; }\n    },\n    {\n      name: \"tabAlign\", default: \"center\", choices: [\"left\", \"center\", \"right\"],\n      visibleIf: (obj: any) => { return obj.displayMode === \"tab\"; }\n    },\n    {\n      name: \"templateQuestionTitleLocation\", alternativeName: \"questionTitleLocation\",\n      default: \"default\",\n      choices: [\"default\", \"top\", \"bottom\", \"left\"],\n    },\n    {\n      name: \"templateQuestionTitleWidth\",\n      visibleIf: function (obj: any) {\n        return !!obj && obj.template.availableQuestionTitleWidth();\n      }\n    },\n    { name: \"templateErrorLocation\", default: \"default\", choices: [\"default\", \"top\", \"bottom\"] },\n    {\n      name: \"templateVisibleIf:expression\",\n      category: \"logic\"\n    },\n    {\n      name: \"removePanelButtonLocation\", alternativeName: \"panelRemoveButtonLocation\",\n      default: \"bottom\",\n      choices: [\"bottom\", \"right\"],\n      visibleIf: (obj: any) => { return obj.allowRemovePanel; }\n    },\n  ],\n  function () {\n    return new QuestionPanelDynamicModel(\"\");\n  },\n  \"question\"\n);\nQuestionFactory.Instance.registerQuestion(\"paneldynamic\", (name) => {\n  return new QuestionPanelDynamicModel(name);\n});\n", "import { CssClassBuilder } from \"./utils/cssClassBuilder\";\n\nexport class SurveyProgressModel {\n  public static getProgressTextInBarCss(css: any): string {\n    return new CssClassBuilder()\n      .append(css.progressText)\n      .append(css.progressTextInBar)\n      .toString();\n  }\n  public static getProgressTextUnderBarCss(css: any): string {\n    return new CssClassBuilder()\n      .append(css.progressText)\n      .append(css.progressTextUnderBar)\n      .toString();\n  }\n}", "import { HashTable, Helpers } from \"./helpers\";\nimport { Base } from \"./base\";\nimport { ISurvey } from \"./base-interfaces\";\nimport { Serializer } from \"./jsonobject\";\nimport { ConditionRunner, ExpressionRunner } from \"./conditions\";\nimport { OperandMaker } from \"./expressions/expressions\";\nimport { ValueGetter } from \"./conditionProcessValue\";\nimport { settings } from \"./settings\";\n\n/**\n * A base class for all triggers.\n * A trigger calls a method when the expression change the result: from false to true or from true to false.\n * Please note, it runs only one changing the expression result.\n */\nexport class Trigger extends Base {\n  static idCounter: number = 1;\n  static operatorsValue: HashTable<Function> = null;\n  static get operators() {\n    if (Trigger.operatorsValue != null) return Trigger.operatorsValue;\n    Trigger.operatorsValue = {\n      empty: function(value: any, expectedValue: any) {\n        return !value;\n      },\n      notempty: function(value: any, expectedValue: any) {\n        return !!value;\n      },\n      equal: function(value: any, expectedValue: any) {\n        return value == expectedValue;\n      },\n      notequal: function(value: any, expectedValue: any) {\n        return value != expectedValue;\n      },\n      contains: function(value: any, expectedValue: any) {\n        return value && value[\"indexOf\"] && value.indexOf(expectedValue) > -1;\n      },\n      notcontains: function(value: any, expectedValue: any) {\n        return (\n          !value || !value[\"indexOf\"] || value.indexOf(expectedValue) == -1\n        );\n      },\n      greater: function(value: any, expectedValue: any) {\n        return value > expectedValue;\n      },\n      less: function(value: any, expectedValue: any) {\n        return value < expectedValue;\n      },\n      greaterorequal: function(value: any, expectedValue: any) {\n        return value >= expectedValue;\n      },\n      lessorequal: function(value: any, expectedValue: any) {\n        return value <= expectedValue;\n      },\n    };\n    return Trigger.operatorsValue;\n  }\n  private conditionRunner: ConditionRunner;\n  private idValue: number = (Trigger.idCounter ++);\n  constructor() {\n    super();\n  }\n  public get id(): number { return this.idValue; }\n  public getType(): string {\n    return \"triggerbase\";\n  }\n  public toString(): string {\n    var res = this.getType().replace(\"trigger\", \"\");\n    var exp = this.expression;\n    if (exp) {\n      res += \", \" + exp;\n    }\n    return res;\n  }\n  public isGhost: boolean;\n  protected get isInternal(): boolean {\n    return this.isGhost === true;\n  }\n  public get operator(): string {\n    return this.getPropertyValue(\"operator\", \"equal\");\n  }\n  public set operator(value: string) {\n    if (!value) return;\n    value = value.toLowerCase();\n    if (!Trigger.operators[value]) return;\n    this.setPropertyValue(\"operator\", value);\n  }\n  public get value(): any {\n    return this.getPropertyValue(\"value\", null);\n  }\n  public set value(val: any) {\n    this.setPropertyValue(\"value\", val);\n  }\n  public get name(): string {\n    return this.getPropertyValue(\"name\", \"\");\n  }\n  public set name(val: string) {\n    this.setPropertyValue(\"name\", val);\n  }\n\n  public get expression(): string {\n    return this.getPropertyValue(\"expression\", this.buildExpression());\n  }\n  public set expression(val: string) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  protected canBeExecuted(isOnNextPage: boolean): boolean {\n    return true;\n  }\n  protected canBeExecutedOnComplete(): boolean {\n    return false;\n  }\n  protected isExecutingOnNextPage: boolean;\n  protected isExecutingOnNavigation: boolean;\n  public checkExpression(options: { isOnNextPage: boolean, isOnComplete: boolean, isOnNavigation: boolean,\n    keys: any, properties?: HashTable<any>, }): void {\n    this.isExecutingOnNextPage = options.isOnNextPage;\n    this.isExecutingOnNavigation = options.isOnNavigation || options.isOnNextPage;\n    if (!this.canBeExecuted(options.isOnNextPage)) return;\n    if (options.isOnComplete && !this.canBeExecutedOnComplete()) return;\n    const keys = Object.keys(options.keys);\n    if (Array.isArray(keys) && !this.canBeExecuteOnKeysChange(keys)) return;\n    const props = options.properties || null;\n    if (!this.runExpressionByProperty(\"expression\", props, (val: any) => {\n      this.triggerResult(val === true, props);\n    }, (runner: ExpressionRunner): boolean => {\n      return this.isCheckRequired(runner, options.keys);\n    })) {\n      if (this.isCheckRequired(null, options.keys) && this.canSuccessOnEmptyExpression()) {\n        this.triggerResult(true, props);\n      }\n    }\n  }\n  protected canBeExecuteOnKeysChange(keys: any[]) {\n    return true;\n  }\n  protected canSuccessOnEmptyExpression(): boolean { return false; }\n  public check(value: any): void {\n    var triggerResult = Trigger.operators[this.operator](value, this.value);\n    if (triggerResult) {\n      this.onSuccess(null);\n    } else {\n      this.onFailure();\n    }\n  }\n  public get requireValidQuestion(): boolean { return false; }\n  private triggerResult(res: boolean, properties: HashTable<any>\n  ) {\n    if (res) {\n      this.onSuccess(properties);\n      this.onSuccessExecuted();\n    } else {\n      this.onFailure();\n    }\n  }\n  protected onSuccess(properties: HashTable<any>): void {}\n  protected onFailure(): void {}\n  protected onSuccessExecuted(): void {}\n  private buildExpression(): string {\n    if (!this.name) return \"\";\n    if (this.isValueEmpty(this.value) && this.isRequireValue) return \"\";\n    return (\n      \"{\" +\n      this.name +\n      \"} \" +\n      this.operator +\n      \" \" +\n      OperandMaker.toOperandString(this.value)\n    );\n  }\n  private isCheckRequired(runner: ExpressionRunner, keys: any): boolean {\n    if (!keys) return false;\n    if (runner?.hasFunction() === true) return true;\n    return new ValueGetter().isAnyKeyChanged(keys, this.getUsedVariables(runner));\n  }\n  protected getUsedVariables(runner: ExpressionRunner): string[] {\n    if (!runner) return [];\n    const res = runner.getVariables();\n    if (Array.isArray(res)) {\n      const unw = settings.expressionVariables.unwrapPostfix;\n      for (let i = res.length - 1; i >= 0; i--) {\n        const s = res[i];\n        if (s.endsWith(unw)) {\n          res.push(s.substring(0, s.length - unw.length));\n        }\n      }\n    }\n    return res;\n  }\n  private get isRequireValue(): boolean {\n    return this.operator !== \"empty\" && this.operator != \"notempty\";\n  }\n}\n\nexport interface ISurveyTriggerOwner {\n  getObjects(pages: string[], questions: string[]): any[];\n  setCompleted(trigger: Trigger): void;\n  canBeCompleted(trigger: Trigger, isCompleted: boolean): void;\n  triggerExecuted(trigger: Trigger): void;\n  setTriggerValue(name: string, value: any, isVariable: boolean): any;\n  copyTriggerValue(name: string, fromName: string, copyDisplayValue: boolean): void;\n  focusQuestion(name: string): boolean;\n}\n\n/**\n * It extends the Trigger base class and add properties required for SurveyJS classes.\n */\nexport class SurveyTrigger extends Trigger {\n  protected ownerValue: ISurveyTriggerOwner = null;\n  constructor() {\n    super();\n  }\n  public get owner(): ISurveyTriggerOwner {\n    return this.ownerValue;\n  }\n  public setOwner(owner: ISurveyTriggerOwner) {\n    this.ownerValue = owner;\n  }\n  public getSurvey(live: boolean = false): ISurvey {\n    return !!this.owner && !!(<any>this.owner)[\"getSurvey\"]\n      ? (<any>this.owner).getSurvey()\n      : null;\n  }\n  protected isRealExecution(): boolean {\n    return true;\n  }\n  protected onSuccessExecuted(): void {\n    if (!!this.owner && this.isRealExecution()) {\n      this.owner.triggerExecuted(this);\n    }\n  }\n}\n/**\n * If expression returns true, it makes questions/pages visible.\n * Ohterwise it makes them invisible.\n */\nexport class SurveyTriggerVisible extends SurveyTrigger {\n  public pages: string[] = [];\n  public questions: string[] = [];\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"visibletrigger\";\n  }\n  protected onSuccess(properties: HashTable<any>) {\n    this.onTrigger(this.onItemSuccess);\n  }\n  protected onFailure() {\n    this.onTrigger(this.onItemFailure);\n  }\n  private onTrigger(func: Function) {\n    if (!this.owner) return;\n    var objects = this.owner.getObjects(this.pages, this.questions);\n    for (var i = 0; i < objects.length; i++) {\n      func(objects[i]);\n    }\n  }\n  protected onItemSuccess(item: any) {\n    item.visible = true;\n  }\n  protected onItemFailure(item: any) {\n    item.visible = false;\n  }\n}\n/**\n * If expression returns true, it completes the survey.\n */\nexport class SurveyTriggerComplete extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"completetrigger\";\n  }\n  public get requireValidQuestion(): boolean { return true; }\n  protected isRealExecution(): boolean {\n    return !settings.triggers.executeCompleteOnValueChanged === this.isExecutingOnNavigation;\n  }\n  protected onSuccess(properties: HashTable<any>): void {\n    if (!this.owner) return;\n    if (this.isRealExecution()) {\n      this.owner.setCompleted(this);\n    } else {\n      this.owner.canBeCompleted(this, true);\n    }\n  }\n  protected onFailure(): void {\n    this.owner.canBeCompleted(this, false);\n  }\n}\n/**\n * If expression returns true, the value from property **setValue** will be set to **setToName**\n */\nexport class SurveyTriggerSetValue extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"setvaluetrigger\";\n  }\n  protected canBeExecuted(isOnNextPage: boolean): boolean {\n    return !isOnNextPage && !!this.setToName;\n  }\n  protected canBeExecuteOnKeysChange(keys: any[]) {\n    if (keys.length === 1 && keys[0] === this.setToName) return false;\n    return super.canBeExecuteOnKeysChange(keys);\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name !== \"setToName\") return;\n    var survey = this.getSurvey();\n    if (survey && !survey.isLoadingFromJson && survey.isDesignMode) {\n      this.setValue = undefined;\n    }\n  }\n  public get setToName(): string {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  public set setToName(val: string) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  public get setValue(): any {\n    return this.getPropertyValue(\"setValue\");\n  }\n  public set setValue(val: any) {\n    this.setPropertyValue(\"setValue\", val);\n  }\n  public get isVariable(): boolean {\n    return this.getPropertyValue(\"isVariable\");\n  }\n  public set isVariable(val: boolean) {\n    this.setPropertyValue(\"isVariable\", val);\n  }\n  protected onSuccess(properties: HashTable<any>) {\n    if (!this.setToName || !this.owner) return;\n    this.owner.setTriggerValue(this.setToName, Helpers.getUnbindValue(this.setValue), this.isVariable);\n  }\n}\n/**\n * If expression returns true, the survey go to question **gotoName** and focus it.\n */\nexport class SurveyTriggerSkip extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"skiptrigger\";\n  }\n  public get requireValidQuestion(): boolean { return this.canBeExecuted(false); }\n  public get gotoName(): string {\n    return this.getPropertyValue(\"gotoName\", \"\");\n  }\n  public set gotoName(val: string) {\n    this.setPropertyValue(\"gotoName\", val);\n  }\n  protected canBeExecuted(isOnNextPage: boolean): boolean {\n    return isOnNextPage === !settings.triggers.executeSkipOnValueChanged;\n  }\n  protected onSuccess(properties: HashTable<any>) {\n    if (!this.gotoName || !this.owner) return;\n    this.owner.focusQuestion(this.gotoName);\n  }\n}\n/**\n * If expression returns true, the **runExpression** will be run. If **setToName** property is not empty then the result of **runExpression** will be set to it.\n */\nexport class SurveyTriggerRunExpression extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  public getType(): string {\n    return \"runexpressiontrigger\";\n  }\n  public get setToName(): string {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  public set setToName(val: string) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  public get runExpression(): string {\n    return this.getPropertyValue(\"runExpression\", \"\");\n  }\n  public set runExpression(val: string) {\n    this.setPropertyValue(\"runExpression\", val);\n  }\n  protected canBeExecuted(isOnNextPage: boolean): boolean {\n    return !isOnNextPage;\n  }\n  protected onSuccess(properties: HashTable<any>): boolean {\n    if (!this.owner) return;\n    this.runExpressionByProperty(\"runExpression\", properties, (res) => {\n      this.onCompleteRunExpression(res);\n    });\n  }\n  private onCompleteRunExpression(newValue: any) {\n    if (!!this.setToName && newValue !== undefined) {\n      this.owner.setTriggerValue(this.setToName, Helpers.convertValToQuestionVal(newValue), false);\n    }\n  }\n}\n\n/**\n * If expression returns true, the value from question **fromName** will be set into **setToName**.\n */\nexport class SurveyTriggerCopyValue extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  protected canBeExecuted(isOnNextPage: boolean): boolean {\n    return !isOnNextPage && !!this.setToName && !!this.fromName;\n  }\n  public get setToName(): string {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  public set setToName(val: string) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  public get fromName(): string {\n    return this.getPropertyValue(\"fromName\", \"\");\n  }\n  public set fromName(val: string) {\n    this.setPropertyValue(\"fromName\", val);\n  }\n  public get copyDisplayValue(): boolean {\n    return this.getPropertyValue(\"copyDisplayValue\");\n  }\n  public set copyDisplayValue(val: boolean) {\n    this.setPropertyValue(\"copyDisplayValue\", val);\n  }\n  public getType(): string {\n    return \"copyvaluetrigger\";\n  }\n  protected canBeExecuteOnKeysChange(keys: any[]) {\n    if (keys.length === 1 && keys[0] === this.setToName) return false;\n    return super.canBeExecuteOnKeysChange(keys);\n  }\n  protected onSuccess(properties: HashTable<any>): void {\n    if (!this.setToName || !this.owner) return;\n    this.owner.copyTriggerValue(this.setToName, this.fromName, this.copyDisplayValue);\n  }\n  protected canSuccessOnEmptyExpression(): boolean { return true; }\n  protected getUsedVariables(runner: ExpressionRunner): string[] {\n    const res = super.getUsedVariables(runner);\n    if (res.length === 0 && !!this.fromName) {\n      res.push(this.fromName);\n    }\n    return res;\n  }\n}\n\nSerializer.addClass(\"trigger\", [\n  { name: \"operator\", default: \"equal\", visible: false },\n  { name: \"value\", visible: false },\n  \"expression:condition\",\n]);\nSerializer.addClass(\n  \"surveytrigger\",\n  [{ name: \"name\", visible: false }],\n  null,\n  \"trigger\"\n);\nSerializer.addClass(\n  \"visibletrigger\",\n  [\"pages:pages\", \"questions:questions\"],\n  function() {\n    return new SurveyTriggerVisible();\n  },\n  \"surveytrigger\"\n);\nSerializer.addClass(\n  \"completetrigger\",\n  [],\n  function() {\n    return new SurveyTriggerComplete();\n  },\n  \"surveytrigger\"\n);\nSerializer.addClass(\n  \"setvaluetrigger\",\n  [\n    { name: \"!setToName:questionvalue\" },\n    {\n      name: \"setValue:triggervalue\",\n      dependsOn: \"setToName\",\n      visibleIf: function(obj: any) {\n        return !!obj && !!obj[\"setToName\"];\n      },\n    },\n    { name: \"isVariable:boolean\", visible: false },\n  ],\n  function() {\n    return new SurveyTriggerSetValue();\n  },\n  \"surveytrigger\"\n);\nSerializer.addClass(\n  \"copyvaluetrigger\",\n  [{ name: \"!fromName:questionvalue\" }, { name: \"!setToName:questionvalue\" },\n    { name: \"copyDisplayValue:boolean\", visible: false }],\n  function() {\n    return new SurveyTriggerCopyValue();\n  },\n  \"surveytrigger\"\n);\nSerializer.addClass(\n  \"skiptrigger\",\n  [{ name: \"!gotoName:question\" }],\n  function() {\n    return new SurveyTriggerSkip();\n  },\n  \"surveytrigger\"\n);\nSerializer.addClass(\n  \"runexpressiontrigger\",\n  [{ name: \"setToName:questionvalue\" }, \"runExpression:expression\"],\n  function() {\n    return new SurveyTriggerRunExpression();\n  },\n  \"surveytrigger\"\n);\n", "import { Base, ComputedUpdater } from \"./base\";\nimport { SurveyModel } from \"./survey\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { property } from \"./jsonobject\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\n\n/**\n * A class that renders a survey in a pop-up window.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n */\nexport class PopupSurveyModel extends Base {\n  surveyValue: SurveyModel;\n  windowElement: HTMLDivElement;\n\n  templateValue: string;\n  expandedChangedCallback: () => void;\n  showingChangedCallback: () => void;\n\n  constructor(jsonObj: any, initialModel: SurveyModel = null) {\n    super();\n    if (initialModel) {\n      this.surveyValue = initialModel;\n    } else {\n      this.surveyValue = this.createSurvey(jsonObj);\n    }\n    this.surveyValue.fitToContainer = true;\n    this.windowElement = DomDocumentHelper.createElement(\"div\") as HTMLDivElement;\n    this.survey.onComplete.add((survey, options) => {\n      this.onSurveyComplete();\n    });\n    this.registerPropertyChangedHandlers([\"isShowing\"], () => {\n      if (!!this.showingChangedCallback)this.showingChangedCallback();\n    });\n    this.registerPropertyChangedHandlers([\"isExpanded\"], () => {\n      this.onExpandedChanged();\n    });\n    this.width = <any>new ComputedUpdater<string>(() => this.survey.width);\n    this.width = this.survey.width;\n    this.updateCss();\n    this.onCreating();\n  }\n  protected onCreating(): void { }\n  public getType(): string {\n    return \"popupsurvey\";\n  }\n  /**\n   * A [`SurveyModel`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model) instance rendered in the pop-up window.\n   */\n  public get survey(): SurveyModel {\n    return this.surveyValue;\n  }\n  /**\n   * Specifies how many seconds the pop-up window should remain open after users complete the survey.\n   *\n   * Default value: 0 (the window is closed immediately)\n   *\n   * Set this property to a negative value (for instance, -1) to keep the pop-up window open without a time limit.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n   */\n  public closeOnCompleteTimeout: number = 0;\n  /**\n   * Indicates whether the pop-up survey appears on the page, regardless of its [expand state](#isExpanded).\n   *\n   * You can set this property to `true` or `false` to control visibility of the pop-up survey. Alternatively, you can use the [`show()`](#show) and [`hide()`](#hide) methods.\n   */\n  public get isShowing(): boolean {\n    return this.getPropertyValue(\"isShowing\", false);\n  }\n  public set isShowing(val: boolean) {\n    this.setPropertyValue(\"isShowing\", val);\n  }\n\n  public get isFullScreen(): boolean {\n    return this.getPropertyValue(\"isFullScreen\", false);\n  }\n  public set isFullScreen(val: boolean) {\n    if (!this.isExpanded && !!val) {\n      this.isExpanded = true;\n    }\n    this.setPropertyValue(\"isFullScreen\", val);\n    this.setCssRoot();\n  }\n  /**\n   * Shows the pop-up survey. The survey may appear [expanded or collapsed](#isExpanded).\n   *\n   * As an alternative to this method, you can set the [`isShowing`](#isShowing) property to `true`.\n   * @see hide\n   */\n  public show(): void {\n    this.isShowing = true;\n  }\n  /**\n   * Hides the pop-up survey.\n   *\n   * As an alternative to this method, you can set the [`isShowing`](#isShowing) property to `false`.\n   * @see show\n   * @see expand\n   * @see collapse\n   */\n  public hide(): void {\n    this.isShowing = false;\n  }\n  public toggleFullScreen(): void {\n    this.isFullScreen = !this.isFullScreen;\n  }\n  /**\n   * Indicates whether the pop-up window is expanded or collapsed.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n   *\n   * You can set this property to `true` or `false` to control the expand state of the pop-up survey. Alternatively, you can use the [`expand()`](#expand) and [`collapse()`](#collapse) methods.\n   */\n  public get isExpanded(): boolean {\n    return this.getPropertyValue(\"isExpanded\", false);\n  }\n  public set isExpanded(val: boolean) {\n    if (!!this.isFullScreen && !val) {\n      this.isFullScreen = false;\n    }\n    this.setPropertyValue(\"isExpanded\", val);\n  }\n  public get isCollapsed(): boolean {\n    return !this.isExpanded;\n  }\n  protected onExpandedChanged(): void {\n    if (!!this.expandedChangedCallback) {\n      this.expandedChangedCallback();\n    }\n    this.updateCssButton();\n  }\n  /**\n   * A title for the pop-up window. If this property is undefined, the title is taken from [`SurveyModel`](#survey)'s [`title`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title) property.\n   */\n  public get title(): string {\n    return this.survey.title;\n  }\n  public set title(value: string) {\n    this.survey.title = value;\n  }\n  get locTitle(): LocalizableString {\n    if (this.survey.locTitle.isEmpty) return null;\n    return this.survey.locTitle;\n  }\n  get locDescription(): LocalizableString {\n    if (this.survey.locTitle.isEmpty) return null;\n    return this.survey.locDescription;\n  }\n  /**\n   * Expands the pop-up window.\n   *\n   * As an alternative to this method, you can set the [`isExpanded`](#isExpanded) property to `true`.\n   * @see collapse\n   */\n  public expand(): void {\n    this.isExpanded = true;\n  }\n  /**\n   * Collapses the pop-up window, leaving only the survey title visible.\n   *\n   * As an alternative to this method, you can set the [`isExpanded`](#isExpanded) property to `false`.\n   * @see expand\n   */\n  public collapse(): void {\n    this.isExpanded = false;\n  }\n  public changeExpandCollapse(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n  /**\n   * Specifies whether to display a button that closes the pop-up window.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n   *\n   * If you allow users to close the pop-up window, make sure to implement a UI element that opens it. This element should call the [`show()`](#show) method or enable the [`isShowing`](#isShowing) property.\n   * @see expand\n   * @see collapse\n   * @see hide\n   */\n  public get allowClose(): boolean {\n    return this.getPropertyValue(\"allowClose\", false);\n  }\n  public set allowClose(val: boolean) {\n    this.setPropertyValue(\"allowClose\", val);\n  }\n  /**\n   * Specifies whether to display a button that allows respondents to show the pop-up survey in full screen mode.\n   *\n   * Default value: `false`\n   */\n  public get allowFullScreen(): boolean {\n    return this.getPropertyValue(\"allowFullScreen\", false);\n  }\n  public set allowFullScreen(val: boolean) {\n    this.setPropertyValue(\"allowFullScreen\", val);\n  }\n  public get css(): any {\n    return this.survey.css;\n  }\n  public get cssButton(): string {\n    return this.getPropertyValue(\"cssButton\", \"\");\n  }\n  public get cssRoot(): string {\n    let result = this.getPropertyValue(\"cssRoot\", \"\");\n    if (this.isCollapsed) result += \" \" + this.getPropertyValue(\"cssRootCollapsedMod\", \"\");\n    return result;\n  }\n  public get cssRootCollapsedMod(): string {\n    return this.getPropertyValue(\"cssRootCollapsedMod\");\n  }\n  public get cssRootContent(): string {\n    return this.getPropertyValue(\"cssRootContent\");\n  }\n  public get cssBody(): string {\n    return this.getPropertyValue(\"cssBody\", \"\");\n  }\n  public get cssHeaderRoot(): string {\n    return this.getPropertyValue(\"cssHeaderRoot\", \"\");\n  }\n  public get cssHeaderTitleCollapsed(): string {\n    return this.getPropertyValue(\"cssHeaderTitleCollapsed\", \"\");\n  }\n  public get cssHeaderButtonsContainer(): string {\n    return this.getPropertyValue(\"cssHeaderButtonsContainer\", \"\");\n  }\n  public get cssHeaderCollapseButton(): string {\n    return this.getPropertyValue(\"cssHeaderCollapseButton\", \"\");\n  }\n  public get cssHeaderCloseButton(): string {\n    return this.getPropertyValue(\"cssHeaderCloseButton\", \"\");\n  }\n  public get cssHeaderFullScreenButton(): string {\n    return this.getPropertyValue(\"cssHeaderFullScreenButton\", \"\");\n  }\n  public get renderedWidth(): string {\n    let width = this.getPropertyValue(\"width\", \"60%\");\n    if (width && !isNaN(width)) width = width + \"px\";\n    return width;\n  }\n  @property() width: string;\n\n  private updateCss() {\n    if (!this.css || !this.css.window) return;\n    const cssWindow = this.css.window;\n    this.setCssRoot();\n    this.setPropertyValue(\"cssRootCollapsedMod\", cssWindow.rootCollapsedMod);\n    this.setPropertyValue(\"cssRootContent\", cssWindow.rootContent);\n    this.setPropertyValue(\"cssBody\", cssWindow.body);\n    const cssHeader = cssWindow.header;\n    if (!cssHeader) return;\n    this.setPropertyValue(\"cssHeaderRoot\", cssHeader.root);\n    this.setPropertyValue(\"cssHeaderTitleCollapsed\", cssHeader.titleCollapsed);\n    this.setPropertyValue(\"cssHeaderButtonsContainer\", cssHeader.buttonsContainer);\n    this.setPropertyValue(\"cssHeaderCollapseButton\", cssHeader.collapseButton);\n    this.setPropertyValue(\"cssHeaderCloseButton\", cssHeader.closeButton);\n    this.setPropertyValue(\"cssHeaderFullScreenButton\", cssHeader.fullScreenButton);\n    this.updateCssButton();\n  }\n  private setCssRoot() {\n    const cssWindow = this.css.window;\n    if (this.isFullScreen) {\n      this.setPropertyValue(\"cssRoot\", cssWindow.root + \" \" + cssWindow.rootFullScreenMode);\n    } else {\n      this.setPropertyValue(\"cssRoot\", cssWindow.root);\n    }\n  }\n  private updateCssButton() {\n    const cssHeader = !!this.css.window ? this.css.window.header : null;\n    if (!cssHeader) return;\n    this.setCssButton(this.isExpanded ? cssHeader.buttonExpanded : cssHeader.buttonCollapsed);\n  }\n  private setCssButton(val: string): void {\n    if (!val) return;\n    this.setPropertyValue(\"cssButton\", val);\n  }\n  protected createSurvey(jsonObj: any): SurveyModel {\n    return new SurveyModel(jsonObj);\n  }\n  protected onSurveyComplete(): void {\n    if (this.closeOnCompleteTimeout < 0) return;\n    if (this.closeOnCompleteTimeout == 0) {\n      this.hide();\n    } else {\n      var self = this;\n      var timerId: any = null;\n      var func = function () {\n        self.hide();\n        clearInterval(timerId);\n      };\n      timerId = setInterval(func, this.closeOnCompleteTimeout * 1000);\n    }\n  }\n  public onScroll(): void {\n    this.survey.onScroll();\n  }\n}\n/**\n * @deprecated Use `PopupSurveyModel` instead.\n */\nexport class SurveyWindowModel extends PopupSurveyModel { }", "\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nexport class ScrollViewModel {\n  private _containerElementValue: HTMLElement;\n  private _scrollbarElement: HTMLElement;\n  private _containerBodyElement: HTMLElement;\n  private _scrollbarSizerElement: HTMLElement;\n  private _containerBodyResizeObserver: ResizeObserver;\n\n  private _lockScroll = false;\n\n  constructor() { }\n\n  public setRootElement(element: HTMLElement) {\n    this._containerElementValue = element?.querySelector(\".sv-scroll__scroller\");\n    this._scrollbarElement = element?.querySelector(\".sv-scroll__scrollbar\");\n    this._scrollbarSizerElement = element?.querySelector(\".sv-scroll__scrollbar-sizer\");\n    this._containerBodyElement = element?.querySelector(\".sv-scroll__container\");\n    if (!element || !DomWindowHelper.isAvailable()) return;\n    this._containerBodyResizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const height = entry.contentBoxSize\n          ? entry.contentBoxSize[0].blockSize\n          : entry.contentRect.width;\n        this._scrollbarSizerElement.style.height = height + \"px\";\n      }\n      this.onInnerHeightChanged && this.onInnerHeightChanged(this._containerBodyElement.clientHeight > this._containerElementValue.clientHeight);\n    });\n    this._containerBodyResizeObserver.observe(this._containerBodyElement);\n  }\n\n  onInnerHeightChanged: (hasScroll: boolean) => void;\n\n  public onScrollContainer() {\n    this._lockScroll = true;\n    this._scrollbarElement.scrollTop = this._containerElementValue.scrollTop;\n  }\n\n  public onScrollScrollbar() {\n    if (this._lockScroll) {\n      this._lockScroll = false;\n      return;\n    }\n    this._containerElementValue.scrollTop = this._scrollbarElement.scrollTop;\n  }\n\n  public unsubscribeRootElement() {\n    if (!!this._containerBodyResizeObserver) {\n      this._containerBodyResizeObserver.disconnect();\n      this._containerBodyResizeObserver = undefined;\n    }\n  }\n}\n", "import { Base, EventBase } from \"./base\";\nimport { property } from \"./jsonobject\";\nimport { PopupModel } from \"./popup\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { ActionContainer } from \"./actions/container\";\nimport { IAction } from \"./actions/action\";\nimport { settings } from \"./settings\";\nimport { getElement } from \"./utils/utils\";\n\nimport { AnimationBoolean, AnimationOptions, IAnimationConsumer } from \"./utils/animation\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\n\nexport const FOCUS_INPUT_SELECTOR = \"input:not(:disabled):not([readonly]):not([type=hidden]),select:not(:disabled):not([readonly]),textarea:not(:disabled):not([readonly]), button:not(:disabled):not([readonly]), [tabindex]:not([tabindex^=\\\"-\\\"])\";\n\nexport class PopupBaseViewModel extends Base implements IAnimationConsumer {\n  protected popupSelector = \".sv-popup\";\n  protected fixedPopupContainer = \".sv-popup\";\n  protected containerSelector = \".sv-popup__container\";\n  protected scrollingContentSelector = \".sv-popup__scrolling-content\";\n  protected prevActiveElement: HTMLElement;\n  protected footerToolbarValue: ActionContainer;\n\n  @property({ defaultValue: \"0px\" }) top: string;\n  @property({ defaultValue: \"0px\" }) left: string;\n  @property({ defaultValue: \"auto\" }) height: string;\n  @property({ defaultValue: \"auto\" }) width: string;\n  @property({ defaultValue: \"auto\" }) minWidth: string;\n  @property({ defaultValue: false }) _isVisible: boolean;\n  @property() locale: string;\n\n  private updateIsVisible(val: boolean) {\n    this._isVisible = val;\n    this.onVisibilityChanged.fire(this, { isVisible: val });\n  }\n\n  private updateBeforeShowing(): void {\n    this.model.onShow();\n  }\n  private updateAfterHiding(): void {\n    this.model.onHiding();\n  }\n  private visibilityAnimation: AnimationBoolean = new AnimationBoolean(this, (val) => {\n    if (this._isVisible !== val) {\n      if (!val) {\n        this.updateOnHiding();\n        this.updateIsVisible(val);\n        this.updateAfterHiding();\n        this._isPositionSetValue = false;\n      } else {\n        this.updateBeforeShowing();\n        this.updateIsVisible(val);\n      }\n    }\n  }, () => this._isVisible);\n\n  getLeaveOptions(): AnimationOptions {\n    return { cssClass: \"sv-popup--leave\",\n      onBeforeRunAnimation: (el) => {\n        el.setAttribute(\"inert\", \"\");\n      },\n      onAfterRunAnimation: (el) => el.removeAttribute(\"inert\")\n    };\n  }\n  getEnterOptions(): AnimationOptions {\n    return { cssClass: \"sv-popup--enter\" };\n  }\n  getAnimatedElement(): HTMLElement {\n    return this.getAnimationContainer();\n  }\n  isAnimationEnabled(): boolean {\n    return this.model.displayMode !== \"overlay\" && settings.animationEnabled;\n  }\n  getRerenderEvent (): EventBase<Base> { return this.onElementRerendered; }\n\n  private getAnimationContainer(): HTMLElement {\n    return <HTMLElement>this.container?.querySelector(this.fixedPopupContainer);\n  }\n\n  public get isVisible(): boolean {\n    return this._isVisible;\n  }\n  public set isVisible(val: boolean) {\n    this.visibilityAnimation.sync(val);\n  }\n\n  public onVisibilityChanged = new EventBase<PopupBaseViewModel, any>();\n\n  public get container(): HTMLElement {\n    return this.containerElement || this.createdContainer;\n  }\n  private containerElement: HTMLElement;\n  private createdContainer: HTMLElement;\n\n  public getLocale(): string {\n    if (!!this.locale) return this.locale;\n    return super.getLocale();\n  }\n  protected hidePopup(): void {\n    this.model.isVisible = false;\n  }\n  protected getStyleClass(): CssClassBuilder {\n    return new CssClassBuilder()\n      .append(this.model.cssClass);\n    // .append(`sv-popup--${this.model.displayMode}`, this.isOverlay);\n  }\n  protected getShowFooter(): boolean {\n    return this.isOverlay;\n  }\n  protected getShowHeader(): boolean {\n    return false;\n  }\n  protected getPopupHeaderTemplate(): string {\n    return undefined;\n  }\n  protected createFooterActionBar(): void {\n    this.footerToolbarValue = new ActionContainer();\n  }\n  protected resetDimensionsAndPositionStyleProperties(): void {\n    const nullableValue = \"\";\n    this.top = nullableValue;\n    this.left = nullableValue;\n    this.height = nullableValue;\n    this.width = nullableValue;\n    this.minWidth = nullableValue;\n  }\n\n  protected onModelChanging(newModel: PopupModel) {\n  }\n\n  private onModelIsVisibleChangedCallback = () => {\n    this.isVisible = this.model.isVisible;\n  };\n\n  private setupModel(model: PopupModel) {\n    if (!!this.model) {\n      this.model.onVisibilityChanged.remove(this.onModelIsVisibleChangedCallback);\n    }\n    this.onModelChanging(model);\n    this._model = model;\n    model.onVisibilityChanged.add(this.onModelIsVisibleChangedCallback);\n    this.onModelIsVisibleChangedCallback();\n  }\n\n  private _model: PopupModel;\n  public get model(): PopupModel {\n    return this._model;\n  }\n  public set model(model: PopupModel) {\n    this.setupModel(model);\n  }\n\n  constructor(model: PopupModel) {\n    super();\n    this.model = model;\n    this.locale = this.model.locale;\n  }\n  public get title(): string {\n    return this.model.title;\n  }\n  public get contentComponentName(): string {\n    return this.model.contentComponentName;\n  }\n  public get contentComponentData(): any {\n    return this.model.contentComponentData;\n  }\n  public get isModal(): boolean {\n    return this.model.isModal;\n  }\n  public get isFocusedContent(): boolean {\n    return this.model.isFocusedContent;\n  }\n  public get isFocusedContainer(): boolean {\n    return this.model.isFocusedContainer;\n  }\n  public get showFooter(): boolean {\n    return this.getShowFooter();\n  }\n  public get showHeader(): boolean {\n    return this.getShowHeader();\n  }\n  public get popupHeaderTemplate(): string {\n    return this.getPopupHeaderTemplate();\n  }\n\n  public get isOverlay(): boolean {\n    return this.model.displayMode === \"overlay\";\n  }\n  public get styleClass(): string {\n    return this.getStyleClass().toString();\n  }\n  public get cancelButtonText(): string {\n    return this.getLocalizationString(\"modalCancelButtonText\");\n  }\n  public get footerToolbar(): ActionContainer {\n    if (!this.footerToolbarValue) {\n      this.createFooterActionBar();\n    }\n    return this.footerToolbarValue;\n  }\n\n  public onKeyDown(event: any): void {\n    if (event.key === \"Tab\" || event.keyCode === 9) {\n      this.trapFocus(event);\n    } else if (event.key === \"Escape\" || event.keyCode === 27) {\n      this.hidePopup();\n    }\n  }\n  private trapFocus(event: any) {\n    const focusableElements = this.container.querySelectorAll(FOCUS_INPUT_SELECTOR);\n    const firstFocusableElement = focusableElements[0];\n    const lastFocusableElement = focusableElements[focusableElements.length - 1];\n    if (event.shiftKey) {\n      if (settings.environment.root.activeElement === firstFocusableElement) {\n        (<HTMLElement>lastFocusableElement).focus();\n        event.preventDefault();\n      }\n    } else {\n      if (settings.environment.root.activeElement === lastFocusableElement) {\n        (<HTMLElement>firstFocusableElement).focus();\n        event.preventDefault();\n      }\n    }\n  }\n\n  public switchFocus(): void {\n    if (this.isFocusedContent) {\n      this.focusFirstInput();\n    } else if (this.isFocusedContainer) {\n      this.focusContainer();\n    }\n  }\n  protected _isPositionSetValue: boolean = false;\n  public get isPositionSet(): boolean {\n    return this._isPositionSetValue;\n  }\n\n  public updateOnShowing(): void {\n    this.prevActiveElement = <HTMLElement>settings.environment.root.activeElement;\n\n    if (this.isOverlay) {\n      this.resetDimensionsAndPositionStyleProperties();\n    }\n\n    this.switchFocus();\n    this._isPositionSetValue = true;\n  }\n\n  public updateOnHiding(): void {\n    if (this.isFocusedContent && this.prevActiveElement) {\n      this.prevActiveElement.focus({ preventScroll: true });\n    }\n  }\n  private focusContainer() {\n    if (!this.container) return;\n    const popup = (<HTMLElement>this.container.querySelector(this.popupSelector));\n    popup?.focus();\n  }\n  private focusFirstInput() {\n    setTimeout(() => {\n      if (!this.container) return;\n      var el = this.container.querySelector(this.model.focusFirstInputSelector || FOCUS_INPUT_SELECTOR);\n      if (!!el) (<HTMLElement>el).focus();\n      else this.focusContainer();\n    }, 100);\n  }\n  public clickOutside(event?: Event): void {\n    this.hidePopup();\n    event?.stopPropagation();\n  }\n  public blur(event?: Event): void {\n    this.model.onBlur();\n  }\n  public cancel(): void {\n    this.model.onCancel();\n    this.hidePopup();\n  }\n  public dispose(): void {\n    super.dispose();\n    if (this.model) {\n      this.model.onVisibilityChanged.remove(this.onModelIsVisibleChangedCallback);\n    }\n    if (!!this.createdContainer) {\n      this.createdContainer.remove();\n      this.createdContainer = undefined;\n    }\n    if (!!this.footerToolbarValue) {\n      this.footerToolbarValue.dispose();\n    }\n    this.resetComponentElement();\n  }\n  public initializePopupContainer(): void {\n    if (!this.container) {\n      const container: HTMLElement = DomDocumentHelper.createElement(\"div\");\n      this.createdContainer = container;\n      getElement(settings.environment.popupMountContainer).appendChild(container);\n    }\n  }\n  public setComponentElement(componentRoot: HTMLElement): void {\n    if (!!componentRoot) {\n      this.containerElement = componentRoot;\n    }\n  }\n  public resetComponentElement(): void {\n    this.containerElement = undefined;\n    this.prevActiveElement = undefined;\n  }\n  protected preventScrollOuside(event: any, deltaY: number): void {\n    let currentElement = event.target;\n    while(currentElement !== this.container) {\n      if (DomDocumentHelper.getComputedStyle(currentElement).overflowY === \"auto\" && currentElement.scrollHeight !== currentElement.offsetHeight) {\n        const { scrollHeight, scrollTop, clientHeight } = currentElement;\n        if (!(deltaY > 0 && Math.abs(scrollHeight - clientHeight - scrollTop) < 1) && !(deltaY < 0 && scrollTop <= 0)) {\n          return;\n        }\n      }\n      currentElement = currentElement.parentElement;\n    }\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n}", "export type VerticalPosition = \"top\" | \"bottom\" | \"middle\";\nexport type HorizontalPosition = \"left\" | \"right\" | \"center\";\nexport type PositionMode = \"flex\" | \"fixed\";\nexport interface IPosition {\n  left?: number | string;\n  top?: number | string;\n}\n\nexport interface INumberPosition extends IPosition {\n  left?: number;\n  top?: number;\n}\n\nexport interface ISize {\n  width: number;\n  height: number;\n}\n\nexport class Rect implements ISize, INumberPosition {\n  constructor(private x: number, private y: number, public width: number, public height: number) { }\n  public get left(): number {\n    return this.x;\n  }\n  public get top(): number {\n    return this.y;\n  }\n  public get right(): number {\n    return this.x + this.width;\n  }\n  public get bottom(): number {\n    return this.y + this.height;\n  }\n}\n\nexport class PopupUtils {\n  public static bottomIndent = 16;\n\n  public static calculatePosition(\n    targetRect: Rect,\n    height: number,\n    width: number,\n    verticalPosition: VerticalPosition,\n    horizontalPosition: HorizontalPosition,\n    positionMode: PositionMode = \"flex\"\n  ): INumberPosition {\n    let currentLeft = targetRect.left;\n    let currentTop = targetRect.top;\n\n    if (positionMode === \"flex\") {\n      if (horizontalPosition == \"center\")\n        currentLeft = (targetRect.left + targetRect.right - width) / 2;\n      else if (horizontalPosition == \"left\") currentLeft = targetRect.left - width;\n      else currentLeft = targetRect.right;\n    }\n\n    if (verticalPosition == \"middle\")\n      currentTop = (targetRect.top + targetRect.bottom - height) / 2;\n    else if (verticalPosition == \"top\") currentTop = targetRect.top - height;\n    else currentTop = targetRect.bottom;\n\n    if (horizontalPosition != \"center\" && verticalPosition != \"middle\") {\n      if (verticalPosition == \"top\") {\n        currentTop = currentTop + targetRect.height;\n      } else {\n        currentTop = currentTop - targetRect.height;\n      }\n    }\n\n    return { left: Math.round(currentLeft), top: Math.round(currentTop) };\n  }\n\n  public static getCorrectedVerticalDimensions(\n    top: number,\n    height: number,\n    windowHeight: number,\n    verticalPosition: VerticalPosition,\n    canShrink: boolean = true,\n    margins: { top: number, bottom: number } = { top: 0, bottom: 0 }\n  ) {\n    let result;\n    const maxHeight = windowHeight - PopupUtils.bottomIndent;\n    if (verticalPosition === \"top\") {\n      result = { height: height, top: top };\n    }\n    if (top < -margins.top) {\n      result = { height: canShrink ? height + top : height, top: -margins.top };\n    } else if (height + top > windowHeight) {\n      let newHeight = Math.min(height, maxHeight - top);\n      result = { height: canShrink ? newHeight : height, top: canShrink ? top : top - (height - newHeight) };\n    }\n    if (result) {\n      result.height = Math.min(result.height, maxHeight);\n      result.top = Math.max(result.top, -margins.top);\n    }\n    return result;\n  }\n\n  public static updateHorizontalDimensions(\n    left: number,\n    width: number,\n    windowWidth: number,\n    horizontalPosition: HorizontalPosition,\n    positionMode: PositionMode = \"flex\",\n    margins: { left: number, right: number } = { left: 0, right: 0 }\n  ) {\n    width += (margins.left + margins.right);\n    let newWidth = undefined, newLeft = left;\n\n    if (horizontalPosition === \"center\") {\n      if (positionMode === \"fixed\") {\n        if (left + width > windowWidth) {\n          newWidth = windowWidth - left;\n        }\n        newLeft -= margins.left;\n      } else {\n        if (left < 0) {\n          newLeft = margins.left;\n          newWidth = Math.min(width, windowWidth);\n        } else if (width + left > windowWidth) {\n          newLeft = windowWidth - width;\n          newLeft = Math.max(newLeft, margins.left);\n          newWidth = Math.min(width, windowWidth);\n        }\n      }\n    }\n\n    if (horizontalPosition === \"left\") {\n      if (left < 0) {\n        newLeft = margins.left;\n        newWidth = Math.min(width, windowWidth);\n      }\n    }\n    if (horizontalPosition === \"right\") {\n      if (width + left > windowWidth) {\n        newWidth = windowWidth - left;\n      }\n    }\n\n    return { width: newWidth - margins.left - margins.right, left: newLeft };\n  }\n\n  public static updateVerticalPosition(\n    targetRect: Rect,\n    height: number,\n    horizontalPosition: HorizontalPosition,\n    verticalPosition: VerticalPosition,\n    windowHeight: number\n  ): VerticalPosition {\n    if (verticalPosition === \"middle\") return verticalPosition;\n\n    let deltaTop = height - (targetRect.top + (horizontalPosition !== \"center\" ? targetRect.height : 0));\n    let deltaBottom = height + targetRect.bottom - (horizontalPosition !== \"center\" ? targetRect.height : 0) - windowHeight;\n    if (deltaTop > 0 && deltaBottom <= 0 && verticalPosition == \"top\") {\n      verticalPosition = \"bottom\";\n    } else if (deltaBottom > 0 && deltaTop <= 0 && verticalPosition == \"bottom\") {\n      verticalPosition = \"top\";\n    } else if (deltaBottom > 0 && deltaTop > 0) {\n      verticalPosition = deltaTop < deltaBottom ? \"top\" : \"bottom\";\n    }\n    return verticalPosition;\n  }\n\n  public static updateHorizontalPosition(\n    targetRect: Rect,\n    width: number,\n    horizontalPosition: HorizontalPosition,\n    windowWidth: number\n  ): HorizontalPosition {\n    if (horizontalPosition === \"center\") return horizontalPosition;\n\n    let deltaLeft = width - targetRect.left;\n    let deltaRight = width + targetRect.right - windowWidth;\n    if (deltaLeft > 0 && deltaRight <= 0 && horizontalPosition == \"left\") {\n      horizontalPosition = \"right\";\n    } else if (deltaRight > 0 && deltaLeft <= 0 && horizontalPosition == \"right\") {\n      horizontalPosition = \"left\";\n    } else if (deltaRight > 0 && deltaLeft > 0) {\n      horizontalPosition = deltaLeft < deltaRight ? \"left\" : \"right\";\n    }\n    return horizontalPosition;\n  }\n\n  public static calculatePopupDirection(\n    verticalPosition: VerticalPosition,\n    horizontalPosition: HorizontalPosition\n  ) {\n    var popupDirection: string;\n    if (horizontalPosition == \"center\" && verticalPosition != \"middle\") {\n      popupDirection = verticalPosition;\n    } else if (horizontalPosition != \"center\") {\n      popupDirection = horizontalPosition;\n    }\n    return popupDirection;\n  }\n\n  //called when showPointer  is true\n  public static calculatePointerTarget(\n    targetRect: Rect,\n    top: number,\n    left: number,\n    verticalPosition: VerticalPosition,\n    horizontalPosition: HorizontalPosition,\n    marginLeft: number = 0,\n    marginRight: number = 0\n  ) {\n    var targetPos: INumberPosition = {};\n    if (horizontalPosition != \"center\") {\n      targetPos.top = targetRect.top + targetRect.height / 2;\n      targetPos.left = targetRect[horizontalPosition];\n    } else if (verticalPosition != \"middle\") {\n      targetPos.top = targetRect[verticalPosition];\n      targetPos.left = targetRect.left + targetRect.width / 2;\n    }\n    targetPos.left = Math.round(targetPos.left - left);\n    targetPos.top = Math.round(targetPos.top - top);\n    if (horizontalPosition == \"left\") {\n      targetPos.left -= marginLeft + marginRight;\n    }\n    if (horizontalPosition === \"center\") {\n      targetPos.left -= marginLeft;\n    }\n    return targetPos;\n  }\n}\n", "import { property } from \"./jsonobject\";\nimport { PopupUtils, IPosition, Rect } from \"./utils/popup\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { PopupModel } from \"./popup\";\nimport { PopupBaseViewModel } from \"./popup-view-model\";\nimport { IsTouch } from \"./utils/devices\";\nimport { settings } from \"./settings\";\nimport { SurveyModel } from \"./survey\";\nimport { DomDocumentHelper, DomWindowHelper } from \"./global_variables_utils\";\nimport { IAction } from \"./actions/action\";\nimport { defaultActionBarCss } from \"./actions/container\";\n\nexport class PopupDropdownViewModel extends PopupBaseViewModel {\n  static readonly tabletSizeBreakpoint = 600;\n  private scrollEventCallBack = (event: any) => {\n    if (this.isOverlay && IsTouch) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    this.hidePopup();\n  };\n  private resizeEventCallback = () => {\n    if (!DomWindowHelper.isAvailable()) return;\n\n    const visualViewport = DomWindowHelper.getVisualViewport();\n    const documentElement = DomDocumentHelper.getDocumentElement();\n    if (!!documentElement && !!visualViewport) {\n      documentElement.style.setProperty(\"--sv-popup-overlay-height\", `${visualViewport.height * visualViewport.scale}px`);\n    }\n  };\n  private resizeWindowCallback = () => {\n    if (!this.isOverlay) {\n      this.updatePosition(true, SurveyModel.platform === \"vue\" || SurveyModel.platform === \"vue3\" || SurveyModel.platform == \"react\" || SurveyModel.platform == \"js-ui\");\n    }\n  };\n  private clientY: number = 0;\n\n  private touchStartEventCallback = (event: any) => {\n    this.clientY = event.touches[0].clientY;\n  };\n  private touchMoveEventCallback = (event: any) => {\n    this.preventScrollOuside(event, this.clientY - event.changedTouches[0].clientY);\n  };\n\n  protected createFooterActionBar(): void {\n    super.createFooterActionBar();\n    this.footerToolbar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode,\n      item: \"sd-action sv-menu-popup__button\"\n    }, false);\n\n    this.footerToolbar.containerCss = \"sv-menu-footer-action-bar\";\n    let footerActions = [\n      <IAction>{\n        id: \"cancel\",\n        visibleIndex: 10,\n        title: this.cancelButtonText,\n        innerCss: \"sv-popup__button--cancel\",\n        action: () => { this.cancel(); }\n      }\n    ];\n\n    footerActions = this.model.updateFooterActions(footerActions);\n    this.footerToolbarValue.setItems(footerActions);\n  }\n\n  protected getAvailableAreaRect(): Rect {\n    const areaElement: HTMLElement = this.model.getAreaCallback ? this.model.getAreaCallback(this.container) : undefined;\n    if (areaElement) {\n      const areaRect = areaElement.getBoundingClientRect();\n      return new Rect(areaRect.x, areaRect.y, areaRect.width, areaRect.height);\n    }\n    return new Rect(0, 0, DomWindowHelper.getInnerWidth(), DomWindowHelper.getInnerHeight());\n  }\n  protected getTargetElementRect(areaRect: Rect): Rect {\n    const componentRoot = this.container;\n    let targetElement: HTMLElement = this.model.getTargetCallback ? this.model.getTargetCallback(componentRoot) : undefined;\n\n    if (!!componentRoot && !!componentRoot.parentElement && !this.isModal && !targetElement) {\n      targetElement = componentRoot.parentElement;\n    }\n    if (!targetElement) return null;\n    const rect = targetElement.getBoundingClientRect();\n    return new Rect(rect.left - areaRect.left, rect.top - areaRect.top, rect.width, rect.height);\n  }\n\n  private _updatePosition() {\n    const area = this.getAvailableAreaRect();\n    const targetElementRect = this.getTargetElementRect(area);\n    if (!targetElementRect) return;\n    const popupContainer = <HTMLElement>this.container?.querySelector(this.containerSelector);\n    if (!popupContainer) return;\n    const fixedPopupContainer = <HTMLElement>this.container?.querySelector(this.fixedPopupContainer) as HTMLElement;\n    const scrollContent = <HTMLElement>popupContainer.querySelector(this.scrollingContentSelector);\n    const popupComputedStyle = DomDocumentHelper.getComputedStyle(popupContainer);\n    const marginLeft = (parseFloat(popupComputedStyle.marginLeft) || 0);\n    const marginRight = (parseFloat(popupComputedStyle.marginRight) || 0);\n    const marginTop = (parseFloat(popupComputedStyle.marginTop) || 0);\n    const marginBottom = (parseFloat(popupComputedStyle.marginBottom) || 0);\n    let height = popupContainer.offsetHeight - scrollContent.offsetHeight + scrollContent.scrollHeight;\n    const width = popupContainer.getBoundingClientRect().width;\n    this.model.setWidthByTarget && (this.minWidth = targetElementRect.width + \"px\");\n    let verticalPosition = this.model.verticalPosition;\n\n    let actualHorizontalPosition = this.getActualHorizontalPosition();\n\n    if (DomWindowHelper.isAvailable()) {\n      const heightValues = [height, DomWindowHelper.getInnerHeight() * 0.9, DomWindowHelper.getVisualViewport()?.height];\n      height = Math.ceil(Math.min(...heightValues.filter((each) => typeof each === \"number\")));\n      verticalPosition = PopupUtils.updateVerticalPosition(\n        targetElementRect,\n        height,\n        this.model.horizontalPosition,\n        this.model.verticalPosition,\n        area.height\n      );\n\n      actualHorizontalPosition = PopupUtils.updateHorizontalPosition(\n        targetElementRect,\n        width,\n        actualHorizontalPosition,\n        area.width\n      );\n    }\n    this.popupDirection = PopupUtils.calculatePopupDirection(\n      verticalPosition,\n      actualHorizontalPosition\n    );\n    const pos = PopupUtils.calculatePosition(\n      targetElementRect,\n      height,\n      width + marginLeft + marginRight,\n      verticalPosition,\n      actualHorizontalPosition,\n      this.model.positionMode\n    );\n\n    if (DomWindowHelper.isAvailable()) {\n      const newVerticalDimensions = PopupUtils.getCorrectedVerticalDimensions(\n        pos.top,\n        height,\n        area.height,\n        verticalPosition,\n        this.model.canShrink,\n        { top: marginTop, bottom: marginBottom }\n      );\n      if (!!newVerticalDimensions) {\n        this.height = newVerticalDimensions.height + \"px\";\n        pos.top = newVerticalDimensions.top;\n      }\n\n      if (this.model.setWidthByTarget) {\n        this.width = targetElementRect.width + \"px\";\n        pos.left = targetElementRect.left;\n      } else {\n        const newHorizontalDimensions = PopupUtils.updateHorizontalDimensions(\n          pos.left,\n          width,\n          DomWindowHelper.getInnerWidth(),\n          actualHorizontalPosition,\n          this.model.positionMode,\n          { left: marginLeft, right: marginRight }\n        );\n        if (!!newHorizontalDimensions) {\n          this.width = newHorizontalDimensions.width ? newHorizontalDimensions.width + \"px\" : undefined;\n          pos.left = newHorizontalDimensions.left;\n        }\n      }\n    }\n    if (!!fixedPopupContainer) {\n      const rect = fixedPopupContainer.getBoundingClientRect();\n      pos.top -= rect.top;\n      pos.left -= rect.left;\n    }\n\n    if (this.showHeader) {\n      this.pointerTarget = PopupUtils.calculatePointerTarget(\n        targetElementRect,\n        pos.top,\n        pos.left,\n        verticalPosition,\n        actualHorizontalPosition,\n        marginLeft,\n        marginRight\n      );\n      this.pointerTarget.top += \"px\";\n      this.pointerTarget.left += \"px\";\n    }\n\n    pos.left += area.left;\n    pos.top += area.top;\n\n    this.left = pos.left + \"px\";\n    this.top = pos.top + \"px\";\n  }\n\n  protected getActualHorizontalPosition(): \"left\" | \"center\" | \"right\" {\n    let actualHorizontalPosition = this.model.horizontalPosition;\n    if (DomDocumentHelper.isAvailable()) {\n      let isRtl = DomDocumentHelper.getComputedStyle(DomDocumentHelper.getBody()).direction == \"rtl\";\n      if (isRtl) {\n        if (this.model.horizontalPosition === \"left\") {\n          actualHorizontalPosition = \"right\";\n        } else if (this.model.horizontalPosition === \"right\") {\n          actualHorizontalPosition = \"left\";\n        }\n      }\n    }\n    return actualHorizontalPosition;\n  }\n  protected getStyleClass(): CssClassBuilder {\n    const displayMode = this.model.getDisplayMode();\n    return super.getStyleClass()\n      .append(\"sv-popup--menu-phone\", displayMode === \"menu-overlay\")\n      .append(\"sv-popup--menu-tablet\", displayMode === \"menu-popup-overlay\")\n      .append(\"sv-popup--menu-popup\", displayMode === \"menu-popup\")\n      .append(\"sv-popup--show-pointer\", displayMode === \"menu-popup\" && this.showHeader)\n      .append(`sv-popup--${this.popupDirection}`, displayMode === \"menu-popup\" && (this.showHeader || this.popupDirection == \"top\" || this.popupDirection == \"bottom\"));\n  }\n  protected getShowHeader(): boolean {\n    return this.model.showPointer && !this.isOverlay;\n  }\n  protected getPopupHeaderTemplate(): string {\n    return \"popup-pointer\";\n  }\n\n  @property({ defaultValue: \"left\" }) popupDirection: string;\n  @property({ defaultValue: { left: \"0px\", top: \"0px\" } }) pointerTarget: IPosition;\n\n  private recalculatePositionHandler: (_: any, options: { isResetHeight: boolean }) => void;\n\n  constructor(model: PopupModel) {\n    super(model);\n    this.model.onRecalculatePosition.add(this.recalculatePositionHandler);\n  }\n  public setComponentElement(componentRoot: HTMLElement): void {\n    super.setComponentElement(componentRoot);\n  }\n  public resetComponentElement() {\n    super.resetComponentElement();\n  }\n  public updateOnShowing(): void {\n    const { root } = settings.environment;\n    this.prevActiveElement = <HTMLElement>root.activeElement;\n\n    if (this.isOverlay) {\n      this.resetDimensionsAndPositionStyleProperties();\n    } else {\n      this.updatePosition(true, false);\n    }\n\n    this.switchFocus();\n    DomWindowHelper.addEventListener(\"resize\", this.resizeWindowCallback);\n    if (this.shouldCreateResizeCallback) {\n      DomWindowHelper.getVisualViewport().addEventListener(\"resize\", this.resizeEventCallback);\n      if (this.container) {\n        this.container.addEventListener(\"touchstart\", this.touchStartEventCallback);\n        this.container.addEventListener(\"touchmove\", this.touchMoveEventCallback);\n      }\n      this.resizeEventCallback();\n    }\n    DomWindowHelper.addEventListener(\"scroll\", this.scrollEventCallBack);\n    this._isPositionSetValue = true;\n  }\n  private get shouldCreateResizeCallback(): boolean {\n    return !!DomWindowHelper.getVisualViewport() && this.isOverlay;\n  }\n\n  public updatePosition(isResetHeight: boolean, isDelayUpdating = true): void {\n    if (isResetHeight) {\n      this.height = \"auto\";\n    }\n\n    if (isDelayUpdating) {\n      setTimeout(() => {\n        this._updatePosition();\n      }, 1);\n    } else {\n      this._updatePosition();\n    }\n  }\n\n  public updateOnHiding(): void {\n    super.updateOnHiding();\n    DomWindowHelper.removeEventListener(\"resize\", this.resizeWindowCallback);\n    if (this.shouldCreateResizeCallback) {\n      DomWindowHelper.getVisualViewport().removeEventListener(\"resize\", this.resizeEventCallback);\n      if (this.container) {\n        this.container.removeEventListener(\"touchstart\", this.touchStartEventCallback);\n        this.container.removeEventListener(\"touchmove\", this.touchMoveEventCallback);\n      }\n    }\n    DomWindowHelper.removeEventListener(\"scroll\", this.scrollEventCallBack);\n\n    if (!this.isDisposed) {\n      this.top = undefined;\n      this.left = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.minWidth = undefined;\n    }\n  }\n\n  protected onModelChanging(newModel: PopupModel) {\n    if (!!this.model) {\n      this.model.onRecalculatePosition.remove(this.recalculatePositionHandler);\n    }\n    if (!this.recalculatePositionHandler) {\n      this.recalculatePositionHandler = (_: any, options: { isResetHeight: boolean }) => {\n        if (!this.isOverlay) {\n          this.updatePosition(options.isResetHeight);\n        }\n      };\n    }\n    super.onModelChanging(newModel);\n    newModel.onRecalculatePosition.add(this.recalculatePositionHandler);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.updateOnHiding();\n    if (!!this.model) {\n      this.model.onRecalculatePosition.remove(this.recalculatePositionHandler);\n      this.recalculatePositionHandler = undefined;\n    }\n    this.resetComponentElement();\n  }\n}", "import { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { PopupModel } from \"./popup\";\nimport { PopupBaseViewModel } from \"./popup-view-model\";\nimport { IAction } from \"./actions/action\";\nimport { defaultActionBarCss } from \"./actions/container\";\n\nexport class PopupModalViewModel extends PopupBaseViewModel {\n  protected getStyleClass(): CssClassBuilder {\n    const displayMode = this.model.getDisplayMode();\n    return super.getStyleClass()\n      .append(\"sv-popup--modal-popup\", displayMode === \"modal-popup\")\n      .append(\"sv-popup--modal-overlay\", displayMode === \"modal-overlay\");\n  }\n  protected getShowFooter(): boolean {\n    return true;\n  }\n  protected createFooterActionBar(): void {\n    super.createFooterActionBar();\n    this.footerToolbar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode,\n      item: \"sv-popup__body-footer-item sv-popup__button sv-modal-popup__button sd-btn sd-btn--small\"\n    }, false);\n\n    this.footerToolbar.containerCss = \"sv-modal-footer-action-bar\";\n    let footerActions = [\n      <IAction>{\n        id: \"cancel\",\n        visibleIndex: 10,\n        title: this.cancelButtonText,\n        innerCss: \"sv-popup__button--cancel\",\n        action: () => { this.cancel(); }\n      },\n      <IAction>{\n        id: \"apply\",\n        visibleIndex: 20,\n        title: this.applyButtonText,\n        innerCss: \"sv-popup__button--apply sd-btn--action\",\n        action: () => { this.apply(); }\n      }\n    ];\n\n    footerActions = this.model.updateFooterActions(footerActions);\n    this.footerToolbarValue.setItems(footerActions);\n  }\n\n  constructor(model: PopupModel) {\n    super(model);\n  }\n\n  public get applyButtonText(): string {\n    return this.getLocalizationString(\"modalApplyButtonText\");\n  }\n  public apply(): void {\n    if (!!this.model.onApply && !this.model.onApply()) return;\n    this.hidePopup();\n  }\n\n  public clickOutside(): void {\n    return;\n  }\n  public onKeyDown(event: any): void {\n    if (event.key === \"Escape\" || event.keyCode === 27) {\n      this.model.onCancel();\n    }\n    super.onKeyDown(event);\n  }\n\n  private onScrollOutsideCallback = (event: WheelEvent) => {\n    this.preventScrollOuside(event, event.deltaY);\n  };\n\n  public updateOnShowing(): void {\n    if (this.container) {\n      this.container.addEventListener(\"wheel\", this.onScrollOutsideCallback, { passive: false });\n    }\n    super.updateOnShowing();\n  }\n  public updateOnHiding(): void {\n    if (this.container) {\n      this.container.removeEventListener(\"wheel\", this.onScrollOutsideCallback);\n    }\n    super.updateOnHiding();\n  }\n}", "import { DomDocumentHelper } from \"./global_variables_utils\";\nimport { IDialogOptions, IPopupOptionsBase, PopupModel } from \"./popup\";\nimport { PopupDropdownViewModel } from \"./popup-dropdown-view-model\";\nimport { PopupModalViewModel } from \"./popup-modal-view-model\";\nimport { PopupBaseViewModel } from \"./popup-view-model\";\n\nexport function createPopupModalViewModel(options: IDialogOptions, rootElement?: HTMLElement): PopupBaseViewModel {\n  const popupOptions: IPopupOptionsBase = { ...options };\n  popupOptions.verticalPosition = \"top\";\n  popupOptions.horizontalPosition = \"left\";\n  popupOptions.showPointer = false;\n  popupOptions.isModal = true;\n  popupOptions.displayMode = options.displayMode || \"popup\";\n  const popupModel = new PopupModel(options.componentName, options.data, popupOptions);\n  popupModel.isFocusedContent = options.isFocusedContent ?? true;\n  const popupViewModel: PopupBaseViewModel = new PopupModalViewModel(popupModel);\n  if (!!rootElement && !!rootElement.appendChild) {\n    var container: HTMLElement = DomDocumentHelper.createElement(\"div\");\n    rootElement.appendChild(container);\n    popupViewModel.setComponentElement(container);\n  }\n  if (!popupViewModel.container) {\n    popupViewModel.initializePopupContainer();\n  }\n  const onVisibilityChangedCallback = (sender: PopupBaseViewModel, options: { isVisible: boolean }) => {\n    if (!options.isVisible) {\n      if (!!container) {\n        popupViewModel.resetComponentElement();\n      }\n    }\n    popupViewModel.onVisibilityChanged.remove(onVisibilityChangedCallback);\n  };\n  popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n  return popupViewModel;\n}\n\nexport function createPopupViewModel(model: PopupModel): PopupBaseViewModel {\n  if (model.isModal) {\n    return new PopupModalViewModel(model);\n  } else {\n    return new PopupDropdownViewModel(model);\n  }\n}\n", "import { Serializer, property } from \"./jsonobject\";\nimport { QuestionFactory } from \"./questionfactory\";\nimport { ItemValue } from \"./itemvalue\";\nimport { ChoiceItem, QuestionCheckboxBase } from \"./question_baseselect\";\nimport { LocalizableString } from \"./localizablestring\";\nimport { CssClassBuilder } from \"./utils/cssClassBuilder\";\nimport { DropdownListModel } from \"./dropdownListModel\";\nimport { classesToSelector, updateListCssValues } from \"./utils/utils\";\n\nexport class ButtonGroupItemValue extends ChoiceItem {\n  protected getBaseType(): string {\n    return \"buttongroupitemvalue\";\n  }\n  /*\n    Item icon property\n  */\n  @property() iconName: string;\n  /*\n    By default icon size is 24.\n    Use this property to change item icon size.\n  */\n  @property() iconSize: number;\n  /**\n   * By default item caption is visible.\n   * Set it 'false' to hide item caption.\n   */\n  @property() showCaption: boolean;\n}\n\n/**\n * A Model for a button group question.\n */\nexport class QuestionButtonGroupModel extends QuestionCheckboxBase {\n  constructor(name: string) {\n    super(name);\n    this.createLocalizableString(\"buttongroupOptionsCaption\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  public locStrsChanged(): void {\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    this.dropdownListModelValue?.locStrsChanged();\n  }\n  private updateReadOnlyText(): void {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n  public getType(): string {\n    return \"buttongroup\";\n  }\n  protected getItemValueType() {\n    return \"buttongroupitemvalue\";\n  }\n  public supportOther(): boolean {\n    return false;\n  }\n\n  //methods for mobile view\n  public getControlClass(): string {\n    this.isEmpty();\n    return new CssClassBuilder()\n      .append(this.cssClasses.control)\n      .append(this.cssClasses.controlEmpty, this.isEmpty())\n      .append(this.cssClasses.onError, this.hasCssError())\n      .append(this.cssClasses.controlDisabled, this.isDisabledStyle)\n      .append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle)\n      .append(this.cssClasses.controlPreview, this.isPreviewStyle)\n      .toString();\n  }\n  protected getFirstInputElementId(): string {\n    return this.inputId + \"_0\";\n  }\n  public getInputId(index: number): string {\n    return this.inputId + \"_\" + index;\n  }\n  public get placeholder(): string {\n    return this.getLocalizableStringText(\"buttongroupOptionsCaption\");\n  }\n  public set placeholder(val: string) {\n    this.setLocalizableStringText(\"buttongroupOptionsCaption\", val);\n  }\n  get locPlaceholder(): LocalizableString {\n    return this.getLocalizableString(\"buttongroupOptionsCaption\");\n  }\n  _allowClear = true;\n  get allowClear(): boolean {\n    return this._allowClear;\n  }\n  set allowClear(newVal) {\n    this._allowClear = newVal;\n  }\n  get searchEnabled(): boolean {\n    return false;\n  }\n  public isItemSelected(item: ItemValue): boolean {\n    return item.value == this.value;\n  }\n  public get readOnlyText(): string {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  public set readOnlyText(val: string) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText(): LocalizableString {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  @property({ defaultValue: false }) inputHasValue: boolean;\n\n  public get showSelectedItemLocText(): boolean {\n    return !this.readOnly && !this.inputHasValue && !!this.selectedItemLocText;\n  }\n  public get selectedItemLocText(): LocalizableString {\n    return this.selectedItem?.locText;\n  }\n\n  private dropdownListModelValue: DropdownListModel;\n  public set dropdownListModel(val: DropdownListModel) {\n    this.dropdownListModelValue = val;\n    this.updateElementCss();\n  }\n  public get dropdownListModel(): DropdownListModel {\n    if (this.renderAs === \"dropdown\") {\n      this.onBeforeSetCompactRenderer();\n    }\n    return this.dropdownListModelValue;\n  }\n  public get selectedItem(): ItemValue { return this.getSingleSelectedItem(); }\n\n  protected onBlurCore(event: any): void {\n    this.dropdownListModel?.onBlur(event);\n    super.onBlurCore(event);\n  }\n  protected updateCssClasses(res: any, css: any) {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  protected calcCssClasses(css: any): any {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModelValue.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n\n  // responsiveness\n  public needResponsiveWidth(): boolean {\n    return true;\n  }\n  protected supportResponsiveness(): boolean {\n    return true;\n  }\n  protected getCompactRenderAs(): string {\n    return \"dropdown\";\n  }\n  protected getObservedElementSelector(): string {\n    return \".sd-button-group-scrollable-container\";\n  }\n  protected onBeforeSetCompactRenderer(): void {\n    if (!this.isDisposed && !this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n  }\n  public dispose(): void {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n}\n\nSerializer.addClass(\n  \"buttongroup\",\n  [\n    {\n      name: \"choices:buttongroupitemvalue[]\",\n    },\n  ],\n  function() {\n    return new QuestionButtonGroupModel(\"\");\n  },\n  \"checkboxbase\"\n);\n\nSerializer.addClass(\n  \"buttongroupitemvalue\",\n  [\n    { name: \"showCaption:boolean\", default: true },\n    { name: \"iconName:text\" },\n    { name: \"iconSize:number\" },\n  ],\n  (value: any) => new ButtonGroupItemValue(value),\n  \"choiceitem\"\n);\n\n// QuestionFactory.Instance.registerQuestion(\"buttongroup\", name => {\n//   var q = new QuestionButtonGroupModel(name);\n//   q.choices = QuestionFactory.DefaultChoices;\n//   return q;\n// });\n\nexport class ButtonGroupItemModel {\n  constructor(\n    public question: QuestionButtonGroupModel,\n    public item: ItemValue,\n    public index: number\n  ) {}\n  public get value() {\n    return this.item.value;\n  }\n  public get iconName() {\n    return this.item.iconName;\n  }\n  public get iconSize() {\n    return this.item.iconSize || 24;\n  }\n  public get caption(): LocalizableString {\n    return this.item.locText;\n  }\n  public get showCaption() {\n    return this.item.showCaption || this.item.showCaption === undefined;\n  }\n  public get isRequired() {\n    return this.question.isRequired;\n  }\n  public get selected() {\n    return this.question.isItemSelected(this.item);\n  }\n  public get readOnly() {\n    return this.question.isInputReadOnly || !this.item.isEnabled;\n  }\n  public get name() {\n    return this.question.name + \"_\" + this.question.id;\n  }\n  public get id() {\n    return this.question.inputId + \"_\" + this.index;\n  }\n  public get hasErrors() {\n    return this.question.errors.length > 0;\n  }\n  public get describedBy() {\n    return this.question.errors.length > 0\n      ? this.question.id + \"_errors\"\n      : null;\n  }\n  private get labelClass() {\n    return new CssClassBuilder()\n      .append(this.question.cssClasses.item)\n      .append(this.question.cssClasses.itemSelected, this.selected)\n      .append(this.question.cssClasses.itemHover, !this.readOnly && !this.selected)\n      .append(this.question.cssClasses.itemDisabled, this.question.isReadOnly || !this.item.isEnabled)\n      .toString();\n  }\n  public get css() {\n    return {\n      label: this.labelClass,\n      icon: this.question.cssClasses.itemIcon,\n      control: this.question.cssClasses.itemControl,\n      caption: this.question.cssClasses.itemCaption,\n      decorator: this.question.cssClasses.itemDecorator,\n    };\n  }\n  public onChange() {\n    this.question.selectItem(this.item);\n  }\n}\n", "import { Base } from \"../base\";\nimport { ISurvey, ISurveyImpl } from \"../base-interfaces\";\nimport { JsonObject, Serializer, property } from \"../jsonobject\";\nimport { IInputMask, IMaskedInputResult, ITextInputParams } from \"./mask_utils\";\n\n/**\n * A base class for classes that implement input masks:\n *\n * - [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/inputmasknumeric)\n * - [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/inputmaskcurrency)\n * - [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/inputmaskdatetime)\n * - [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/inputmaskpattern)\n */\nexport class InputMaskBase extends Base implements IInputMask {\n  /**\n   * Specifies whether to store the question value with an applied mask in survey results.\n   *\n   * Default value: `false`\n   */\n  @property() saveMaskedValue: boolean;\n\n  public owner: ISurveyImpl;\n\n  public getSurvey(live: boolean = false): ISurvey {\n    return this.owner?.getSurvey();\n  }\n\n  public getType(): string {\n    return \"masksettings\";\n  }\n\n  public setData(json: any): void {\n    const properties = Serializer.getProperties(this.getType());\n    properties.forEach(property => {\n      const currentValue = json[property.name];\n      (this as any)[property.name] = currentValue !== undefined ? currentValue : property.getDefaultValue(this);\n    });\n  }\n  public getData(): any {\n    const res: any = {};\n    const properties = Serializer.getProperties(this.getType());\n    properties.forEach(property => {\n      const currentValue = (this as any)[property.name];\n      if (!property.isDefaultValue(currentValue)) {\n        res[property.name] = currentValue;\n      }\n    });\n\n    return res;\n  }\n\n  public processInput(args: ITextInputParams): IMaskedInputResult {\n    return { value: args.prevValue, caretPosition: args.selectionEnd, cancelPreventDefault: false };\n  }\n\n  public getUnmaskedValue(src: string): any { return src; }\n  public getMaskedValue(src: any): string { return src; }\n  public getTextAlignment(): \"left\" | \"right\" | \"auto\" { return \"auto\"; }\n\n  public getTypeForExpressions(): string {\n    return \"text\";\n  }\n}\n\nSerializer.addClass(\n  \"masksettings\",\n  [\n    {\n      name: \"saveMaskedValue:boolean\",\n      visibleIf: function (obj: any) {\n        if (!obj) return false;\n        return obj.getType() !== \"masksettings\";\n      },\n    },\n  ],\n  function () {\n    return new InputMaskBase();\n  }\n);", "import { settings } from \"../settings\";\nimport { Serializer, property } from \"../jsonobject\";\nimport { InputMaskBase } from \"./mask_base\";\nimport { IMaskedInputResult, ITextInputParams } from \"./mask_utils\";\nimport { ILoadFromJSONOptions } from \"../base-interfaces\";\n\nexport interface IMaskLiteral {\n  type: \"const\" | \"regex\" | \"fixed\";\n  value: any;\n}\n\nexport function getLiterals(pattern: string): Array<IMaskLiteral> {\n  const result: Array<IMaskLiteral> = [];\n  let prevCharIsEscaped = false;\n  const definitionsKeys = Object.keys(settings.maskSettings.patternDefinitions);\n\n  for (let index = 0; index < pattern.length; index++) {\n    const currentChar = pattern[index];\n    if (currentChar === settings.maskSettings.patternEscapeChar) {\n      prevCharIsEscaped = true;\n    } else if (prevCharIsEscaped) {\n      prevCharIsEscaped = false;\n      result.push({ type: \"fixed\", value: currentChar });\n    } else {\n      result.push({ type: definitionsKeys.indexOf(currentChar) !== -1 ? \"regex\" : \"const\", value: currentChar });\n    }\n  }\n\n  return result;\n}\n\nfunction getFirstMatch(str: string, strIndex: number, literal: IMaskLiteral): number {\n  const currentDefinition = settings.maskSettings.patternDefinitions[literal.value];\n  while(strIndex < str.length) {\n    if (str[strIndex].match(currentDefinition)) {\n      return strIndex;\n    }\n    strIndex++;\n  }\n  return strIndex;\n}\n\nexport function getMaskedValueByPattern(src: string, pattern: string | Array<IMaskLiteral>, matchWholeMask: boolean): string {\n  const input = (src === undefined || src === null) ? \"\" : src;\n  let result = \"\";\n  let strIndex = 0;\n  const literals: Array<IMaskLiteral> = (typeof pattern === \"string\") ? getLiterals(pattern) : pattern;\n\n  for (let maskIndex = 0; maskIndex < literals.length; maskIndex++) {\n    switch(literals[maskIndex].type) {\n      case \"regex\" :\n        if (strIndex < input.length) {\n          strIndex = getFirstMatch(input, strIndex, literals[maskIndex]);\n        }\n        if (strIndex < input.length) {\n          result += input[strIndex];\n        } else if (matchWholeMask) {\n          result += settings.maskSettings.patternPlaceholderChar;\n        } else {\n          return result;\n        }\n\n        strIndex++;\n        break;\n\n      case \"const\":\n      case \"fixed\":\n        result += literals[maskIndex].value;\n        if (literals[maskIndex].value === input[strIndex]) {\n          strIndex++;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nexport function getUnmaskedValueByPattern(str: string, pattern: string | Array<IMaskLiteral>, matchWholeMask: boolean, skipFixedChar = false): string {\n  let result = \"\";\n  if (!str) return result;\n\n  let literals: Array<IMaskLiteral> = (typeof pattern === \"string\") ? getLiterals(pattern) : pattern;\n  for (let index = 0; index < literals.length; index++) {\n    if (literals[index].type === \"fixed\" && !skipFixedChar) {\n      result += literals[index].value;\n    } if (literals[index].type === \"regex\") {\n      const currentDefinition = settings.maskSettings.patternDefinitions[literals[index].value];\n      if (!!str[index] && str[index].match(currentDefinition)) {\n        result += str[index];\n      } else if (matchWholeMask) {\n        result = \"\";\n        break;\n      } else {\n        break;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * A class that describes an input mask of the `\"pattern\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"pattern\",\n *     \"maskSettings\": {\n *       // Specify the properties of a pattern input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nexport class InputMaskPattern extends InputMaskBase {\n  private literals: Array<IMaskLiteral> = [];\n\n  /**\n   * A pattern for the input value.\n   *\n   * If you set the [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType) to `\"pattern\"`, the mask can contain string literals and the following placeholders:\n   *\n   * - `9` - A digit.\n   * - `a` - An upper- or lower-case letter.\n   * - `#` - A digit or an upper- or lower-case letter.\n   *\n   * Use backslash `\\` to escape a character.\n   *\n   * Example: `+1(999)-999-99-99`\n   *\n   * If you set the [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType) to `\"datetime\"`, the mask can contain separator characters and the following placeholders:\n   *\n   * - `m` - Month number.\n   * - `mm` - Month number, with leading zero for single-digit values.\n   * - `d` - Day of the month.\n   * - `dd` - Day of the month, with leading zero for single-digit values.\n   * - `yy` - Last two digits of the year.\n   * - `yyyy` - A four-digit year.\n   * - `H` - Hours in 24-hour format.\n   * - `HH` - Hours in 24-hour format, with leading zero for single-digit values.\n   * - `h` - Hours in 12-hour format.\n   * - `hh` - Hours in 12-hour format, with leading zero for single-digit values.\n   * - `MM` - Minutes.\n   * - `ss` - Seconds.\n   * - `TT` - 12-hour clock period in upper case (AM/PM).\n   * - `tt` - 12-hour clock period in lower case (am/pm).\n   *\n   * Example: `mm/dd/yyyy HH:MM:ss`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see [settings.maskSettings](https://surveyjs.io/form-library/documentation/api-reference/settings#maskSettings)\n   */\n  @property() pattern: string;\n\n  protected updateLiterals(): void {\n    this.literals = getLiterals(this.pattern || \"\");\n  }\n  protected onPropertyValueChanged(name: string, oldValue: any, newValue: any): void {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name === \"pattern\") {\n      this.updateLiterals();\n    }\n  }\n\n  public getType(): string {\n    return \"patternmask\";\n  }\n\n  public fromJSON(json: any, options?: ILoadFromJSONOptions): void {\n    super.fromJSON(json, options);\n    this.updateLiterals();\n  }\n\n  public _getMaskedValue(src: string, matchWholeMask: boolean = false): string {\n    const input = (src === undefined || src === null) ? \"\" : src;\n    return getMaskedValueByPattern(input, this.literals, matchWholeMask);\n  }\n  public _getUnmaskedValue(src: string, matchWholeMask: boolean = false): string {\n    const input = (src === undefined || src === null) ? \"\" : src;\n    return getUnmaskedValueByPattern(input, this.literals, matchWholeMask);\n  }\n  public processInput(args: ITextInputParams): IMaskedInputResult {\n    const result = { value: args.prevValue, caretPosition: args.selectionEnd, cancelPreventDefault: false };\n    if (!args.insertedChars && args.selectionStart === args.selectionEnd) {\n      return result;\n    }\n\n    const leftPart = args.prevValue.slice(0, args.selectionStart) + (args.insertedChars || \"\");\n    const leftPartUnmasked = getUnmaskedValueByPattern(args.prevValue.slice(0, args.selectionStart), this.literals.slice(0, args.selectionStart), false);\n    const rightPartUnmasked = getUnmaskedValueByPattern(args.prevValue.slice(args.selectionEnd), this.literals.slice(args.selectionEnd), false, true);\n    result.value = this._getMaskedValue(leftPartUnmasked + (args.insertedChars || \"\") + rightPartUnmasked, true);\n\n    if (!args.insertedChars && args.inputDirection === \"backward\") {\n      result.caretPosition = args.selectionStart;\n    } else {\n      result.caretPosition = this._getMaskedValue(leftPart).length;\n    }\n\n    return result;\n  }\n  public getMaskedValue(src: any): string {\n    return this._getMaskedValue(src, true);\n  }\n  public getUnmaskedValue(src: string): any {\n    return this._getUnmaskedValue(src, true);\n  }\n}\n\nSerializer.addClass(\n  \"patternmask\",\n  [\n    { name: \"pattern\" },\n  ],\n  function () {\n    return new InputMaskPattern();\n  },\n  \"masksettings\"\n);", "import { Serializer, property } from \"../jsonobject\";\nimport { InputMaskBase } from \"./mask_base\";\nimport { IMaskedInputResult, ITextInputParams, numberDefinition } from \"./mask_utils\";\n\ninterface INumericalComposition {\n  integralPart: string;\n  fractionalPart: string;\n  isNegative?: boolean;\n  hasDecimalSeparator?: boolean;\n}\n\nexport function splitString(str: string, reverse = true, n = 3): Array<string> {\n  let arr = [];\n\n  if (reverse) {\n    for (let i = str.length - n; i > -n; i -= n) {\n      arr.push(str.substring(i, i + n));\n    }\n    arr = arr.reverse();\n  } else {\n    for (let i = 0; i < str.length; i += n) {\n      arr.push(str.substring(i, i + n));\n    }\n  }\n\n  return arr;\n}\n\n/**\n * A class that describes an input mask of the `\"numeric\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"numeric\",\n *     \"maskSettings\": {\n *       // Specify the properties of a numeric input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nexport class InputMaskNumeric extends InputMaskBase {\n  /**\n   * Specifies whether respondents can enter negative values.\n   *\n   * Default value: `true`\n   * @see min\n   * @see max\n   */\n  @property() allowNegativeValues: boolean;\n  /**\n   * A symbol used to separate the fractional part from the integer part of a displayed number.\n   *\n   * Default value: `\".\"`\n   * @see precision\n   * @see thousandsSeparator\n   */\n  @property() decimalSeparator: string;\n  /**\n   * Limits how many digits to retain after the decimal point for a displayed number.\n   *\n   * Default value: 2\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see decimalSeparator\n   */\n  @property() precision: number;\n  /**\n   * A symbol used to separate the digits of a large number into groups of three.\n   *\n   * Default value: `\",\"`\n   * @see decimalSeparator\n   */\n  @property() thousandsSeparator: string;\n  /**\n   * A minimum value that respondents can enter.\n   * @see max\n   * @see allowNegativeValues\n   */\n  @property() min: number;\n  /**\n   * A maximum value that respondents can enter.\n   * @see min\n   * @see allowNegativeValues\n   */\n  @property() max: number;\n\n  private calccaretPosition(leftPart: string, args: ITextInputParams, maskedValue: string) {\n    const leftPartMaskedLength = !! leftPart ? this.displayNumber(this.parseNumber(leftPart), false).length : 0;\n    let validCharIndex = 0;\n    let result = args.selectionStart;\n    // let result = 0;\n    const isDeleteKeyOperation = !args.insertedChars && args.inputDirection === \"forward\";\n\n    for (let index = 0; index < maskedValue.length; index++) {\n      const currentChar = maskedValue[index];\n      if (currentChar !== this.thousandsSeparator) {\n        validCharIndex++;\n      }\n      if (validCharIndex === (leftPartMaskedLength + (isDeleteKeyOperation ? 1 : 0))) {\n        if (isDeleteKeyOperation) {\n          result = index;\n        } else {\n          result = index + 1;\n        }\n        break;\n      }\n      // if (validCharIndex === leftPartMaskedLength) {\n      //   result = index + 1;\n      //   break;\n      // }\n    }\n    return result;\n  }\n\n  private numericalCompositionIsEmpty(number: INumericalComposition): boolean {\n    return !number.integralPart && !number.fractionalPart;\n  }\n\n  public displayNumber(parsedNumber: INumericalComposition, insertThousandsSeparator = true, matchWholeMask: boolean = false): string {\n    let displayIntegralPart = parsedNumber.integralPart;\n    if (insertThousandsSeparator && !!displayIntegralPart) {\n      displayIntegralPart = splitString(displayIntegralPart).join(this.thousandsSeparator);\n    }\n    let displayFractionalPart = parsedNumber.fractionalPart;\n    const minusSign = parsedNumber.isNegative ? \"-\" : \"\";\n    if (displayFractionalPart === \"\") {\n      if (matchWholeMask) {\n        return (!displayIntegralPart || displayIntegralPart === \"0\") ? displayIntegralPart : minusSign + displayIntegralPart;\n      } else {\n        const displayDecimalSeparator = parsedNumber.hasDecimalSeparator && !matchWholeMask ? this.decimalSeparator : \"\";\n        const src = displayIntegralPart + displayDecimalSeparator;\n        return src === \"0\" ? src : minusSign + src;\n      }\n    } else {\n      displayIntegralPart = displayIntegralPart || \"0\";\n      displayFractionalPart = displayFractionalPart.substring(0, this.precision);\n      return [minusSign + displayIntegralPart, displayFractionalPart].join(this.decimalSeparator);\n    }\n  }\n\n  public convertNumber(parsedNumber: INumericalComposition): number {\n    let value;\n    const minusSign = parsedNumber.isNegative ? \"-\" : \"\";\n    if (!!parsedNumber.fractionalPart) {\n      value = parseFloat(minusSign + (parsedNumber.integralPart || \"0\") + \".\" + parsedNumber.fractionalPart.substring(0, this.precision));\n    } else {\n      value = parseInt(minusSign + parsedNumber.integralPart || \"0\");\n    }\n    return value;\n  }\n\n  public validateNumber(number: INumericalComposition, matchWholeMask: boolean): boolean {\n    const min = this.min || Number.MIN_SAFE_INTEGER;\n    const max = this.max || Number.MAX_SAFE_INTEGER;\n\n    if (this.numericalCompositionIsEmpty(number)) return true;\n\n    if (this.min !== undefined || this.max !== undefined) {\n      let value = this.convertNumber(number);\n      if (Number.isNaN(value)) {\n        return true;\n      }\n      if (value >= min && value <= max) return true;\n      if (!matchWholeMask) {\n        if (!number.hasDecimalSeparator && value != 0) {\n          let test_high = value;\n          let test_low = value;\n          if (value > 0) {\n            if (value + 1 > min && value <= max) return true;\n            while(true) {\n              test_high = test_high * 10 + 9;\n              test_low = test_low * 10;\n              if (test_low > max) {\n                break;\n              }\n              if (test_high > min) {\n                return true;\n              }\n            }\n            return false;\n          }\n          if (value < 0) {\n            if (value >= min && value - 1 < max) return true;\n            while(true) {\n              test_high = test_high * 10;\n              test_low = test_low * 10 - 9;\n              if (test_high < min) {\n                break;\n              }\n              if (test_low < max) {\n                return true;\n              }\n            }\n            return false;\n          }\n        } else {\n          const delta = 0.1 ** (number.fractionalPart || \"\").length;\n          if (value >= 0) return value + delta > min && value <= max;\n          if (value < 0) return value >= min && value - delta < max;\n        }\n        return value >= 0 && value <= max || value < 0 && value >= min;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  public parseNumber(src: string): INumericalComposition {\n    const result: INumericalComposition = { integralPart: \"\", fractionalPart: \"\", hasDecimalSeparator: false, isNegative: false };\n    const input = (src === undefined || src === null) ? \"\" : src.toString();\n    let minusCharCount = 0;\n\n    for (let inputIndex = 0; inputIndex < input.length; inputIndex++) {\n      const currentChar = input[inputIndex];\n      switch(currentChar) {\n        case \"-\": {\n          if (this.allowNegativeValues && (this.min === undefined || this.min < 0)) {\n            minusCharCount++;\n          }\n          break;\n        }\n        case this.decimalSeparator: {\n          if (this.precision > 0) {\n            result.hasDecimalSeparator = true;\n          }\n          break;\n        }\n        case this.thousandsSeparator: {\n          break;\n        }\n        default: {\n          if (currentChar.match(numberDefinition)) {\n            if (result.hasDecimalSeparator) {\n              result.fractionalPart += currentChar;\n            } else {\n              result.integralPart += currentChar;\n            }\n          }\n        }\n      }\n    }\n\n    result.isNegative = minusCharCount % 2 !== 0;\n\n    if (result.integralPart.length > 1 && result.integralPart[0] === \"0\") {\n      result.integralPart = result.integralPart.slice(1);\n    }\n\n    return result;\n  }\n\n  public getNumberMaskedValue(src: string, matchWholeMask: boolean = false): string {\n    const parsedNumber = this.parseNumber(src);\n    if (!this.validateNumber(parsedNumber, matchWholeMask)) {\n      return null;\n    }\n    const displayText = this.displayNumber(parsedNumber, true, matchWholeMask);\n    return displayText;\n  }\n\n  private getNumberUnmaskedValue(str: string): number | undefined {\n    const parsedNumber = this.parseNumber(str);\n    if (this.numericalCompositionIsEmpty(parsedNumber)) return undefined;\n    return this.convertNumber(parsedNumber);\n  }\n\n  public getTextAlignment(): \"left\" | \"right\" | \"auto\" {\n    return \"right\";\n  }\n  public getMaskedValue(src: any): string {\n    let input: string = (src === undefined || src === null) ? \"\" : src.toString();\n    input = input.replace(\".\", this.decimalSeparator);\n    return this.getNumberMaskedValue(input, true);\n  }\n  public getUnmaskedValue(src: string): any {\n    return this.getNumberUnmaskedValue(src);\n  }\n  public processInput(args: ITextInputParams): IMaskedInputResult {\n    const result = { value: args.prevValue, caretPosition: args.selectionEnd, cancelPreventDefault: false };\n    const leftPart = args.prevValue.slice(0, args.selectionStart) + (args.insertedChars || \"\");\n    const rightPart = args.prevValue.slice(args.selectionEnd);\n    const src = leftPart + rightPart;\n    const parsedNumber = this.parseNumber(src);\n\n    if (!this.validateNumber(parsedNumber, false)) {\n      return result;\n    }\n\n    const maskedValue = this.getNumberMaskedValue(src);\n    const caretPosition = this.calccaretPosition(leftPart, args, maskedValue);\n    result.value = maskedValue;\n    result.caretPosition = caretPosition;\n\n    return result;\n  }\n\n  public getType(): string {\n    return \"numericmask\";\n  }\n\n  protected isValueUndefined(value: any): boolean {\n    return value === \"\" || super.isValueUndefined(value);\n  }\n}\n\nSerializer.addClass(\n  \"numericmask\",\n  [\n    { name: \"allowNegativeValues:boolean\", default: true },\n    { name: \"decimalSeparator\", default: \".\", maxLength: 1 },\n    { name: \"thousandsSeparator\", default: \",\", maxLength: 1 },\n    { name: \"precision:number\", default: 2, minValue: 0 },\n    { name: \"min:number\" },\n    { name: \"max:number\" },\n  ],\n  function () {\n    return new InputMaskNumeric();\n  },\n  \"masksettings\"\n);", "import { Serializer, property } from \"../jsonobject\";\nimport { InputMaskPattern } from \"./mask_pattern\";\nimport { IMaskedInputResult, ITextInputParams, numberDefinition } from \"./mask_utils\";\n\ntype DateTimeMaskLexemType = \"month\" | \"day\" | \"year\" | \"hour\" | \"minute\" | \"second\" | \"timeMarker\" | \"separator\"\nexport interface IDateTimeMaskLexem {\n  type: DateTimeMaskLexemType;\n  value: any;\n  count: number;\n  maxCount: number;\n  upperCase: boolean;\n}\n\ninterface IInputDateTimeData {\n  lexem: IDateTimeMaskLexem;\n  value: string;\n  isCompleted: boolean;\n}\n\ninterface IDateTimeComposition {\n  day: number;\n  month: number;\n  year: number;\n  hour?: number;\n  minute?: number;\n  second?: number;\n  timeMarker?: string;\n  min?: Date;\n  max?: Date;\n}\n\nfunction getMaxCountLexem(currentLexemType: string, count: number): number {\n  switch(currentLexemType) {\n    case \"hour\":\n    case \"minute\":\n    case \"second\":\n    case \"day\":\n    case \"month\": {\n      return 2;\n    }\n    case \"timeMarker\":\n    case \"year\": {\n      return count;\n    }\n    default: {\n      return 1;\n    }\n  }\n}\nfunction trimDatePart(lexem: IDateTimeMaskLexem, data: string): string {\n  let result = data;\n  if (lexem.count < lexem.maxCount && ((lexem.type === \"day\" && parseInt(data[0]) === 0) || (lexem.type === \"month\" && parseInt(data[0]) === 0))) {\n    result = data.slice(1, data.length);\n  }\n  return result;\n}\n\nexport function getDateTimeLexems(pattern: string): Array<IDateTimeMaskLexem> {\n  const result: Array<IDateTimeMaskLexem> = [];\n  let prevLexemType: string;\n\n  const createOrUpdateLexem = (currentLexemType: DateTimeMaskLexemType, currentChar: string, upperCase: boolean = false) => {\n    if (!!prevLexemType && prevLexemType === currentLexemType) {\n      result[result.length - 1].count++;\n      const maxCount = getMaxCountLexem(currentLexemType, result[result.length - 1].count);\n      result[result.length - 1].maxCount = maxCount;\n    } else {\n      const maxCount = getMaxCountLexem(currentLexemType, 1);\n      // result.push({ type: currentLexemType, value: currentChar, count: 1, data: { value: \"\", isCompleted: false, isCorrect: false }, maxCount: maxCount });\n      result.push({ type: currentLexemType, value: currentChar, count: 1, maxCount: maxCount, upperCase: upperCase });\n    }\n  };\n\n  for (let index = 0; index < pattern.length; index++) {\n    const currentChar = pattern[index];\n    switch(currentChar) {\n      case \"m\":\n        createOrUpdateLexem(\"month\", currentChar);\n        break;\n      case \"d\":\n        createOrUpdateLexem(\"day\", currentChar);\n        break;\n      case \"y\":\n        createOrUpdateLexem(\"year\", currentChar);\n        break;\n      case \"h\":\n        createOrUpdateLexem(\"hour\", currentChar, false);\n        break;\n      case \"H\":\n        createOrUpdateLexem(\"hour\", currentChar, true);\n        break;\n      case \"M\":\n        createOrUpdateLexem(\"minute\", currentChar);\n        break;\n      case \"s\":\n        createOrUpdateLexem(\"second\", currentChar);\n        break;\n      case \"t\":\n        createOrUpdateLexem(\"timeMarker\", currentChar);\n        break;\n      case \"T\":\n        createOrUpdateLexem(\"timeMarker\", currentChar, true);\n        break;\n      default:\n        result.push({ type: \"separator\", value: currentChar, count: 1, maxCount: 1, upperCase: false });\n        break;\n    }\n    prevLexemType = result[result.length - 1].type;\n  }\n\n  return result;\n}\n\n/**\n * A class that describes an input mask of the `\"datetime\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"datetime\",\n *     \"maskSettings\": {\n *       // Specify the properties of a date-time input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nexport class InputMaskDateTime extends InputMaskPattern {\n  private defaultDate = \"1970-01-01T\";\n  private turnOfTheCentury = 68;\n  private twelve = 12;\n  private lexems: Array<IDateTimeMaskLexem> = [];\n  private inputDateTimeData: Array<IInputDateTimeData> = [];\n  private validBeginningOfNumbers: { [key: string]: any } = {\n    hour: 1,\n    hourU: 2,\n    minute: 5,\n    second: 5,\n    day: 3,\n    month: 1,\n  };\n  /**\n   * A minimum date and time value that respondents can enter.\n   * @see max\n   */\n  @property() min: string;\n  /**\n   * A maximum date and time value that respondents can enter.\n   * @see min\n   */\n  @property() max: string;\n\n  public get hasDatePart(): boolean {\n    return this.lexems.some(l => l.type === \"day\" || l.type === \"month\" || l.type === \"year\");\n  }\n  public get hasTimePart(): boolean {\n    return this.lexems.some(l => l.type === \"hour\" || l.type === \"minute\" || l.type === \"second\");\n  }\n  private get is12Hours(): boolean {\n    return this.lexems.filter(l => l.type === \"hour\" && !l.upperCase).length > 0;\n  }\n\n  public getType(): string {\n    return \"datetimemask\";\n  }\n\n  public getTypeForExpressions(): string {\n    return this.hasTimePart ? \"datetime-local\" : \"datetime\";\n  }\n\n  protected updateLiterals(): void {\n    this.lexems = getDateTimeLexems(this.pattern || \"\");\n  }\n\n  private leaveOnlyNumbers(input: string): string {\n    let result = \"\";\n    for (let index = 0; index < input.length; index++) {\n      if (input[index].match(numberDefinition)) {\n        result += input[index];\n      }\n    }\n    return result;\n  }\n\n  private getMaskedStrFromISO(str: string): string {\n    let date = new Date(str);\n    this.initInputDateTimeData();\n    if (!this.hasTimePart) {\n      date = new Date(str + \"T00:00:00\");\n    }\n    if (!this.hasDatePart) {\n      date = new Date(this.defaultDate + str);\n    }\n\n    if (!isNaN(date as any)) {\n      this.lexems.forEach((lexem, index) => {\n        let inputData = this.inputDateTimeData[index];\n        inputData.isCompleted = true;\n\n        switch(lexem.type) {\n          case \"hour\": {\n            if (!this.is12Hours) {\n              inputData.value = date.getHours().toString();\n            } else {\n              inputData.value = ((date.getHours() - 1) % this.twelve + 1).toString();\n            }\n            break;\n          }\n          case \"minute\": {\n            inputData.value = date.getMinutes().toString();\n            break;\n          }\n          case \"second\": {\n            inputData.value = date.getSeconds().toString();\n            break;\n          }\n          case \"timeMarker\": {\n            const marker = (date.getHours() >= this.twelve) ? \"pm\" : \"am\";\n            inputData.value = lexem.upperCase ? marker.toUpperCase() : marker;\n            break;\n          }\n          case \"day\": {\n            inputData.value = date.getDate().toString();\n            break;\n          }\n          case \"month\": {\n            inputData.value = (date.getMonth() + 1).toString();\n            break;\n          }\n          case \"year\": {\n            let year = date.getFullYear();\n            if (lexem.count == 2) year = year % 100;\n            inputData.value = year.toString();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      });\n    }\n    return this.getFormatedString(true);\n  }\n  private initInputDateTimeData() {\n    this.inputDateTimeData = [];\n    this.lexems.forEach(lexem => {\n      this.inputDateTimeData.push({ lexem: lexem, isCompleted: false, value: undefined });\n    });\n  }\n\n  public getISO_8601Format(dateTime: IDateTimeComposition): string {\n    const date: Array<string> = [];\n    const time: Array<string> = [];\n\n    if (dateTime.year !== undefined) {\n      const year = this.getPlaceholder(4, dateTime.year.toString(), \"0\") + dateTime.year;\n      date.push(year);\n    }\n    if (dateTime.month !== undefined && dateTime.year !== undefined) {\n      const month = this.getPlaceholder(2, dateTime.month.toString(), \"0\") + dateTime.month;\n      date.push(month);\n    }\n    if (dateTime.day !== undefined && dateTime.month !== undefined && dateTime.year !== undefined) {\n      const day = this.getPlaceholder(2, dateTime.day.toString(), \"0\") + dateTime.day;\n      date.push(day);\n    }\n\n    if (dateTime.hour !== undefined) {\n      const hour = this.getPlaceholder(2, dateTime.hour.toString(), \"0\") + dateTime.hour;\n      time.push(hour);\n    }\n    if (dateTime.minute !== undefined && dateTime.hour !== undefined) {\n      const minute = this.getPlaceholder(2, dateTime.minute.toString(), \"0\") + dateTime.minute;\n      time.push(minute);\n    }\n    if (dateTime.second !== undefined && dateTime.minute !== undefined && dateTime.hour !== undefined) {\n      const second = this.getPlaceholder(2, dateTime.second.toString(), \"0\") + dateTime.second;\n      time.push(second);\n    }\n\n    const result: Array<string> = [];\n    if (date.length > 0) {\n      result.push(date.join(\"-\"));\n    }\n    if (time.length > 1) {\n      result.push(time.join(\":\"));\n    }\n    return result.join(\"T\");\n  }\n\n  private isYearValid(dateTime: IDateTimeComposition): boolean {\n    if (dateTime.min === undefined && dateTime.max === undefined) return false;\n\n    const data = dateTime.year.toString();\n    const minYearPart = dateTime.min.toISOString().slice(0, data.length);\n    const maxYearPart = dateTime.max.toISOString().slice(0, data.length);\n    return dateTime.year >= parseInt(minYearPart) && dateTime.year <= parseInt(maxYearPart);\n  }\n\n  private createIDateTimeCompositionWithDefaults(dateTime: IDateTimeComposition, isUpperLimit: boolean): IDateTimeComposition {\n    const checkOnlyLeapYears = dateTime.day == 29 && dateTime.month == 2;\n    let minYear = dateTime.min.getFullYear();\n    let maxYear = dateTime.max.getFullYear();\n    if (checkOnlyLeapYears) {\n      minYear = Math.ceil(minYear / 4) * 4;\n      maxYear = Math.floor(maxYear / 4) * 4;\n      if (minYear > maxYear) {\n        minYear = undefined;\n        maxYear = undefined;\n      }\n    }\n    const year = dateTime.year !== undefined ? dateTime.year : isUpperLimit ? maxYear : minYear;\n    const month = dateTime.month !== undefined ? dateTime.month : (isUpperLimit && this.hasDatePart ? 12 : 1);\n    const day = dateTime.day !== undefined ? dateTime.day : (isUpperLimit && this.hasDatePart ? this.getMaxDateForMonth(year, month) : 1);\n    const hour = dateTime.hour !== undefined ? dateTime.hour : (isUpperLimit ? 23 : 0);\n    const minute = dateTime.minute !== undefined ? dateTime.minute : (isUpperLimit ? 59 : 0);\n    const second = dateTime.second !== undefined ? dateTime.second : (isUpperLimit ? 59 : 0);\n\n    return { year: year, month: month, day: day, hour: hour, minute: minute, second: second };\n  }\n\n  private getMaxDateForMonth(year: number, month: number) {\n    if (month == 2) return year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ? 29 : 28;\n    return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];\n  }\n\n  private isDateValid(dateTime: IDateTimeComposition): boolean {\n    const date = new Date(this.getISO_8601Format(this.createIDateTimeCompositionWithDefaults(dateTime, false)));\n    const dateH = new Date(this.getISO_8601Format(this.createIDateTimeCompositionWithDefaults(dateTime, true)));\n\n    return !isNaN(date as any) &&\n      (date.getDate() === dateTime.day || dateTime.day === undefined) &&\n      (date.getMonth() === dateTime.month - 1 || dateTime.month === undefined) &&\n      (date.getFullYear() === dateTime.year || dateTime.year === undefined) &&\n    dateH >= dateTime.min && date <= dateTime.max;\n  }\n\n  private getPlaceholder(lexemLength: number, str: string, char: string) {\n    const paddingsLength = lexemLength - (str || \"\").length;\n    const paddings = paddingsLength > 0 ? char.repeat(paddingsLength) : \"\";\n    return paddings;\n  }\n\n  private isDateValid12(dateTime12: IDateTimeComposition) {\n    if (!this.is12Hours) return this.isDateValid(dateTime12);\n\n    if (this.is12Hours && dateTime12.hour > this.twelve) {\n      return false;\n    }\n\n    if (!dateTime12.timeMarker) {\n      if (this.isDateValid(dateTime12)) return true;\n      dateTime12.hour += this.twelve;\n      return this.isDateValid(dateTime12);\n    } else if (dateTime12.timeMarker[0].toLowerCase() === \"p\") {\n      if (dateTime12.hour !== this.twelve) {\n        dateTime12.hour += this.twelve;\n      }\n      return this.isDateValid(dateTime12);\n    } else {\n      if (dateTime12.hour === this.twelve) {\n        dateTime12.hour = 0;\n      }\n      return this.isDateValid(dateTime12);\n    }\n  }\n\n  private updateTimeMarkerInputDateTimeData(newItem: IInputDateTimeData, dateTime: IDateTimeComposition): void {\n    let data = newItem.value;\n    if (!data) return;\n\n    const propertyName = \"timeMarker\";\n    const tempDateTime = { ...dateTime };\n\n    (tempDateTime as any)[propertyName] = data;\n    if (this.isDateValid12(tempDateTime)) {\n      newItem.isCompleted = true;\n    } else {\n      data = data.slice(0, data.length - 1);\n    }\n    newItem.value = data || undefined;\n    (dateTime as any)[propertyName] = data || undefined;\n    return;\n  }\n\n  private updateInputDateTimeData(newItem: IInputDateTimeData, dateTime: IDateTimeComposition): void {\n    let data = newItem.value;\n    if (!data) return;\n\n    const propertyName = newItem.lexem.type;\n    const tempDateTime = { ...dateTime };\n    (tempDateTime as any)[propertyName] = parseInt(this.parseTwoDigitYear(newItem));\n    if (data.length === newItem.lexem.maxCount) {\n      if (this.isDateValid12(tempDateTime)) {\n        newItem.isCompleted = true;\n        newItem.value = data || undefined;\n        (dateTime as any)[propertyName] = parseInt(data) > 0 ? parseInt(data) : undefined;\n        return;\n      } else {\n        data = data.slice(0, data.length - 1);\n      }\n    }\n\n    (tempDateTime as any)[propertyName] = parseInt(data);\n    const firstDigit = parseInt(data[0]);\n    const validBeginningOfNumber = this.validBeginningOfNumbers[propertyName + (newItem.lexem.upperCase ? \"U\" : \"\")];\n    if ((propertyName === \"year\" && !this.isYearValid(tempDateTime))) {\n      data = data.slice(0, data.length - 1);\n      newItem.isCompleted = false;\n    } else if (validBeginningOfNumber !== undefined && firstDigit > validBeginningOfNumber) {\n      if (this.isDateValid12(tempDateTime)) {\n        newItem.isCompleted = true;\n      } else {\n        data = data.slice(0, data.length - 1);\n      }\n    } else if (validBeginningOfNumber !== undefined && firstDigit !== 0 && firstDigit <= validBeginningOfNumber) {\n      this.checkValidationDateTimePart(tempDateTime, propertyName, newItem);\n      if (newItem.isCompleted && !this.isDateValid12(tempDateTime)) {\n        data = data.slice(0, data.length - 1);\n      }\n    }\n    newItem.value = data || undefined;\n    (dateTime as any)[propertyName] = parseInt(data) > 0 ? parseInt(data) : undefined;\n  }\n\n  private checkValidationDateTimePart(dateTime: IDateTimeComposition, propertyName: string, newItem: IInputDateTimeData) {\n    const prevValue = (dateTime as any)[propertyName];\n    let tempValue = prevValue * 10;\n    let maxValue = 10;\n    if (propertyName === \"month\") maxValue = 3;\n    if (propertyName === \"hour\") maxValue = this.is12Hours ? 3 : 5;\n\n    newItem.isCompleted = true;\n\n    for (let index = 0; index < maxValue; index++) {\n      (dateTime as any)[propertyName] = tempValue + index;\n      if (this.isDateValid12(dateTime)) {\n        newItem.isCompleted = false;\n        break;\n      }\n    }\n    (dateTime as any)[propertyName] = prevValue;\n  }\n\n  private getCorrectDatePartFormat(inputData: IInputDateTimeData, matchWholeMask: boolean): string {\n    const lexem = inputData.lexem;\n    let dataStr = inputData.value || \"\";\n\n    if (!!dataStr && lexem.type === \"timeMarker\") {\n      if (matchWholeMask) {\n        dataStr = dataStr + this.getPlaceholder(lexem.count, dataStr, lexem.value);\n      }\n      return dataStr;\n    }\n\n    if (!!dataStr && inputData.isCompleted) {\n      dataStr = parseInt(dataStr).toString();\n    }\n    if (!!dataStr && inputData.isCompleted) {\n      const zeroPaddings = this.getPlaceholder(lexem.count, dataStr, \"0\");\n      dataStr = zeroPaddings + dataStr;\n    } else {\n      // !!!\n      dataStr = trimDatePart(lexem, dataStr);\n      if (matchWholeMask) {\n        dataStr += this.getPlaceholder(lexem.count, dataStr, lexem.value);\n      }\n    }\n    return dataStr;\n  }\n\n  private createIDateTimeComposition(): IDateTimeComposition {\n    let isoMin: string, isoMax: string;\n\n    if (this.hasDatePart) {\n      isoMin = this.min || \"0001-01-01\";\n      isoMax = this.max || \"9996-12-31\";\n    } else {\n      isoMin = this.defaultDate + (this.min || \"00:00:00\");\n      isoMax = this.defaultDate + (this.max || \"23:59:59\");\n\n    }\n\n    const tempDateTime: IDateTimeComposition = {\n      hour: undefined,\n      minute: undefined,\n      second: undefined,\n      day: undefined,\n      month: undefined,\n      year: undefined,\n      min: new Date(isoMin),\n      max: new Date(isoMax)\n    };\n    return tempDateTime;\n  }\n\n  private parseTwoDigitYear (data: IInputDateTimeData): string {\n    const inputData = data.value;\n    if (data.lexem.type !== \"year\" || data.lexem.count > 2) return inputData;\n\n    if (!!this.max && this.max.length >= 4) {\n      this.turnOfTheCentury = parseInt(this.max.slice(2, 4));\n    }\n\n    const year = parseInt(inputData);\n    const result = (year > this.turnOfTheCentury ? \"19\" : \"20\") + inputData;\n    return result;\n  }\n\n  private getFormatedString(matchWholeMask: boolean): string {\n    let result = \"\";\n    let prevSeparator = \"\";\n    let prevIsCompleted = false;\n    let lastItemWithDataIndex = this.inputDateTimeData.length - 1;\n    if (!matchWholeMask) {\n      const arr = this.inputDateTimeData.filter(item => !!item.value);\n      lastItemWithDataIndex = this.inputDateTimeData.indexOf(arr[arr.length - 1]);\n    }\n\n    for (let index = 0; index < this.inputDateTimeData.length; index++) {\n      const inputData = this.inputDateTimeData[index];\n      switch(inputData.lexem.type) {\n        case \"timeMarker\":\n        case \"hour\":\n        case \"minute\":\n        case \"second\":\n        case \"day\":\n        case \"month\":\n        case \"year\":\n          if (inputData.value === undefined && !matchWholeMask) {\n            result += (prevIsCompleted ? prevSeparator : \"\");\n            return result;\n          } else {\n            const _matchWholeMask = matchWholeMask || lastItemWithDataIndex > index;\n            const data = this.getCorrectDatePartFormat(inputData, _matchWholeMask);\n            result += (prevSeparator + data);\n            prevIsCompleted = inputData.isCompleted;\n          }\n          break;\n\n        case \"separator\":\n          prevSeparator = inputData.lexem.value;\n          break;\n      }\n    }\n\n    return result;\n  }\n\n  private cleanTimeMarker(str: string, upperCase: boolean) {\n    let result = \"\";\n    str = str.toUpperCase();\n    for (let i = 0; i < str.length; i++) {\n      if (!result && (str[i] == \"P\" || str[i] == \"A\") || result && str[i] == \"M\") result += str[i];\n    }\n    if (upperCase) {\n      result = result.toUpperCase();\n    } else {\n      result = result.toLowerCase();\n    }\n    return result;\n  }\n  private setInputDateTimeData(numberParts: string[]): void {\n    let numberPartsArrayIndex = 0;\n\n    this.initInputDateTimeData();\n    this.lexems.forEach((lexem, index) => {\n      if (numberParts.length > 0 && numberPartsArrayIndex < numberParts.length) {\n        if (lexem.type === \"separator\") return;\n        const inputData: IInputDateTimeData = this.inputDateTimeData[index];\n        const currentPart = numberParts[numberPartsArrayIndex];\n        let _data;\n        if (lexem.type === \"timeMarker\") {\n          _data = this.cleanTimeMarker(currentPart, lexem.upperCase);\n        } else {\n          _data = this.leaveOnlyNumbers(currentPart);\n        }\n        inputData.value = _data.slice(0, lexem.maxCount);\n        numberPartsArrayIndex++;\n      }\n    });\n  }\n\n  _getMaskedValue(src: string, matchWholeMask: boolean = true): string {\n    let input = (src === undefined || src === null) ? \"\" : src.toString();\n    const inputParts = this.getParts(input);\n    this.setInputDateTimeData(inputParts);\n    const tempDateTime = this.createIDateTimeComposition();\n    this.inputDateTimeData.forEach(itemData => {\n      if (itemData.lexem.type === \"timeMarker\") {\n        this.updateTimeMarkerInputDateTimeData(itemData, tempDateTime);\n      } else {\n        this.updateInputDateTimeData(itemData, tempDateTime);\n      }\n    });\n    const result = this.getFormatedString(matchWholeMask);\n    return result;\n  }\n\n  private getParts(input: string): Array<string> {\n    const inputParts: Array<string> = [];\n    const lexemsWithValue = this.lexems.filter(l => l.type !== \"separator\");\n    const separators = this.lexems.filter(l => l.type === \"separator\").map(s => s.value);\n    let curPart = \"\";\n    let foundSeparator = false;\n    let foundPseudoSeparator = false;\n    for (let i = 0; i < input.length; i++) {\n      const inputChar = input[i];\n      if (inputChar.match(numberDefinition) || inputChar === lexemsWithValue[inputParts.length].value) {\n        foundSeparator = false;\n        foundPseudoSeparator = false;\n        curPart += inputChar;\n      } else if (lexemsWithValue[inputParts.length].type === \"timeMarker\") {\n        foundSeparator = false;\n        foundPseudoSeparator = false;\n        curPart += inputChar;\n      } else {\n        if (separators.indexOf(inputChar) !== -1) {\n          if (!foundPseudoSeparator) {\n            foundSeparator = true;\n            inputParts.push(curPart);\n            curPart = \"\";\n          }\n        } else {\n          if (!foundSeparator) {\n            foundPseudoSeparator = true;\n            inputParts.push(curPart);\n            curPart = \"\";\n          }\n        }\n      }\n      if (inputParts.length >= lexemsWithValue.length) {\n        foundSeparator = false;\n        break;\n      }\n    }\n\n    if (curPart != \"\" || foundSeparator) {\n      inputParts.push(curPart);\n    }\n    return inputParts;\n  }\n\n  public getUnmaskedValue(src: string): any {\n    let input = (src === undefined || src === null) ? \"\" : src.toString();\n    const inputParts = this.getParts(input);\n\n    this.setInputDateTimeData(inputParts);\n\n    const timeMarker = this.inputDateTimeData.filter(idtd => idtd.lexem.type === \"timeMarker\")[0]?.value.toLowerCase()[0];\n\n    const tempDateTime = this.createIDateTimeComposition();\n    let uncompleted = false;\n    this.inputDateTimeData.forEach(inputData => {\n      let str = inputData.value;\n      if (inputData.lexem.type == \"timeMarker\" || inputData.lexem.type == \"separator\") return;\n      if (!str || str.length < inputData.lexem.count) {\n        uncompleted = true;\n        return;\n      }\n      let value = parseInt(this.parseTwoDigitYear(inputData));\n      if (inputData.lexem.type == \"hour\" && timeMarker === \"p\" && value != this.twelve) value += this.twelve;\n      (tempDateTime as any)[inputData.lexem.type] = value;\n    });\n\n    return uncompleted ? \"\" : this.getISO_8601Format(tempDateTime);\n  }\n\n  public getMaskedValue(src: string) : string {\n    return this.getMaskedStrFromISO(src);\n  }\n\n  public processInput(args: ITextInputParams): IMaskedInputResult {\n    const result = { value: args.prevValue, caretPosition: args.selectionEnd, cancelPreventDefault: false };\n    const leftPart = args.prevValue.slice(0, args.selectionStart);\n    const rightPart = args.prevValue.slice(args.selectionEnd);\n\n    result.value = this._getMaskedValue(leftPart + (args.insertedChars || \"\") + rightPart);\n    if (!args.insertedChars && args.inputDirection === \"backward\") {\n      result.caretPosition = args.selectionStart;\n    } else {\n      result.caretPosition = this._getMaskedValue(leftPart + (args.insertedChars || \"\"), false).length;\n    }\n    return result;\n  }\n}\n\nSerializer.addClass(\n  \"datetimemask\",\n  [\n    {\n      name: \"min\",\n      type: \"datetime\",\n      enableIf: (obj: any) => {\n        return !!obj.pattern;\n      }\n    },\n    {\n      name: \"max\",\n      type: \"datetime\",\n      enableIf: (obj: any) => {\n        return !!obj.pattern;\n      }\n    }\n  ],\n  function () {\n    return new InputMaskDateTime();\n  },\n  \"patternmask\"\n);", "import { Serializer, property } from \"../jsonobject\";\nimport { InputMaskNumeric } from \"./mask_numeric\";\nimport { IMaskedInputResult, ITextInputParams } from \"./mask_utils\";\n\n/**\n * A class that describes an input mask of the `\"currency\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"currency\",\n *     \"maskSettings\": {\n *       // Specify the properties of a currency input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nexport class InputMaskCurrency extends InputMaskNumeric {\n  /**\n   * One or several symbols to be displayed before the currency value.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see suffix\n   */\n  @property() prefix: string;\n  /**\n   * One or several symbols to be displayed after the currency value.\n   * @see prefix\n   */\n  @property() suffix: string;\n\n  public getType(): string {\n    return \"currencymask\";\n  }\n\n  private wrapText(str: string): string {\n    const prefixValue = this.prefix || \"\";\n    const suffixValue = this.suffix || \"\";\n    let result = str;\n    if (!result) return result;\n\n    if (result.indexOf(prefixValue) === -1) {\n      result = prefixValue + result;\n    }\n    if (result.indexOf(suffixValue) === -1) {\n      result += suffixValue;\n    }\n    return result;\n  }\n\n  public unwrapInputArgs(args: ITextInputParams): void {\n    let result = args.prevValue;\n    if (!result) return;\n\n    if (this.prefix && result.indexOf(this.prefix) !== -1) {\n      result = result.slice(result.indexOf(this.prefix) + this.prefix.length);\n      const preffixPadding = (this.prefix || \"\").length;\n\n      args.selectionStart = Math.max((args.selectionStart - preffixPadding), 0);\n      args.selectionEnd -= preffixPadding;\n    }\n    if (this.suffix && result.indexOf(this.suffix) !== -1) {\n      result = result.slice(0, result.indexOf(this.suffix));\n    }\n    args.prevValue = result;\n  }\n  public processInput(args: ITextInputParams): IMaskedInputResult {\n    this.unwrapInputArgs(args);\n    const result = super.processInput(args);\n    const preffixPadding = (this.prefix || \"\").length;\n    if (!!result.value) {\n      result.caretPosition += preffixPadding;\n    }\n    result.value = this.wrapText(result.value);\n    return result;\n  }\n\n  public getMaskedValue(src: any): string {\n    const result = super.getMaskedValue(src);\n    return this.wrapText(result);\n  }\n}\n\nSerializer.addClass(\n  \"currencymask\",\n  [\n    { name: \"prefix\" },\n    { name: \"suffix\" },\n  ],\n  () => {\n    return new InputMaskCurrency();\n  },\n  \"numericmask\"\n);\n", "// styles\n// import \"../../src/main.scss\";\n//import \"../../src/modern.scss\";\n\nimport { DomWindowHelper } from \"../../src/global_variables_utils\";\nimport { settings } from \"../../src/settings\";\n\nexport var Version: string;\nexport var ReleaseDate: string;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nVersion = `${process.env.VERSION}`;\nsettings.version = Version;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nReleaseDate = `${process.env.RELEASE_DATE}`;\n\nexport function checkLibraryVersion(ver: string, libraryName: string): void {\n  if (Version != ver) {\n    const str = \"survey-core has version '\" + Version + \"' and \" + libraryName\n      + \" has version '\" + ver + \"'. SurveyJS libraries should have the same versions to work correctly.\";\n    /* eslint no-console: [\"error\", { allow: [\"error\"] }] */\n    console.error(str);\n  }\n}\nexport function setLicenseKey(key: string): void {\n  slk(key);\n}\nexport function slk(key: string): void {\n  _slk(key, lic, ReleaseDate);\n}\nexport function hasLicense(index: number): boolean {\n  return glc(index) === true;\n}\nexport function glc(index: number): any {\n  const res = lic[index.toString()];\n  return !res ? false : res;\n}\nconst lic: any = {};\nfunction _slk(k: any, lh: any, rd: any) {\n  if (!k) return;\n  const en = (s: string) => {\n    var e: any = {}, i, b = 0, c, x, l = 0, a, r = \"\", w = String.fromCharCode, L = s.length;\n    var A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for (i = 0; i < 64; i++) { e[A.charAt(i)] = i; }\n    for (x = 0; x < L; x++) {\n      let c = e[s.charAt(x)]; b = (b << 6) + c; l += 6;\n      while(l >= 8) { ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a)); }\n    }\n    return r;\n  };\n  let v = en(k);\n  if (!v) return;\n  let index = v.indexOf(\";\");\n  if (index < 0) return;\n  if (!checkPrefix(v.substring(0, index))) return;\n  v = v.substring(index + 1);\n  v.split(\",\").forEach(s => {\n    let i = s.indexOf(\"=\");\n    if (i > 0) {\n      const sd = new Date(s.substring(i + 1));\n      lh[s.substring(0, i)] = new Date(rd) <= sd ? true : sd;\n    }\n  });\n}\nfunction checkPrefix(prefix: string): boolean {\n  if (!prefix) return true;\n  const s = \"domains:\";\n  const index = prefix.indexOf(s);\n  if (index < 0) return true;\n  const ds = prefix.substring(index + s.length).toLowerCase().split(\",\");\n  if (!Array.isArray(ds) || ds.length === 0) return true;\n  const location = DomWindowHelper.getLocation();\n  if (!!location && !!location.hostname) {\n    const hn = location.hostname.toLowerCase();\n    ds.push(\"localhost\");\n    for (let i = 0; i < ds.length; i++) {\n      if (hn.indexOf(ds[i]) > -1) return true;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport { settings, ISurveyEnvironment } from \"../../src/settings\";\nexport { Helpers, HashTable } from \"../../src/helpers\";\nexport {\n  AnswerCountValidator,\n  EmailValidator,\n  NumericValidator,\n  RegexValidator,\n  SurveyValidator,\n  TextValidator,\n  ValidatorResult,\n  ExpressionValidator,\n  ValidatorRunner\n} from \"../../src/validator\";\nexport { ItemValue } from \"../../src/itemvalue\";\nexport { Base, Event, EventBase, ArrayChanges, ComputedUpdater } from \"../../src/base\";\nexport {\n  ISurvey,\n  ISurveyElement,\n  IElement,\n  IQuestion,\n  IPage,\n  IPanel,\n  ISurveyData,\n  ITitleOwner,\n  ISurveyLayoutElement,\n  IPlainDataOptions as IPlainData,\n  IShortcutText,\n  ILoadFromJSONOptions,\n  ISaveToJSONOptions,\n  HorizontalAlignment,\n  VerticalAlignment\n} from \"../../src/base-interfaces\";\nexport { SurveyError } from \"../../src/survey-error\";\nexport { SurveyElementCore, SurveyElement } from \"../../src/survey-element\";\nexport { CalculatedValue } from \"../../src/calculatedValue\";\nexport {\n  CustomError,\n  AnswerRequiredError,\n  OneAnswerRequiredError,\n  RequreNumericError,\n  ExceedSizeError\n} from \"../../src/error\";\nexport {\n  ILocalizableOwner,\n  ILocalizableString,\n  LocalizableString,\n  LocalizableStrings\n} from \"../../src/localizablestring\";\nexport { HtmlConditionItem, UrlConditionItem } from \"../../src/expressionItems\";\nexport { ChoicesRestful, ChoicesRestfull } from \"../../src/choicesRestful\";\nexport { FunctionFactory, registerFunction } from \"../../src/functionsfactory\";\nexport { ConditionRunner, ExpressionRunner, IExpresionExecutor, ExpressionExecutor } from \"../../src/conditions\";\nexport {\n  Operand,\n  Const,\n  BinaryOperand,\n  Variable,\n  FunctionOperand,\n  ArrayOperand,\n  UnaryOperand\n} from \"../../src/expressions/expressions\";\nexport { ConditionsParser } from \"../../src/conditionsParser\";\nexport { ProcessValue } from \"../../src/conditionProcessValue\";\nexport {\n  JsonError,\n  JsonIncorrectTypeError,\n  JsonMetadata,\n  JsonMetadataClass,\n  JsonMissingTypeError,\n  JsonMissingTypeErrorBase,\n  JsonObject,\n  IJsonPropertyInfo,\n  JsonObjectProperty,\n  JsonRequiredPropertyError,\n  JsonUnknownPropertyError,\n  Serializer,\n  property,\n  propertyArray\n} from \"../../src/jsonobject\";\nexport {\n  IMatrixDropdownData,\n  MatrixDropdownCell,\n  MatrixDropdownRowModelBase,\n  QuestionMatrixDropdownModelBase\n} from \"../../src/question_matrixdropdownbase\";\nexport { MatrixDropdownColumn, matrixDropdownColumnTypes } from \"../../src/question_matrixdropdowncolumn\";\nexport { QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedErrorRow, QuestionMatrixDropdownRenderedTable } from \"../../src/question_matrixdropdownrendered\";\nexport {\n  MatrixDropdownRowModel,\n  QuestionMatrixDropdownModel\n} from \"../../src/question_matrixdropdown\";\nexport {\n  MatrixDynamicRowModel,\n  QuestionMatrixDynamicModel\n} from \"../../src/question_matrixdynamic\";\nexport {\n  MatrixRowModel,\n  MatrixCells,\n  QuestionMatrixModel,\n  MatrixColumn,\n  IMatrixData\n} from \"../../src/question_matrix\";\nexport { QuestionMatrixBaseModel } from \"../../src/martixBase\";\nexport {\n  MultipleTextItemModel,\n  MultipleTextCell,\n  MultipleTextErrorCell,\n  MutlipleTextErrorRow,\n  MutlipleTextRow,\n  QuestionMultipleTextModel,\n  MultipleTextEditorModel\n} from \"../../src/question_multipletext\";\nexport { PanelModel, PanelModelBase, QuestionRowModel } from \"../../src/panel\";\nexport { FlowPanelModel } from \"../../src/flowpanel\";\nexport { PageModel } from \"../../src/page\";\nexport * from \"../../src/template-renderer\";\nexport { DefaultTitleModel } from \"../../src/defaultTitle\";\nexport { Question } from \"../../src/question\";\nexport { QuestionSingleInputSummary, QuestionSingleInputSummaryItem } from \"../../src/questionSingleInputSummary\";\nexport { QuestionNonValue } from \"../../src/questionnonvalue\";\nexport { QuestionEmptyModel } from \"../../src/question_empty\";\nexport {\n  QuestionCheckboxBase,\n  QuestionSelectBase,\n  ChoiceItem\n} from \"../../src/question_baseselect\";\nexport { QuestionCheckboxModel, CheckboxItem } from \"../../src/question_checkbox\";\nexport { QuestionTagboxModel } from \"../../src/question_tagbox\";\nexport { QuestionRankingModel } from \"../../src/question_ranking\";\nexport { QuestionCommentModel } from \"../../src/question_comment\";\nexport { QuestionDropdownModel } from \"../../src/question_dropdown\";\nexport { QuestionFactory, ElementFactory } from \"../../src/questionfactory\";\nexport { QuestionFileModel, QuestionFilePage } from \"../../src/question_file\";\nexport { QuestionHtmlModel } from \"../../src/question_html\";\nexport { QuestionRadiogroupModel } from \"../../src/question_radiogroup\";\nexport { QuestionRatingModel, RenderedRatingItem } from \"../../src/question_rating\";\nexport { QuestionSliderModel } from \"../../src/question_slider\";\nexport { QuestionExpressionModel } from \"../../src/question_expression\";\nexport { QuestionTextBase, CharacterCounter } from \"../../src/question_textbase\";\nexport { QuestionTextModel } from \"../../src/question_text\";\nexport { QuestionBooleanModel } from \"../../src/question_boolean\";\nexport {\n  QuestionImagePickerModel,\n  ImageItemValue\n} from \"../../src/question_imagepicker\";\nexport { QuestionImageModel } from \"../../src/question_image\";\nexport { QuestionSignaturePadModel } from \"../../src/question_signaturepad\";\nexport {\n  QuestionPanelDynamicModel,\n  QuestionPanelDynamicItem\n} from \"../../src/question_paneldynamic\";\nexport { SurveyTimer } from \"../../src/surveytimer\";\nexport { SurveyTimerModel } from \"../../src/surveyTimerModel\";\nexport * from \"../../src/surveyToc\";\nexport { SurveyProgressModel } from \"../../src/surveyProgress\";\nexport { ProgressButtons, ProgressButtonsResponsivityManager, IProgressButtonsViewModel } from \"../../src/progress-buttons\";\nexport * from \"../../src/themes\";\nexport { SurveyModel } from \"../../src/survey\";\nexport * from \"../../src/survey-events-api\";\nexport {\n  SurveyTrigger,\n  SurveyTriggerComplete,\n  SurveyTriggerSetValue,\n  SurveyTriggerVisible,\n  SurveyTriggerCopyValue,\n  SurveyTriggerRunExpression,\n  SurveyTriggerSkip,\n  Trigger\n} from \"../../src/trigger\";\nexport { PopupSurveyModel, SurveyWindowModel } from \"../../src/popup-survey\";\nexport { TextPreProcessor } from \"../../src/textPreProcessor\";\nexport { Notifier } from \"../../src/notifier\";\nexport { Cover, CoverCell } from \"../../src/header\";\n\nexport { englishStrings } from \"../../src/localization/english\";\nexport { surveyLocalization, surveyStrings, getLocaleString, getLocaleStrings, setupLocale } from \"../../src/surveyStrings\";\n// export { cultureInfo } from \"../../src/cultureInfo\";\nexport {\n  QuestionCustomWidget,\n  CustomWidgetCollection,\n} from \"../../src/questionCustomWidgets\";\nexport {\n  QuestionCustomModel,\n  QuestionCompositeModel,\n  ComponentQuestionJSON,\n  ComponentCollection,\n  ICustomQuestionTypeConfiguration\n} from \"../../src/question_custom\";\n\nexport { ScrollViewModel } from \"../../src/scroll\";\nexport { ListModel } from \"../../src/list\";\nexport { MultiSelectListModel } from \"../../src/multiSelectListModel\";\nexport { PopupModel, IDialogOptions } from \"../../src/popup\";\nexport { PopupBaseViewModel } from \"../../src/popup-view-model\";\nexport { PopupDropdownViewModel } from \"../../src/popup-dropdown-view-model\";\nexport { PopupModalViewModel } from \"../../src/popup-modal-view-model\";\nexport { createPopupViewModel, createPopupModalViewModel } from \"../../src/popup-utils\";\nexport { DropdownListModel } from \"../../src/dropdownListModel\";\nexport { DropdownMultiSelectListModel } from \"../../src/dropdownMultiSelectListModel\";\nexport {\n  QuestionButtonGroupModel,\n  ButtonGroupItemModel,\n  ButtonGroupItemValue\n} from \"../../src/question_buttongroup\";\nexport { IsMobile, IsTouch, _setIsTouch, _setIsTablet } from \"../../src/utils/devices\";\nexport {\n  confirmAction,\n  confirmActionAsync,\n  detectIEOrEdge,\n  doKey2ClickUp,\n  doKey2ClickDown,\n  doKey2ClickBlur,\n  loadFileFromBase64,\n  increaseHeightByContent,\n  createSvg,\n  chooseFiles,\n  sanitizeEditableContent,\n  prepareElementForVerticalAnimation,\n  cleanHtmlElementAfterAnimation,\n  classesToSelector,\n  IAttachKey2clickOptions,\n  renamedIcons,\n  getIconNameFromProxy\n} from \"../../src/utils/utils\";\nexport { InputMaskBase } from \"../../src/mask/mask_base\";\nexport { InputMaskPattern } from \"../../src/mask/mask_pattern\";\nexport { InputMaskNumeric } from \"../../src/mask/mask_numeric\";\nexport { InputMaskDateTime } from \"../../src/mask/mask_datetime\";\nexport { InputMaskCurrency } from \"../../src/mask/mask_currency\";\nexport * from \"../../src/utils/cssClassBuilder\";\nexport * from \"../../src/utils/text-area\";\n\nexport { surveyCss, defaultCss, defaultThemeName } from \"../../src/defaultCss/defaultCss\";\n\n//Uncomment to include the \"date\" question type.\n//export {default as QuestionDateModel} from \"../../src/plugins/question_date\";\n\nexport { DragDropCore } from \"../../src/dragdrop/core\";\nexport { DragDropChoices } from \"../../src/dragdrop/choices\";\nexport { DragDropRankingSelectToRank } from \"../../src/dragdrop/ranking-select-to-rank\";\n", "import { renamedIcons } from \"./utils/utils\";\nimport { DomDocumentHelper } from \"./global_variables_utils\";\nimport { EventBase } from \"./base\";\n\ninterface SvgIconData {\n  [key: string]: string;\n}\n\nexport class SvgIconRegistry {\n  icons: SvgIconData = {};\n  private iconPrefix = \"icon-\";\n\n  private processId(iconId: string, iconPrefix: string) {\n    if (iconId.indexOf(iconPrefix) == 0) {\n      iconId = iconId.substring(iconPrefix.length);\n    }\n    iconId = renamedIcons[iconId] || iconId;\n    return iconId;\n  }\n  public registerIconFromSymbol(iconId: string, iconSymbolSvg: string) {\n    this.icons[iconId] = iconSymbolSvg;\n  }\n  public registerIconFromSvgViaElement(iconId: string, iconSvg: string, iconPrefix: string = this.iconPrefix): void {\n    if (!DomDocumentHelper.isAvailable()) return;\n    iconId = this.processId(iconId, iconPrefix);\n    let divSvg = DomDocumentHelper.createElement(\"div\");\n    divSvg.innerHTML = iconSvg;\n    let symbol = DomDocumentHelper.createElement(\"symbol\");\n    let svg = divSvg.querySelector(\"svg\");\n    symbol.innerHTML = svg.innerHTML;\n\n    for (var i = 0; i < svg.attributes.length; i++) {\n      symbol.setAttributeNS(\"http://www.w3.org/2000/svg\", svg.attributes[i].name, svg.attributes[i].value);\n    }\n    symbol.id = iconPrefix + iconId;\n\n    this.registerIconFromSymbol(iconId, symbol.outerHTML);\n  }\n  public registerIconFromSvg(iconId: string, iconSvg: string, iconPrefix: string = this.iconPrefix): boolean {\n    iconId = this.processId(iconId, iconPrefix);\n    const startStr = \"<svg \";\n    const endStr = \"</svg>\";\n    iconSvg = iconSvg.trim();\n    const str = iconSvg.toLowerCase();\n\n    if (str.substring(0, startStr.length) === startStr &&\n      str.substring(str.length - endStr.length, str.length) === endStr) {\n      this.registerIconFromSymbol(iconId, \"<symbol \" +\n        \"id=\\\"\" + iconPrefix + iconId + \"\\\" \" +\n        iconSvg.substring(startStr.length, str.length - endStr.length) +\n        \"</symbol>\");\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n  // TODO: remove in V2\n  public registerIconsFromFolder(r: any): void {\n    r.keys().forEach((key: string) => {\n      this.registerIconFromSvg(key.substring(2, key.length - 4).toLowerCase(), r(key));\n    });\n  }\n  public registerIcons(icons: SvgIconData): void {\n    for (const iconId in icons) {\n      this.registerIconFromSvg(iconId, icons[iconId]);\n    }\n    this.updateMarkup();\n  }\n  public registerIcon(id: string, svg: string, iconSetVersion: string = \"v2\"): void {\n    this.registerIconFromSvg(id, svg);\n    addIconsToThemeSet(iconSetVersion, { [id]: svg });\n  }\n  public iconsRenderedHtml(): string {\n    return Object.keys(this.icons).map(icon => this.icons[icon]).join(\"\");\n  }\n  public updateMarkup(): void {\n    this.onIconsChanged.fire(this, {});\n  }\n  public onIconsChanged = new EventBase<SvgIconRegistry, {}>();\n}\n\nexport const SvgRegistry: SvgIconRegistry = new SvgIconRegistry();\nexport const SvgThemeSets: { [index: string]: SvgIconData } = {};\n\nexport function addIconsToThemeSet(name: string, iconsData: SvgIconData): void {\n  if (!SvgThemeSets[name]) {\n    SvgThemeSets[name] = {};\n  }\n  const set = SvgThemeSets[name];\n  for (const iconId in iconsData) {\n    set[iconId] = iconsData[iconId];\n  }\n}\n"],
  "mappings": "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E;IAClB,UAAU,CAAC,CAAC;IACZ,YAAY,CAAC,CAAC;IACd,cAAc,CAAC,CAAC;IAChB,WAAW,CAAC,CAAC;EACd;;;;;;;EAOD,kBAAkB;;;;EAIlB,qBAAqB;IACnB,UAAU,CAAC,YAAY;IACvB,SAAS,CAAC,QAAQ,OAAO;IACzB,MAAM,CAAC,WAAW,QAAQ,SAAS,OAAO;IAC1C,UAAU,CAAC,aAAa;IACxB,aAAa,CAAC,aAAa;EAC5B;EACD,qBAAqB;IACnB,UAAU;IACV,QAAQ;IACR,WAAW;IACX,MAAM;IACN,QAAQ;IACR,KAAK;IACL,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,UAAU;IACV,SAAS;IACT,UAAU;IACV,OAAO;IACP,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,eAAe;EAChB;;;;EAID,SAAS;;;;EAIT,SAAS;;;;;;;;;;;;;;EAcT,YAAyE;EACzE,2BAA2B;;;;;;;;;;;;EAY3B,aAAa,CAAA;;;;;;;;;EASb,uBAAuB;EAEvB,aAAa;;;;;;;;EASb,wBAAwB;;;;;;EAOxB,kBAAkB;;;;;;;;;;EAWlB,WAAW;IACT,QAAQ;IACR,MAAM;IACN,OAAO;IACP,UAAU;EACX;EACD,WAAW;IACT,YAAY;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD;IACD,UAAU;MACR;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD;EACF;EACD,uBAAuB;;;;;;;;;;;;;;;EAevB,cAAc;IACZ,wBAAwB;IACxB,mBAAmB;IACnB,oBAA+C;MAC7C,KAAK;MACL,KAAK;MACL,KAAK;IACN;EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8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",
  "names": ["str", "property", "prop", "i", "res", "count", "age", "key", "keys", "mode", "htmlElement", "UpdateResponsivenessMode", "mergeValues", "sum", "oldValue", "getComputedStyle", "item", "document", "this", "err", "properties", "val", "json", "getCorrectMinMax", "min", "max", "el", "cell", "row", "name", "index", "model", "page", "displayValue", "col", "question", "month", "year", "availableWidth", "element", "options", "day"]
}
